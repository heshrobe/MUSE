{
    "<Catalano.Statistics.Tools: double Covariance(double[],double[])>": [
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.5070725826780862
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.4230837267847949
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.418766891008031
        }, 
        {
            "<net.imglib2.util.RealSum: double getSum()>": 0.41721039886335143
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: double sum(boofcv.struct.convolve.Kernel2D_F64)>": 0.40836931596584897
        }
    ], 
    "<Catalano.Statistics.Tools: double InverseFisher(double)>": [
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.3787189166704869
        }, 
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder2: double compute(double,int)>": 0.3772890588446056
        }, 
        {
            "<boofcv.app.BaseFiducialSquare: void configureDocument(double,double,double,double)>": 0.3689034292755417
        }, 
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder4: double compute(double,int)>": 0.36697388244377144
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.36406822424720087
        }
    ], 
    "<Catalano.Statistics.Distributions.RayleighDistribution: double Mean()>": [
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.48615869376296283
        }, 
        {
            "<org.dyn4j.dynamics.joint.MotorJoint: double getReactionTorque(double)>": 0.47168774026324295
        }, 
        {
            "<org.dyn4j.dynamics.joint.AngleJoint: double getReactionTorque(double)>": 0.47168774026324295
        }, 
        {
            "<org.dyn4j.dynamics.joint.PrismaticJoint: double getMotorForce(double)>": 0.47168774026324295
        }, 
        {
            "<org.dyn4j.dynamics.joint.WheelJoint: double getReactionTorque(double)>": 0.47168774026324295
        }
    ], 
    "<Catalano.Statistics.Distributions.WeibullDistribution: double Mean()>": [
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.5450421180789378
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.5144415437694597
        }, 
        {
            "<org.dyn4j.dynamics.joint.MotorJoint: double getReactionTorque(double)>": 0.4607214298026919
        }, 
        {
            "<org.dyn4j.dynamics.joint.AngleJoint: double getReactionTorque(double)>": 0.4607214298026919
        }, 
        {
            "<org.dyn4j.dynamics.joint.PrismaticJoint: double getMotorForce(double)>": 0.4607214298026919
        }
    ], 
    "<Catalano.Statistics.Kernels.TStudent: double Function(double[],double[])>": [
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.5707030096093002
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.515799696342278
        }, 
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.5139544301717152
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.5115079608850268
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.5096553044597006
        }
    ], 
    "<Catalano.Statistics.Tools: double Fisher(double)>": [
        {
            "<org.dyn4j.dynamics.WorldTest$1: double mixFriction(double,double)>": 0.4011832628841565
        }, 
        {
            "<org.dyn4j.dynamics.WorldTest$1: double mixRestitution(double,double)>": 0.4011832628841565
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.3740251218370148
        }, 
        {
            "<net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolator: double computeWeight(double)>": 0.3721640077573527
        }, 
        {
            "<net.imglib2.util.Util: long round(double)>": 0.3712483474334073
        }
    ], 
    "<Catalano.Statistics.Regression.LogarithmicRegression: double CoefficientOfDetermination()>": [
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.46291093790155047
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.44532846420315175
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.4427334530154578
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.441545256330046
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double distance(double[],double[])>": 0.43430971553728787
        }
    ], 
    "<Catalano.Statistics.Regression.PowerRegression: double Regression(double)>": [
        {
            "<org.dyn4j.geometry.Vector2: double distanceSquared(double,double)>": 0.6628889021935356
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(double,double,double)>": 0.6176065729656164
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.609317903199309
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.6047310667732346
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.6042752994943563
        }
    ], 
    "<Catalano.Statistics.Kernels.Pearson: double Function(double[],double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.59617748156307
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double det3x3(double[])>": 0.5691099360141487
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void cross(double[],double[],double[])>": 0.5682368808074999
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double ncc(boofcv.struct.feature.NccFeature,boofcv.struct.feature.NccFeature)>": 0.5630704920934978
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void invert3x3(double[])>": 0.5597048722784721
        }
    ], 
    "<Catalano.Statistics.DescriptiveStatistics: double Mode(double[])>": [
        {
            "<net.imglib2.util.Util: void min(double[],double[])>": 0.4973140839887778
        }, 
        {
            "<net.imglib2.util.Util: void max(double[],double[])>": 0.4973140839887778
        }, 
        {
            "<net.imglib2.util.Util: void quicksort(double[],int,int)>": 0.37611888613269995
        }, 
        {
            "<net.imglib2.util.Util: void quicksort(double[],int[],int,int)>": 0.35805145035704095
        }, 
        {
            "<net.imglib2.util.Partition: int partitionSubList(int,int,double[])>": 0.35428816665504204
        }
    ], 
    "<Catalano.Statistics.DescriptiveStatistics: double Range(double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double det3x3(double[])>": 0.5474570531304352
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void invert3x3(double[])>": 0.4962275706618355
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void cross(double[],double[],double[])>": 0.48869352718347725
        }, 
        {
            "<boofcv.alg.geo.pose.UtilLepetitEPnP: void residuals_Control4(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F,double[],double[])>": 0.47925580631470394
        }, 
        {
            "<boofcv.alg.geo.pose.UtilLepetitEPnP: void residuals_Control3(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F,double[],double[])>": 0.4767055844466632
        }
    ], 
    "<Catalano.Statistics.Distributions.LognormalDistribution: void <init>(double)>": [
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.49828210747627993
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.495098856945228
        }, 
        {
            "<net.imglib2.type.numeric.ARGBDoubleType: void <init>(double,double,double,double)>": 0.48773976024802834
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.4858382626182928
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.4795814808667049
        }
    ], 
    "<Catalano.Statistics.Distributions.NakagamiDistribution: double LogProbabilityDensityFunction(double)>": [
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.551884750653179
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.5260437646204246
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.5162830400069708
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.5135942196740315
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.5131299513797479
        }
    ], 
    "<Catalano.Statistics.Correlations: double SpearmanCorrelation(double[],double[])>": [
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: double computeEnergy(int[],int)>": 0.4367350579583965
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double computeSigmaScale(int,int)>": 0.34756982787359525
        }, 
        {
            "<boofcv.alg.filter.binary.GThresholdImageOps: int computeOtsu(int[],int,int)>": 0.34715630335932335
        }, 
        {
            "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: double getMaxValue()>": 0.3400251124795805
        }, 
        {
            "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: double getMaxValue()>": 0.3400251124795805
        }
    ], 
    "<Catalano.Statistics.Distributions.GammaDistribution: void <init>(double,double)>": [
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: double[] calculatePosition(double,double,double)>": 0.5157121007264172
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawArc(com.jogamp.opengl.GL2,double,double,double,double,double)>": 0.5154797009040006
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5153302828355214
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.5139504575078436
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.5084653765173365
        }
    ], 
    "<Catalano.Statistics.DescriptiveStatistics: float Variance(float[])>": [
        {
            "<org.jbox2d.dynamics.contacts.Contact: float mixFriction(float,float)>": 0.4192969462675218
        }, 
        {
            "<org.jbox2d.common.Settings: float mixFriction(float,float)>": 0.4192969462675218
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Vector2: float length()>": 0.39800677516989613
        }, 
        {
            "<org.jbox2d.common.Vec2: float length()>": 0.39800677516989613
        }, 
        {
            "<org.jbox2d.common.MathUtils: float clamp(float,float,float)>": 0.39780153735977275
        }
    ], 
    "<Catalano.Statistics.Distributions.DiscreteUniformDistribution: double ProbabilityMassFunction(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5094600693468552
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.5025834120465895
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.48762355915432454
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.48301279425033783
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.4804549930581734
        }
    ], 
    "<Catalano.Statistics.Kernels.Polynomial: double Function(double[],double[])>": [
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.5529334602618766
        }, 
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.5448671083422201
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.5189606620863441
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.503627155492357
        }, 
        {
            "<boofcv.alg.interpolate.array.LagrangeFormula: double process_F64(double,double[],double[],int,int)>": 0.5022030443199156
        }
    ], 
    "<Catalano.Statistics.Kernels.Polynomial: void setDegree(int)>": [
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int indexOfNextCounterClockwiseEdge(int)>": 0.5194369115453366
        }, 
        {
            "<boofcv.alg.distort.FlipVertical_F32: void <init>(int)>": 0.4971716686440789
        }, 
        {
            "<boofcv.alg.distort.FlipVertical_F64: void <init>(int)>": 0.4971716686440789
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.EdgeEPA: int indexOfNextCounterClockwiseEdge(int)>": 0.4864912615124042
        }, 
        {
            "<boofcv.alg.interpolate.array.Interpolate1D_F32: void changeDegree(int)>": 0.4764288765530791
        }
    ], 
    "<Catalano.Statistics.Normalizations: double[] SoftmaxScaling(double[],double)>": [
        {
            "<org.dyn4j.geometry.Vector3: double dot(double,double,double)>": 0.4931271591697789
        }, 
        {
            "<org.dyn4j.geometry.Vector3: boolean isOrthogonal(double,double,double)>": 0.485774400450259
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double cross(double,double)>": 0.4833067025155622
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double dot(double,double)>": 0.4833067025155622
        }, 
        {
            "<boofcv.alg.geo.NormalizedToPixelError: double errorSq(double,double,double,double)>": 0.4819695594851513
        }
    ], 
    "<Catalano.Statistics.Distributions.ChiSquareDistribution: double DistributionFunction(double)>": [
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.4800229772916069
        }, 
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder3: double compute(double,int)>": 0.4716999289219614
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.4527120377036549
        }, 
        {
            "<boofcv.alg.geo.PerspectiveOps: boofcv.struct.calib.IntrinsicParameters createIntrinsic(int,int,double,double)>": 0.45057324706711166
        }, 
        {
            "<org.dyn4j.geometry.HullGeneratorTest: void setup()>": 0.45026132203240504
        }
    ], 
    "<Catalano.Statistics.Normalizations: double[] StandartNormalDensity(double[])>": [
        {
            "<boofcv.factory.transform.pyramid.FactoryPyramid: boofcv.struct.pyramid.PyramidFloat scaleSpace(double[],java.lang.Class)>": 0.45640033201160757
        }, 
        {
            "<net.imglib2.util.Util: double[] getArrayFromValue(double,int)>": 0.4458411702808973
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void normalize(double[])>": 0.43241416044772163
        }, 
        {
            "<net.imglib2.util.Util: void min(double[],double[])>": 0.4220184641763789
        }, 
        {
            "<net.imglib2.util.Util: void max(double[],double[])>": 0.4220184641763789
        }
    ], 
    "<Catalano.Statistics.Distributions.LognormalDistribution: double Variance()>": [
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.4862671703263004
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.4691673249625446
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.4690245005425618
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.46576961941508116
        }, 
        {
            "<net.imglib2.util.Util: double gLog(double,double)>": 0.4627127960739796
        }
    ], 
    "<Catalano.Statistics.Kernels.Wave: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.5089343108368756
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.47641515407761953
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.47598891315042224
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeAngle(int)>": 0.4579447352103523
        }, 
        {
            "<boofcv.alg.geo.pose.PnPStereoJacobianRodrigues: void process(double[],double[])>": 0.45592747685609736
        }
    ], 
    "<Catalano.Statistics.Distributions.ContinuousUniformDistribution: double Mean()>": [
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.41427468067096385
        }, 
        {
            "<net.imglib2.util.Util: double gLog(double,double)>": 0.40920406710390045
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.4054907083477308
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: void computeU(double,double)>": 0.40392790493130665
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.40243858416323397
        }
    ], 
    "<Catalano.Statistics.Kernels.Anova: void <init>(int,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.46714795640369783
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.46714795640369783
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.46714795640369783
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.4644911951258203
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.4644911951258203
        }
    ], 
    "<Catalano.Statistics.Distributions.WeibullDistribution: void <init>(double,double)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillCircleFromTopLeft(com.jogamp.opengl.GL2,double,double,double,double)>": 0.489049874862566
        }, 
        {
            "<org.dyn4j.geometry.Vector3: void <init>(double,double,double,double,double,double)>": 0.4844812450032665
        }, 
        {
            "<org.dyn4j.geometry.Vector2: void <init>(double,double,double,double)>": 0.4805819985771316
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.4692086446905759
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.4685730006381965
        }
    ], 
    "<Catalano.Statistics.Kernels.BSpline: double Function(double[],double[])>": [
        {
            "<boofcv.alg.interpolate.array.LagrangeFormula: double process_F64(double,double[],double[],int,int)>": 0.47833892395856187
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.46413656937125986
        }, 
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.43957994938485195
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void complexInverse(double[],boolean)>": 0.43524288334302874
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverse(double[],boolean)>": 0.4308224037158733
        }
    ], 
    "<Catalano.Statistics.Distributions.LognormalDistribution: void <init>(double,double)>": [
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.48379753009762005
        }, 
        {
            "<net.imglib2.type.numeric.ARGBDoubleType: void <init>(double,double,double,double)>": 0.4738947947326132
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.47206128402549713
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.4555119943116033
        }, 
        {
            "<boofcv.abst.feature.describe.DescribeRegionPoint_SIFT: boolean process(double,double,double,double,boofcv.struct.feature.TupleDesc)>": 0.44790215978462633
        }
    ], 
    "<Catalano.Statistics.DescriptiveStatistics: float Mean(float[])>": [
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearch: float distanceSq(float[],float[])>": 0.5472816344004583
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: float computeSum()>": 0.4627373271722288
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: float maxAbs(float[],int)>": 0.4527178849649529
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: double computeEnergy(float[])>": 0.4467083104048541
        }, 
        {
            "<boofcv.misc.BoofMiscOps: int[] convertArray(float[],int[])>": 0.44070770408732535
        }
    ], 
    "<Catalano.Statistics.HistogramStatistics: double Kurtosis(int[])>": [
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": 0.40914610366980186
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: double getDistance()>": 0.40914610366980186
        }, 
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.40914610366980186
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.40538177132768083
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.40102753444679723
        }
    ], 
    "<Catalano.Statistics.Distributions.FisherDistribution: double DistributionFunction(double)>": [
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double computeSigmaScale(int,int)>": 0.5012805329594899
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void computeScale()>": 0.4889783165013499
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double computeSigmaScale(int)>": 0.48593018198423843
        }, 
        {
            "<boofcv.gui.image.ImageZoomPanel: void setScale(double)>": 0.44714219711217895
        }, 
        {
            "<net.imglib2.util.Binning: double[] edgeValuesPerBin(int,double,double)>": 0.44255994997336773
        }
    ], 
    "<Catalano.Statistics.Kernels.Cauchy: double Function(double[],double[])>": [
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.5374062234338537
        }, 
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.5183505362598365
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.5133708765444688
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.5096689778822623
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.5072565562564632
        }
    ], 
    "<Catalano.Statistics.Tools: double Interception(double[],double[])>": [
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.5012210382727712
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.4219372178276448
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.4100064611999354
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double ncc(boofcv.struct.feature.NccFeature,boofcv.struct.feature.NccFeature)>": 0.40603324320595524
        }, 
        {
            "<net.imglib2.util.RealSum: double getSum()>": 0.402361157723286
        }
    ], 
    "<Catalano.Statistics.Distributions.ContinuousUniformDistribution: double Entropy()>": [
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.5587121212121212
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.5570677539453469
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.5529373347530444
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(org.dyn4j.geometry.Vector2)>": 0.54194727530476
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.5135281108991048
        }
    ], 
    "<Catalano.Statistics.Analysis.PrincipalComponentAnalysis: void <init>(double[][])>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void declareRadixRealData()>": 0.1435178988804343
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: int cols(double[][])>": 0.12144597717198041
        }, 
        {
            "<net.imglib2.transform.integer.ComponentMappingTransform: double[][] getMatrix()>": 0.09560349948881369
        }, 
        {
            "<net.imglib2.transform.integer.TranslationTransform: double[][] getMatrix()>": 0.09107427984595313
        }, 
        {
            "<net.imglib2.transform.integer.TranslationTransform$InverseTranslationTransform: double[][] getMatrix()>": 0.0880020700802923
        }
    ], 
    "<Catalano.Statistics.Kernels.RationalQuadratic: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.4709832464217974
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.47042667236586855
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeAngle(int)>": 0.45606278987967086
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.45442736748544915
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.45402038321712423
        }
    ], 
    "<Catalano.Statistics.Kernels.Dirichlet: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.44712065564598164
        }, 
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder3: double compute(double,int)>": 0.4315221441704765
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.42903171605152546
        }, 
        {
            "<net.imglib2.util.Util: double gLog(double,double)>": 0.4209814019705009
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.41719906131354006
        }
    ], 
    "<Catalano.Statistics.Distributions.LaplaceDistribution: double Variance()>": [
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.4568011435389367
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.45201729384576994
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: void computeU(double,double)>": 0.4346067375363802
        }, 
        {
            "<net.imglib2.util.Util: double gLog(double,double)>": 0.43030409153302007
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.4299922047394888
        }
    ], 
    "<Catalano.Statistics.Distributions.RayleighDistribution: double LogProbabilityDensityFunction(double)>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.5518088881914107
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.5511082479217723
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.550728935682173
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.5382489902890936
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: void computeU(double,double)>": 0.528274471953686
        }
    ], 
    "<Catalano.Statistics.Kernels.HistogramIntersection: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.5944341884161417
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.5774200338447537
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5575205271922674
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.5425937147662581
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(org.dyn4j.geometry.Vector2)>": 0.5350994903898242
        }
    ], 
    "<Catalano.Statistics.Distributions.EmpiricalDistribution: double DistributionFunction(double)>": [
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double ncc(boofcv.struct.feature.NccFeature,boofcv.struct.feature.NccFeature)>": 0.37323823663252975
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: double computeSum()>": 0.36484325178274907
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: double minAbs(double[],int,double)>": 0.3620741022044276
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindowIntegral: double compute(double,double)>": 0.3514870050158933
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: void findHistogramPeaks()>": 0.3458952221161534
        }
    ], 
    "<Catalano.Statistics.Regression.ExponentialRegression: double Regression(double)>": [
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.6229213695584027
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distanceSquared(double,double)>": 0.6151644310228953
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.6012636985612427
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.598462221410377
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.5968498289309307
        }
    ], 
    "<Catalano.Statistics.Distributions.ChiSquareDistribution: double Entropy()>": [
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.5301792279572072
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.5102778457860817
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawArc(com.jogamp.opengl.GL2,double,double,double,double,double)>": 0.4990567342170183
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: double[] calculatePosition(double,double,double)>": 0.49652716735893504
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.4942313024090887
        }
    ], 
    "<Catalano.Statistics.Kernels.Pearson: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.5622774126143683
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double ncc(boofcv.struct.feature.NccFeature,boofcv.struct.feature.NccFeature)>": 0.5465644827010155
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double det3x3(double[])>": 0.5459900245721068
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void invert3x3(double[])>": 0.5378893543574538
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void cross(double[],double[],double[])>": 0.5238608491155946
        }
    ], 
    "<Catalano.Statistics.DescriptiveStatistics: double Skewness(double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.4935211386196126
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.42803285555915727
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": 0.42568203191825144
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: double getDistance()>": 0.42568203191825144
        }, 
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.42568203191825144
        }
    ], 
    "<Catalano.Statistics.Tools: double Mode(double[])>": [
        {
            "<net.imglib2.util.Util: void min(double[],double[])>": 0.4973140839887778
        }, 
        {
            "<net.imglib2.util.Util: void max(double[],double[])>": 0.4973140839887778
        }, 
        {
            "<net.imglib2.util.Util: void quicksort(double[],int,int)>": 0.37611888613269995
        }, 
        {
            "<net.imglib2.util.Util: void quicksort(double[],int[],int,int)>": 0.35805145035704095
        }, 
        {
            "<net.imglib2.util.Partition: int partitionSubList(int,int,double[])>": 0.35428816665504204
        }
    ], 
    "<Catalano.Statistics.Tools: double[][] Covariance(double[][])>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxc020(double[],int)>": 0.4260374516729653
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxb020(double[],int)>": 0.4260374516729653
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftx020(double[],int)>": 0.4203632592221385
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void rdft2d_sub(int,double[])>": 0.4020621826750486
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void normalizeSumToOne(boofcv.struct.convolve.Kernel1D_F64)>": 0.3940743356473903
        }
    ], 
    "<Catalano.Statistics.Kernels.Polynomial: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.460268108274814
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.4488065535533772
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.43885638042095687
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.43608900172571846
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.4293601157851034
        }
    ], 
    "<Catalano.Statistics.Distributions.DiscreteUniformDistribution: void <init>(int,int)>": [
        {
            "<boofcv.alg.filter.convolve.down.UtilDownConvolve: int computeOffset(int,int)>": 0.4242521786539244
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int round(int,int,int)>": 0.4236270675837014
        }, 
        {
            "<boofcv.alg.filter.misc.AverageDownSampleOps: int downSampleSize(int,int)>": 0.4198283105770499
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreRowFormat: void <init>(int,int,int,int)>": 0.41447957277450453
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void copy(int,int,int,int,int,int,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.41031019597744794
        }
    ], 
    "<Catalano.Statistics.Regression.LogarithmicRegression: void <init>(double[],double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double distance(double[],double[])>": 0.37097123481485306
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F64: void <init>(double[],double,double)>": 0.3456543147049902
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F64: void set(double[],double,double)>": 0.33107598777639935
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.3171688140898639
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: void <init>(int,double,java.lang.Class)>": 0.29282830135963867
        }
    ], 
    "<Catalano.Statistics.Kernels.HistogramIntersection: void <init>(double,double)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillCircleFromTopLeft(com.jogamp.opengl.GL2,double,double,double,double)>": 0.47810458526954547
        }, 
        {
            "<org.dyn4j.geometry.Vector3: void <init>(double,double,double,double,double,double)>": 0.47376636833338814
        }, 
        {
            "<org.dyn4j.geometry.Vector2: void <init>(double,double,double,double)>": 0.4700066010666587
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.45893129066476235
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.4583237210515211
        }
    ], 
    "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double ComplementaryDistributionFunction(double)>": [
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.46267192582094685
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.4602217746292937
        }, 
        {
            "<boofcv.abst.feature.orientation.OrientationIntegralToImage: double compute(double,double)>": 0.4381472426700743
        }, 
        {
            "<boofcv.abst.feature.orientation.OrientationGradientToImage: double compute(double,double)>": 0.4381472426700743
        }, 
        {
            "<boofcv.abst.feature.describe.WrapDescribeBrief: boolean process(double,double,double,double,boofcv.struct.feature.TupleDesc)>": 0.431439490375254
        }
    ], 
    "<Catalano.Statistics.Regression.LogarithmicRegression: double Regression(double)>": [
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.6580950772045027
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.6268994122797199
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.5817329062778722
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.5708914825300134
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(double,double,double)>": 0.5197105902327241
        }
    ], 
    "<Catalano.Statistics.Distributions.NormalDistribution: double ProbabilityDensityFunction(double)>": [
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.5871929839053798
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.5624720904901158
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.5560622355000766
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double dot(double,double,double)>": 0.5471340683655637
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double cross(double,double)>": 0.5390113521571596
        }
    ], 
    "<Catalano.Statistics.Distributions.ExponentialDistribution: double Entropy()>": [
        {
            "<net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolator: double computeWeight(double)>": 0.5580316089350523
        }, 
        {
            "<net.imglib2.type.numeric.integer.Unsigned128BitType: double getMaxValue()>": 0.4951167150522183
        }, 
        {
            "<net.imglib2.type.numeric.integer.UnsignedLongType: double getMaxValue()>": 0.4951167150522183
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.47482072774816086
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": 0.449355009079823
        }
    ], 
    "<Catalano.Statistics.Analysis.PrincipalComponentAnalysis: void Compute()>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void complexInverse(double[],boolean)>": 0.4080778985870562
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverse(double[],boolean)>": 0.40665561093332103
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverseFull(double[],boolean)>": 0.39191111139958656
        }, 
        {
            "<net.imglib2.RealPoint: void move(double[])>": 0.36682877252183305
        }, 
        {
            "<boofcv.alg.scene.FeatureToWordHistogram_F64: void addFeature(boofcv.struct.feature.TupleDesc_F64)>": 0.3405548492591337
        }
    ], 
    "<Catalano.Statistics.Regression.LinearRegression: java.lang.String toString()>": [
        {
            "<net.imglib2.util.LinAlgHelpers: java.lang.String toString(double[],java.lang.String)>": 0.44282434077053046
        }, 
        {
            "<net.imglib2.KDTree: java.lang.String toString(net.imglib2.KDTreeNode,java.lang.String)>": 0.40927048697788915
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: java.lang.String toString(double[][],java.lang.String)>": 0.4064448391107034
        }, 
        {
            "<org.dyn4j.sandbox.utilities.SystemUtilities: java.lang.String getOperatingSystem()>": 0.4033846289994266
        }, 
        {
            "<net.imglib2.KDTree: java.lang.String toString()>": 0.4029007453598364
        }
    ], 
    "<Catalano.Statistics.Tools: double Mean(double[])>": [
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.5843585299627623
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.5118530904925599
        }, 
        {
            "<net.imglib2.util.RealSum: double getSum()>": 0.47852516901331454
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: double sum(boofcv.struct.convolve.Kernel2D_F64)>": 0.4696403916572216
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.46924297137385435
        }
    ], 
    "<Catalano.Statistics.Distributions.ContinuousUniformDistribution: double LogProbabilityDensityFunction(double)>": [
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.46388235180984455
        }, 
        {
            "<org.dyn4j.geometry.AABB: boolean isDegenerate(double)>": 0.4600136152976831
        }, 
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 setMagnitude(double)>": 0.45930298491263966
        }, 
        {
            "<org.dyn4j.geometry.Vector3: org.dyn4j.geometry.Vector3 setMagnitude(double)>": 0.45908278669843977
        }, 
        {
            "<boofcv.alg.distort.LensDistortionOps: void roundInside(georegression.struct.shapes.RectangleLength2D_F64)>": 0.4557477684883842
        }
    ], 
    "<Catalano.Statistics.Normalizations: double[] DecimalScaling(double[])>": [
        {
            "<net.imglib2.histogram.Real1dBinMapper: net.imglib2.histogram.HistogramNd histogramNd(double[],double[],long[],boolean[])>": 0.4872114237161965
        }, 
        {
            "<boofcv.factory.transform.pyramid.FactoryPyramid: boofcv.struct.pyramid.PyramidFloat scaleSpace(double[],java.lang.Class)>": 0.4700746992854232
        }, 
        {
            "<boofcv.factory.transform.pyramid.FactoryPyramid: boofcv.struct.pyramid.PyramidFloat scaleSpacePyramid(double[],java.lang.Class)>": 0.42708299799456934
        }, 
        {
            "<boofcv.alg.descriptor.UtilFeature: void normalizeL2(boofcv.struct.feature.TupleDesc_F64)>": 0.37147755007390554
        }, 
        {
            "<net.imglib2.util.Util: void min(double[],double[])>": 0.36564969163614247
        }
    ], 
    "<Catalano.Statistics.Distributions.LognormalDistribution: double ProbabilityDensityFunction(double)>": [
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 setDirection(double)>": 0.5290504466306916
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5228500948972723
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: double[] calculatePosition(double,double,double)>": 0.5139020044560076
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawArc(com.jogamp.opengl.GL2,double,double,double,double,double)>": 0.5051543256283847
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.5011521859959317
        }
    ], 
    "<Catalano.Statistics.Kernels.Pearson: void <init>(double,double)>": [
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder3: double compute(double,int)>": 0.4862646195407515
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.4698712460338035
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawArc(com.jogamp.opengl.GL2,double,double,double,double,double)>": 0.4616233299917119
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.45711830398793135
        }, 
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder4: double compute(double,int)>": 0.45664888026430134
        }
    ], 
    "<Catalano.Statistics.Distributions.CauchyDistribution: double Entropy()>": [
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.5979648358161886
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.5626808026006815
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5163184449760669
        }, 
        {
            "<org.dyn4j.dynamics.joint.MotorJoint: double getReactionTorque(double)>": 0.4875720227896849
        }, 
        {
            "<org.dyn4j.dynamics.joint.AngleJoint: double getReactionTorque(double)>": 0.4875720227896849
        }
    ], 
    "<Catalano.Statistics.Regression.RegressionAnalysis: Catalano.Statistics.Regression.ISimpleRegression BestFit(java.util.List)>": [
        {
            "<boofcv.abst.feature.tracker.PointTrackerKltPyramid: void addToList(java.util.List,java.util.List)>": 0.4126865421844587
        }, 
        {
            "<boofcv.alg.tracker.tld.TldTemplateMatching: double distance(boofcv.struct.feature.NccFeature,java.util.List)>": 0.4045658355394104
        }, 
        {
            "<boofcv.alg.filter.binary.BinaryImageOps: void clusterToBinary(java.util.List,boofcv.struct.image.GrayU8)>": 0.3947407714026076
        }, 
        {
            "<net.imglib2.util.Util: float min(java.util.List)>": 0.3815900369082545
        }, 
        {
            "<net.imglib2.util.Util: float max(java.util.List)>": 0.3815900369082545
        }
    ], 
    "<Catalano.Statistics.Distributions.ChiSquareDistribution: double LogProbabilityDensityFunction(double)>": [
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 setDirection(double)>": 0.5167881914358835
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5142064983253605
        }, 
        {
            "<boofcv.app.BaseFiducialSquare: void autoSelectGridSize(double,double,double,double)>": 0.49928870291973027
        }, 
        {
            "<boofcv.alg.geo.pose.P3PGrunert: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.4927954888652149
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.4881556105659307
        }
    ], 
    "<Catalano.Statistics.Distributions.GammaDistribution: double DistributionFunction(double)>": [
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.6004993056909201
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double dot(double,double,double)>": 0.5850663447187394
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double cross(double,double)>": 0.5758417343686252
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double dot(double,double)>": 0.5758417343686252
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.5685610137800706
        }
    ], 
    "<Catalano.Statistics.DescriptiveStatistics: double Mean(int[])>": [
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: double computeEnergy(int[],int)>": 0.5710015876861323
        }, 
        {
            "<boofcv.misc.BoofMiscOps: double[] convertTo_F64(int[])>": 0.4861049684773648
        }, 
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.47492245046291376
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: double sumCoefficients(float[])>": 0.4462167242457925
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.43057235228467255
        }
    ], 
    "<Catalano.Statistics.DescriptiveStatistics: double Minimum(double[])>": [
        {
            "<net.imglib2.util.Util: double max(double[])>": 0.47996655275195
        }, 
        {
            "<net.imglib2.util.Util: double min(double[])>": 0.47996655275195
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: double maxAbs(double[],int)>": 0.4617381181790571
        }, 
        {
            "<net.imglib2.position.transform.Floor: void floor(double[],long[])>": 0.45852261978464537
        }, 
        {
            "<net.imglib2.position.transform.Round: void round(double[],long[])>": 0.45852261978464537
        }
    ], 
    "<Catalano.Statistics.Distributions.ExponentialDistribution: double Median()>": [
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.6906883084419864
        }, 
        {
            "<org.dyn4j.dynamics.joint.MotorJoint: double getReactionTorque(double)>": 0.47168774026324295
        }, 
        {
            "<org.dyn4j.dynamics.joint.AngleJoint: double getReactionTorque(double)>": 0.47168774026324295
        }, 
        {
            "<org.dyn4j.dynamics.joint.PrismaticJoint: double getMotorForce(double)>": 0.47168774026324295
        }, 
        {
            "<org.dyn4j.dynamics.joint.WheelJoint: double getReactionTorque(double)>": 0.47168774026324295
        }
    ], 
    "<Catalano.Statistics.Kernels.Linear: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.45114706568290075
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.4431397997725755
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.43903846490869824
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.43199455393606695
        }, 
        {
            "<net.imglib2.util.RealSum: double getSum()>": 0.4298377318132394
        }
    ], 
    "<Catalano.Statistics.Regression.PowerRegression: void <init>(double[],double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double distance(double[],double[])>": 0.41572889038754746
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F64: void <init>(double[],double,double)>": 0.373138295531771
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.37310980836800606
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F64: void set(double[],double,double)>": 0.3441190413213054
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.3160744183054031
        }
    ], 
    "<Catalano.Statistics.Distributions.TStudentDistribution: double ProbabilityDensityFunction(double)>": [
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.5956061003528756
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.5863982408971599
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.5742360362932927
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5665723754432239
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distanceSquared(double,double)>": 0.5343342166217558
        }
    ], 
    "<Catalano.Statistics.Histogram: void update()>": [
        {
            "<net.imglib2.img.planar.PlanarRandomAccess: void setPosition(int[])>": 0.37835971701726046
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: int getMaxBalance()>": 0.3773797328439399
        }, 
        {
            "<net.imglib2.util.IntervalIndexer: int indexToPosition(int,int[],int[],int)>": 0.3683511105689575
        }, 
        {
            "<net.imglib2.img.planar.PlanarImg: int indexToGlobalPosition(int,int,int)>": 0.36070704835341966
        }, 
        {
            "<boofcv.alg.feature.describe.impl.ImplSurfDescribeOps: void gradientInner(boofcv.struct.image.GrayS32,double,double,double,int,double,int[],int[])>": 0.3597252783840903
        }
    ], 
    "<Catalano.Statistics.Regression.PolynomialRegression: double Regression(double)>": [
        {
            "<net.imglib2.util.LinAlgHelpers: void quaternionFromR(double[][],double[])>": 0.5071902831416003
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void axisFromR(double[][],double[])>": 0.44440232327040974
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double angleFromR(double[][])>": 0.4339588914787539
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.41359881498817364
        }, 
        {
            "<boofcv.alg.geo.NormalizedToPixelError: double errorSq(double,double,double,double)>": 0.3576978920412807
        }
    ], 
    "<Catalano.Statistics.Distributions.CauchyDistribution: double ProbabilityDensityFunction(double)>": [
        {
            "<org.dyn4j.geometry.Vector3: double dot(double,double,double)>": 0.5533517612688008
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double cross(double,double)>": 0.5472424705017083
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double dot(double,double)>": 0.5472424705017083
        }, 
        {
            "<boofcv.alg.geo.NormalizedToPixelError: double errorSq(double,double,double,double)>": 0.53200412761908
        }, 
        {
            "<org.dyn4j.geometry.Vector3: boolean isOrthogonal(double,double,double)>": 0.5247132002837707
        }
    ], 
    "<Catalano.Statistics.Kernels.ThinPlateSpline: void <init>(double)>": [
        {
            "<net.imglib2.type.numeric.ARGBDoubleType: void <init>(double,double,double,double)>": 0.48471612928369384
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.4780873466915927
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.47309461288659005
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.4664250368558033
        }, 
        {
            "<boofcv.abst.feature.describe.DescribeRegionPoint_SIFT: boolean process(double,double,double,double,boofcv.struct.feature.TupleDesc)>": 0.4613162587653822
        }
    ], 
    "<Catalano.Statistics.Distributions.EmpiricalDistribution: double Mean()>": [
        {
            "<boofcv.io.SimpleStringNumberReader: double getDouble()>": 0.3171268673834887
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.31634694039520156
        }, 
        {
            "<org.dyn4j.geometry.Matrix33Test: void copy()>": 0.29631017272675564
        }, 
        {
            "<org.dyn4j.geometry.TransformTest: void copy()>": 0.29398362036365244
        }, 
        {
            "<org.dyn4j.geometry.TransformTest: void setTransform()>": 0.2862705625202504
        }
    ], 
    "<Catalano.Statistics.Distributions.ParetoDistribution: double ProbabilityDensityFunction(double)>": [
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.5401449289802667
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(double,double,double)>": 0.5397221311753296
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(org.dyn4j.geometry.Vector3)>": 0.5287176920397267
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(org.dyn4j.geometry.Vector3)>": 0.527747983344511
        }, 
        {
            "<boofcv.alg.geo.pose.PnPLepetitEPnP: double matchScale(java.util.List,org.ddogleg.struct.FastQueue)>": 0.526752367358669
        }
    ], 
    "<Catalano.Statistics.Distributions.LaplaceDistribution: void <init>(double,double)>": [
        {
            "<net.imglib2.util.Util: double gLog(double,double)>": 0.37374288939602973
        }, 
        {
            "<boofcv.alg.feature.detect.interest.FastHessianFeatureDetector: double polyPeak(double,double,double,double,double,double)>": 0.3437901585358413
        }, 
        {
            "<net.imglib2.util.Util: double gLogInv(double,double)>": 0.3416459906215436
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.3397567097343053
        }, 
        {
            "<boofcv.factory.filter.kernel.FactoryKernelGaussian: double sigmaForRadius(double,int)>": 0.33429031107501816
        }
    ], 
    "<Catalano.Statistics.Distributions.FisherDistribution: double Variance()>": [
        {
            "<boofcv.alg.feature.dense.DescribeDenseHogAlg: void getDescriptorsInRegion(int,int,int,int,java.util.List)>": 0.4176282555666688
        }, 
        {
            "<boofcv.alg.tracker.tld.TldFernFeature: void computePosterior()>": 0.40057089631767884
        }, 
        {
            "<boofcv.alg.tracker.tld.TldFernFeature: void incrementN()>": 0.3969213122839673
        }, 
        {
            "<boofcv.alg.tracker.tld.TldFernFeature: void incrementP()>": 0.3969213122839673
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double variance(boofcv.struct.image.GrayS32,double)>": 0.39261020673292846
        }
    ], 
    "<Catalano.Statistics.Distributions.NormalDistribution: void <init>(double,double)>": [
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.49136155049484836
        }, 
        {
            "<net.imglib2.type.numeric.ARGBDoubleType: void <init>(double,double,double,double)>": 0.4803250867268378
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.4771170783948452
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.47663522473795933
        }, 
        {
            "<boofcv.abst.feature.describe.DescribeRegionPoint_SIFT: boolean process(double,double,double,double,boofcv.struct.feature.TupleDesc)>": 0.45267327816789615
        }
    ], 
    "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double Entropy()>": [
        {
            "<org.dyn4j.geometry.Transform$1: double setRotation(double)>": 0.3346042823664512
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void rotate(double)>": 0.2563088123667462
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void setTranslationX(double)>": 0.2563088123667462
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void setTranslationY(double)>": 0.2563088123667462
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ConstraintSolver: void setIsNonLinearGaussSeidelPositionCorrectionActive(boolean)>": 0.24456053301456554
        }
    ], 
    "<Catalano.Statistics.Distributions.LognormalDistribution: double Entropy()>": [
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.41474390655285104
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": 0.40852781622927764
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: double getDistance()>": 0.40852781622927764
        }, 
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.40852781622927764
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.4048225090793306
        }
    ], 
    "<Catalano.Statistics.Tools: double StandartDeviation(double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 1.0
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double distance(double[],double[])>": 0.6454056145762262
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": 0.5942358989703281
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: double getDistance()>": 0.5942358989703281
        }, 
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.5942358989703281
        }
    ], 
    "<Catalano.Statistics.Distributions.EmpiricalDistribution: void <init>(double[],double)>": [
        {
            "<org.dyn4j.geometry.Matrix33Test: void copy()>": 0.3165312203104611
        }, 
        {
            "<org.dyn4j.geometry.TransformTest: void copy()>": 0.3158285258336257
        }, 
        {
            "<org.dyn4j.geometry.Matrix22Test: void copy()>": 0.30934522573406087
        }, 
        {
            "<org.dyn4j.geometry.TransformTest: void setTransform()>": 0.30933190769146307
        }, 
        {
            "<org.dyn4j.geometry.Vector3Test: void copy()>": 0.2971656553030507
        }
    ], 
    "<Catalano.Statistics.Distributions.LaplaceDistribution: double DistributionFunction(double)>": [
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5501303492655782
        }, 
        {
            "<boofcv.alg.distort.LensDistortionOps: void roundInside(georegression.struct.shapes.RectangleLength2D_F64)>": 0.5490946598043094
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.5389726519067741
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: double[] calculatePosition(double,double,double)>": 0.5382247467417115
        }, 
        {
            "<boofcv.gui.d3.Orientation3D: void setVector(georegression.struct.point.Vector3D_F64)>": 0.5250133779541375
        }
    ], 
    "<Catalano.Statistics.ContinuousHistogram: void Update()>": [
        {
            "<boofcv.alg.feature.describe.DescribeSiftCommon: void trilinearInterpolation(float,float,float,double,boofcv.struct.feature.TupleDesc_F64)>": 0.3805864232776581
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void get(float,float,float[])>": 0.36230535273936504
        }, 
        {
            "<boofcv.alg.filter.binary.GThresholdImageOps: int computeOtsu(int[],int,int)>": 0.36183501531719403
        }, 
        {
            "<org.jbox2d.tests.math.SinCosTest: double accuracyTest(org.jbox2d.tests.math.SinCosTable,int)>": 0.35682447832245634
        }, 
        {
            "<boofcv.alg.feature.describe.DescribePointSift: void computeRawDescriptor(double,double,double,double)>": 0.34845639632203596
        }
    ], 
    "<Catalano.Statistics.Kernels.Pearson: void setSigma(double)>": [
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder3: double compute(double,int)>": 0.4633085412871547
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.4421160679569362
        }, 
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder4: double compute(double,int)>": 0.4375409925076237
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.4321217227585162
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: double[] calculatePosition(double,double,double)>": 0.430947828055099
        }
    ], 
    "<Catalano.Statistics.Analysis.PrincipalComponentAnalysis$AnalysisMethod: Catalano.Statistics.Analysis.PrincipalComponentAnalysis$AnalysisMethod valueOf(java.lang.String)>": [
        {
            "<net.smert.jreactphysics3d.collision.shapes.CollisionShapeType: net.smert.jreactphysics3d.collision.shapes.CollisionShapeType valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<net.smert.jreactphysics3d.configuration.ContactsPositionCorrectionTechnique: net.smert.jreactphysics3d.configuration.ContactsPositionCorrectionTechnique valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<net.smert.jreactphysics3d.configuration.JointsPositionCorrectionTechnique: net.smert.jreactphysics3d.configuration.JointsPositionCorrectionTechnique valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<net.smert.jreactphysics3d.constraint.JointType: net.smert.jreactphysics3d.constraint.JointType valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions: net.coobird.thumbnailator.geometry.Positions valueOf(java.lang.String)>": 0.260989010989011
        }
    ], 
    "<Catalano.Statistics.DescriptiveStatistics: double Kurtosis(double[],double,double)>": [
        {
            "<org.dyn4j.geometry.Vector3: double dot(double,double,double)>": 0.531712515287145
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double cross(double,double)>": 0.519233621587711
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double dot(double,double)>": 0.519233621587711
        }, 
        {
            "<org.dyn4j.geometry.Vector3: void <init>(double,double,double,double,double,double)>": 0.5169259211961271
        }, 
        {
            "<org.dyn4j.geometry.Vector2: void <init>(double,double,double,double)>": 0.510219408626834
        }
    ], 
    "<Catalano.Statistics.Analysis.PrincipalComponentAnalysis: void <init>(double[][],Catalano.Statistics.Analysis.PrincipalComponentAnalysis$AnalysisMethod)>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void declareRadixRealData()>": 0.14382588507402394
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: int cols(double[][])>": 0.13018979366140096
        }, 
        {
            "<net.imglib2.transform.integer.ComponentMappingTransform: double[][] getMatrix()>": 0.095568849412077
        }, 
        {
            "<net.imglib2.transform.integer.TranslationTransform: double[][] getMatrix()>": 0.09117145180186804
        }, 
        {
            "<net.imglib2.transform.integer.TranslationTransform$InverseTranslationTransform: double[][] getMatrix()>": 0.08810852656898947
        }
    ], 
    "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double ComplementaryDistributionFunction(int,double)>": [
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.466975786697068
        }, 
        {
            "<net.imglib2.util.Util: double gLog(double,double)>": 0.4470187255042901
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.437439423511615
        }, 
        {
            "<boofcv.app.BaseFiducialSquare: void configureDocument(double,double,double,double)>": 0.4343315750572498
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: void computeU(double,double)>": 0.43321497660149316
        }
    ], 
    "<Catalano.Statistics.Histogram: double[] CDF(int[])>": [
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: double computeEnergy(int[],int)>": 0.47254901988457154
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int sumCoefficients(int[])>": 0.40846529331136766
        }, 
        {
            "<net.imglib2.interpolation.randomaccess.LanczosInterpolator: double[] createLanczosLUT(int,int)>": 0.36891036212130635
        }, 
        {
            "<boofcv.alg.color.ColorXyz: void rgbToXyz(int,int,int,double[])>": 0.354995614944384
        }, 
        {
            "<net.imglib2.util.IntervalIndexer: void createAllocationSteps(int[],int[])>": 0.35204529092125203
        }
    ], 
    "<Catalano.Statistics.Regression.RegressionAnalysis: Catalano.Statistics.Regression.ISimpleRegression BestFit(double[],double[])>": [
        {
            "<boofcv.alg.geo.calibration.CalibrationPlanarGridZhang99: boolean process(java.util.List)>": 0.22604675182012895
        }, 
        {
            "<com.flowpowered.react.collision.CollisionDetection: void computeLinkedPhase()>": 0.22143203164126554
        }, 
        {
            "<boofcv.abst.geo.calibration.CalibrateStereoPlanar: georegression.struct.se.Se3_F64 computeRightToLeft()>": 0.217828050285503
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void display(com.jogamp.opengl.GLAutoDrawable)>": 0.21509920361426008
        }, 
        {
            "<org.dyn4j.collision.broadphase.Sap: java.util.List detect(org.dyn4j.collision.broadphase.BroadphaseFilter)>": 0.21196563944508834
        }
    ], 
    "<Catalano.Statistics.Normalizations: double[] UnitVectorNormalization(double[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: void normalizeF(boofcv.struct.convolve.Kernel2D_F64)>": 0.5339363646372344
        }, 
        {
            "<net.imglib2.histogram.Real1dBinMapper: net.imglib2.histogram.HistogramNd histogramNd(double[],double[],long[],boolean[])>": 0.48905509534783226
        }, 
        {
            "<boofcv.factory.transform.pyramid.FactoryPyramid: boofcv.struct.pyramid.PyramidFloat scaleSpace(double[],java.lang.Class)>": 0.48701589492288055
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.4629576047054374
        }, 
        {
            "<boofcv.factory.transform.pyramid.FactoryPyramid: boofcv.struct.pyramid.PyramidFloat scaleSpacePyramid(double[],java.lang.Class)>": 0.45935558697808015
        }
    ], 
    "<Catalano.Statistics.Kernels.SymmetricTriangle: double Function(double[],double[])>": [
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.538219140148643
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.5289488007952452
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.4956746436195602
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.49153999336276993
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.4846536803702286
        }
    ], 
    "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double Variance()>": [
        {
            "<boofcv.alg.denoise.wavelet.UtilDenoiseWavelet: double universalThreshold(boofcv.struct.image.ImageGray,double)>": 0.4379444306157406
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.43784792969250624
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomMonoPlaneInfinity: void fuseEstimates()>": 0.4344880374567358
        }, 
        {
            "<boofcv.app.BaseFiducialSquare: void centerPage()>": 0.43246071543987846
        }, 
        {
            "<boofcv.alg.geo.rectify.RectifyFundamental: org.ejml.simple.SimpleMatrix computeG(georegression.struct.point.Point3D_F64,int,int)>": 0.43097055499531073
        }
    ], 
    "<Catalano.Statistics.Regression.LogarithmicRegression: java.lang.String toString()>": [
        {
            "<net.imglib2.type.numeric.real.AbstractRealType: java.lang.String toString()>": 0.4795922045932036
        }, 
        {
            "<net.imglib2.util.Util: java.lang.String printCoordinates(double[])>": 0.4622348963987094
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: java.lang.String toString()>": 0.4605526716054936
        }, 
        {
            "<boofcv.abst.fiducial.FiducialStability: java.lang.String toString()>": 0.4605526716054936
        }, 
        {
            "<boofcv.app.BaseFiducialSquare: void generateDocument(double,java.lang.String)>": 0.4551131139895354
        }
    ], 
    "<Catalano.Statistics.Kernels.Wave: double Function(double[],double[])>": [
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.5367724604421241
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.5012477614639665
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.49884818022790056
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeAngle(int)>": 0.4804745303332558
        }, 
        {
            "<boofcv.alg.geo.pose.PnPStereoJacobianRodrigues: void process(double[],double[])>": 0.47918648019181925
        }
    ], 
    "<Catalano.Statistics.Distributions.TStudentDistribution: double Variance()>": [
        {
            "<org.dyn4j.geometry.Vector3: org.dyn4j.geometry.Vector3 setMagnitude(double)>": 0.38758820150923845
        }, 
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 setMagnitude(double)>": 0.3852022528545619
        }, 
        {
            "<org.dyn4j.geometry.Vector3: boolean isZero()>": 0.3708335497633538
        }, 
        {
            "<org.dyn4j.geometry.Matrix22: org.dyn4j.geometry.Matrix22 invert()>": 0.3659917889681684
        }, 
        {
            "<org.dyn4j.geometry.Interval: double getOverlap(org.dyn4j.geometry.Interval)>": 0.36419262858018386
        }
    ], 
    "<Catalano.Statistics.Kernels.Multiquadric: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.5263914415451605
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.49172641568262027
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.4894009734568065
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double sad(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.47629808218392805
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeAngle(int)>": 0.47371329733967704
        }
    ], 
    "<Catalano.Statistics.Kernels.HistogramIntersection: double Function(double[],double[])>": [
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.6181082881239505
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.5928684790222263
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5787202893801031
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.5569218422636373
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(double,double,double)>": 0.553284494762562
        }
    ], 
    "<Catalano.Statistics.HistogramStatistics: double Skewness(int[],double,double)>": [
        {
            "<org.dyn4j.geometry.Vector3: void <init>(double,double,double,double,double,double)>": 0.5054409274856586
        }, 
        {
            "<org.dyn4j.geometry.Vector2: void <init>(double,double,double,double)>": 0.4987959298260767
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double dot(double,double,double)>": 0.49776133860629385
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double cross(double,double)>": 0.48777705997739995
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double dot(double,double)>": 0.48777705997739995
        }
    ], 
    "<Catalano.Statistics.Histogram: int[] MatchHistograms(int[],int[])>": [
        {
            "<net.imglib2.util.Util: void min(double[],double[])>": 0.3691475670719475
        }, 
        {
            "<net.imglib2.util.Util: void max(double[],double[])>": 0.3691475670719475
        }, 
        {
            "<boofcv.misc.BoofMiscOps: int[] convertTo_I32(double[],int[])>": 0.3223563786041234
        }, 
        {
            "<boofcv.misc.BoofMiscOps: int[] convertArray(double[],int[])>": 0.3223563786041234
        }, 
        {
            "<net.imglib2.util.Util: int[] getArrayFromValue(int,int)>": 0.30916838538804975
        }
    ], 
    "<Catalano.Statistics.Kernels.Circular: double Function(double[],double[])>": [
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.5431674912090153
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.48917159352151185
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.4884007686216818
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.48438827365341913
        }, 
        {
            "<boofcv.alg.geo.pose.PnPLepetitEPnP: void estimateCase3(double[])>": 0.4805542074469355
        }
    ], 
    "<Catalano.Statistics.DescriptiveStatistics: double Mean(double[])>": [
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.5843585299627623
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.5118530904925599
        }, 
        {
            "<net.imglib2.util.RealSum: double getSum()>": 0.47852516901331454
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: double sum(boofcv.struct.convolve.Kernel2D_F64)>": 0.4696403916572216
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.46924297137385435
        }
    ], 
    "<Catalano.Statistics.Distributions.GammaDistribution: double ProbabilityDensityFunction(double)>": [
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(double,double,double)>": 0.5248133662177114
        }, 
        {
            "<boofcv.alg.distort.LensDistortionOps: void roundInside(georegression.struct.shapes.RectangleLength2D_F64)>": 0.5190638488111923
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(org.dyn4j.geometry.Vector3)>": 0.5152116133557356
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.5136335469780589
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.5117016817219507
        }
    ], 
    "<Catalano.Statistics.Distributions.EmpiricalDistribution: double Variance()>": [
        {
            "<boofcv.io.SimpleStringNumberReader: double getDouble()>": 0.3171268673834887
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.31634694039520156
        }, 
        {
            "<org.dyn4j.geometry.Matrix33Test: void copy()>": 0.29631017272675564
        }, 
        {
            "<org.dyn4j.geometry.TransformTest: void copy()>": 0.29398362036365244
        }, 
        {
            "<org.dyn4j.geometry.TransformTest: void setTransform()>": 0.2862705625202504
        }
    ], 
    "<Catalano.Statistics.Normalizations: double[] MinMaxNormalization(double[],double,double)>": [
        {
            "<net.imglib2.util.Binning: double[] edgeValuesPerBin(int,double,double)>": 0.5689146340771274
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: java.util.List randomPoints_F64(double,double,double,double,double,double,int,java.util.Random)>": 0.49651515329928986
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: java.util.List randomPoints_F64(double,double,double,double,int,java.util.Random)>": 0.4769537837543631
        }, 
        {
            "<boofcv.alg.geo.pose.UtilLepetitEPnP: void residuals_Control3(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F,double[],double[])>": 0.47354192958941105
        }, 
        {
            "<boofcv.alg.geo.h.HomographyResidualSampson: double error1(double,double,double,double)>": 0.4693204748902409
        }
    ], 
    "<Catalano.Statistics.Regression.PolynomialRegression: double[] Regression(double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: void quaternionFromR(double[][],double[])>": 0.4680425687258408
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void axisFromR(double[][],double[])>": 0.4261567525649413
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverse(double[],boolean)>": 0.3796992660584228
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void complexInverse(double[],boolean)>": 0.37421632212064565
        }, 
        {
            "<net.imglib2.RealPoint: void move(double[])>": 0.372761297856106
        }
    ], 
    "<Catalano.Statistics.Kernels.Pearson: void setOmega(double)>": [
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder3: double compute(double,int)>": 0.4633085412871547
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.4421160679569362
        }, 
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder4: double compute(double,int)>": 0.4375409925076237
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.4321217227585162
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: double[] calculatePosition(double,double,double)>": 0.430947828055099
        }
    ], 
    "<Catalano.Statistics.DescriptiveStatistics: double Skewness(double[],double,double)>": [
        {
            "<org.dyn4j.geometry.Vector3: void <init>(double,double,double,double,double,double)>": 0.5664609098040594
        }, 
        {
            "<org.dyn4j.geometry.Vector2: void <init>(double,double,double,double)>": 0.5587002950125234
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double dot(double,double,double)>": 0.5406924160862536
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.5391672023971416
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double cross(double,double)>": 0.5308886608360199
        }
    ], 
    "<Catalano.Statistics.Regression.ExponentialRegression: double[] Regression(double[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: void normalizeF(boofcv.struct.convolve.Kernel2D_F64)>": 0.442115655801531
        }, 
        {
            "<boofcv.core.image.border.ImageBorder_IL_F64: void setGeneral(int,int,double[])>": 0.4372489064444141
        }, 
        {
            "<net.imglib2.util.Util: double[] getArrayFromValue(double,int)>": 0.41670643401657026
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F64: void <init>(double[],double,double)>": 0.40215679571236007
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.4011564488653143
        }
    ], 
    "<Catalano.Statistics.Regression.PolynomialRegression: void <init>(double[],double[],int)>": [
        {
            "<boofcv.core.image.border.ImageBorder_IL_F64: void setGeneral(int,int,double[])>": 0.32842748790721304
        }, 
        {
            "<boofcv.core.image.border.ImageBorder_IL_F64: void getGeneral(int,int,double[])>": 0.32842748790721304
        }, 
        {
            "<boofcv.alg.geo.f.ParamFundamentalEpipolar: double selectDivisor(double[],double[])>": 0.32807910863198364
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void normalizeSumToOne(boofcv.struct.convolve.Kernel1D_F64)>": 0.32728758139592656
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void normalizeSumToOne(boofcv.struct.convolve.Kernel2D_F64)>": 0.32728758139592656
        }
    ], 
    "<Catalano.Statistics.Distributions.CauchyDistribution: void Init(double,double)>": [
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.4409016210438868
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.43334702121580254
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.4276291717507167
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.4262477206279945
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillCircleFromTopLeft(com.jogamp.opengl.GL2,double,double,double,double)>": 0.42552620176891237
        }
    ], 
    "<Catalano.Statistics.Distributions.TStudentDistribution: double LogProbabilityDensityFunction(double)>": [
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.6184212269889039
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.6136462320873387
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.610544024399103
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.5997952903410642
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: double[] calculatePosition(double,double,double)>": 0.5470812962971336
        }
    ], 
    "<Catalano.Statistics.Distributions.NakagamiDistribution: double Entropy()>": [
        {
            "<org.dyn4j.geometry.Transform$1: double setRotation(double)>": 0.3346042823664512
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void rotate(double)>": 0.2563088123667462
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void setTranslationX(double)>": 0.2563088123667462
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void setTranslationY(double)>": 0.2563088123667462
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ConstraintSolver: void setIsNonLinearGaussSeidelPositionCorrectionActive(boolean)>": 0.24456053301456554
        }
    ], 
    "<Catalano.Statistics.Kernels.NormalizedPolynomial: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double det3x3(double[])>": 0.5761150993141871
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void invert3x3(double[])>": 0.5674792451251802
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void cross(double[],double[],double[])>": 0.5575565104976397
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.5336925285017804
        }, 
        {
            "<boofcv.alg.geo.pose.UtilLepetitEPnP: void jacobian_Control4(org.ejml.data.DenseMatrix64F,double[],org.ejml.data.DenseMatrix64F)>": 0.5179197198734656
        }
    ], 
    "<Catalano.Statistics.Tools: double StandartDeviation(double[],double)>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.6646379209081776
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double distance(double[],double[])>": 0.6051639283944334
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": 0.5854908577056641
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: double getDistance()>": 0.5854908577056641
        }, 
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.5854908577056641
        }
    ], 
    "<Catalano.Statistics.Distributions.ContinuousUniformDistribution: double Variance()>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.5197198266336945
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.5193703835264162
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.5183961680937309
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Matrix33 product(org.dyn4j.geometry.Matrix33)>": 0.4982355218175978
        }, 
        {
            "<boofcv.alg.geo.pose.P3PGrunert: double computeCosine(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64)>": 0.49727280199032275
        }
    ], 
    "<Catalano.Statistics.Distributions.DiscreteUniformDistribution: double LogProbabilityMassFunction(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: double getOutside(int,int)>": 0.49561060165323273
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.47222596384645044
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.46706209482623096
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.46589678302092774
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.45200541231729485
        }
    ], 
    "<Catalano.Statistics.Kernels.Spherical: double Function(double[],double[])>": [
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.49740008087474175
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.48393757063485615
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.4749756827701246
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.47436245801102905
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationPlanarGridZhang99: void applyDistortion(georegression.struct.point.Point2D_F64,double[],double,double)>": 0.47378836212716674
        }
    ], 
    "<Catalano.Statistics.Histogram: void <init>(int[])>": [
        {
            "<net.imglib2.img.planar.PlanarRandomAccess: void setPosition(int[])>": 0.3777290736262573
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: int getMaxBalance()>": 0.3771265503382259
        }, 
        {
            "<net.imglib2.util.IntervalIndexer: int indexToPosition(int,int[],int[],int)>": 0.3718905451654798
        }, 
        {
            "<net.imglib2.img.planar.PlanarImg: int indexToGlobalPosition(int,int,int)>": 0.36055439105011333
        }, 
        {
            "<boofcv.alg.feature.describe.impl.ImplSurfDescribeOps: void gradientInner(boofcv.struct.image.GrayS32,double,double,double,int,double,int[],int[])>": 0.35707564625095783
        }
    ], 
    "<Catalano.Statistics.Kernels.Spline: double Function(double[],double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double det3x3(double[])>": 0.5935920156369243
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void cross(double[],double[],double[])>": 0.5814719188943944
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void invert3x3(double[])>": 0.573247667830937
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.5646420942826678
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void quaternionApply(double[],double[],double[])>": 0.5508166097269281
        }
    ], 
    "<Catalano.Statistics.Regression.PolynomialRegression: java.lang.String toString()>": [
        {
            "<net.imglib2.util.LinAlgHelpers: java.lang.String toString(double[][],java.lang.String)>": 0.5473328835474947
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: java.lang.String toString(double[],java.lang.String)>": 0.5416879895789453
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.49896493716308726
        }, 
        {
            "<net.imglib2.util.Util: java.lang.String printCoordinates(boolean[])>": 0.49655578410378703
        }, 
        {
            "<boofcv.demonstrations.feature.disparity.VisualizeStereoDisparity: void main(java.lang.String[])>": 0.47857059635167404
        }
    ], 
    "<Catalano.Statistics.Kernels.ThinPlateSpline: void setSigma(double)>": [
        {
            "<net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolator: double computeWeight(double)>": 0.46828977726285625
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.45136691834564124
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.44705644413273726
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillCircleFromTopLeft(com.jogamp.opengl.GL2,double,double,double,double)>": 0.4468868925790935
        }, 
        {
            "<boofcv.alg.feature.detect.interest.FastHessianFeatureDetector: double polyPeak(double,double,double,double,double,double)>": 0.44245077808613476
        }
    ], 
    "<Catalano.Statistics.HistogramStatistics: int Median(int[])>": [
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int sumCoefficients(int[])>": 0.6084178563910022
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: int getReminder(int,int[])>": 0.48751597963592685
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F32_1D: int getReminder(int,int[])>": 0.48751597963592685
        }, 
        {
            "<net.imglib2.util.IntervalIndexer: void createAllocationSteps(int[],int[])>": 0.4734936068716536
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: double computeEnergy(int[],int)>": 0.456906019293885
        }
    ], 
    "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double CumulativeFunction(int,double)>": [
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.459576372937031
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.43892183751245756
        }, 
        {
            "<boofcv.app.BaseFiducialSquare: void configureDocument(double,double,double,double)>": 0.4361305526659687
        }, 
        {
            "<net.imglib2.util.Util: double gLog(double,double)>": 0.43481500486484514
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: void computeU(double,double)>": 0.43405182042970103
        }
    ], 
    "<Catalano.Statistics.Kernels.Dirichlet: double Function(double[],double[])>": [
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.49788155755379626
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: double maxAbs(double[],int)>": 0.46779912084426156
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: double minAbs(double[],int,double)>": 0.45493639721327966
        }, 
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.4465411388820768
        }, 
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder3: double compute(double,int)>": 0.4438785979981529
        }
    ], 
    "<Catalano.Statistics.Regression.ExponentialRegression: double CoefficientOfDetermination()>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double distance(double[],double[])>": 0.43897619349098344
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.43401587064568825
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.41343488269165896
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void normalizeF(boofcv.struct.convolve.Kernel2D_F64)>": 0.4086113911639079
        }, 
        {
            "<net.imglib2.util.Util: double gLog(double,double)>": 0.39943722738544757
        }
    ], 
    "<Catalano.Statistics.Distributions.LognormalDistribution: void init(double,double,double)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillCircleFromTopLeft(com.jogamp.opengl.GL2,double,double,double,double)>": 0.44276821345868034
        }, 
        {
            "<org.dyn4j.geometry.Vector3: void <init>(double,double,double,double,double,double)>": 0.4425437145136437
        }, 
        {
            "<boofcv.alg.feature.detect.interest.FastHessianFeatureDetector: double polyPeak(double,double,double,double,double,double)>": 0.440521623289546
        }, 
        {
            "<org.dyn4j.geometry.Vector2: void <init>(double,double,double,double)>": 0.43787187472027345
        }, 
        {
            "<boofcv.alg.color.ColorRgb: double rgbToGray_Weighted(double,double,double)>": 0.4299151010483282
        }
    ], 
    "<Catalano.Statistics.Kernels.NormalizedPolynomial: void setDegree(int)>": [
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int indexOfNextCounterClockwiseEdge(int)>": 0.5194369115453366
        }, 
        {
            "<boofcv.alg.distort.FlipVertical_F32: void <init>(int)>": 0.4971716686440789
        }, 
        {
            "<boofcv.alg.distort.FlipVertical_F64: void <init>(int)>": 0.4971716686440789
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.EdgeEPA: int indexOfNextCounterClockwiseEdge(int)>": 0.4864912615124042
        }, 
        {
            "<boofcv.alg.interpolate.array.Interpolate1D_F32: void changeDegree(int)>": 0.4764288765530791
        }
    ], 
    "<Catalano.Statistics.Kernels.Anova: double Function(double[],double[])>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverse(double[],boolean)>": 0.3939601811393775
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void cdft2d_sub(int,double[][],boolean)>": 0.38155869813354354
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void rftfsub(int,double[],int,int,double[],int)>": 0.37726566211825285
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal5(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.3728751504530191
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverseFull(double[],boolean)>": 0.37180033544437563
        }
    ], 
    "<Catalano.Statistics.Distributions.BinomialDistribution: double DistributionFunction(int)>": [
        {
            "<boofcv.alg.flow.UtilDenseOpticalFlow: boofcv.struct.pyramid.PyramidFloat standardPyramid(int,int,double,double,int,int,java.lang.Class)>": 0.3965806176917907
        }, 
        {
            "<boofcv.alg.geo.PerspectiveOps: boofcv.struct.calib.IntrinsicParameters createIntrinsic(int,int,double)>": 0.37845605224698153
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.3781480158026174
        }, 
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$Separable: double compute(double,int)>": 0.37554294785780473
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double computeSigmaScale(int)>": 0.37166693781729326
        }
    ], 
    "<Catalano.Statistics.Distributions.NakagamiDistribution: double DistributionFunction(double)>": [
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.6090167652430074
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5783694552491635
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.5503004542504356
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.535229651538588
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.5257335963192235
        }
    ], 
    "<Catalano.Statistics.Distributions.ExponentialDistribution: double Variance()>": [
        {
            "<net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolator: double computeWeight(double)>": 0.4728072461884341
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.43466034996939285
        }, 
        {
            "<boofcv.alg.geo.pose.P3PGrunert: double computeCosine(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64)>": 0.4166807681081254
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double getMagnitude()>": 0.4091028825131295
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.4088708041274901
        }
    ], 
    "<Catalano.Statistics.HistogramStatistics: double StdDev(int[])>": [
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": 0.4208586210378515
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: double getDistance()>": 0.4208586210378515
        }, 
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.4208586210378515
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.4154226436867789
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.4130190843259546
        }
    ], 
    "<Catalano.Statistics.Distributions.ExponentialDistribution: double ProbabilityDensityFunction(double)>": [
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.6451932279551151
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distanceSquared(double,double)>": 0.6355187977086363
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.6205341811214202
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.6193743094628817
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.616930811740411
        }
    ], 
    "<Catalano.Statistics.Tools: double[] Mean(double[][])>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxc020(double[],int)>": 0.4409248513036353
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxb020(double[],int)>": 0.4409248513036353
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftx020(double[],int)>": 0.4349683225474759
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void rdft2d_sub(int,double[])>": 0.414795346069577
        }, 
        {
            "<net.imglib2.RealPoint: void move(double[])>": 0.4080590964668406
        }
    ], 
    "<Catalano.Statistics.Tools: double GeometricMean(double[])>": [
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.4984113688036161
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.4474173136467613
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: double maxAbs(double[],int)>": 0.43672919818242406
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.42248841069778575
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: double minAbs(double[],int,double)>": 0.42024458695301337
        }
    ], 
    "<Catalano.Statistics.Distributions.DiscreteUniformDistribution: double Entropy()>": [
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplShiTomasiCornerWeighted_S16: float computeResponse()>": 0.40158409067523837
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplShiTomasiCorner_S16: float computeIntensity()>": 0.40158409067523837
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double variance(boofcv.struct.image.GrayS32,double)>": 0.3864361971481016
        }, 
        {
            "<boofcv.alg.denoise.wavelet.UtilDenoiseWavelet: double universalThreshold(boofcv.struct.image.ImageGray,double)>": 0.38615207878214214
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double mean(boofcv.struct.image.GrayF64)>": 0.38602852207889377
        }
    ], 
    "<Catalano.Statistics.Distributions.InverseGammaDistribution: double LogProbabilityDensityFunction(double)>": [
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.5545683916742321
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.5470590795469187
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.5468131064995987
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.5452976915896923
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: void computeU(double,double)>": 0.5413255799883436
        }
    ], 
    "<Catalano.Statistics.DescriptiveStatistics: double StandartDeviation(double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 1.0
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double distance(double[],double[])>": 0.6454056145762262
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": 0.5942358989703281
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: double getDistance()>": 0.5942358989703281
        }, 
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.5942358989703281
        }
    ], 
    "<Catalano.Statistics.Tools: int Mode(int[])>": [
        {
            "<Sort09: void sort(int[])>": 0.5573088022742774
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.RegularClustersIntoGrids: int checkNumberOfConnections(java.util.List)>": 0.5522168674399182
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectSparseBasicWta_S32: boolean select(int[],int)>": 0.5399925701206081
        }, 
        {
            "<boofcv.misc.BoofMiscOps: int countNotZero(int[],int)>": 0.5121186347890794
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectSparseStandardWta_S32: boolean select(int[],int)>": 0.4998614790247712
        }
    ], 
    "<Catalano.Statistics.Regression.LinearRegression: double Regression(double)>": [
        {
            "<org.dyn4j.geometry.Vector3: double dot(double,double,double)>": 0.5931423955949208
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double cross(double,double)>": 0.5873308221824219
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double dot(double,double)>": 0.5873308221824219
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(double,double,double)>": 0.5592240194709828
        }, 
        {
            "<boofcv.alg.geo.NormalizedToPixelError: double errorSq(double,double,double,double)>": 0.5592010384799224
        }
    ], 
    "<Catalano.Statistics.Distributions.RayleighDistribution: double Variance()>": [
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.43060313820740725
        }, 
        {
            "<boofcv.struct.learning.PrecisionRecall: double getPrecision()>": 0.4254093601784843
        }, 
        {
            "<boofcv.struct.learning.PrecisionRecall: double getRecall()>": 0.4254093601784843
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distanceSquared(double,double)>": 0.41873412530507764
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.418367168948701
        }
    ], 
    "<Catalano.Statistics.Distributions.EmpiricalDistribution: double LogProbabilityDensityFunction(double)>": [
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5220441487860754
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(double,double,double)>": 0.515934787599828
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.514507094998217
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: double[] calculatePosition(double,double,double)>": 0.5130994751411431
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.512761895094594
        }
    ], 
    "<Catalano.Statistics.Kernels.ThinPlateSpline: double Function(double[],double[])>": [
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.5715283378521547
        }, 
        {
            "<boofcv.alg.distort.LensDistortionOps: void roundInside(georegression.struct.shapes.RectangleLength2D_F64)>": 0.5084328293275546
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.503849340498137
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.5027788141011924
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: double[] calculatePosition(double,double,double)>": 0.5026956971392293
        }
    ], 
    "<Catalano.Statistics.Distributions.LaplaceDistribution: double Entropy()>": [
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": 0.5123490879146942
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: double getDistance()>": 0.5123490879146942
        }, 
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.5123490879146942
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.4965327243059347
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.4856085738657752
        }
    ], 
    "<Catalano.Statistics.Kernels.Spline: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double det3x3(double[])>": 0.5687861919088596
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void invert3x3(double[])>": 0.550480100676977
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void cross(double[],double[],double[])>": 0.5306505883988311
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void quaternionApply(double[],double[],double[])>": 0.5299329807240425
        }, 
        {
            "<boofcv.alg.geo.pose.UtilLepetitEPnP: void jacobian_Control4(org.ejml.data.DenseMatrix64F,double[],org.ejml.data.DenseMatrix64F)>": 0.5196495329848778
        }
    ], 
    "<Catalano.Statistics.DescriptiveStatistics: double Variance(double[],double)>": [
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.5119839611753002
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.5036644015651136
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double ncc(boofcv.struct.feature.NccFeature,boofcv.struct.feature.NccFeature)>": 0.4663394118166586
        }, 
        {
            "<org.dyn4j.geometry.Vector3: void <init>(double,double,double,double,double,double)>": 0.46588946517139634
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.4629700209387614
        }
    ], 
    "<Catalano.Statistics.Regression.LinearRegression: void <init>(double[],double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double distance(double[],double[])>": 0.37590403706671105
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.33189573485266166
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F64: void <init>(double[],double,double)>": 0.32663043645277245
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F64: void set(double[],double,double)>": 0.31263304963549965
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.28723465677163584
        }
    ], 
    "<Catalano.Statistics.Correlations: double PearsonCorrelation(double[],double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.47168919926765945
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double distance(double[],double[])>": 0.43031470630367996
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.37775562592832584
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": 0.37512332049116437
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: double getDistance()>": 0.37512332049116437
        }
    ], 
    "<Catalano.Statistics.Tools: double[] StandartDeviation(double[][],double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: void quaternionFromR(double[][],double[])>": 0.47556831372356967
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void cross(double[],double[],double[])>": 0.46252413902489653
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverse(double[],boolean)>": 0.45907208366149227
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void complexInverse(double[],boolean)>": 0.45621932370324225
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal11(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.44977981396145417
        }
    ], 
    "<Catalano.Statistics.Tools: double Covariance(double[],double[],double,double)>": [
        {
            "<boofcv.alg.interpolate.array.LagrangeFormula: double process_F64(double,double[],double[],int,int)>": 0.5631972152064895
        }, 
        {
            "<org.dyn4j.geometry.Vector3: void <init>(double,double,double,double,double,double)>": 0.5452768087678205
        }, 
        {
            "<org.dyn4j.geometry.Vector2: void <init>(double,double,double,double)>": 0.5376976163685055
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.533616640166754
        }, 
        {
            "<boofcv.alg.geo.pose.PnPStereoJacobianRodrigues: void addRodriguesJacobian(org.ejml.data.DenseMatrix64F,georegression.struct.point.Point3D_F64,georegression.struct.point.Point3D_F64)>": 0.5301934750954365
        }
    ], 
    "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double Durbin(int,double)>": [
        {
            "<boofcv.alg.flow.UtilDenseOpticalFlow: boofcv.struct.pyramid.PyramidFloat standardPyramid(int,int,double,double,int,int,java.lang.Class)>": 0.417665515142709
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void rdft2d_sub(int,double[])>": 0.4104635979710103
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftx020(double[],int)>": 0.40195682009391265
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxc020(double[],int)>": 0.39769318136638737
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxb020(double[],int)>": 0.39769318136638737
        }
    ], 
    "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double Pomeranz(int,double)>": [
        {
            "<net.imglib2.util.LinAlgHelpers: void quaternionFromR(double[][],double[])>": 0.500091314658914
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve11(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.4762863711523047
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve9(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.47496705606638806
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal11(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.47225370216568197
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve7(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.4708010910538185
        }
    ], 
    "<Catalano.Statistics.Kernels.Cauchy: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.4657931182154451
        }, 
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.4535163664096499
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.4483845773750978
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.44673483378207174
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclideanSq(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.44564898389900304
        }
    ], 
    "<Catalano.Statistics.Kernels.Hypersecant: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.5477834124909627
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.5154957362540724
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.49513038114307645
        }, 
        {
            "<boofcv.alg.distort.LensDistortionOps: void roundInside(georegression.struct.shapes.RectangleLength2D_F64)>": 0.49248025857140604
        }, 
        {
            "<net.imglib2.util.Util: double gLog(double,double)>": 0.4923820468573251
        }
    ], 
    "<Catalano.Statistics.Distributions.InverseGammaDistribution: void <init>(double,double)>": [
        {
            "<org.dyn4j.collision.AxisAlignedBounds: void <init>(double,double)>": 0.4214317666729863
        }, 
        {
            "<net.coobird.thumbnailator.makers.ScaledThumbnailMaker: net.coobird.thumbnailator.makers.ScaledThumbnailMaker scale(double,double)>": 0.40410355479295684
        }, 
        {
            "<org.dyn4j.geometry.Capsule: boolean validate(double,double)>": 0.3968425025186879
        }, 
        {
            "<net.coobird.thumbnailator.makers.ScaledThumbnailMaker: net.coobird.thumbnailator.makers.ScaledThumbnailMaker scale(double)>": 0.3783239702791132
        }, 
        {
            "<com.flowpowered.react.engine.Timer: void setTimeStep(double)>": 0.36793054082817567
        }
    ], 
    "<Catalano.Statistics.Histogram: double[] CDF(Catalano.Statistics.Histogram)>": [
        {
            "<boofcv.struct.FastQueueArray_F64: double[] createInstance()>": 0.24804332263701578
        }, 
        {
            "<boofcv.alg.feature.associate.AssociateGreedy: double[] getFitQuality()>": 0.24804332263701578
        }, 
        {
            "<boofcv.alg.geo.calibration.RadialDistortionEstimateLinear: double[] getParameters()>": 0.24804332263701578
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void <init>(int)>": 0.22955283641099203
        }, 
        {
            "<net.imglib2.AbstractRealInterval: void <init>(int)>": 0.2122734371788551
        }
    ], 
    "<Catalano.Statistics.Distributions.WeibullDistribution: double Variance()>": [
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.5690481601659367
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.5331892874339833
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(double,double,double)>": 0.531692725974648
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(org.dyn4j.geometry.Vector3)>": 0.52991188488412
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(org.dyn4j.geometry.Vector3)>": 0.5286285963900634
        }
    ], 
    "<Catalano.Statistics.Distributions.FisherDistribution: double ComplementaryDistributionFunction(double)>": [
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double computeSigmaScale(int,int)>": 0.5056404627046509
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double computeSigmaScale(int)>": 0.49489859403582664
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void computeScale()>": 0.4916771030162571
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomMonoPlaneInfinity: void fuseEstimates()>": 0.46590912749718716
        }, 
        {
            "<boofcv.gui.image.ImageZoomPanel: void setScale(double)>": 0.4546378035806803
        }
    ], 
    "<Catalano.Statistics.Distributions.ContinuousUniformDistribution: double ProbabilityDensityFunction(double)>": [
        {
            "<org.dyn4j.geometry.AABB: boolean contains(double,double)>": 0.42574074097932774
        }, 
        {
            "<org.dyn4j.geometry.Interval: boolean includesInclusive(double)>": 0.4110632398264823
        }, 
        {
            "<org.dyn4j.geometry.Interval: boolean includesInclusiveMin(double)>": 0.4110632398264823
        }, 
        {
            "<org.dyn4j.geometry.Interval: boolean includesExclusive(double)>": 0.4110632398264823
        }, 
        {
            "<org.dyn4j.geometry.Interval: boolean includesInclusiveMax(double)>": 0.4110632398264823
        }
    ], 
    "<Catalano.Statistics.Kernels.ThinPlateSpline: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.5505569592369167
        }, 
        {
            "<boofcv.alg.distort.LensDistortionOps: void roundInside(georegression.struct.shapes.RectangleLength2D_F64)>": 0.49586907598742913
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.48688565998422084
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: double[] calculatePosition(double,double,double)>": 0.4857761632725477
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.4848320655062563
        }
    ], 
    "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: void computeA(int,double[],double)>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void rftfsub(int,double[],int,int,double[],int)>": 0.3292747720129015
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxc020(double[],int)>": 0.32830620602556887
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxb020(double[],int)>": 0.32830620602556887
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void rdft2d_sub(int,double[])>": 0.3282481999948785
        }, 
        {
            "<net.imglib2.util.Binning: double[] centerValuesPerBin(int,double,double)>": 0.32646767270582006
        }
    ], 
    "<Catalano.Statistics.Distributions.ExponentialDistribution: void <init>(double)>": [
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 create(double,double)>": 0.4509852181161333
        }, 
        {
            "<org.dyn4j.geometry.Vector2: void <init>(double)>": 0.44384355001749654
        }, 
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder1: double compute(double,int)>": 0.441238970862898
        }, 
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 setDirection(double)>": 0.4123711245068635
        }, 
        {
            "<net.imglib2.util.Util: long round(double)>": 0.40606220253277914
        }
    ], 
    "<Catalano.Statistics.Kernels.Log: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.518312655005047
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.5049498243233278
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.48613740833848795
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.4775217363430645
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": 0.47532657039987564
        }
    ], 
    "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double LogProbabilityDensityFunction(double)>": [
        {
            "<org.dyn4j.geometry.Transform$1: void rotate(double,double,double)>": 0.5532452490960236
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void setTranslation(double,double)>": 0.5187571618313476
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void translate(double,double)>": 0.5187571618313476
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: double setRotation(double)>": 0.49998239108712483
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerTwoPassCombined: void setHint(double,double,boofcv.abst.feature.tracker.PointTrack)>": 0.4567286338431942
        }
    ], 
    "<Catalano.Statistics.Regression.RegressionAnalysis: void setMaxDegree(int)>": [
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int indexOfPreviousCounterClockwiseEdge(int)>": 0.5194369115453366
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$5: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.49111021626598605
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$6: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.48650199729857346
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$8: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.48650199729857346
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.EdgeEPA: int indexOfPreviousCounterClockwiseEdge(int)>": 0.4864912615124042
        }
    ], 
    "<Catalano.Statistics.Tools: double[][] Covariance(double[][],double[])>": [
        {
            "<boofcv.core.image.border.ImageBorder_IL_F64: void setGeneral(int,int,double[])>": 0.38069000590532687
        }, 
        {
            "<boofcv.core.image.border.ImageBorder_IL_S32: void setGeneral(int,int,double[])>": 0.3332538034509499
        }, 
        {
            "<boofcv.core.image.border.ImageBorder_IL_S64: void setGeneral(int,int,double[])>": 0.3323046653080173
        }, 
        {
            "<boofcv.core.image.border.ImageBorder_IL_F32: void setGeneral(int,int,double[])>": 0.3323046653080173
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void normalizeSumToOne(boofcv.struct.convolve.Kernel1D_F64)>": 0.32910050725222334
        }
    ], 
    "<Catalano.Statistics.Distributions.NormalDistribution: double Entropy()>": [
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.40134028826802076
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.3990144693935619
        }, 
        {
            "<net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolator: double computeWeight(double)>": 0.39729178645099494
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": 0.3956803316732666
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: double getDistance()>": 0.3956803316732666
        }
    ], 
    "<Catalano.Statistics.Distributions.NormalDistribution: double LogProbabilityDensityFunction(double)>": [
        {
            "<org.dyn4j.geometry.Vector3: double dot(double,double,double)>": 0.5533517612688008
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double cross(double,double)>": 0.5472424705017083
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double dot(double,double)>": 0.5472424705017083
        }, 
        {
            "<boofcv.alg.geo.NormalizedToPixelError: double errorSq(double,double,double,double)>": 0.53200412761908
        }, 
        {
            "<org.dyn4j.geometry.Vector3: boolean isOrthogonal(double,double,double)>": 0.5247132002837707
        }
    ], 
    "<Catalano.Statistics.Distributions.BernoulliDistribution: double Variance()>": [
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.47110707171154137
        }, 
        {
            "<org.dyn4j.dynamics.joint.MotorJoint: double getReactionTorque(double)>": 0.45689824646984484
        }, 
        {
            "<org.dyn4j.dynamics.joint.AngleJoint: double getReactionTorque(double)>": 0.45689824646984484
        }, 
        {
            "<org.dyn4j.dynamics.joint.PrismaticJoint: double getMotorForce(double)>": 0.45689824646984484
        }, 
        {
            "<org.dyn4j.dynamics.joint.WheelJoint: double getReactionTorque(double)>": 0.45689824646984484
        }
    ], 
    "<Catalano.Statistics.Regression.ExponentialRegression: java.lang.String toString()>": [
        {
            "<net.imglib2.util.LinAlgHelpers: java.lang.String toString(double[],java.lang.String)>": 0.44026670828512293
        }, 
        {
            "<boofcv.app.BaseFiducialSquare: void generateDocument(double,java.lang.String)>": 0.40579973079930876
        }, 
        {
            "<net.imglib2.KDTree: java.lang.String toString(net.imglib2.KDTreeNode,java.lang.String)>": 0.4027584189090944
        }, 
        {
            "<org.dyn4j.sandbox.persist.XmlGenerator: java.lang.String toXml()>": 0.4025540430134018
        }, 
        {
            "<boofcv.misc.CodeGeneratorBase: java.lang.String generatedString()>": 0.40167384668880823
        }
    ], 
    "<Catalano.Statistics.DescriptiveStatistics: double StandartDeviation(double[],double)>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.6646379209081776
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double distance(double[],double[])>": 0.6051639283944334
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": 0.5854908577056641
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: double getDistance()>": 0.5854908577056641
        }, 
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.5854908577056641
        }
    ], 
    "<Catalano.Statistics.Distributions.ExponentialDistribution: double LogProbabilityDensityFunction(double)>": [
        {
            "<org.dyn4j.geometry.Vector3: double dot(double,double,double)>": 0.5931423955949208
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double cross(double,double)>": 0.5873308221824219
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double dot(double,double)>": 0.5873308221824219
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(double,double,double)>": 0.5592240194709828
        }, 
        {
            "<boofcv.alg.geo.NormalizedToPixelError: double errorSq(double,double,double,double)>": 0.5592010384799224
        }
    ], 
    "<Catalano.Statistics.Distributions.RayleighDistribution: double Entropy()>": [
        {
            "<net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolator: double computeWeight(double)>": 0.4305038163400699
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.42900533916346517
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.40566169236829386
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.4016159440271928
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.3981560703226919
        }
    ], 
    "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: void matrixPower(double[][],int,double[][],int,int,double[][])>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void cdft2d_sub(int,double[][],boolean)>": 0.4216439494233646
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void copy(double[][],double[][])>": 0.3535397372553302
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void mixedRadixRealForwardFull(double[])>": 0.349440135934867
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void mixedRadixRealInverseFull(double[],boolean)>": 0.3490936843007571
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void scale(double[][],double,double[][])>": 0.34155747809550374
        }
    ], 
    "<Catalano.Statistics.DescriptiveStatistics: double Variance(double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.4937268592987467
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double distance(double[],double[])>": 0.4375250224293376
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": 0.4208586210378515
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: double getDistance()>": 0.4208586210378515
        }, 
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.4208586210378515
        }
    ], 
    "<Catalano.Statistics.Distributions.EmpiricalDistribution: double Entropy()>": [
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.44841365084816953
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.447987054603628
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.4448568949986194
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(double,double,double)>": 0.4427600571855531
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.4403338047545656
        }
    ], 
    "<Catalano.Statistics.Distributions.NormalDistribution: void <init>(double)>": [
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.529236370283348
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.5167334018523938
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.5159735660837721
        }, 
        {
            "<net.imglib2.type.numeric.ARGBDoubleType: void <init>(double,double,double,double)>": 0.5057649010508528
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.498804292539294
        }
    ], 
    "<Catalano.Statistics.Distributions.ParetoDistribution: double LogProbabilityDensityFunction(double)>": [
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5575757686560434
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.5501895396237373
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.5471331064830184
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.5351218557336762
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.5330962116491396
        }
    ], 
    "<Catalano.Statistics.DescriptiveStatistics: double Maximum(double[])>": [
        {
            "<net.imglib2.util.Util: double max(double[])>": 0.47996655275195
        }, 
        {
            "<net.imglib2.util.Util: double min(double[])>": 0.47996655275195
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: double maxAbs(double[],int)>": 0.4617381181790571
        }, 
        {
            "<net.imglib2.position.transform.Floor: void floor(double[],long[])>": 0.45852261978464537
        }, 
        {
            "<net.imglib2.position.transform.Round: void round(double[],long[])>": 0.45852261978464537
        }
    ], 
    "<Catalano.Statistics.Regression.LinearRegression: double CoefficientOfDetermination()>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double distance(double[],double[])>": 0.43821700818569503
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.40166554168600466
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double pixelScaleCurrentToInput()>": 0.35443362720016275
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.3319252139010485
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": 0.3266079856790234
        }
    ], 
    "<Catalano.Statistics.Tools: double[][] Correlation(double[][])>": [
        {
            "<boofcv.struct.pyramid.PyramidFloat: void setScaleFactors(double[])>": 0.24527166329878952
        }, 
        {
            "<boofcv.alg.scene.FeatureToWordHistogram_F64: void addFeature(boofcv.struct.feature.TupleDesc_F64)>": 0.24302898120870725
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: int cols(double[][])>": 0.24292172214223035
        }, 
        {
            "<net.imglib2.transform.integer.TranslationTransform: double[][] getMatrix()>": 0.24040713386754614
        }, 
        {
            "<net.imglib2.util.Util: double[] getArrayFromValue(double,int)>": 0.23713247707378576
        }
    ], 
    "<Catalano.Statistics.Kernels.Polynomial: void <init>(int,double)>": [
        {
            "<boofcv.struct.convolve.Kernel2D_F64: double getDouble(int,int)>": 0.4924502140722609
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: double getDouble(int,int)>": 0.4534710206966428
        }, 
        {
            "<org.dyn4j.collision.manifold.IndexedManifoldPointId: void <init>(int,int,int)>": 0.4480752043768302
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: double getDouble(int,int)>": 0.44804844102815056
        }, 
        {
            "<org.dyn4j.dynamics.Capacity: void <init>(int,int,int)>": 0.4457155065636658
        }
    ], 
    "<Catalano.Statistics.Distributions.LognormalDistribution: double DistributionFunction(double)>": [
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.6133171089369959
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.5870729234001459
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.5561467091568643
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.5531894868725107
        }, 
        {
            "<net.imglib2.type.numeric.ARGBDoubleType: void <init>(double,double,double,double)>": 0.5115979289794182
        }
    ], 
    "<Catalano.Statistics.Regression.PolynomialRegression: void setDegree(int)>": [
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int indexOfPreviousCounterClockwiseEdge(int)>": 0.5194369115453366
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$5: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.49111021626598605
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$6: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.48650199729857346
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$8: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.48650199729857346
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.EdgeEPA: int indexOfPreviousCounterClockwiseEdge(int)>": 0.4864912615124042
        }
    ], 
    "<Catalano.Statistics.Kernels.Tensor: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.struct.image.GrayF64: void _setData(java.lang.Object)>": 0.3432761224474082
        }, 
        {
            "<boofcv.struct.image.InterleavedF64: void _setData(java.lang.Object)>": 0.3432761224474082
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.3142568175849872
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: double maxAbs(double[],int)>": 0.3123969973367002
        }, 
        {
            "<net.imglib2.util.Util: double max(double[])>": 0.30326680463779415
        }
    ], 
    "<Catalano.Statistics.Normalizations: double[] RangeNormalization(double[],double,double,double,double)>": [
        {
            "<net.imglib2.util.Binning: double[] edgeValuesPerBin(int,double,double)>": 0.5170232753715701
        }, 
        {
            "<boofcv.alg.geo.pose.Relinearlize: void multiplyQuadratic2(double,double,double,double,double[])>": 0.5045230656931254
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: java.util.List randomPoints_F64(double,double,double,double,double,double,int,java.util.Random)>": 0.49230340493400077
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double det3x3(double[])>": 0.4879843661688576
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double det3x3(double,double,double,double,double,double,double,double,double)>": 0.4865123282507875
        }
    ], 
    "<Catalano.Statistics.HistogramStatistics: int Mode(int[])>": [
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int sumCoefficients(int[])>": 0.5830751942689086
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: int getReminder(int,int[])>": 0.4949041919796419
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F32_1D: int getReminder(int,int[])>": 0.4949041919796419
        }, 
        {
            "<net.imglib2.util.Intervals: long numElements(int[])>": 0.48373152454053225
        }, 
        {
            "<net.imglib2.util.IntervalIndexer: void createAllocationSteps(int[],int[])>": 0.47144327019371673
        }
    ], 
    "<Catalano.Statistics.Regression.PolynomialRegression: double[][] CreateMatrix(double[],int)>": [
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.3958164982965965
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.3955497433007904
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.39519707021777734
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.3898643826445471
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$7: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.3872088394363055
        }
    ], 
    "<Catalano.Statistics.Kernels.Tensor: double Function(double[],double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double distance(double[],double[])>": 0.3920183602653784
        }, 
        {
            "<net.imglib2.util.Util: double max(double[])>": 0.38074980525429486
        }, 
        {
            "<net.imglib2.util.Util: double min(double[])>": 0.38074980525429486
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.3721936337837487
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: double maxAbs(double[],int)>": 0.36988425744665465
        }
    ], 
    "<Catalano.Statistics.Distributions.LognormalDistribution: double LogProbabilityDensityFunction(double)>": [
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 setDirection(double)>": 0.5895554428034214
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5539983002985692
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: double[] calculatePosition(double,double,double)>": 0.5338659149130027
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.5316260229542278
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawArc(com.jogamp.opengl.GL2,double,double,double,double,double)>": 0.5306619234643558
        }
    ], 
    "<Catalano.Statistics.Distributions.InverseGammaDistribution: double Entropy()>": [
        {
            "<net.smert.jreactphysics3d.engine.ConstraintSolver: void setIsNonLinearGaussSeidelPositionCorrectionActive(boolean)>": 0.5692856913822774
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: double setRotation(double)>": 0.3346042823664512
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void rotate(double)>": 0.2563088123667462
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void setTranslationX(double)>": 0.2563088123667462
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void setTranslationY(double)>": 0.2563088123667462
        }
    ], 
    "<Catalano.Statistics.Distributions.ContinuousUniformDistribution: void <init>(double,double)>": [
        {
            "<org.dyn4j.geometry.Interval: void <init>(double,double)>": 0.4034646216716979
        }, 
        {
            "<org.dyn4j.geometry.Capsule: boolean validate(double,double)>": 0.3442097529244742
        }, 
        {
            "<org.dyn4j.geometry.Interval: void setMin(double)>": 0.34406816378311894
        }, 
        {
            "<org.dyn4j.geometry.Interval: void setMax(double)>": 0.34406816378311894
        }, 
        {
            "<org.dyn4j.dynamics.joint.AngleJoint: void setLimits(double,double)>": 0.34339655926863755
        }
    ], 
    "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double OneSideDistributionFunction(double)>": [
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.46267192582094685
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.4602217746292937
        }, 
        {
            "<boofcv.abst.feature.orientation.OrientationIntegralToImage: double compute(double,double)>": 0.4381472426700743
        }, 
        {
            "<boofcv.abst.feature.orientation.OrientationGradientToImage: double compute(double,double)>": 0.4381472426700743
        }, 
        {
            "<boofcv.abst.feature.describe.WrapDescribeBrief: boolean process(double,double,double,double,boofcv.struct.feature.TupleDesc)>": 0.431439490375254
        }
    ], 
    "<Catalano.Statistics.Distributions.BinomialDistribution: double Variance()>": [
        {
            "<boofcv.alg.sfm.d3.VisOdomMonoPlaneInfinity: void fuseEstimates()>": 0.4670446347523355
        }, 
        {
            "<boofcv.alg.shapes.polyline.RefinePolyLineCorner: double distance(georegression.struct.line.LineGeneral2D_F64,georegression.struct.point.Point2D_I32)>": 0.4533400794907758
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.4527120377036549
        }, 
        {
            "<boofcv.app.BaseFiducialSquare: void configureDocument(double,double,double,double)>": 0.45111970912389676
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double computeSigmaScale(int,int)>": 0.44659312445277427
        }
    ], 
    "<Catalano.Statistics.Distributions.FisherDistribution: double Entropy()>": [
        {
            "<org.dyn4j.geometry.Transform$1: double setRotation(double)>": 0.3346042823664512
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void rotate(double)>": 0.2563088123667462
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void setTranslationX(double)>": 0.2563088123667462
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void setTranslationY(double)>": 0.2563088123667462
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ConstraintSolver: void setIsNonLinearGaussSeidelPositionCorrectionActive(boolean)>": 0.24456053301456554
        }
    ], 
    "<Catalano.Statistics.ContinuousHistogram: Catalano.Core.FloatRange getRange(float)>": [
        {
            "<boofcv.misc.BoofMiscOps: boolean checkInBounds(boofcv.struct.image.ImageBase,int,int,int,int,float,float)>": 0.3857408517417815
        }, 
        {
            "<boofcv.alg.feature.detect.peak.MeanShiftPeak: void search(float,float)>": 0.3838190610165635
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchGray: void findPeak(float,float,float)>": 0.37786047864929884
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchGray: void process(boofcv.struct.image.ImageGray)>": 0.37143701599777623
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchColor: void findPeak(float,float,float[])>": 0.36425823072482455
        }
    ], 
    "<Catalano.Statistics.Distributions.FisherDistribution: double Mean()>": [
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double pixelScaleCurrentToInput()>": 0.3593746171722655
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double computeSigmaScale(int)>": 0.3216153368469548
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double computeSigmaScale(int,int)>": 0.3206523369766355
        }, 
        {
            "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: double getMaxValue()>": 0.3092531709668321
        }, 
        {
            "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: double getMaxValue()>": 0.3092531709668321
        }
    ], 
    "<Catalano.Statistics.HistogramStatistics: double Skewness(int[])>": [
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": 0.40914610366980186
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: double getDistance()>": 0.40914610366980186
        }, 
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.40914610366980186
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.40538177132768083
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.40102753444679723
        }
    ], 
    "<Catalano.Statistics.Distributions.LaplaceDistribution: double ProbabilityDensityFunction(double)>": [
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.5976348480020192
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.5945705731950326
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distanceSquared(double,double)>": 0.5893084933487456
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.5861425398564777
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(double,double,double)>": 0.5763417180863175
        }
    ], 
    "<Catalano.Statistics.Tools: double Min(double[])>": [
        {
            "<net.imglib2.position.transform.Floor: void floor(double[],long[])>": 0.4536587036940023
        }, 
        {
            "<net.imglib2.position.transform.Round: void round(double[],long[])>": 0.4536587036940023
        }, 
        {
            "<net.imglib2.util.Util: void min(double[],double[])>": 0.4420597732617861
        }, 
        {
            "<net.imglib2.util.Util: void max(double[],double[])>": 0.4420597732617861
        }, 
        {
            "<boofcv.factory.transform.pyramid.FactoryPyramid: boofcv.struct.pyramid.PyramidFloat scaleSpace(double[],java.lang.Class)>": 0.3652520913559697
        }
    ], 
    "<Catalano.Statistics.Kernels.Hellinger: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.5090481870159491
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double sad(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.506433734516109
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.48131506355146303
        }, 
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.47061059056008153
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.4555679847034679
        }
    ], 
    "<Catalano.Statistics.Distributions.BernoulliDistribution: double Entropy()>": [
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5238771818493893
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.5203464368602178
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.5174803168334866
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.5143906854201857
        }, 
        {
            "<boofcv.gui.d3.Orientation3D: void setVector(georegression.struct.point.Vector3D_F64)>": 0.5120716083110494
        }
    ], 
    "<Catalano.Statistics.Kernels.SquaredSinc: double Function(double[],double[])>": [
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.5715283378521547
        }, 
        {
            "<boofcv.alg.distort.LensDistortionOps: void roundInside(georegression.struct.shapes.RectangleLength2D_F64)>": 0.5084328293275546
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.503849340498137
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.5027788141011924
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: double[] calculatePosition(double,double,double)>": 0.5026956971392293
        }
    ], 
    "<Catalano.Statistics.Regression.PowerRegression: double CoefficientOfDetermination()>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double distance(double[],double[])>": 0.42765799447849173
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.41858422378598303
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.39778410816782367
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void normalizeF(boofcv.struct.convolve.Kernel2D_F64)>": 0.39692206518072454
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F64: void <init>(double[],double,double)>": 0.38633949698016923
        }
    ], 
    "<Catalano.Statistics.Distributions.GammaDistribution: double Mean()>": [
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.47110707171154137
        }, 
        {
            "<org.dyn4j.dynamics.joint.MotorJoint: double getReactionTorque(double)>": 0.45689824646984484
        }, 
        {
            "<org.dyn4j.dynamics.joint.AngleJoint: double getReactionTorque(double)>": 0.45689824646984484
        }, 
        {
            "<org.dyn4j.dynamics.joint.PrismaticJoint: double getMotorForce(double)>": 0.45689824646984484
        }, 
        {
            "<org.dyn4j.dynamics.joint.WheelJoint: double getReactionTorque(double)>": 0.45689824646984484
        }
    ], 
    "<Catalano.Statistics.Distributions.ChiSquareDistribution: double ProbabilityDensityFunction(double)>": [
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.506877800303786
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.49500174369596095
        }, 
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 setDirection(double)>": 0.49384155241533756
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.4927402181879897
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.4924995756610051
        }
    ], 
    "<Catalano.Statistics.Tools: double ContraHarmonicMean(double[],int)>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double det3x3(double[])>": 0.47963498422991513
        }, 
        {
            "<boofcv.alg.interpolate.array.LagrangeFormula: double process_F64(double,double[],double[],int,int)>": 0.4442615279148068
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void invert3x3(double[])>": 0.4439584572705725
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.44256829926664043
        }, 
        {
            "<boofcv.alg.geo.pose.UtilLepetitEPnP: void jacobian_Control4(org.ejml.data.DenseMatrix64F,double[],org.ejml.data.DenseMatrix64F)>": 0.439377159686668
        }
    ], 
    "<Catalano.Statistics.Histogram: int[] MatchHistograms(Catalano.Statistics.Histogram,Catalano.Statistics.Histogram)>": [
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_U8: void <init>(int)>": 0.2952781455198777
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_S32: void <init>(int)>": 0.2952781455198777
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_S16: void <init>(int)>": 0.2952781455198777
        }, 
        {
            "<boofcv.alg.feature.describe.DescribePointBinaryCompare: void <init>(boofcv.alg.feature.describe.brief.BinaryCompareDefinition_I32)>": 0.2901421261661038
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void expandBuffers(int,int)>": 0.28832023165712434
        }
    ], 
    "<Catalano.Statistics.Kernels.InverseMultiquadric: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.5017651720850985
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.4716994805179593
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.4716043201807342
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double sad(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.46314665842884467
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeAngle(int)>": 0.4575198032190138
        }
    ], 
    "<Catalano.Statistics.Regression.PowerRegression: double[] Regression(double[])>": [
        {
            "<boofcv.core.image.border.ImageBorder_IL_F64: void setGeneral(int,int,double[])>": 0.43876809746093154
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void normalizeF(boofcv.struct.convolve.Kernel2D_F64)>": 0.42460356703354446
        }, 
        {
            "<net.imglib2.util.Util: double[] getArrayFromValue(double,int)>": 0.41929576832066057
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.3941914679621438
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F32: boofcv.alg.distort.radtan.RadialTangential_F32 set(double[],double,double)>": 0.39216568594789136
        }
    ], 
    "<Catalano.Statistics.Distributions.NormalDistribution: void init(double,double,double)>": [
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.4970424069073881
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillCircleFromTopLeft(com.jogamp.opengl.GL2,double,double,double,double)>": 0.48353074235483096
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.476842777396456
        }, 
        {
            "<org.dyn4j.geometry.Vector3: void <init>(double,double,double,double,double,double)>": 0.47560319744127255
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.4707458883078411
        }
    ], 
    "<Catalano.Statistics.Distributions.ParetoDistribution: double Median()>": [
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.5171989687378244
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.4902426548473274
        }, 
        {
            "<org.dyn4j.dynamics.joint.MotorJoint: double getReactionTorque(double)>": 0.45010769940249695
        }, 
        {
            "<org.dyn4j.dynamics.joint.AngleJoint: double getReactionTorque(double)>": 0.45010769940249695
        }, 
        {
            "<org.dyn4j.dynamics.joint.PrismaticJoint: double getMotorForce(double)>": 0.45010769940249695
        }
    ], 
    "<Catalano.Statistics.Histogram: void <init>(int[],int)>": [
        {
            "<net.imglib2.util.IntervalIndexer: int indexToPosition(int,int[],int[],int)>": 0.3879234804648561
        }, 
        {
            "<net.imglib2.img.planar.PlanarRandomAccess: void setPosition(int[])>": 0.38767381821692876
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: int getMaxBalance()>": 0.38191682495676177
        }, 
        {
            "<net.imglib2.img.planar.PlanarImg: int indexToGlobalPosition(int,int,int)>": 0.37463216818605816
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(int[],int,int,double,int[],int,int,int,int)>": 0.370003521875443
        }
    ], 
    "<Catalano.Statistics.Distributions.ChiSquareDistribution: double ComplementaryDistributionFunction(double)>": [
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.4800229772916069
        }, 
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder3: double compute(double,int)>": 0.4716999289219614
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.4527120377036549
        }, 
        {
            "<boofcv.alg.geo.PerspectiveOps: boofcv.struct.calib.IntrinsicParameters createIntrinsic(int,int,double,double)>": 0.45057324706711166
        }, 
        {
            "<org.dyn4j.geometry.HullGeneratorTest: void setup()>": 0.45026132203240504
        }
    ], 
    "<Catalano.Statistics.Kernels.TStudent: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.537809626520793
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.4895773896515066
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double sad(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.459270483843578
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.4584928927543011
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.45511334572308165
        }
    ], 
    "<Catalano.Statistics.Kernels.Bessel: void <init>(int,double)>": [
        {
            "<boofcv.abst.feature.orientation.ConfigSlidingIntegral: void <init>(double,double,int,double,int)>": 0.42920227581353015
        }, 
        {
            "<boofcv.factory.feature.detect.line.ConfigHoughPolar: void <init>(int,int,double,double,float,int)>": 0.42154493447221564
        }, 
        {
            "<boofcv.abst.feature.orientation.ConfigAverageIntegral: void <init>(int,double,int,double)>": 0.41790577726146927
        }, 
        {
            "<boofcv.struct.feature.Match: void <init>(int,int,double)>": 0.405130231073045
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void <init>(double,int)>": 0.40476190476190477
        }
    ], 
    "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double computeH(int,double[],double[][])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: void quaternionFromR(double[][],double[])>": 0.49256259761604093
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void axisFromR(double[][],double[])>": 0.436750561942907
        }, 
        {
            "<boofcv.alg.geo.pose.UtilLepetitEPnP: void jacobian_Control3(org.ejml.data.DenseMatrix64F,double[],org.ejml.data.DenseMatrix64F)>": 0.43486166280084865
        }, 
        {
            "<boofcv.alg.geo.pose.UtilLepetitEPnP: void jacobian_Control4(org.ejml.data.DenseMatrix64F,double[],org.ejml.data.DenseMatrix64F)>": 0.42917795359475747
        }, 
        {
            "<net.imglib2.util.Binning: double[] centerValuesPerBin(int,double,double)>": 0.4262304324151679
        }
    ], 
    "<Catalano.Statistics.Distributions.LognormalDistribution: void <init>()>": [
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.45497209862674937
        }, 
        {
            "<boofcv.alg.distort.LensDistortionOps: void roundInside(georegression.struct.shapes.RectangleLength2D_F64)>": 0.45427789434660715
        }, 
        {
            "<net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolator: double computeWeight(double)>": 0.45256804350525703
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(org.dyn4j.geometry.Vector2)>": 0.45028380345097174
        }, 
        {
            "<boofcv.gui.d3.Orientation3D: void setVector(georegression.struct.point.Vector3D_F64)>": 0.4485735059455871
        }
    ], 
    "<Catalano.Statistics.Distributions.EmpiricalDistribution: double ProbabilityDensityFunction(double)>": [
        {
            "<boofcv.alg.geo.NormalizedToPixelError: double errorSq(double,double,double,double)>": 0.47836381224257346
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(double,double,double)>": 0.47824668075492505
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double dot(double,double,double)>": 0.47640837996081653
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distanceSquared(double,double)>": 0.47529827128760643
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.474873425200461
        }
    ], 
    "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double Mean()>": [
        {
            "<boofcv.alg.denoise.wavelet.UtilDenoiseWavelet: double universalThreshold(boofcv.struct.image.ImageGray,double)>": 0.40679518794067604
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.38995808999883264
        }, 
        {
            "<boofcv.alg.geo.PerspectiveOps: boofcv.struct.calib.IntrinsicParameters createIntrinsic(int,int,double,double)>": 0.36990293800819285
        }, 
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder3: double compute(double,int)>": 0.3667440459525144
        }, 
        {
            "<boofcv.app.BaseFiducialSquare: void centerPage()>": 0.36488178858475884
        }
    ], 
    "<Catalano.Statistics.Distributions.GammaDistribution: double Variance()>": [
        {
            "<boofcv.struct.learning.PrecisionRecall: double getPrecision()>": 0.5281565656565657
        }, 
        {
            "<boofcv.struct.learning.PrecisionRecall: double getRecall()>": 0.5281565656565657
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.502841225284556
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.5024685850987651
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.5016949420331884
        }
    ], 
    "<Catalano.Statistics.Regression.PowerRegression: java.lang.String toString()>": [
        {
            "<net.imglib2.util.LinAlgHelpers: java.lang.String toString(double[],java.lang.String)>": 0.45338962282591505
        }, 
        {
            "<boofcv.misc.AutoTypeImage: java.lang.String getInterleavedName()>": 0.4264326397068527
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendPrefix(java.lang.String,java.lang.String)>": 0.4185695757207809
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.41445507806280274
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: java.lang.String toString(double[][],java.lang.String)>": 0.39706473541595116
        }
    ], 
    "<Catalano.Statistics.Tools: double Max(double[])>": [
        {
            "<net.imglib2.position.transform.Floor: void floor(double[],long[])>": 0.4536587036940023
        }, 
        {
            "<net.imglib2.position.transform.Round: void round(double[],long[])>": 0.4536587036940023
        }, 
        {
            "<net.imglib2.util.Util: void min(double[],double[])>": 0.4420597732617861
        }, 
        {
            "<net.imglib2.util.Util: void max(double[],double[])>": 0.4420597732617861
        }, 
        {
            "<boofcv.factory.transform.pyramid.FactoryPyramid: boofcv.struct.pyramid.PyramidFloat scaleSpace(double[],java.lang.Class)>": 0.3652520913559697
        }
    ], 
    "<Catalano.Statistics.Analysis.PrincipalComponentAnalysis: double[][] Center(double[][],double[])>": [
        {
            "<net.imglib2.RealPoint: void move(double[])>": 0.384786720409529
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void outer(double[],double[],double[][])>": 0.38392161609902864
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void scale(double[][],double,double[][])>": 0.33515504405241464
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxc020(double[],int)>": 0.3313391794179188
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxb020(double[],int)>": 0.3313391794179188
        }
    ], 
    "<Catalano.Statistics.Tools: double Sum(double[])>": [
        {
            "<net.imglib2.util.RealSum: double getSum()>": 0.6665349328503678
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: double sum(boofcv.struct.convolve.Kernel2D_F64)>": 0.6572449454897151
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: double computeSum()>": 0.6498732332949634
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: double computeSum()>": 0.6002244784996532
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.5694214130754962
        }
    ], 
    "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double OneSideUpperTail(int,double)>": [
        {
            "<boofcv.alg.sfm.d3.VisOdomMonoPlaneInfinity: void fuseEstimates()>": 0.5034616563701189
        }, 
        {
            "<boofcv.alg.filter.binary.GThresholdImageOps: int computeEntropy(int[],int,int)>": 0.5022258108639539
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.4985352291367061
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.48817244035588925
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.4866853487657469
        }
    ], 
    "<Catalano.Statistics.Distributions.WeibullDistribution: double ProbabilityDensityFunction(double)>": [
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.5287312068426598
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.513372864952271
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5124689295745701
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.512080408991896
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.5117368956277321
        }
    ], 
    "<Catalano.Statistics.Distributions.CauchyDistribution: double LogProbabilityDensityFunction(double)>": [
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.553762619894514
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double dot(double,double,double)>": 0.5534840747155733
        }, 
        {
            "<boofcv.alg.geo.NormalizedToPixelError: double errorSq(double,double,double,double)>": 0.5505513349535953
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double cross(double,double)>": 0.5481767968459941
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double dot(double,double)>": 0.5481767968459941
        }
    ], 
    "<Catalano.Statistics.Kernels.BSpline: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void complexInverse(double[],boolean)>": 0.38781077806173436
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverse(double[],boolean)>": 0.3836399045341057
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeAngle(int)>": 0.38204703916483657
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal11(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.3803000279707862
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal9(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.379614843729346
        }
    ], 
    "<Catalano.Statistics.Kernels.Hellinger: double Function(double[],double[])>": [
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double sad(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.6363742208168763
        }, 
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.5898020358167438
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.5842607517846334
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.57663220900467
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.5712942342948905
        }
    ], 
    "<Catalano.Statistics.Distributions.DiscreteUniformDistribution: double Variance()>": [
        {
            "<boofcv.alg.filter.misc.ImplAverageDownSampleN: void down(boofcv.struct.image.GrayF64,int,boofcv.struct.image.GrayF64)>": 0.42627067846208205
        }, 
        {
            "<boofcv.alg.feature.detect.line.HoughTransformLinePolar: void transform(boofcv.struct.image.GrayU8)>": 0.42429357177875204
        }, 
        {
            "<boofcv.alg.filter.misc.ImplAverageDownSample2: void down(boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.41845411055985793
        }, 
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.4167650277342917
        }, 
        {
            "<net.imglib2.type.numeric.ARGBType: void div(net.imglib2.type.numeric.ARGBType)>": 0.41540294540910055
        }
    ], 
    "<Catalano.Statistics.DescriptiveStatistics: double Median(double[])>": [
        {
            "<boofcv.factory.transform.pyramid.FactoryPyramid: boofcv.struct.pyramid.PyramidFloat scaleSpace(double[],java.lang.Class)>": 0.3864708620181988
        }, 
        {
            "<boofcv.factory.transform.pyramid.FactoryPyramid: boofcv.struct.pyramid.PyramidFloat scaleSpacePyramid(double[],java.lang.Class)>": 0.3473561436842459
        }, 
        {
            "<net.imglib2.interpolation.randomaccess.LanczosInterpolator: double[] createLanczosLUT(int,int)>": 0.34163965952011105
        }, 
        {
            "<net.imglib2.util.Util: double[] createGaussianKernel1DDouble(double,boolean)>": 0.3299989630610392
        }, 
        {
            "<net.imglib2.FinalRealInterval: net.imglib2.FinalRealInterval createMinSize(double[])>": 0.3279957171757075
        }
    ], 
    "<Catalano.Statistics.Histogram: double[] Normalize(int[])>": [
        {
            "<boofcv.misc.BoofMiscOps: double[] convertTo_F64(int[])>": 0.6209197226210146
        }, 
        {
            "<boofcv.misc.BoofMiscOps: float[] convertArray(int[],float[])>": 0.49470477655678635
        }, 
        {
            "<boofcv.alg.enhance.EnhanceImageOps: void equalize(int[],int[])>": 0.39054982369656466
        }, 
        {
            "<net.imglib2.transform.integer.permutation.AbstractPermutationTransform: boolean checkBijectivity(int[])>": 0.3831916530167152
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: double computeEnergy(int[],int)>": 0.3766741288095361
        }
    ], 
    "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double PelzGood(int,double)>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.5242935411802507
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.5240675797709184
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.5192064683518564
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Vector3 solve33(org.dyn4j.geometry.Vector3)>": 0.4947295371717431
        }, 
        {
            "<boofcv.alg.geo.pose.P3PGrunert: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.49449841500038666
        }
    ], 
    "<Catalano.Statistics.Distributions.NakagamiDistribution: void <init>(double,double)>": [
        {
            "<org.dyn4j.geometry.Geometry: org.dyn4j.geometry.Polygon createPolygonalCircle(int,double,double)>": 0.4131924208136877
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.40855037110073406
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.40754985648985087
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.4065886114973867
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.40626501772469065
        }
    ], 
    "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double DistributionFunction(double)>": [
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.46267192582094685
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.4602217746292937
        }, 
        {
            "<boofcv.abst.feature.orientation.OrientationIntegralToImage: double compute(double,double)>": 0.4381472426700743
        }, 
        {
            "<boofcv.abst.feature.orientation.OrientationGradientToImage: double compute(double,double)>": 0.4381472426700743
        }, 
        {
            "<boofcv.abst.feature.describe.WrapDescribeBrief: boolean process(double,double,double,double,boofcv.struct.feature.TupleDesc)>": 0.431439490375254
        }
    ], 
    "<Catalano.Statistics.Tools: double CoefficientOfVariation(double[])>": [
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5153167957068758
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.5106603304991776
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.49302890021997225
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.48560083082889555
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: double[] calculatePosition(double,double,double)>": 0.4797789819371545
        }
    ], 
    "<Catalano.Statistics.Regression.ExponentialRegression: void <init>(double[],double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double distance(double[],double[])>": 0.43983674598266936
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.4022830956211591
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F64: void <init>(double[],double,double)>": 0.3703667224403321
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.34490212102796153
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F64: void set(double[],double,double)>": 0.33919309569933936
        }
    ], 
    "<Catalano.Statistics.Kernels.Gaussian: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.5037983723455812
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.4976330006606491
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double sad(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.47525642849910654
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.4643049525398528
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.4605576717317317
        }
    ], 
    "<Catalano.Statistics.Distributions.ChiSquareDistribution: double Variance()>": [
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double pixelScaleCurrentToInput()>": 0.44081819366028546
        }, 
        {
            "<boofcv.alg.transform.pyramid.PyramidDiscreteAverage: double getSampleOffset(int)>": 0.4205768938262838
        }, 
        {
            "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: double getMaxValue()>": 0.3961014009607822
        }, 
        {
            "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: double getMaxValue()>": 0.3961014009607822
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double computeSigmaScale(int,int)>": 0.3711147595355586
        }
    ], 
    "<Catalano.Statistics.Distributions.BinomialDistribution: void <init>(int,double)>": [
        {
            "<boofcv.alg.fiducial.square.DetectFiducialSquareBinary: void setAmbiguityThreshold(double)>": 0.46347272695143366
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFit: void setMinimumSideLengthFraction(double)>": 0.46347272695143366
        }, 
        {
            "<net.coobird.thumbnailator.geometry.RelativeSize: void <init>(double)>": 0.4623545722480262
        }, 
        {
            "<org.dyn4j.dynamics.joint.DistanceJoint: void setDampingRatio(double)>": 0.42992469301129244
        }, 
        {
            "<org.dyn4j.dynamics.joint.WeldJoint: void setDampingRatio(double)>": 0.42992469301129244
        }
    ], 
    "<Catalano.Statistics.Distributions.ExponentialDistribution: double Mean()>": [
        {
            "<net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolator: double computeWeight(double)>": 0.5181900333640436
        }, 
        {
            "<net.imglib2.type.numeric.integer.Unsigned128BitType: double getMaxValue()>": 0.5087551332017118
        }, 
        {
            "<net.imglib2.type.numeric.integer.UnsignedLongType: double getMaxValue()>": 0.5087551332017118
        }, 
        {
            "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: double getMaxValue()>": 0.4329220383349367
        }, 
        {
            "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: double getMaxValue()>": 0.4329220383349367
        }
    ], 
    "<Catalano.Statistics.Regression.PolynomialRegression: double CoefficientOfDetermination()>": [
        {
            "<net.imglib2.util.LinAlgHelpers: void quaternionFromR(double[][],double[])>": 0.4644322929062346
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void axisFromR(double[][],double[])>": 0.4332034974749021
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double angleFromR(double[][])>": 0.39463747585492215
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.3920112809345915
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.38040885134098273
        }
    ], 
    "<Catalano.Statistics.Regression.RegressionAnalysis: void <init>(boolean)>": [
        {
            "<boofcv.abst.feature.detect.extract.ConfigExtract: void <init>(int,float,int,boolean,boolean,boolean)>": 0.30410759462292136
        }, 
        {
            "<boofcv.struct.convolve.KernelBase: int getRadius()>": 0.28898776955618155
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: int getBorderX()>": 0.28898776955618155
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: int getBorderY()>": 0.28898776955618155
        }, 
        {
            "<boofcv.alg.geo.bundle.CalibPoseAndPointRodriguesJacobian: int getNumOfOutputsM()>": 0.28898776955618155
        }
    ], 
    "<Catalano.Statistics.Kernels.Log: double Function(double[],double[])>": [
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.5579275975338803
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.5240679093674948
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.5077082617812104
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.4973346248221532
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.49575966566066576
        }
    ], 
    "<Catalano.Statistics.Distributions.WeibullDistribution: double LogProbabilityDensityFunction(double)>": [
        {
            "<boofcv.alg.distort.LensDistortionOps: void roundInside(georegression.struct.shapes.RectangleLength2D_F64)>": 0.5335265775476042
        }, 
        {
            "<net.imglib2.util.Util: double gLog(double,double)>": 0.5244123799988745
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.5189674030105675
        }, 
        {
            "<net.imglib2.interpolation.randomaccess.LanczosInterpolator: double lanczos(double,double)>": 0.5156547007282563
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.5139474464268795
        }
    ], 
    "<Catalano.Statistics.Kernels.RationalQuadratic: double Function(double[],double[])>": [
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.5510323006225865
        }, 
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.5194709856354466
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.5082817145880292
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.5049276067171379
        }, 
        {
            "<boofcv.alg.interpolate.array.LagrangeFormula: double process_F64(double,double[],double[],int,int)>": 0.5041043904490379
        }
    ], 
    "<Catalano.Statistics.Distributions.NakagamiDistribution: double ProbabilityDensityFunction(double)>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.5056998447487087
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.5043300498664274
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.5038345962009224
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(double,double,double)>": 0.5036995442676933
        }, 
        {
            "<boofcv.struct.learning.PrecisionRecall: double getPrecision()>": 0.4991565553815258
        }
    ], 
    "<Catalano.Statistics.Distributions.FisherDistribution: double ProbabilityDensityFunction(double)>": [
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double computeSigmaScale(int,int)>": 0.5335998864748015
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double computeSigmaScale(int)>": 0.5239293534660181
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomMonoPlaneInfinity: void fuseEstimates()>": 0.5100477026864196
        }, 
        {
            "<boofcv.gui.image.ImageZoomPanel: void setScale(double)>": 0.5053440338265296
        }, 
        {
            "<boofcv.alg.geo.rectify.RectifyFundamental: org.ejml.simple.SimpleMatrix computeG(georegression.struct.point.Point3D_F64,int,int)>": 0.5052501227076358
        }
    ], 
    "<Catalano.Statistics.Distributions.TStudentDistribution: double DistributionFunction(double)>": [
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 rotate(double,double,double)>": 0.46668709888244153
        }, 
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 rotate(double)>": 0.45370594812189036
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double det3x3(double,double,double,double,double,double,double,double,double)>": 0.4488499847795566
        }, 
        {
            "<boofcv.alg.distort.radtan.RemoveRadialPtoN_F64: void compute(double,double,georegression.struct.point.Point2D_F64)>": 0.44728613347657364
        }, 
        {
            "<boofcv.abst.tracker.Sfot_to_TrackObjectQuad: void setPoint(georegression.struct.point.Point2D_F64,double,double,double,double)>": 0.44354431265268474
        }
    ], 
    "<Catalano.Statistics.Regression.LogarithmicRegression: double[] Regression(double[])>": [
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.45823907549174625
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F64: void <init>(double[],double,double)>": 0.4371408150992538
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.432213465965154
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: double[] calculatePosition(double,double,double)>": 0.42412715011834873
        }, 
        {
            "<boofcv.core.image.border.ImageBorder_IL_F64: void setGeneral(int,int,double[])>": 0.4182990709741601
        }
    ], 
    "<Catalano.Statistics.Distributions.ParetoDistribution: double Entropy()>": [
        {
            "<boofcv.alg.distort.LensDistortionOps: void roundInside(georegression.struct.shapes.RectangleLength2D_F64)>": 0.5289261887571238
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.5070545672470791
        }, 
        {
            "<net.imglib2.util.Util: double gLog(double,double)>": 0.49877670679515423
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.497328491804852
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(org.dyn4j.geometry.Vector2)>": 0.4913944219299671
        }
    ], 
    "<Catalano.Statistics.Distributions.ParetoDistribution: double Variance()>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.5139102276830746
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.5135135817383956
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.5130399071463754
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.5110737327565528
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Vector3 solve33(org.dyn4j.geometry.Vector3)>": 0.5051437481488072
        }
    ], 
    "<Catalano.Statistics.Distributions.ParetoDistribution: double Mean()>": [
        {
            "<boofcv.alg.geo.pose.P3PGrunert: double computeCosine(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64)>": 0.49901897179579946
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.49140819560548155
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.4910512123578373
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.490278441225689
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Matrix33 product(org.dyn4j.geometry.Matrix33)>": 0.474995377191077
        }
    ], 
    "<Catalano.Statistics.Kernels.ChiSquare: double Function(double[],double[])>": [
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.6004226497240581
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void cross(double[],double[],double[])>": 0.5882959737984085
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.5596036809463856
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double det3x3(double[])>": 0.5533323074552281
        }, 
        {
            "<boofcv.alg.interpolate.array.LagrangeFormula: double process_F64(double,double[],double[],int,int)>": 0.5483623413573198
        }
    ], 
    "<Catalano.Statistics.Distributions.InverseGammaDistribution: double DistributionFunction(double)>": [
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.5095935365174991
        }, 
        {
            "<boofcv.alg.distort.LensDistortionOps: void roundInside(georegression.struct.shapes.RectangleLength2D_F64)>": 0.5086577642768223
        }, 
        {
            "<net.imglib2.util.Util: double gLog(double,double)>": 0.5075434959673071
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Matrix33 multiply(org.dyn4j.geometry.Matrix33)>": 0.5064178871497669
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: void computeU(double,double)>": 0.5016108621963605
        }
    ], 
    "<Catalano.Statistics.Distributions.BinomialDistribution: double Entropy()>": [
        {
            "<org.dyn4j.geometry.Transform$1: double setRotation(double)>": 0.3346042823664512
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void rotate(double)>": 0.2563088123667462
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void setTranslationX(double)>": 0.2563088123667462
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void setTranslationY(double)>": 0.2563088123667462
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ConstraintSolver: void setIsNonLinearGaussSeidelPositionCorrectionActive(boolean)>": 0.24456053301456554
        }
    ], 
    "<Catalano.Statistics.Kernels.Anova: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverse(double[],boolean)>": 0.3879923734661604
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void cdft2d_sub(int,double[][],boolean)>": 0.3721857669640307
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void rftfsub(int,double[],int,int,double[],int)>": 0.36706059220052306
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal5(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.36676413844874667
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverseFull(double[],boolean)>": 0.36664506729177326
        }
    ], 
    "<Catalano.Statistics.Kernels.Bessel: double Function(double[],double[])>": [
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.5331447907550089
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.5254174836714568
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.518806931776763
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeAngle(int)>": 0.4992365042270776
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.49779782780172
        }
    ], 
    "<Catalano.Statistics.HistogramStatistics: double Mean(int[])>": [
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: double computeEnergy(int[],int)>": 0.44684574432877083
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int sumCoefficients(int[])>": 0.3766877260982479
        }, 
        {
            "<net.imglib2.util.Intervals: long numElements(int[])>": 0.37649946628351116
        }, 
        {
            "<net.imglib2.util.Util: long[] int2long(int[])>": 0.3411026100462529
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: int getReminder(int,int[])>": 0.3265830289668147
        }
    ], 
    "<Catalano.Statistics.Distributions.RayleighDistribution: double ProbabilityDensityFunction(double)>": [
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.5387047736153135
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: void computeU(double,double)>": 0.5253888746159175
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.5213720236242568
        }, 
        {
            "<net.imglib2.util.Util: double gLog(double,double)>": 0.5204660852600687
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.5199200417740597
        }
    ], 
    "<Catalano.Statistics.Tools: double HarmonicMean(double[])>": [
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.5618012956346039
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.49556225146760907
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.4552969786548757
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: double sumCoefficients(float[])>": 0.4431547429334202
        }, 
        {
            "<net.imglib2.util.RealSum: double getSum()>": 0.4431102409282324
        }
    ], 
    "<Catalano.Statistics.Distributions.CauchyDistribution: void <init>(double,double)>": [
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.4517367067963407
        }, 
        {
            "<net.imglib2.type.numeric.ARGBDoubleType: void <init>(double,double,double,double)>": 0.44502998849560904
        }, 
        {
            "<net.imglib2.util.Util: double gLog(double,double)>": 0.43969767720601294
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.4392917254885945
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.43702708631847176
        }
    ], 
    "<Catalano.Statistics.DescriptiveStatistics: double Kurtosis(double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.4935211386196126
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.42803285555915727
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": 0.42568203191825144
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: double getDistance()>": 0.42568203191825144
        }, 
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.42568203191825144
        }
    ], 
    "<Catalano.Statistics.ContinuousHistogram: void <init>(int[],Catalano.Core.FloatRange)>": [
        {
            "<boofcv.alg.feature.describe.DescribeSiftCommon: void trilinearInterpolation(float,float,float,double,boofcv.struct.feature.TupleDesc_F64)>": 0.3773326541990098
        }, 
        {
            "<boofcv.alg.filter.binary.GThresholdImageOps: int computeOtsu(int[],int,int)>": 0.36018721743243676
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void get(float,float,float[])>": 0.359562136378443
        }, 
        {
            "<org.jbox2d.tests.math.SinCosTest: double accuracyTest(org.jbox2d.tests.math.SinCosTable,int)>": 0.35371081999166126
        }, 
        {
            "<boofcv.alg.feature.describe.DescribePointSift: void computeRawDescriptor(double,double,double,double)>": 0.34561258026664016
        }
    ], 
    "<Catalano.Statistics.Correlations: double VectorInnerProduct(double[],double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.7711973882014463
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.653529744895312
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double correlation(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.6128399943353484
        }, 
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.6114029122798741
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double dot(double[],double[])>": 0.5772857551886176
        }
    ], 
    "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double ProbabilityDensityFunction(double)>": [
        {
            "<org.dyn4j.geometry.Transform$1: void rotate(double,double,double)>": 0.5532452490960236
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void setTranslation(double,double)>": 0.5187571618313476
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void translate(double,double)>": 0.5187571618313476
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: double setRotation(double)>": 0.49998239108712483
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerTwoPassCombined: void setHint(double,double,boofcv.abst.feature.tracker.PointTrack)>": 0.4567286338431942
        }
    ], 
    "<Catalano.Statistics.Kernels.Circular: void <init>(double)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillCircleFromTopLeft(com.jogamp.opengl.GL2,double,double,double,double)>": 0.3951189065546524
        }, 
        {
            "<org.dyn4j.geometry.Vector3: void <init>(double,double,double,double,double,double)>": 0.3937394615576652
        }, 
        {
            "<org.dyn4j.geometry.Vector2: void <init>(double,double,double,double)>": 0.3922838827936943
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.3832219550169807
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.3825725111565201
        }
    ], 
    "<Catalano.Statistics.Tools: double Variance(double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.4937268592987467
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double distance(double[],double[])>": 0.4375250224293376
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": 0.4208586210378515
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: double getDistance()>": 0.4208586210378515
        }, 
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.4208586210378515
        }
    ], 
    "<Catalano.Statistics.Kernels.Anova: double kernel(double[],int,double[],int,int)>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void rftbsub(int,double[],int,int,double[],int)>": 0.48625062205971115
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void rftfsub(int,double[],int,int,double[],int)>": 0.4824645170254432
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(double[],int,int,double[],int,int,int,int)>": 0.4597279506805971
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(double[],int,int,double[],int,int,int,int)>": 0.4595778473508855
        }, 
        {
            "<boofcv.alg.interpolate.array.LagrangeFormula: double process_F64(double,double[],double[],int,int)>": 0.44902777287100376
        }
    ], 
    "<Catalano.Statistics.Distributions.BernoulliDistribution: double DistributionFunction(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: double getOutside(int,int)>": 0.5105046188928672
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.48258301834294515
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4632797363717214
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.4565346784094786
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.4424773340431956
        }
    ], 
    "<Catalano.Statistics.Distributions.InverseGammaDistribution: double Variance()>": [
        {
            "<boofcv.struct.learning.PrecisionRecall: double getPrecision()>": 0.5233717902022716
        }, 
        {
            "<boofcv.struct.learning.PrecisionRecall: double getRecall()>": 0.5233717902022716
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.5202486138813884
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.519767289880831
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.5191911702807961
        }
    ], 
    "<Catalano.Statistics.Regression.RegressionAnalysis: void <init>(int)>": [
        {
            "<org.dyn4j.collision.manifold.IndexedManifoldPointId: void <init>(int,int,int)>": 0.4499613226877018
        }, 
        {
            "<org.dyn4j.dynamics.Capacity: void <init>(int,int,int)>": 0.4409008259783358
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.4385516660810334
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.4385516660810334
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.4385516660810334
        }
    ], 
    "<Catalano.Statistics.Distributions.TStudentDistribution: double Entropy()>": [
        {
            "<org.dyn4j.geometry.Transform$1: double setRotation(double)>": 0.3346042823664512
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void rotate(double)>": 0.2563088123667462
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void setTranslationX(double)>": 0.2563088123667462
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void setTranslationY(double)>": 0.2563088123667462
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ConstraintSolver: void setIsNonLinearGaussSeidelPositionCorrectionActive(boolean)>": 0.24456053301456554
        }
    ], 
    "<Catalano.Statistics.HistogramStatistics: double Kurtosis(int[],double,double)>": [
        {
            "<org.dyn4j.geometry.Vector3: double dot(double,double,double)>": 0.5071203840161561
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double cross(double,double)>": 0.49472298026746914
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double dot(double,double)>": 0.49472298026746914
        }, 
        {
            "<org.dyn4j.geometry.Vector3: void <init>(double,double,double,double,double,double)>": 0.4839370975349835
        }, 
        {
            "<boofcv.app.BaseFiducialSquare: void autoSelectGridSize(double,double,double,double)>": 0.47893316312876927
        }
    ], 
    "<Catalano.Statistics.Distributions.FisherDistribution: double LogProbabilityDensityFunction(double)>": [
        {
            "<boofcv.alg.sfm.d3.VisOdomMonoPlaneInfinity: void fuseEstimates()>": 0.5679065233356211
        }, 
        {
            "<boofcv.alg.shapes.polyline.RefinePolyLineCorner: double distance(georegression.struct.line.LineGeneral2D_F64,georegression.struct.point.Point2D_I32)>": 0.5169117607158774
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double computeSigmaScale(int,int)>": 0.5124488794467253
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double computeSigmaScale(int)>": 0.507094931358549
        }, 
        {
            "<boofcv.app.BaseFiducialSquare: void centerPage()>": 0.49684962208438543
        }
    ], 
    "<Catalano.Statistics.Kernels.NormalizedPolynomial: double Function(double[],double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: void cross(double[],double[],double[])>": 0.6089559510650764
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double det3x3(double[])>": 0.6031445935731423
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void invert3x3(double[])>": 0.5929896508491237
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.5845985568294639
        }, 
        {
            "<boofcv.alg.interpolate.array.LagrangeFormula: double process_F64(double,double[],double[],int,int)>": 0.5517860784878494
        }
    ], 
    "<Catalano.Statistics.Distributions.EmpiricalDistribution: double getSmoothing()>": [
        {
            "<boofcv.io.SimpleStringNumberReader: double getDouble()>": 0.3940950987446891
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": 0.33930436738645886
        }, 
        {
            "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: double getDistance()>": 0.33930436738645886
        }, 
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.33930436738645886
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.3203415074434966
        }
    ], 
    "<Catalano.Statistics.Kernels.Gaussian: void setGamma(double)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillCircleFromTopLeft(com.jogamp.opengl.GL2,double,double,double,double)>": 0.40841887648188185
        }, 
        {
            "<org.dyn4j.geometry.Vector3: void <init>(double,double,double,double,double,double)>": 0.4079015284438305
        }, 
        {
            "<org.dyn4j.geometry.Vector2: void <init>(double,double,double,double)>": 0.40471028779765317
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.39990510921329514
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.3992079187732028
        }
    ], 
    "<Catalano.Statistics.Tools: double Inclination(double[],double[])>": [
        {
            "<boofcv.factory.transform.pyramid.FactoryPyramid: boofcv.struct.pyramid.PyramidFloat scaleSpace(double[],java.lang.Class)>": 0.5531992973441908
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double det3x3(double[])>": 0.5063904471838974
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void invert3x3(double[])>": 0.4715368758765155
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void cross(double[],double[],double[])>": 0.45715959367721126
        }, 
        {
            "<boofcv.alg.geo.pose.UtilLepetitEPnP: void jacobian_Control4(org.ejml.data.DenseMatrix64F,double[],org.ejml.data.DenseMatrix64F)>": 0.4559454478216357
        }
    ], 
    "<Catalano.Statistics.DescriptiveStatistics: float Variance(float[],float)>": [
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: double computeEnergy(float[])>": 0.49091896292855175
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearch: float distanceSq(float[],float[])>": 0.4472563423427082
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: float maxAbs(float[],int)>": 0.40601635787819323
        }, 
        {
            "<boofcv.alg.tracker.meanshift.TrackerMeanShiftComaniciu2003: double distanceHistogram(float[],float[])>": 0.39679926985880276
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: double sumCoefficients(float[])>": 0.39291643302366075
        }
    ], 
    "<Catalano.Statistics.HistogramStatistics: double Entropy(int[])>": [
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.48744333266868656
        }, 
        {
            "<boofcv.alg.filter.binary.GThresholdImageOps: int computeEntropy(int[],int,int)>": 0.4663910473921361
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.4288732845044736
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: double computeEnergy(int[],int)>": 0.42249983259765655
        }, 
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$Separable: double compute(double,int)>": 0.418191614283925
        }
    ], 
    "<Catalano.Statistics.Distributions.BernoulliDistribution: void <init>(double)>": [
        {
            "<org.dyn4j.sandbox.controls.JSliderWithTextField: void setScale(double)>": 0.37011590975907466
        }, 
        {
            "<boofcv.alg.geo.pose.Relinearlize: void multiplyQuadratic2(double,double,double,double,double[])>": 0.3425652687902231
        }, 
        {
            "<net.imglib2.display.AbstractLinearRange: void <init>(double,double)>": 0.33498925166527466
        }, 
        {
            "<boofcv.abst.tracker.Sfot_to_TrackObjectQuad: void setPoint(georegression.struct.point.Point2D_F64,double,double,double,double)>": 0.3268459268222174
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double det3x3(double,double,double,double,double,double,double,double,double)>": 0.3259463743629572
        }
    ], 
    "<Catalano.Statistics.Distributions.NakagamiDistribution: double Mean()>": [
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.5368867582191467
        }, 
        {
            "<boofcv.alg.distort.LensDistortionOps: void roundInside(georegression.struct.shapes.RectangleLength2D_F64)>": 0.5196576989845916
        }, 
        {
            "<boofcv.gui.d3.Orientation3D: void setVector(georegression.struct.point.Vector3D_F64)>": 0.5188006457183695
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.504544737770438
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.5028793890356754
        }
    ], 
    "<Catalano.Statistics.Kernels.SquaredSinc: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.5505569592369167
        }, 
        {
            "<boofcv.alg.distort.LensDistortionOps: void roundInside(georegression.struct.shapes.RectangleLength2D_F64)>": 0.49586907598742913
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.48688565998422084
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: double[] calculatePosition(double,double,double)>": 0.4857761632725477
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.4848320655062563
        }
    ], 
    "<Catalano.Statistics.Regression.LinearRegression: double[] Regression(double[])>": [
        {
            "<boofcv.core.image.border.ImageBorder_IL_F64: void setGeneral(int,int,double[])>": 0.4593971457259377
        }, 
        {
            "<net.imglib2.util.Util: double[] getArrayFromValue(double,int)>": 0.43526796713782623
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void normalizeF(boofcv.struct.convolve.Kernel2D_F64)>": 0.4181858348629857
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F32: boofcv.alg.distort.radtan.RadialTangential_F32 set(double[],double,double)>": 0.40187094263388673
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.39216630443620465
        }
    ], 
    "<Catalano.Statistics.Kernels.Bessel: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.5143073681689679
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.5138093273072548
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.49331285665660307
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeAngle(int)>": 0.47565751078350627
        }, 
        {
            "<boofcv.alg.geo.pose.PnPLepetitEPnP: void refine(double[])>": 0.4686039950564541
        }
    ], 
    "<Catalano.Statistics.Distributions.NormalDistribution: double InverseDistributionFunction(double)>": [
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.6580950772045027
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.6268994122797199
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.5817329062778722
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.5708914825300134
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(double,double,double)>": 0.5197105902327241
        }
    ], 
    "<Catalano.Statistics.Kernels.SymmetricTriangle: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.5159517506207312
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.5053241679138585
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.47041413221619477
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeAngle(int)>": 0.4590754469045393
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double sad(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.44760023020738204
        }
    ], 
    "<Catalano.Statistics.Distributions.WeibullDistribution: double Entropy()>": [
        {
            "<boofcv.alg.distort.LensDistortionOps: void roundInside(georegression.struct.shapes.RectangleLength2D_F64)>": 0.505994078010722
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.485733537961177
        }, 
        {
            "<net.imglib2.util.Util: double gLog(double,double)>": 0.47827203107563326
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.47707444812759126
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(org.dyn4j.geometry.Vector2)>": 0.471221457024293
        }
    ], 
    "<Catalano.Statistics.Distributions.BernoulliDistribution: double ProbabilityMassFunction(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: double getOutside(int,int)>": 0.4635614060633169
        }, 
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder1: double compute(double,int)>": 0.4466917563894718
        }, 
        {
            "<boofcv.abst.fiducial.CalibrationFiducialDetector: double getWidth(int)>": 0.4302482412042613
        }, 
        {
            "<boofcv.abst.fiducial.SquareBinary_to_FiducialDetector: double getWidth(int)>": 0.4302482412042613
        }, 
        {
            "<boofcv.abst.feature.detect.interest.GeneralToInterestPoint: double getRadius(int)>": 0.4302482412042613
        }
    ], 
    "<Catalano.Statistics.Correlations: double Tanimoto(double[],double[])>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double det3x3(double[])>": 0.6528156508265663
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.6519471737601419
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void cross(double[],double[],double[])>": 0.643032933850371
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.6242805299792581
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void invert3x3(double[])>": 0.6237342991546775
        }
    ], 
    "<Catalano.Statistics.Distributions.NormalDistribution: double ZScore(double)>": [
        {
            "<org.dyn4j.geometry.Vector3: double dot(double,double,double)>": 0.5931423955949208
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double cross(double,double)>": 0.5873308221824219
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double dot(double,double)>": 0.5873308221824219
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(double,double,double)>": 0.5592240194709828
        }, 
        {
            "<boofcv.alg.geo.NormalizedToPixelError: double errorSq(double,double,double,double)>": 0.5592010384799224
        }
    ], 
    "<Catalano.Statistics.Distributions.RayleighDistribution: double DistributionFunction(double)>": [
        {
            "<net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolator: double computeWeight(double)>": 0.5361360497404862
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5051730803466228
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.5035279428951087
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.4898909178886242
        }, 
        {
            "<net.imglib2.util.Util: double gLog(double,double)>": 0.48655120623929066
        }
    ], 
    "<Catalano.Statistics.Distributions.NakagamiDistribution: double Variance()>": [
        {
            "<boofcv.gui.d3.Orientation3D: void setVector(georegression.struct.point.Vector3D_F64)>": 0.5202724085978884
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.5178116559331719
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.5013963062562782
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.5007165027780047
        }, 
        {
            "<boofcv.alg.distort.LensDistortionOps: void roundInside(georegression.struct.shapes.RectangleLength2D_F64)>": 0.4988701966104452
        }
    ], 
    "<Catalano.Statistics.Distributions.CauchyDistribution: double DistributionFunction(double)>": [
        {
            "<org.dyn4j.geometry.Vector3: double dot(double,double,double)>": 0.5557152254814912
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double cross(double,double)>": 0.5473245786328118
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double dot(double,double)>": 0.5473245786328118
        }, 
        {
            "<org.dyn4j.dynamics.WorldTest$1: double mixFriction(double,double)>": 0.5433889363564003
        }, 
        {
            "<org.dyn4j.dynamics.WorldTest$1: double mixRestitution(double,double)>": 0.5433889363564003
        }
    ], 
    "<Catalano.Statistics.HistogramStatistics: double StdDev(int[],double)>": [
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.4906591579218575
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationAverageGradientIntegral: double computeUnweighted(double,double,double,boofcv.struct.sparse.SparseImageGradient)>": 0.46371433330896616
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.4627850791372035
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.4609609880948513
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(double,double,double)>": 0.4602769711747862
        }
    ], 
    "<Catalano.Statistics.Distributions.NakagamiDistribution: void init(double,double)>": [
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.49640165961529215
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: double[] calculatePosition(double,double,double)>": 0.4933732570639391
        }, 
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 setDirection(double)>": 0.478447506519994
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.47521812496904386
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.47383096340630154
        }
    ], 
    "<Catalano.Statistics.Distributions.FisherDistribution: void <init>(int,int)>": [
        {
            "<org.dyn4j.geometry.Geometry: org.dyn4j.geometry.Polygon createPolygonalEllipse(int,double,double)>": 0.31245207618824583
        }, 
        {
            "<boofcv.factory.filter.kernel.FactorySteerable: boofcv.alg.filter.kernel.SteerableKernel gaussian(java.lang.Class,int,int,double,int)>": 0.2954778589106296
        }, 
        {
            "<org.dyn4j.geometry.Geometry: org.dyn4j.geometry.Polygon createPolygonalHalfEllipse(int,double,double)>": 0.2924841520379851
        }, 
        {
            "<org.dyn4j.geometry.Geometry: org.dyn4j.geometry.Polygon createPolygonalSlice(int,double,double)>": 0.28958937801495593
        }, 
        {
            "<boofcv.struct.pyramid.ImagePyramidBase: void checkScales()>": 0.28070844759533975
        }
    ], 
    "<Catalano.Statistics.Analysis.PrincipalComponentAnalysis$AnalysisMethod: void <init>(java.lang.String,int)>": [
        {
            "<net.smert.jreactphysics3d.configuration.ContactsPositionCorrectionTechnique: void <init>(java.lang.String,int)>": 0.4415584415584415
        }, 
        {
            "<net.smert.jreactphysics3d.constraint.JointType: void <init>(java.lang.String,int)>": 0.4415584415584415
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.CollisionShapeType: void <init>(java.lang.String,int)>": 0.4415584415584415
        }, 
        {
            "<net.smert.jreactphysics3d.configuration.JointsPositionCorrectionTechnique: void <init>(java.lang.String,int)>": 0.4415584415584415
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions: void <init>(java.lang.String,int)>": 0.4415584415584415
        }
    ], 
    "<Catalano.Statistics.Tools: double[] StandartDeviation(double[][])>": [
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void <init>(int)>": 0.31824879388326444
        }, 
        {
            "<boofcv.struct.FastQueueArray_F64: double[] createInstance()>": 0.3100041420236116
        }, 
        {
            "<boofcv.alg.feature.associate.AssociateGreedy: double[] getFitQuality()>": 0.3100041420236116
        }, 
        {
            "<boofcv.alg.geo.calibration.RadialDistortionEstimateLinear: double[] getParameters()>": 0.3100041420236116
        }, 
        {
            "<net.imglib2.AbstractRealInterval: void <init>(int)>": 0.293232260266169
        }
    ], 
    "<Catalano.Statistics.Distributions.NormalDistribution: void <init>()>": [
        {
            "<boofcv.gui.d3.Orientation3D: void setVector(georegression.struct.point.Vector3D_F64)>": 0.4830220630813716
        }, 
        {
            "<boofcv.alg.distort.LensDistortionOps: void roundInside(georegression.struct.shapes.RectangleLength2D_F64)>": 0.4783356747049784
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.47820191794519873
        }, 
        {
            "<boofcv.alg.geo.pose.PnPLepetitEPnP: void estimateCase3(double[])>": 0.4779411259298802
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(org.dyn4j.geometry.Vector2)>": 0.47380978362635323
        }
    ], 
    "<Catalano.Statistics.Distributions.TStudentDistribution: double Mean()>": [
        {
            "<boofcv.demonstrations.calibration.ChessboardPanel: void setScale(double)>": 0.30103344560935935
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: boolean equals(java.lang.Object)>": 0.2864708105242797
        }, 
        {
            "<boofcv.alg.distort.DistortImageOps: void updateBoundBox(boofcv.struct.distort.PixelTransform_F64,boofcv.struct.ImageRectangle_F64)>": 0.28130277561714223
        }, 
        {
            "<boofcv.demonstrations.calibration.ChessboardPanel: void mouseWheelMoved(java.awt.event.MouseWheelEvent)>": 0.2806535933187194
        }, 
        {
            "<org.dyn4j.geometry.Vector3: boolean equals(double,double,double)>": 0.27709744710209516
        }
    ], 
    "<Catalano.Statistics.Distributions.NormalDistribution: double DistributionFunction(double)>": [
        {
            "<org.dyn4j.geometry.Vector3: double dot(double,double,double)>": 0.5564259215407751
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double cross(double,double)>": 0.5488502833463988
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double dot(double,double)>": 0.5488502833463988
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.5392161427420227
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.53797090493931
        }
    ], 
    "<Catalano.Statistics.Kernels.ChiSquare: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.5299743415653551
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.5156609810625229
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeAngle(int)>": 0.5092201151949517
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double det3x3(double[])>": 0.5081158444858742
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void cross(double[],double[],double[])>": 0.5064302887911838
        }
    ], 
    "<Catalano.Statistics.Correlations: double PearsonCorrelation(double[],double[],double,double)>": [
        {
            "<net.imglib2.util.LinAlgHelpers: double det3x3(double[])>": 0.5736210067747223
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double det3x3(double,double,double,double,double,double,double,double,double)>": 0.5593986057125757
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void cross(double[],double[],double[])>": 0.5573114965545731
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.5511454171681037
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: void invert3x3(double[])>": 0.5471556505931028
        }
    ], 
    "<Catalano.Statistics.HistogramStatistics: Catalano.Core.IntRange GetRange(int[],double)>": [
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: double computeEnergy(int[],int)>": 0.39028823512698707
        }, 
        {
            "<net.imglib2.util.IntervalIndexer: void indexToPosition(int,int[],double[])>": 0.3778377364285203
        }, 
        {
            "<net.imglib2.util.IntervalIndexer: void indexToPosition(int,int[],int[])>": 0.372596594348301
        }, 
        {
            "<net.imglib2.util.IntervalIndexer: void indexToPositionWithOffset(int,int[],int[],int[])>": 0.3635127355688724
        }, 
        {
            "<net.imglib2.util.IntervalIndexer: void indexToPosition(int,int[],long[])>": 0.35434462872681094
        }
    ], 
    "<Catalano.Statistics.Distributions.BernoulliDistribution: double LogProbabilityMassFunction(int)>": [
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder1: double compute(double,int)>": 0.49924053256908474
        }, 
        {
            "<boofcv.alg.geo.PerspectiveOps: boofcv.struct.calib.IntrinsicParameters createIntrinsic(int,int,double,double)>": 0.4861901338506843
        }, 
        {
            "<boofcv.alg.geo.pose.PnPLepetitEPnP: void estimateCase3(double[])>": 0.4824667995645163
        }, 
        {
            "<boofcv.alg.sfm.robust.DistanceScaleTranslateRotate2DSq: void setModel(boofcv.struct.sfm.ScaleTranslateRotate2D)>": 0.4689407594107123
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.4665789367588464
        }
    ], 
    "<Catalano.Statistics.Distributions.GammaDistribution: double Entropy()>": [
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5979818067099993
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.5736718003465457
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.5670314083485181
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.5573566802730301
        }, 
        {
            "<boofcv.alg.geo.pose.PnPLepetitEPnP: void estimateCase3(double[])>": 0.5437533544945268
        }
    ], 
    "<Catalano.Statistics.Histogram: double[] Normalize()>": [
        {
            "<net.imglib2.RealPoint: void move(int[])>": 0.3948502270342758
        }, 
        {
            "<net.imglib2.position.transform.AbstractPositionableTransform: void move(int[])>": 0.3471450941610376
        }, 
        {
            "<net.imglib2.position.transform.AbstractPositionableTransform: void localize(double[])>": 0.3393209018108013
        }, 
        {
            "<net.imglib2.AbstractLocalizableInt: void localize(double[])>": 0.33785684571822067
        }, 
        {
            "<net.imglib2.AbstractCursorInt: void localize(double[])>": 0.3274553343121168
        }
    ], 
    "<Catalano.Statistics.Kernels.Spherical: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.46100587223328426
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.4505776396852576
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.44854742110265583
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeAngle(int)>": 0.43900210704590154
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.43770346684377587
        }
    ], 
    "<Catalano.Statistics.Distributions.ContinuousUniformDistribution: double Length()>": [
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.47110707171154137
        }, 
        {
            "<org.dyn4j.dynamics.joint.MotorJoint: double getReactionTorque(double)>": 0.45689824646984484
        }, 
        {
            "<org.dyn4j.dynamics.joint.AngleJoint: double getReactionTorque(double)>": 0.45689824646984484
        }, 
        {
            "<org.dyn4j.dynamics.joint.PrismaticJoint: double getMotorForce(double)>": 0.45689824646984484
        }, 
        {
            "<org.dyn4j.dynamics.joint.WheelJoint: double getReactionTorque(double)>": 0.45689824646984484
        }
    ], 
    "<Catalano.Statistics.Kernels.InverseMultiquadric: double Function(double[],double[])>": [
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.5451148198062861
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.5318240135751046
        }, 
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.5217195431866732
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.5143985359275549
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.5129679443870201
        }
    ], 
    "<Catalano.Statistics.Distributions.LaplaceDistribution: double LogProbabilityDensityFunction(double)>": [
        {
            "<org.dyn4j.geometry.Vector3: double distanceSquared(double,double,double)>": 0.5934663949117407
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.5917727248665113
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.5834135885326672
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.5782210916876712
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.5699616426567498
        }
    ], 
    "<Catalano.Statistics.Distributions.WeibullDistribution: double DistributionFunction(double)>": [
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.4817532645722827
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.48147834721839433
        }, 
        {
            "<boofcv.alg.geo.pose.PnPLepetitEPnP: void estimateCase3(double[])>": 0.47839268223216364
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.46983498803893886
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.4686118919939932
        }
    ], 
    "<Catalano.Statistics.Kernels.Gaussian: double Function(double[],double[])>": [
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.5445658561835028
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.5378209534556357
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double sad(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.5133294731574478
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.5130097716204599
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.5111222158853096
        }
    ], 
    "<Catalano.Statistics.Tools: double Variance(double[],double)>": [
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.5119839611753002
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.5036644015651136
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double ncc(boofcv.struct.feature.NccFeature,boofcv.struct.feature.NccFeature)>": 0.4663394118166586
        }, 
        {
            "<org.dyn4j.geometry.Vector3: void <init>(double,double,double,double,double,double)>": 0.46588946517139634
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.4629700209387614
        }
    ], 
    "<Catalano.Statistics.Distributions.ParetoDistribution: void <init>(double,double)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillCircleFromTopLeft(com.jogamp.opengl.GL2,double,double,double,double)>": 0.489049874862566
        }, 
        {
            "<org.dyn4j.geometry.Vector3: void <init>(double,double,double,double,double,double)>": 0.4844812450032665
        }, 
        {
            "<org.dyn4j.geometry.Vector2: void <init>(double,double,double,double)>": 0.4805819985771316
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.4692086446905759
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.4685730006381965
        }
    ], 
    "<Catalano.Statistics.Distributions.BinomialDistribution: double ProbabilityMassFunction(int)>": [
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$Separable: double compute(double,int)>": 0.48417206883435204
        }, 
        {
            "<boofcv.alg.geo.rectify.RectifyFundamental: org.ejml.simple.SimpleMatrix computeG(georegression.struct.point.Point3D_F64,int,int)>": 0.47641863919101973
        }, 
        {
            "<boofcv.alg.geo.pose.PnPLepetitEPnP: double matchScale(java.util.List,org.ddogleg.struct.FastQueue)>": 0.4669919576568176
        }, 
        {
            "<boofcv.alg.geo.pose.PnPLepetitEPnP: void estimateCase1(double[])>": 0.46469979415568957
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.4617928254037178
        }
    ], 
    "<Catalano.Statistics.Distributions.DiscreteUniformDistribution: double DistributionFunction(int)>": [
        {
            "<boofcv.alg.feature.dense.DescribeDenseHogAlg: void getDescriptorsInRegion(int,int,int,int,java.util.List)>": 0.39967669157474617
        }, 
        {
            "<boofcv.alg.tracker.tld.TldFernFeature: void computePosterior()>": 0.3976454198800574
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(double[],int,int,double[],int,int,int,int)>": 0.39334071752182526
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(double[],int,int,double[],int,int,int,int)>": 0.3919137811986464
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(short[],int,int,short[],int,int,int,int)>": 0.3889515230526793
        }
    ], 
    "<Catalano.Statistics.Regression.PolynomialRegression: void <init>(double[],double[])>": [
        {
            "<boofcv.core.image.border.ImageBorder_IL_F64: void getGeneral(int,int,double[])>": 0.3333569987492924
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void normalizeSumToOne(boofcv.struct.convolve.Kernel1D_F64)>": 0.32201976849189556
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void normalizeSumToOne(boofcv.struct.convolve.Kernel2D_F64)>": 0.32201976849189556
        }, 
        {
            "<boofcv.alg.geo.f.ParamFundamentalEpipolar: double selectDivisor(double[],double[])>": 0.3184301621586364
        }, 
        {
            "<boofcv.core.image.border.ImageBorder_IL_F64: void setGeneral(int,int,double[])>": 0.3176807196638544
        }
    ], 
    "<Catalano.Statistics.Distributions.GammaDistribution: double LogProbabilityDensityFunction(double)>": [
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5364030296831798
        }, 
        {
            "<boofcv.alg.geo.h.HomographyResidualSampson: double error2(double,double,double,double)>": 0.49581653578153656
        }, 
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 setDirection(double)>": 0.4912087505069213
        }, 
        {
            "<net.imglib2.interpolation.randomaccess.LanczosInterpolator: double lanczos(double,double)>": 0.487747534595262
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.48350681161489856
        }
    ], 
    "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double computeLimits(double,double[],double[])>": [
        {
            "<net.imglib2.util.Util: double[] createGaussianKernel1DDouble(double,boolean)>": 0.34348523890489824
        }, 
        {
            "<net.imglib2.interpolation.randomaccess.LanczosInterpolator: double[] createLanczosLUT(int,int)>": 0.3314342330275771
        }, 
        {
            "<boofcv.alg.flow.UtilDenseOpticalFlow: boofcv.struct.pyramid.PyramidFloat standardPyramid(int,int,double,double,int,int,java.lang.Class)>": 0.33114486280818145
        }, 
        {
            "<boofcv.factory.transform.pyramid.FactoryPyramid: boofcv.struct.pyramid.PyramidFloat scaleSpace(double[],java.lang.Class)>": 0.32831982412071437
        }, 
        {
            "<boofcv.alg.tracker.circulant.CirculantTracker: void computeCosineWindow(boofcv.struct.image.GrayF64)>": 0.3269958216904635
        }
    ], 
    "<Catalano.Statistics.Distributions.TStudentDistribution: void <init>(double)>": [
        {
            "<net.imglib2.util.Util: double gLog(double,double)>": 0.47899721186032873
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.47861549553764277
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: double[] calculatePosition(double,double,double)>": 0.47488418384079867
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.4713013883416081
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawArc(com.jogamp.opengl.GL2,double,double,double,double,double)>": 0.4712845374754372
        }
    ], 
    "<Catalano.Statistics.Distributions.ParetoDistribution: double DistributionFunction(double)>": [
        {
            "<org.dyn4j.geometry.Vector2: double normalize()>": 0.4534057093848254
        }, 
        {
            "<net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolator: double computeWeight(double)>": 0.4515470746272516
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double normalize()>": 0.44571468344516263
        }, 
        {
            "<net.imglib2.util.Util: double gLog(double,double)>": 0.4365545900309454
        }, 
        {
            "<org.dyn4j.geometry.Vector3: org.dyn4j.geometry.Vector3 setMagnitude(double)>": 0.43328867481470223
        }
    ], 
    "<Catalano.Statistics.Distributions.EmpiricalDistribution: void <init>(double[])>": [
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder3: double compute(double,int)>": 0.29281940676450935
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.29067749711304114
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F64: void <init>(double[],double,double)>": 0.28508289535659587
        }, 
        {
            "<org.dyn4j.geometry.Matrix33Test: void copy()>": 0.2774181114028038
        }, 
        {
            "<org.dyn4j.geometry.TransformTest: void copy()>": 0.27740629786301585
        }
    ], 
    "<Catalano.Statistics.Distributions.BinomialDistribution: double Mean()>": [
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double computeSigmaScale(int,int)>": 0.4565451914621129
        }, 
        {
            "<org.dyn4j.sandbox.controls.JSliderWithTextField: double getScaledValue()>": 0.45382478620291633
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double computeSigmaScale(int)>": 0.43076861647118847
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomMonoPlaneInfinity: void fuseEstimates()>": 0.41037211529163087
        }, 
        {
            "<boofcv.alg.shapes.polyline.RefinePolyLineCorner: double distance(georegression.struct.line.LineGeneral2D_F64,georegression.struct.point.Point2D_I32)>": 0.4041244352950233
        }
    ], 
    "<Catalano.Statistics.Distributions.ContinuousUniformDistribution: double DistributionFunction(double)>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.45765995675601523
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.4574852734548108
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.45692470652428074
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double normalize()>": 0.4546828558553497
        }, 
        {
            "<org.dyn4j.geometry.Vector3: org.dyn4j.geometry.Vector3 setMagnitude(double)>": 0.45378654656786077
        }
    ], 
    "<Catalano.Statistics.Distributions.BinomialDistribution: double LogProbabilityMassFunction(int)>": [
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.524824742268174
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomMonoPlaneInfinity: void fuseEstimates()>": 0.5090313102454364
        }, 
        {
            "<boofcv.alg.filter.binary.GThresholdImageOps: int computeEntropy(int[],int,int)>": 0.5000240969188708
        }, 
        {
            "<boofcv.app.BaseFiducialSquare: void centerPage()>": 0.4857872200756896
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.484879026433811
        }
    ], 
    "<Catalano.Statistics.Distributions.InverseGammaDistribution: double ProbabilityDensityFunction(double)>": [
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.5494575093199372
        }, 
        {
            "<boofcv.alg.geo.pose.P3PFinsterwalder: void computeU(double,double)>": 0.5422891607622037
        }, 
        {
            "<org.dyn4j.geometry.Transform: void lerp(org.dyn4j.geometry.Transform,double)>": 0.5332195585535164
        }, 
        {
            "<boofcv.alg.geo.pose.P3PGrunert: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.5292668390086269
        }, 
        {
            "<org.dyn4j.geometry.Transform: void rotate(double)>": 0.5279779181031086
        }
    ], 
    "<Catalano.Statistics.Kernels.NormalizedPolynomial: void <init>(int,double)>": [
        {
            "<boofcv.struct.convolve.Kernel2D_F64: double getDouble(int,int)>": 0.4924502140722609
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: double getDouble(int,int)>": 0.4534710206966428
        }, 
        {
            "<org.dyn4j.collision.manifold.IndexedManifoldPointId: void <init>(int,int,int)>": 0.4480752043768302
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: double getDouble(int,int)>": 0.44804844102815056
        }, 
        {
            "<org.dyn4j.dynamics.Capacity: void <init>(int,int,int)>": 0.4457155065636658
        }
    ], 
    "<Catalano.Statistics.Distributions.ExponentialDistribution: double DistributionFunction(double)>": [
        {
            "<net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolator: double computeWeight(double)>": 0.6669337853258759
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixFriction(double,double)>": 0.6441164866794217
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.6185253914493889
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.6111009889941538
        }, 
        {
            "<org.dyn4j.geometry.Vector3: double distance(double,double,double)>": 0.6063469854534497
        }
    ], 
    "<Catalano.Statistics.Kernels.Hypersecant: double Function(double[],double[])>": [
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.5676474459443903
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.5355423646009513
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: double[] calculatePosition(double,double,double)>": 0.5079263915579345
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5065579117861836
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.5058133307605481
        }
    ], 
    "<Catalano.Statistics.Kernels.Circular: double Function(java.lang.Object,java.lang.Object)>": [
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: java.awt.image.BufferedImage apply(java.awt.image.BufferedImage)>": 0.5224950020545109
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.47670201074526164
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.4726031651917775
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.47048441680326175
        }, 
        {
            "<boofcv.alg.geo.pose.PnPLepetitEPnP: void estimateCase3(double[])>": 0.4689456959236622
        }
    ], 
    "<Catalano.Statistics.Distributions.EmpiricalDistribution: void initialize(double[],java.lang.Double)>": [
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder3: double compute(double,int)>": 0.2967763072303224
        }, 
        {
            "<org.dyn4j.geometry.Matrix33Test: void copy()>": 0.28945862093187413
        }, 
        {
            "<org.dyn4j.geometry.TransformTest: void copy()>": 0.28794732329141476
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double length(double[])>": 0.28699820718104596
        }, 
        {
            "<org.dyn4j.geometry.Matrix22Test: void copy()>": 0.282144044819066
        }
    ], 
    "<Catalano.Statistics.Kernels.Linear: double Function(double[],double[])>": [
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.5708733987465945
        }, 
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.5570135148297756
        }, 
        {
            "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": 0.5329861799354028
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.5274100981562952
        }, 
        {
            "<net.imglib2.util.Util: double max(double[])>": 0.523014974488497
        }
    ], 
    "<Catalano.Statistics.Distributions.DiscreteUniformDistribution: double Mean()>": [
        {
            "<boofcv.alg.transform.pyramid.PyramidDiscreteAverage: double getSampleOffset(int)>": 0.377972001146551
        }, 
        {
            "<boofcv.alg.tracker.tld.TldFernFeature: void computePosterior()>": 0.3720935005285733
        }, 
        {
            "<boofcv.alg.tracker.tld.TldFernFeature: void incrementN()>": 0.36961352581241125
        }, 
        {
            "<boofcv.alg.tracker.tld.TldFernFeature: void incrementP()>": 0.36961352581241125
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double variance(boofcv.struct.image.GrayS32,double)>": 0.36126782090379383
        }
    ], 
    "<Catalano.Statistics.Distributions.LognormalDistribution: double Mean()>": [
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.41149835610675467
        }, 
        {
            "<net.imglib2.util.Util: double gLog(double,double)>": 0.4088976534090014
        }, 
        {
            "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": 0.40853640516964357
        }, 
        {
            "<net.imglib2.util.Util: double log2(double)>": 0.4065269801630322
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double distance(double,double)>": 0.40598582529734617
        }
    ], 
    "<Catalano.Statistics.Kernels.Multiquadric: double Function(double[],double[])>": [
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double euclidean(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.5535039074991505
        }, 
        {
            "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": 0.5393428206659894
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.5177043725780509
        }, 
        {
            "<net.imglib2.util.Util: double average(double[])>": 0.5161174479530067
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.5149351550545723
        }
    ]
}