{
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: void setPosition(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void setPosition(int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.2540764877039817
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.21777659600227028
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void move(long,int)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMax(int,int)>": 0.40104468597694176
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMin(int,int)>": 0.40104468597694176
        }, 
        {
            "<boofcv.struct.image.GrayS32: void unsafe_set(int,int,int)>": 0.34038701021769285
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setRGB(int,int[])>": 0.3319574537862377
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(int,int[])>": 0.3312470244468901
        }
    ], 
    "<net.imglib2.type.numeric.integer.ByteType: void setInteger(long)>": [
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.19361288345644703
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.18774033864527004
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.1827227244780058
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.18028718801183533
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$200(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.1791596479102247
        }
    ], 
    "<net.imglib2.type.numeric.integer.LongType: java.math.BigInteger getBigInteger()>": [
        {
            "<Catalano.Math.RationalNumber: void Multiply(int,int)>": 0.2054507911982697
        }, 
        {
            "<Catalano.Math.RationalNumber: void Subtract(int,int)>": 0.20437715120481525
        }, 
        {
            "<Catalano.Math.RationalNumber: void Add(int,int)>": 0.20437715120481525
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2036401679611725
        }, 
        {
            "<Catalano.Math.RationalNumber: void Multiply(int)>": 0.20195162555635945
        }
    ], 
    "<net.imglib2.type.numeric.AbstractARGBDoubleType: int toARGBInt()>": [
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.36961608743764024
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.3673493121281025
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.341548568058769
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: int hashCode()>": 0.30682783620283505
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.30643859986289457
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform$InverseTranslationTransform: net.imglib2.concatenate.PreConcatenable preConcatenate(java.lang.Object)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3626316333861873
        }, 
        {
            "<org.jbox2d.particle.StackQueue: java.lang.Object pop()>": 0.3530673453656584
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: java.lang.Object getUserData(int)>": 0.352481054278708
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3505610430027661
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.350348505258361
        }
    ], 
    "<net.imglib2.concatenate.ConcatenateUtils: void print(java.util.List)>": [
        {
            "<boofcv.app.CameraCalibration: void process()>": 0.39758467057711444
        }, 
        {
            "<boofcv.app.FiducialDetection: void printHelp()>": 0.3877933262219162
        }, 
        {
            "<boofcv.app.CameraCalibration: void printHelp()>": 0.3847493925311771
        }, 
        {
            "<boofcv.app.BaseStandardInputApp: void printInputHelp()>": 0.3762014563868735
        }, 
        {
            "<boofcv.app.BatchDownSizeImage: void printHelpAndExit(java.lang.String[])>": 0.3651293380451335
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: void localize(float[])>": [
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_S64: void getF(int,float[])>": 0.4494482389628714
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF32)>": 0.43403432413324206
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedF32)>": 0.3949959276042379
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchColor: void meanColor(float[],float[],float)>": 0.3832306753076067
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$PL: void getF(int,float[])>": 0.3805787737085878
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: int compareTo(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.26253298750374954
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.230960523604179
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2193386105675623
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.21546490714187164
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.21530246534264683
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: void setBigInteger(java.math.BigInteger)>": [
        {
            "<Catalano.Math.RationalNumber: void <init>(java.math.BigInteger)>": 0.21438489046722106
        }, 
        {
            "<Catalano.Math.RationalNumber: void <init>(java.math.BigInteger,java.math.BigInteger)>": 0.20003594022154034
        }, 
        {
            "<Catalano.Math.RationalNumber: void <init>(int)>": 0.19693735398350215
        }, 
        {
            "<Catalano.Math.RationalNumber: void <init>(int,int)>": 0.19480844476259207
        }, 
        {
            "<Catalano.Math.RationalNumber: void Multiply(java.math.BigInteger,java.math.BigInteger)>": 0.182193490568016
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerType: int compareTo(net.imglib2.type.numeric.integer.AbstractIntegerType)>": [
        {
            "<boofcv.struct.feature.MatchScoreType$1: int compareTo(double,double)>": 0.24286143764849266
        }, 
        {
            "<boofcv.struct.feature.MatchScoreType$2: int compareTo(double,double)>": 0.24286143764849266
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2242888890027508
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(org.jbox2d.particle.ParticleSystem$Proxy)>": 0.21462608284951137
        }, 
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(Catalano.Imaging.Corners.FeaturePoint)>": 0.20311130632285213
        }
    ], 
    "<net.imglib2.type.logic.BoolType: void setBigInteger(java.math.BigInteger)>": [
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: boolean isWithin(int,int,int,int,int)>": 0.395082996164575
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.36686487457110406
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.36686487457110406
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.36686487457110406
        }, 
        {
            "<net.coobird.thumbnailator.ThumbnailParameter: boolean useOriginalImageType()>": 0.36686487457110406
        }
    ], 
    "<net.imglib2.view.composite.GenericComposite$Factory: net.imglib2.view.composite.GenericComposite create(net.imglib2.RandomAccess)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06454972243679027
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0625
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06194461797903697
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.061286292230682514
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06067033396213444
        }
    ], 
    "<net.imglib2.img.AbstractImg: void max(long[])>": [
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.38166187337735
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.3360932364854249
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.32399332742693354
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.304729691515267
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS8,boofcv.struct.image.GrayS64)>": 0.29599130104844756
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: boolean valueEquals(net.imglib2.type.numeric.integer.AbstractIntegerBitType)>": [
        {
            "<Catalano.Core.Stopwatch: boolean isRunning()>": 0.4713130480900184
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.45768280309529047
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.45768280309529047
        }, 
        {
            "<boofcv.io.javacv.JavaCVVideoImageSequence: boolean hasNext()>": 0.45768280309529047
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.4458788059479232
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsPeriodicFactory: net.imglib2.outofbounds.OutOfBoundsPeriodic create(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06454972243679027
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0625
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06194461797903697
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.061286292230682514
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06067033396213444
        }
    ], 
    "<net.imglib2.util.ImgUtil: void copy(net.imglib2.img.Img,double[],int,int[])>": [
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.43194937076981743
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.43194937076981743
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.4045285667184208
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(int[],int,int,int[],int,int,int,int)>": 0.40118864484352135
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(int[],int,int,int[],int,int,int,int)>": 0.3979588771714143
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess: void <init>(net.imglib2.img.planar.PlanarImg)>": [
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int,int)>": 0.20467666182082536
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparitySparseScoreSadRect_S16: void <init>(int,int,int,int)>": 0.19563152596964936
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparitySparseScoreSadRect_U8: void <init>(int,int,int,int)>": 0.19563152596964936
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int)>": 0.19352573304733223
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void <init>(int,int,double)>": 0.1914574859005308
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: void incIndex()>": [
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.4274195384558474
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.4147280985068987
        }, 
        {
            "<Catalano.Imaging.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.4147280985068987
        }, 
        {
            "<Catalano.Imaging.Filters.AlphaTrimmedMean: void setT(int)>": 0.40168653618935546
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.AlphaTrimmedMean: void setT(int)>": 0.40168653618935546
        }
    ], 
    "<net.imglib2.img.cell.AbstractCell: int dimension(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.7971082718892609
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.7875797356576464
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.7666734068198182
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.7611977688432564
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: int get(int)>": 0.759469696969697
        }
    ], 
    "<net.imglib2.view.composite.CompositeView: net.imglib2.view.composite.CompositeView$CompositeRandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05063696835418333
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04902903378454601
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04859335628264
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04807692307692309
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04759372565678686
        }
    ], 
    "<net.imglib2.img.cell.CellImg: net.imglib2.img.cell.CellImg copy()>": [
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.11369850670677441
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.11369850670677441
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.08974358974358974
        }, 
        {
            "<org.dyn4j.dynamics.WorldTest: void getUserData()>": 0.08376533899311825
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void getUserData()>": 0.08376533899311825
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: void setPosition(int,int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.6565280049537809
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5827029549451893
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5712610050910024
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int)>": 0.5684849414724982
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.5419832307393084
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.RealRandomAccessible interpolate(net.imglib2.EuclideanSpace,net.imglib2.interpolation.InterpolatorFactory)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06622158212347246
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.06130060338328881
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.0606199786360078
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.05856093507521133
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void <init>(boofcv.demonstrations.tracker.CirculantVisualizationPanel$Listener)>": 0.05715133300611746
        }
    ], 
    "<net.imglib2.img.sparse.LongNtree: void <init>(net.imglib2.img.sparse.Ntree,long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.242012144279314
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.242012144279314
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2237584400126592
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.17235608187218834
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.17235608187218834
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolatorARGB: void graycodeBckRecursive(int)>": [
        {
            "<Catalano.Imaging.Tools.QuadrilateralTransformation: Catalano.Imaging.FastBitmap ProcessImage(Catalano.Imaging.FastBitmap)>": 0.47395024165363825
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal11(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.4589965354052981
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve11(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.45850478610263823
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal9(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.4579323392520346
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve9(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.45702900915349653
        }
    ], 
    "<net.imglib2.position.transform.Floor: void floor(net.imglib2.RealLocalizable,long[])>": [
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.23424635238503744
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.23323871153125036
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.23192054581464552
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: int hashCode()>": 0.22157883432467834
        }, 
        {
            "<org.dyn4j.geometry.Matrix22: int hashCode()>": 0.22110270830572348
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: double relativeFrequency(java.util.List,boolean)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.29803412049458683
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2677014345227333
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2665398968364596
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomPixelDepthPnP: int dropUnusedTracks()>": 0.2645849135928561
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.26426854623980356
        }
    ], 
    "<net.imglib2.img.sparse.CharNtree: void <init>(long[],long[],java.lang.Character)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2668001056849969
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2668001056849969
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2467353604592215
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.1793225683953813
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.1793225683953813
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: void indexToPositionWithOffset(long,long[],long[],long[])>": [
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.3088584905780088
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.30813163352746475
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.2924664636970711
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.29190544259602225
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2826287486880575
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: void updateIndex(int)>": [
        {
            "<boofcv.alg.feature.describe.DescribePointRectangleRegion: void <init>(int,int)>": 0.36047713069145976
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Median$Run: int CalcLines(int)>": 0.35930358542591234
        }, 
        {
            "<Catalano.Imaging.Filters.AdaptiveContrastEnhancement: int CalcLines(int)>": 0.35930358542591234
        }, 
        {
            "<Catalano.Imaging.Filters.Mode: int CalcLines(int)>": 0.35930358542591234
        }, 
        {
            "<Catalano.Imaging.Filters.Mean: int CalcLines(int)>": 0.35930358542591234
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess: void setPosition(int[])>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.6360743863727263
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.634917148770099
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve9(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.6334399798249348
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve11(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.6333723663050177
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.6327818905217979
        }
    ], 
    "<net.imglib2.converter.read.ConvertedCursor: void <init>(net.imglib2.Cursor,net.imglib2.converter.Converter,net.imglib2.type.Type)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04032389192727559
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03904344047215152
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.038696496074155144
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.03828524323948056
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03790045715961838
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: boolean equals(java.lang.Object)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: boolean equals(java.lang.Object)>": 0.3248534738047213
        }, 
        {
            "<org.box2d.proto.Box2D$PbVec2: boolean isInitialized()>": 0.3186013623949091
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: boolean isWithin(int,int,int,int,int)>": 0.31818907376577615
        }, 
        {
            "<boofcv.alg.filter.binary.impl.ImplBinaryNaiveOps: boolean getF(boofcv.struct.image.GrayU8,int,int)>": 0.31212177274073827
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldTrackerApp: void togglePause()>": 0.30750796793871404
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess: void <init>(net.imglib2.img.planar.PlanarRandomAccess)>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: void fill(boofcv.struct.convolve.Kernel2D_I32,int)>": 0.32893995054036956
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.PairManager: boolean removePair(int,int)>": 0.30417399746900603
        }, 
        {
            "<boofcv.factory.filter.kernel.FactoryKernel: boofcv.struct.convolve.Kernel1D_I32 random1D_I32(int,int,int,int,java.util.Random)>": 0.30316576112689525
        }, 
        {
            "<boofcv.factory.filter.kernel.FactoryKernel: boofcv.struct.convolve.Kernel2D_I32 random2D_I32(int,int,int,int,java.util.Random)>": 0.30316576112689525
        }, 
        {
            "<boofcv.alg.segmentation.ImageSegmentationOps: void regionPixelId_to_Compact(boofcv.struct.image.GrayS32,org.ddogleg.struct.GrowQueue_I32,boofcv.struct.image.GrayS32)>": 0.3019649622845407
        }
    ], 
    "<net.imglib2.RealPoint: void move(double[])>": [
        {
            "<Catalano.Math.Matrix: double[] Subtract(double[],double[])>": 0.4979140746390541
        }, 
        {
            "<Catalano.Math.Matrix: double[] Add(double[],double[])>": 0.4979140746390541
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.4952232666452388
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.4952232666452388
        }, 
        {
            "<Catalano.Math.Matrix: void Add(double[],double)>": 0.4499239557018486
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.LanczosInterpolatorFactory: net.imglib2.RealRandomAccess create(java.lang.Object)>": [
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_S32: void <init>(double,int,double,boolean)>": 0.259612497059765
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_F32: void <init>(double,int,double,boolean)>": 0.259612497059765
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_S16: void <init>(double,int,double,boolean)>": 0.259612497059765
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitSegment: void <init>(double,double,int)>": 0.23629786262696992
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitLoop: void <init>(double,double,int)>": 0.23629786262696992
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: long min(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3508771929824561
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3142423944400126
        }
    ], 
    "<net.imglib2.display.projector.sampler.IntervalSampler: net.imglib2.Sampler copy()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.024397501823713325
        }
    ], 
    "<net.imglib2.type.logic.BitType: boolean valueEquals(java.lang.Object)>": [
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.5652534442707795
        }, 
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.5412074216272691
        }, 
        {
            "<org.box2d.proto.Box2D$PbVec2: boolean isInitialized()>": 0.522777839214264
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.5205281798541881
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.5205281798541881
        }
    ], 
    "<net.imglib2.img.planar.PlanarLocalizingCursor: boolean hasNext()>": [
        {
            "<Catalano.Core.IntRange: boolean isInside(int)>": 0.489800208478835
        }, 
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.4878600775930464
        }, 
        {
            "<boofcv.struct.image.ImageBase: boolean isInBounds(int,int)>": 0.4812151106575698
        }, 
        {
            "<boofcv.struct.flow.ImageFlow: boolean isInBounds(int,int)>": 0.4812151106575698
        }, 
        {
            "<boofcv.struct.feature.MatrixOfList: boolean isInBounds(int,int)>": 0.4812151106575698
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedCursor: double getDoublePosition(int)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.3782432325354622
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F64: double unsafe_getD(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double convolveSparse(boofcv.struct.image.GrayF64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.util.Util: boolean isApproxEqual(double,double,double)>": [
        {
            "<org.dyn4j.geometry.Interval: double clamp(double,double,double)>": 0.41237723399205617
        }, 
        {
            "<boofcv.misc.BoofMiscOps: boolean checkInside(boofcv.struct.image.ImageBase,double,double,double)>": 0.4101731859122383
        }, 
        {
            "<boofcv.alg.tracker.meanshift.TrackerMeanShiftComaniciu2003: int selectBest(double,double,double)>": 0.3643615826073938
        }, 
        {
            "<boofcv.alg.geo.pose.Relinearlize: void multiplyQuadratic2(double,double,double,double,double[])>": 0.356703952463625
        }, 
        {
            "<org.dyn4j.geometry.Vector3: boolean equals(double,double,double)>": 0.3550248570705917
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: int positionWithOffsetToIndex(int[],int[],int[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.5972963119270225
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getIndex(int[])>": 0.5748978179601294
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.5494951827058613
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(int[],int,int,int[],int,int,int,int)>": 0.5265850562601642
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(int[],int,int,int[],int,int,int,int)>": 0.5173432524937462
        }
    ], 
    "<net.imglib2.util.Intervals: net.imglib2.FinalInterval expand(net.imglib2.Interval,long,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2709692448941334
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2709692448941334
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2709692448941334
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.26296277132375695
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.26233842375810024
        }
    ], 
    "<net.imglib2.interpolation.Interpolant: net.imglib2.RealRandomAccess realRandomAccess()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.021677749238102995
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileNumericType: void mul(float)>": [
        {
            "<com.flowpowered.react.math.Matrix4x4: void setAllValues(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)>": 0.32921128423317975
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: void setAllValues(float,float,float,float,float,float,float,float,float)>": 0.3224149197105202
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.DebugDrawJ2D$1: java.awt.Color newColor(float,float,float,float)>": 0.3210716905727387
        }, 
        {
            "<org.jbox2d.callbacks.DebugDraw: void setCamera(float,float,float)>": 0.3199511092812435
        }, 
        {
            "<org.jbox2d.common.Mat33: void <init>(float,float,float,float,float,float,float,float,float)>": 0.3121973203170267
        }
    ], 
    "<net.imglib2.iterator.IntervalIterator: net.imglib2.iterator.IntervalIterator create(net.imglib2.Interval)>": [
        {
            "<org.jbox2d.testbed.framework.TestbedController: void stepAndRender()>": 0.205819242195877
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int upperBound(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.20356748495041582
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int lowerBound(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.20356748495041582
        }, 
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.19949830045217942
        }, 
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.19335493642788396
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolator2D: void fillWeights()>": [
        {
            "<Catalano.Imaging.Tools.MaitraMoments: double[] Compute(Catalano.Imaging.FastBitmap)>": 0.31757116167491867
        }, 
        {
            "<Catalano.Math.Decompositions.EigenvalueDecomposition: void tql2()>": 0.31077177654642296
        }, 
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[],double[],double[],double[])>": 0.30760182609585063
        }, 
        {
            "<boofcv.alg.color.ColorYuv: void yuvToRgb(double,double,double,double[])>": 0.3056301922300983
        }, 
        {
            "<boofcv.alg.geo.pose.Relinearlize: void multiplyQuadratic2(double,double,double,double,double[])>": 0.30213443845690213
        }
    ], 
    "<net.imglib2.type.logic.BitType: void incIndex(int)>": [
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.6241711271514602
        }, 
        {
            "<boofcv.abst.fiducial.calib.CalibrationDetectorSquareFiducialGrid: int getPointIndex(int,int)>": 0.5747801203619927
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$9: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5631673913280111
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: int getIndex(int,int,int)>": 0.5573780954063181
        }, 
        {
            "<boofcv.struct.image.ImageBase: int getIndex(int,int)>": 0.5485724542486418
        }
    ], 
    "<net.imglib2.PointSampleList$PointSampleListCursor: int getIntPosition(int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.5078285150911725
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.5078285150911725
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.5078285150911725
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.SquaresIntoRegularClusters: int add(int,int)>": 0.46401913722402865
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.46236799717354615
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsBorder: void <init>(net.imglib2.Interval)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.31592735417494616
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.31592735417494616
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.30630320766020513
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.29972018595192573
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2986933677815313
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: void localize(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.transform.integer.BoundingBox: net.imglib2.Interval getInterval()>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2982261876030599
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.25382099576470973
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.23912637845254933
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.23912637845254933
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.23849290296826917
        }
    ], 
    "<net.imglib2.img.sparse.LongNtree: long getValue(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.4131088259045248
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.3758819896291122
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.3552474489523165
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.3447577893536421
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.33979763956490483
        }
    ], 
    "<net.imglib2.AbstractInterval: void realMax(double[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.473749339213746
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.46415327114059296
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.46104521220249894
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4572411548053488
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4562496988424407
        }
    ], 
    "<net.imglib2.position.transform.Floor: void setPosition(float,int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_F64: void set(int,float)>": 0.2310603576749783
        }, 
        {
            "<Catalano.Imaging.Tools.ColorConverter: double[] RGBtoO1O2(int,int,int)>": 0.2164422157239353
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F32_1D: void rftbsub(int,float[],int,int,float[],int)>": 0.20024699301472063
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_F32: void <init>(int,float,float)>": 0.19966870539290982
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_I: void <init>(int,float,float)>": 0.19966870539290982
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: int getIndex(int[])>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve11(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.6239475417892392
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve9(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.6230505992851639
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.6217675426230415
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.6186654482037623
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve7(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.6186368115301408
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolator: void graycodeFwdRecursive(int)>": [
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.2759395090892489
        }, 
        {
            "<boofcv.alg.filter.binary.impl.ImplBinaryBorderOps: void edge8(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayU8)>": 0.267431929505483
        }, 
        {
            "<boofcv.alg.filter.binary.impl.ImplBinaryBorderOps: void removePointNoise(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayU8)>": 0.267431929505483
        }, 
        {
            "<boofcv.alg.filter.binary.impl.ImplBinaryBorderOps: void dilate8(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayU8)>": 0.2661437601418819
        }, 
        {
            "<boofcv.alg.filter.binary.impl.ImplBinaryBorderOps: void erode8(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayU8)>": 0.2661437601418819
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsPeriodic: void <init>(net.imglib2.outofbounds.OutOfBoundsPeriodic)>": [
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.314781357551476
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.30012414099672713
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.30012414099672713
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set(int,int,long[])>": 0.29350172939986596
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.29213532020087596
        }
    ], 
    "<net.imglib2.img.cell.CellRandomAccess: void move(long[])>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.3686455370738539
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.31101761508409936
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.30270697957775444
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.25144915589949335
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2481020032510529
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void <init>(java.util.List)>": [
        {
            "<boofcv.alg.geo.calibration.CalibrationPlanarGridZhang99: int totalPoints(java.util.List)>": 0.29279519969958195
        }, 
        {
            "<Catalano.Imaging.Shapes.IntPolygon: void <init>(java.util.List)>": 0.28850755004655826
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.RegularClustersIntoGrids: void process(java.util.List)>": 0.28744870486298885
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.CrossClustersIntoGrids: boofcv.alg.fiducial.calib.squares.SquareNode findSeedNode(java.util.List)>": 0.28216693363847284
        }, 
        {
            "<boofcv.alg.geo.triangulate.ResidualsTriangulateSimple: void setObservations(java.util.List,java.util.List)>": 0.27042812422182266
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: void move(int[])>": [
        {
            "<boofcv.misc.BoofMiscOps: int countNotZero(int[],int)>": 0.3337470333210918
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.32228604660983345
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.30406585454728496
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.3009189777020341
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectSparseBasicWta_S32: boolean select(int[],int)>": 0.2965296215216254
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolator: void graycodeBckRecursive(int)>": [
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.2759395090892489
        }, 
        {
            "<boofcv.alg.filter.binary.impl.ImplBinaryBorderOps: void edge8(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayU8)>": 0.267431929505483
        }, 
        {
            "<boofcv.alg.filter.binary.impl.ImplBinaryBorderOps: void removePointNoise(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayU8)>": 0.267431929505483
        }, 
        {
            "<boofcv.alg.filter.binary.impl.ImplBinaryBorderOps: void dilate8(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayU8)>": 0.2661437601418819
        }, 
        {
            "<boofcv.alg.filter.binary.impl.ImplBinaryBorderOps: void erode8(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayU8)>": 0.2661437601418819
        }
    ], 
    "<net.imglib2.img.list.ListRandomAccess: void move(int[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.48127206127357863
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(int[],int,int,int[],int,int,int,int)>": 0.46258311727619766
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(int[],int,int,int[],int,int,int,int)>": 0.4579797920891351
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.45238499950810096
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int,int)>": 0.4459388514604529
        }
    ], 
    "<net.imglib2.type.numeric.real.AbstractRealType: boolean equals(java.lang.Object)>": [
        {
            "<boofcv.struct.feature.MatchScoreType$1: int compareTo(double,double)>": 0.3895444788308023
        }, 
        {
            "<boofcv.struct.feature.MatchScoreType$2: int compareTo(double,double)>": 0.3895444788308023
        }, 
        {
            "<Catalano.Core.DoubleRange: boolean IsOverlapping(Catalano.Core.DoubleRange)>": 0.37523513243350687
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.SquaresIntoCrossClusters: boolean candidateIsMuchCloser(boofcv.alg.fiducial.calib.squares.SquareNode,boofcv.alg.fiducial.calib.squares.SquareNode,double)>": 0.3724141770827977
        }, 
        {
            "<Catalano.Core.DoubleRange: boolean equals(java.lang.Object)>": 0.36801613852668713
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: void apply(int[],int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.6067861903613345
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.5872617032347149
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.5784801650212823
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5739590324502499
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5675778830572553
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgs: net.imglib2.img.planar.PlanarImg unsignedBytes(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.util.Util: double percentile(double[],double)>": [
        {
            "<net.coobird.thumbnailator.makers.ScaledThumbnailMaker: java.awt.image.BufferedImage make(java.awt.image.BufferedImage)>": 0.36893943442095806
        }, 
        {
            "<Catalano.Imaging.Filters.AdditiveNoise: int generateNumber(int,int)>": 0.3637678547437828
        }, 
        {
            "<boofcv.alg.geo.f.ParamFundamentalEpipolar: double selectDivisor(double[],double[])>": 0.357430628951279
        }, 
        {
            "<Catalano.Statistics.Kernels.BSpline: double Function(double[],double[])>": 0.34782930518430916
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double variance(boofcv.struct.image.GrayF64,double)>": 0.3454958833118684
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImgFactory: net.imglib2.img.sparse.NtreeImg createShortInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.19276205875091
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1894188866874611
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1894188866874611
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.18748458655706846
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1843130748885495
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void init(java.lang.Iterable)>": [
        {
            "<boofcv.alg.sfm.d3.VisOdomPixelDepthPnP: int dropUnusedTracks()>": 0.20619267628258242
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2028602073998423
        }, 
        {
            "<boofcv.alg.sfm.d2.ImageMotionPointTrackerKey: void pruneUnusedTracks()>": 0.19488726513352372
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.184275327026856
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomMonoPlaneInfinity: int dropUnusedTracks()>": 0.17652812648222563
        }
    ], 
    "<net.imglib2.converter.Converters: net.imglib2.IterableInterval convert(net.imglib2.IterableInterval,net.imglib2.converter.Converter,net.imglib2.type.Type)>": [
        {
            "<boofcv.gui.DepthVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.14052767196315077
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.14052767196315077
        }, 
        {
            "<org.dyn4j.collision.narrowphase.PairwiseTypedFallbackCondition: boolean isMatch(java.lang.Class,java.lang.Class)>": 0.13990854174238493
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.1323301932270773
        }, 
        {
            "<boofcv.abst.feature.associate.EnforceUniqueByScore: void <init>(boofcv.abst.feature.associate.Associate,boolean,boolean)>": 0.13090996793955453
        }
    ], 
    "<net.imglib2.util.Partition: void partitionSubList(java.util.ListIterator,java.util.ListIterator,java.util.Comparator)>": [
        {
            "<boofcv.struct.image.ImageInterleaved: void setTo(boofcv.struct.image.ImageInterleaved)>": 0.3479391984392845
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3342634886644773
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3342634886644773
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3342634886644773
        }, 
        {
            "<org.jbox2d.particle.StackQueue: void push(java.lang.Object)>": 0.3322089426097677
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImgFactory: net.imglib2.img.NativeImg createLongInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.22013790996351762
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.22013790996351762
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.21913871448496233
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.17791743639033888
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.17685992130468772
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void setImaginary(double)>": [
        {
            "<boofcv.abst.feature.describe.WrapDescribeBriefSo: boolean process(double,double,double,double,boofcv.struct.feature.TupleDesc_B)>": 0.3938932030004507
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerTwoPassKltPyramid: void setHint(double,double,boofcv.abst.feature.tracker.PointTrack)>": 0.34471455582844185
        }, 
        {
            "<Catalano.Core.FloatPoint: void <init>(double,double)>": 0.2567234320939922
        }, 
        {
            "<boofcv.alg.distort.TransformThenPixel_F32: boofcv.struct.distort.PointTransform_F32 set(double,double,double,double,double)>": 0.252831519888401
        }, 
        {
            "<boofcv.alg.distort.NormalizedToPixel_F32: boofcv.alg.distort.NormalizedToPixel_F32 set(double,double,double,double,double)>": 0.25216654846468495
        }
    ], 
    "<net.imglib2.util.Fraction: long mulCeil(long)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.4251627263623858
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.38915307820442
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.3740929216252027
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3593368101872273
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.3358284465724481
        }
    ], 
    "<net.imglib2.img.AbstractImg: void realMax(double[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF64)>": 0.43403432413324206
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedF64)>": 0.3949959276042379
        }, 
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.355658579433933
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.3530837074107076
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.3530837074107076
        }
    ], 
    "<net.imglib2.img.ImgView: boolean supportsOptimizedCursor(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.Joint,double)>": 0.31824766645685243
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomDualTrackPnP: boolean isFault()>": 0.30080950299263687
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: boolean equals(java.lang.Object)>": 0.29353607108458485
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: boolean equals(java.lang.Object)>": 0.29353607108458485
        }, 
        {
            "<com.flowpowered.react.math.Matrix2x2: boolean equals(java.lang.Object)>": 0.29353607108458485
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: void realMax(net.imglib2.RealPositionable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.position.transform.AbstractPositionableTransform: void setPosition(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.1541485340961506
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.1541485340961506
        }, 
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.14992195267502603
        }, 
        {
            "<boofcv.abst.geo.optimization.ModelCodecSwapData: void encode(org.ejml.data.DenseMatrix64F,double[])>": 0.14030768122609885
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.13988933632790707
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: void <init>(short)>": [
        {
            "<org.dyn4j.dynamics.WorldTest: void listeners()>": 0.17578656062036685
        }, 
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1650874417124289
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1650874417124289
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1650874417124289
        }, 
        {
            "<boofcv.examples.imageprocessing.ExampleFourierTransform: void applyBoxFilter(boofcv.struct.image.GrayF32)>": 0.16499383795475248
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void quaternionMultiply(double[],double[],double[])>": [
        {
            "<boofcv.alg.geo.pose.UtilLepetitEPnP: void residuals_Control3(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F,double[],double[])>": 0.49086720450952676
        }, 
        {
            "<boofcv.alg.geo.f.FundamentalLinear7: void computeCoefficients(double,double,double,double,double,double,double[])>": 0.48845192846804353
        }, 
        {
            "<boofcv.alg.geo.f.FundamentalLinear7: void computeCoefficientsMinus(double,double,double,double,double,double,double[])>": 0.48845192846804353
        }, 
        {
            "<boofcv.alg.geo.RodriguesRotationJacobian: void process(double,double,double)>": 0.48102024511641917
        }, 
        {
            "<Catalano.Imaging.Tools.FlusserSukMoments: double[] Compute(Catalano.Imaging.FastBitmap)>": 0.480462187020207
        }
    ], 
    "<net.imglib2.converter.RealARGBConverter: void convert(net.imglib2.type.numeric.RealType,net.imglib2.type.numeric.ARGBType)>": [
        {
            "<Catalano.Imaging.Filters.RotateBicubic: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.36688155951133744
        }, 
        {
            "<boofcv.alg.tracker.circulant.CirculantTracker: void gaussianKernel(double,double,boofcv.struct.image.GrayF64,double,boofcv.struct.image.GrayF64)>": 0.36459879845424176
        }, 
        {
            "<Catalano.Statistics.Distributions.BinomialDistribution: double ProbabilityMassFunction(int)>": 0.3630847947379048
        }, 
        {
            "<org.dyn4j.sandbox.panels.PreviewPanel: void paintComponent(java.awt.Graphics)>": 0.35883759937163323
        }, 
        {
            "<Catalano.Imaging.Filters.RotateNearestNeighbor: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.3563002876285806
        }
    ], 
    "<net.imglib2.converter.ComplexPowerGLogFloatConverter: void convert(java.lang.Object,java.lang.Object)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: float getParticleRadius()>": 0.23853746845732154
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleRadius(float)>": 0.22864348758157865
        }, 
        {
            "<boofcv.alg.weights.WeightDistanceSqGaussian_F32: float weight(float)>": 0.2240611673615186
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: com.flowpowered.react.math.Matrix4x4 negate(com.flowpowered.react.math.Matrix4x4)>": 0.22379599589359406
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: com.flowpowered.react.math.Matrix4x4 set(com.flowpowered.react.math.Matrix4x4)>": 0.2212884243243592
        }
    ], 
    "<net.imglib2.img.cell.CellImgFactory: net.imglib2.img.NativeImg create(long[],net.imglib2.type.NativeType)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18468978709403533
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18468978709403533
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.17073302537381008
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.13283668434178905
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.13283668434178905
        }
    ], 
    "<net.imglib2.position.transform.AbstractPositionableTransform: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_F64: float getF(int)>": 0.5869727736761196
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_F64: float getF(int)>": 0.5869727736761196
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F32: void setOutside(int,int,float)>": 0.49163800764408094
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_F64: void setOutside(int,int,double[])>": 0.49163800764408094
        }, 
        {
            "<boofcv.alg.weights.WeightPixelUniform_F32: float weight(int,int)>": 0.4868016044136483
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: long getLongPosition(int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.3019798039754612
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2934418801513682
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.28597624687887924
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.2832526196212037
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.2832526196212037
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: long size()>": [
        {
            "<Catalano.Math.Random: long nextLong()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.25356909013876383
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.24518333341367335
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.24257833769207987
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.23024252222261737
        }
    ], 
    "<net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolator: void <init>(net.imglib2.neighborsearch.KNearestNeighborSearch,double)>": [
        {
            "<Catalano.Statistics.Distributions.DiscreteUniformDistribution: double Mean()>": 0.24185470214422566
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void rdft2d_sub(int,double[])>": 0.23661815821437493
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: boolean isInside(int,int,double,double,double,double)>": 0.2355879063679603
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int computeDiv(int)>": 0.233851363415032
        }, 
        {
            "<boofcv.alg.feature.describe.DescribePointSurfMod: void features(double,double,double,double,double,boofcv.struct.sparse.SparseImageGradient,double[])>": 0.22977098893681722
        }
    ], 
    "<net.imglib2.transform.integer.shear.ShearTransform: net.imglib2.transform.integer.shear.ShearTransform copy()>": [
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.34821720441410287
        }, 
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.34321021873718793
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.34321021873718793
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.34321021873718793
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.33170876861910514
        }
    ], 
    "<net.imglib2.position.transform.FloorOffset: void f(float[],long[])>": [
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchColor: void savePeakColor(float[])>": 0.3347410427600584
        }, 
        {
            "<boofcv.alg.tracker.meanshift.TrackerMeanShiftComaniciu2003: double distanceHistogram(float[],float[])>": 0.2985858407750202
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.28354434249626415
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2665970449019919
        }, 
        {
            "<boofcv.alg.tracker.meanshift.LocalWeightedHistogramRotRect: int computeHistogramBin(float[])>": 0.2647488358793661
        }
    ], 
    "<net.imglib2.type.numeric.AbstractARGBDoubleType: void sub(net.imglib2.type.numeric.AbstractARGBDoubleType)>": [
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void <init>(Catalano.Imaging.FastBitmap,Catalano.Core.DoublePoint,Catalano.Core.DoublePoint,Catalano.Core.DoublePoint)>": 0.4092852551544683
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void <init>(Catalano.Imaging.FastBitmap,double,double,double,double,double,double)>": 0.4090866806055765
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void <init>(Catalano.Imaging.FastBitmap,Catalano.Core.IntPoint,Catalano.Core.IntPoint,Catalano.Core.IntPoint)>": 0.40846718856297415
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void setNodes(Catalano.Imaging.ActiveContour.Ovuscule.OvusculeSnake2DNode[])>": 0.40643093135163977
        }, 
        {
            "<Catalano.Math.ComplexNumber: void Pow(double)>": 0.4046486092999563
        }
    ], 
    "<net.imglib2.util.Util: int getSuggestedKernelDiameter(double)>": [
        {
            "<boofcv.alg.transform.ii.SparseIntegralGradient_NoBorder: void setWidth(double)>": 0.3706351817728309
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int indexOfPreviousCounterClockwiseEdge(int)>": 0.3546626118426799
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int indexOfNextCounterClockwiseEdge(int)>": 0.3546626118426799
        }, 
        {
            "<boofcv.alg.transform.ii.impl.SparseIntegralSample_F32: void setWidth(double)>": 0.33125406373412847
        }, 
        {
            "<boofcv.alg.transform.ii.impl.SparseIntegralSample_I32: void setWidth(double)>": 0.33125406373412847
        }
    ], 
    "<net.imglib2.AbstractCursor: int getIntPosition(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.40518798522191357
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.40518798522191357
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.341054784608223
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.3406984362523294
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.33474618221446256
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.LanczosInterpolatorFactory: net.imglib2.interpolation.randomaccess.LanczosInterpolator create(net.imglib2.RandomAccessible)>": [
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_S32: void <init>(double,int,double,boolean)>": 0.2843912416997538
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_F32: void <init>(double,int,double,boolean)>": 0.2843912416997538
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_S16: void <init>(double,int,double,boolean)>": 0.2843912416997538
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitSegment: void <init>(double,double,int)>": 0.2588513393020967
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitLoop: void <init>(double,double,int)>": 0.2588513393020967
        }
    ], 
    "<net.imglib2.display.ColorTable8: byte[][] gray()>": [
        {
            "<Catalano.Math.Matrix: int Min(int[][])>": 0.2985245665206666
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[][])>": 0.2985245665206666
        }, 
        {
            "<Catalano.Math.Matrix: void Fill(int[][],int)>": 0.28041867716377517
        }, 
        {
            "<Catalano.Math.Matrix: void Divide(int[][],int)>": 0.2724965581201581
        }, 
        {
            "<Catalano.Math.Matrix: void Add(int[][],int)>": 0.2724965581201581
        }
    ], 
    "<net.imglib2.Point: void move(int,int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3961526039662581
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3961526039662581
        }, 
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.3530525422571834
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long[],int,int,int,int)>": 0.35003155127049956
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long[],int,int,int,int)>": 0.35003155127049956
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: void sub(net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3072686627225503
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.28110449005613686
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2563707359043695
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.25482774013930604
        }, 
        {
            "<org.jbox2d.common.Timer: float getMilliseconds()>": 0.24996726247857678
        }
    ], 
    "<net.imglib2.PointSampleList$PointSampleListCursor: boolean hasNext()>": [
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.6023849455289535
        }, 
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.5934959054221014
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.5928412662400641
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.5928412662400641
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.5928412662400641
        }
    ], 
    "<net.imglib2.display.awt.UnsignedIntDataBuffer: void setElemDouble(int,int,double)>": [
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5410831769143688
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$7: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5399682881889801
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$3: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5399682881889801
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5379763801073878
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$2: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5379763801073878
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: void mul(double)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void access$000(boofcv.app.calib.AssistedCalibration,double,double,double,double)>": 0.32698200135725364
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceSe3SymmetricSq: void setIntrinsic(double,double,double,double,double,double)>": 0.3227982579192048
        }, 
        {
            "<boofcv.gui.fiducial.VisualizeFiducial: void drawLine(java.awt.Graphics2D,java.awt.geom.Line2D$Double,double,double,double,double)>": 0.3210716905727387
        }, 
        {
            "<boofcv.alg.sfm.robust.DistancePlane2DToPixelSq: void setIntrinsic(double,double,double)>": 0.3199511092812435
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceHomographyPixelSq: void setIntrinsic(double,double,double)>": 0.3199511092812435
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: boolean valueEquals(net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType)>": [
        {
            "<Catalano.Core.Stopwatch: boolean isRunning()>": 0.4713130480900184
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.45768280309529047
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.45768280309529047
        }, 
        {
            "<boofcv.io.javacv.JavaCVVideoImageSequence: boolean hasNext()>": 0.45768280309529047
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.4458788059479232
        }
    ], 
    "<net.imglib2.Point: void bck(int)>": [
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.3040307509187229
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: void set(int,float)>": 0.3031088913245535
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.28115957585733586
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.28115957585733586
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.28115957585733586
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsBorder: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned4BitType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.13241728540917574
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(boofcv.struct.image.GrayS64)>": 0.12114716624303801
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(boofcv.struct.image.GrayS64)>": 0.12114716624303801
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long min(boofcv.struct.image.GrayS64)>": 0.12114716624303801
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.1175542054203689
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void subtract(java.util.List)>": [
        {
            "<boofcv.alg.fiducial.calib.squares.CrossClustersIntoGrids: void process(java.util.List)>": 0.3217991161156942
        }, 
        {
            "<Catalano.Math.Geometry.ConvexHullDefects: java.util.ArrayList FindDefects(java.util.ArrayList,java.util.ArrayList)>": 0.2995762832382667
        }, 
        {
            "<org.dyn4j.dynamics.Body: java.util.List getJoints()>": 0.2989409631270295
        }, 
        {
            "<boofcv.alg.feature.detect.line.ImageLinePruneMerge: void pruneNBest(int)>": 0.2972041312965613
        }, 
        {
            "<boofcv.examples.sfm.ExampleMultiviewSceneReconstruction: void performReconstruction(java.util.List,int,double[][])>": 0.294646790714985
        }
    ], 
    "<net.imglib2.transform.integer.permutation.AbstractPermutationTransform: int apply(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.7971082718892609
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.7875797356576464
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.7666734068198182
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.7611977688432564
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: int get(int)>": 0.759469696969697
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: void indexToPositionWithOffset(long,long[],long[],float[])>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.31594590647389126
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.31584726372204075
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.3002222019395603
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.299529558753148
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.27243133255598945
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedCursor: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform: net.imglib2.transform.integer.TranslationTransform concatenate(net.imglib2.transform.integer.Translation)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4135447434467902
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4006785506591618
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.40024610406540684
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.3996675437982517
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.3963985457399915
        }
    ], 
    "<net.imglib2.display.projector.sampler.SamplingProjector2D: void <init>(int,int,net.imglib2.RandomAccessibleInterval,net.imglib2.IterableInterval,net.imglib2.converter.Converter,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long[],int,int,int,int)>": 0.3642508969740705
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long[],int,int,int,int)>": 0.3642508969740705
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long[],int,int,int,int)>": 0.3642508969740705
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.3617092554092471
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.3616764075453485
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: void setPosition(long,int)>": [
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.3831216413761011
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.3831216413761011
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: net.coobird.thumbnailator.util.exif.Orientation typeOf(int)>": 0.3703511912152942
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdType: net.coobird.thumbnailator.util.exif.IfdType typeOf(int)>": 0.3703511912152942
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: int getReminder(int,int[])>": 0.357411170983036
        }
    ], 
    "<net.imglib2.display.screenimage.awt.ArrayImgAWTScreenImage: java.awt.image.BufferedImage createBufferedImage(net.imglib2.type.NativeType,java.lang.Object,int,int)>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparitySparseScoreSadRect_S16: void <init>(int,int,int,int)>": 0.33099810822155923
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparitySparseScoreSadRect_U8: void <init>(int,int,int,int)>": 0.33099810822155923
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.3166136014343558
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.3136221170477808
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.3136221170477808
        }
    ], 
    "<net.imglib2.display.ColorTable8: int getLength()>": [
        {
            "<org.dyn4j.sandbox.ContactCounter: int getSensed()>": 0.2403963055372464
        }, 
        {
            "<org.jbox2d.pooling.normal.CircleStack: java.lang.Object pop()>": 0.2228513946579653
        }, 
        {
            "<Catalano.Imaging.Filters.RandomConvolution: int CalcLines(double[][])>": 0.21629192689911286
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Convolution: int CalcLines(int[][])>": 0.21629192689911286
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryErosion: int CalcLines(int[][])>": 0.21629192689911286
        }
    ], 
    "<net.imglib2.iterator.LocalizingIntervalIterator: void fwd()>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.3151017507305788
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.24635689629908686
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.24606131426177552
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.2379934513983723
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addGaussian(boofcv.struct.image.GrayS64,java.util.Random,double,long,long)>": 0.22677678705458654
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: void mul(net.imglib2.type.volatiles.AbstractVolatileRealType)>": [
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.23777855777677998
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.23777855777677998
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.23568803939131827
        }, 
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.23536608771641823
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean raycast(org.dyn4j.geometry.Vector2,org.dyn4j.geometry.Vector2,boolean,boolean,boolean,java.util.List)>": 0.22054992511898777
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: void fwd(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.38426913313519717
        }, 
        {
            "<Catalano.Imaging.Filters.HysteresisThreshold: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.3838710314704621
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3810792294336155
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3810792294336155
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void boundRectangleInside(boofcv.struct.image.ImageBase,boofcv.struct.ImageRectangle)>": 0.38035546652712293
        }
    ], 
    "<net.imglib2.view.MixedTransformView: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.021677749238102995
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: double realMin(int)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.3782432325354622
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F64: double unsafe_getD(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double convolveSparse(boofcv.struct.image.GrayF64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: void search(net.imglib2.RealLocalizable)>": [
        {
            "<org.dyn4j.geometry.Vector2: boolean equals(double,double)>": 0.34634706751629496
        }, 
        {
            "<org.dyn4j.geometry.Vector2: boolean isZero()>": 0.3319912393253032
        }, 
        {
            "<Catalano.Core.DoubleRange: boolean IsOverlapping(Catalano.Core.DoubleRange)>": 0.3307641388852039
        }, 
        {
            "<net.smert.jreactphysics3d.engine.Timer: boolean isPossibleToTakeStep()>": 0.3296009104225078
        }, 
        {
            "<com.flowpowered.react.engine.Timer: boolean isPossibleToTakeStep()>": 0.3296009104225078
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListLocalizingCursor: boolean hasNext()>": [
        {
            "<Catalano.Core.Stopwatch: boolean isRunning()>": 0.4945485634967093
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.4739643758646771
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.4739643758646771
        }, 
        {
            "<boofcv.io.javacv.JavaCVVideoImageSequence: boolean hasNext()>": 0.4739643758646771
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.4575697875022087
        }
    ], 
    "<net.imglib2.RealPoint: void setPosition(int[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayF64)>": 0.44889338435450676
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: double[] getDoublePivot()>": 0.42569034385914056
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS32,boofcv.struct.image.InterleavedF64)>": 0.4132829780629394
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.3869177292274659
        }, 
        {
            "<boofcv.misc.BoofMiscOps: int countNotZero(int[],int)>": 0.38267047448121627
        }
    ], 
    "<net.imglib2.type.AbstractBit64Type: void <init>(long,int)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.34492908182101584
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3136901412988969
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.3122019898570428
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.30681715136786547
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.3055705307911317
        }
    ], 
    "<net.imglib2.view.composite.RealComposite: void <init>(net.imglib2.RandomAccess,int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36016035441676975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.35455846459436624
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.35455846459436624
        }
    ], 
    "<net.imglib2.type.numeric.AbstractARGBDoubleType: void div(net.imglib2.type.numeric.AbstractARGBDoubleType)>": [
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void <init>(Catalano.Imaging.FastBitmap,Catalano.Core.DoublePoint,Catalano.Core.DoublePoint,Catalano.Core.DoublePoint)>": 0.4092852551544683
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void <init>(Catalano.Imaging.FastBitmap,double,double,double,double,double,double)>": 0.4090866806055765
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void <init>(Catalano.Imaging.FastBitmap,Catalano.Core.IntPoint,Catalano.Core.IntPoint,Catalano.Core.IntPoint)>": 0.40846718856297415
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void setNodes(Catalano.Imaging.ActiveContour.Ovuscule.OvusculeSnake2DNode[])>": 0.40643093135163977
        }, 
        {
            "<Catalano.Math.ComplexNumber: void Pow(double)>": 0.4046486092999563
        }
    ], 
    "<net.imglib2.RealPoint: void move(long[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.4456727144318825
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.4456727144318825
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel2D_F64,double)>": 0.4050803223871045
        }, 
        {
            "<Catalano.Math.Matrix: void Add(double[],double)>": 0.37319499086411423
        }, 
        {
            "<Catalano.Math.Matrix: void Subtract(double[],double)>": 0.37319499086411423
        }
    ], 
    "<net.imglib2.RealPoint: void setPosition(double[])>": [
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int[])>": 0.4632766488754014
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRows(double[],int[])>": 0.4632766488754014
        }, 
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.41549793349128344
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumn(double[][],int)>": 0.3973144980183334
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRow(double[][],int)>": 0.39592283060630346
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImgFactory: net.imglib2.img.NativeImg createFloatInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.21502420910886527
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.21502420910886527
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2140651468204297
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.17384752189777775
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.17275322472499285
        }
    ], 
    "<net.imglib2.view.iteration.SlicingCursor: float getFloatPosition(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.6188643624249502
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5517168169858438
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5382297579524616
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.5137724358016377
        }, 
        {
            "<org.jbox2d.collision.Distance$DistanceProxy: org.jbox2d.common.Vec2 getVertex(int)>": 0.5137724358016377
        }
    ], 
    "<net.imglib2.view.composite.AbstractNumericComposite: boolean valueEquals(java.lang.Object)>": [
        {
            "<Catalano.Core.Concurrent.MulticoreExecutor: java.util.List run(java.util.Collection)>": 0.33866465443692867
        }, 
        {
            "<boofcv.alg.filter.binary.BinaryImageOps: void clusterToBinary(java.util.List,boofcv.struct.image.GrayU8)>": 0.32990348973226585
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: java.awt.image.BufferedImage renderContours(java.util.List,int[],int,int,int,java.awt.image.BufferedImage)>": 0.31881813948553955
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: java.awt.image.BufferedImage renderContours(java.util.List,int,int,int,int,java.awt.image.BufferedImage)>": 0.3178399570755274
        }, 
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: java.util.List UltimateErodedPoints(Catalano.Imaging.FastBitmap)>": 0.30667331076248094
        }
    ], 
    "<net.imglib2.neighborsearch.KNearestNeighborSearchOnIterableRealInterval: void search(net.imglib2.RealLocalizable)>": [
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: void findHistogramPeaks()>": 0.36429217114225754
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void complexInverse(double[],boolean)>": 0.353032534897023
        }, 
        {
            "<Catalano.Math.Decompositions.EigenvalueDecomposition: void tql2()>": 0.33948210420924035
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverseFull(double[],boolean)>": 0.3391570850014278
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeAngle(int)>": 0.3371388409974483
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void getLowerBounds(long[],java.util.List)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void renderArrows()>": 0.38177871044769857
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void renderMagnets()>": 0.38177871044769857
        }, 
        {
            "<boofcv.demonstrations.calibration.CommonDetectCalibrationApp: boolean isInGrids(georegression.struct.shapes.Polygon2D_F64)>": 0.3703689017361448
        }, 
        {
            "<boofcv.gui.feature.AssociationScorePanel: void computeScore(boolean,int)>": 0.3592813643856071
        }, 
        {
            "<org.dyn4j.collision.AbstractCollidable: org.dyn4j.collision.Fixture removeFixture(org.dyn4j.geometry.Vector2)>": 0.3533833279992318
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.LongArray: java.lang.Object createArray(int)>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_F32_U8: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.33562632983523094
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_S32_U8: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.33562632983523094
        }, 
        {
            "<boofcv.alg.distort.impl.ImplImageDistort_PL: void apply(boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase,int,int,int,int)>": 0.3042974058213425
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2838082849127157
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2838082849127157
        }
    ], 
    "<net.imglib2.img.array.ArrayImgFactory: net.imglib2.img.array.ArrayImg createFloatInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.16989915581702875
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.16989915581702875
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: void set(double,double,double,double)>": [
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitSegment: void <init>(double,double,int)>": 0.4064009546804196
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitLoop: void <init>(double,double,int)>": 0.4064009546804196
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationAverageGradientIntegral: void <init>(double,int,double,int,double,java.lang.Class)>": 0.4052242175323214
        }, 
        {
            "<boofcv.factory.feature.orientation.FactoryOrientationAlgs: boofcv.abst.feature.orientation.OrientationIntegral image_ii(double,int,double,int,double,java.lang.Class)>": 0.39938478135446565
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply(boofcv.struct.image.GrayF64,double,double,double,boofcv.struct.image.GrayF64)>": 0.38161150542734484
        }
    ], 
    "<net.imglib2.type.numeric.real.DoubleType: boolean valueEquals(net.imglib2.type.numeric.real.DoubleType)>": [
        {
            "<Catalano.Core.DoubleRange: boolean IsOverlapping(Catalano.Core.DoubleRange)>": 0.4916769230762067
        }, 
        {
            "<net.smert.jreactphysics3d.engine.Timer: boolean isPossibleToTakeStep()>": 0.47827241567643647
        }, 
        {
            "<com.flowpowered.react.engine.Timer: boolean isPossibleToTakeStep()>": 0.47827241567643647
        }, 
        {
            "<org.dyn4j.geometry.Interval: boolean isDegenerate()>": 0.47827241567643647
        }, 
        {
            "<org.dyn4j.geometry.Vector2: boolean isZero()>": 0.47101000413560123
        }
    ], 
    "<net.imglib2.iterator.ZeroMinIntervalIterator: void localize(int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.2213851494399855
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.22031074191333022
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.19095687358185587
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.19095687358185587
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.18774033864527004
        }
    ], 
    "<net.imglib2.type.numeric.AbstractARGBDoubleType: void mul(double)>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.39560806779301155
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.3955051620893226
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.3954931893149783
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Vector3 solve33(org.dyn4j.geometry.Vector3)>": 0.395019681428735
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Matrix33 getInverse()>": 0.3948451146191883
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform: double[][] getMatrix()>": [
        {
            "<Catalano.Math.Matrix: double[][] Identity(int)>": 0.40720836102135366
        }, 
        {
            "<Catalano.Math.Matrix: double[][] CreateMatrix2D(int,int,double)>": 0.38512569719028944
        }, 
        {
            "<Catalano.Math.Matrix: double[][] Identity(int,int)>": 0.384955654989791
        }, 
        {
            "<Catalano.Math.Decompositions.SingularValueDecomposition: double[][] getS()>": 0.38287381305495305
        }, 
        {
            "<Catalano.Math.Matrix: double[][] Reshape(double[],int,int)>": 0.38215514465429934
        }
    ], 
    "<net.imglib2.view.SlicingRandomAccess: void move(int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4046399344742656
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3964180751707057
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.38322075140312534
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.3828339140246314
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS64)>": 0.3799969325132733
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRealRandomAccessibleRealInterval: net.imglib2.converter.read.ConvertedRealRandomAccess realRandomAccess()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04794633014853841
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.046423834544262965
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04601130713546223
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04552231504557686
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04506479272965292
        }
    ], 
    "<net.imglib2.img.sparse.FloatNtree: net.imglib2.img.sparse.NtreeAccess createInstance(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1826418206216855
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1826418206216855
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16881288427264435
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.12701685073623692
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.12701685073623692
        }
    ], 
    "<net.imglib2.KDTree$KDTreeCursor: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F32: float unsafe_getF(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.segmentation.slic.SegmentSlic_F32: float getIntensity(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_zero(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_unsafe(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float convolveSparse(boofcv.struct.image.GrayF32,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.type.logic.BitType: void setInteger(int)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.28504492370917633
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.26375513728387545
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.24597411739212444
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.24292434193111667
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.2414848320062348
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void setPosition(long,int)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMax(int,int)>": 0.43564407068021943
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMin(int,int)>": 0.43564407068021943
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3968769366485626
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setRGB(int,int[])>": 0.39614689351168303
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.39517745364990897
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: int compareTo(java.lang.Object)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3208770324203471
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3208770324203471
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3208770324203471
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$200(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.30231370138082325
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$100(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.30231370138082325
        }
    ], 
    "<net.imglib2.display.screenimage.awt.UnsignedShortAWTScreenImage: void <init>(net.imglib2.type.numeric.integer.UnsignedShortType,net.imglib2.img.basictypeaccess.array.ShortArray,long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.15729768613092662
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.15729768613092662
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1456513577327886
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.13908532168678328
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.12126492036826719
        }
    ], 
    "<net.imglib2.transform.integer.permutation.AbstractPermutationTransform: int[] getLutCopy()>": [
        {
            "<boofcv.struct.image.InterleavedS32: void _setData(java.lang.Object)>": 0.30077011056745767
        }, 
        {
            "<boofcv.struct.image.GrayS32: void _setData(java.lang.Object)>": 0.30077011056745767
        }, 
        {
            "<Catalano.Math.Dissimilarities.RogersTanimotoDissimilarity: double Compute(java.lang.Object,java.lang.Object)>": 0.2537442445740994
        }, 
        {
            "<Catalano.Math.Dissimilarities.SokalMichenerDissimilarity: double Compute(java.lang.Object,java.lang.Object)>": 0.2537442445740994
        }, 
        {
            "<Catalano.Math.Dissimilarities.MatchingDissimilarity: double Compute(java.lang.Object,java.lang.Object)>": 0.2537442445740994
        }
    ], 
    "<net.imglib2.view.TransformBuilder: void <init>(net.imglib2.Interval,net.imglib2.RandomAccessible)>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void renderBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.2861833492799132
        }, 
        {
            "<boofcv.gui.DepthVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.2760500740689476
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.2760500740689476
        }, 
        {
            "<boofcv.factory.feature.detect.extract.FactoryFeatureExtractor: boofcv.abst.feature.detect.extract.NonMaxSuppression nonmax(boofcv.abst.feature.detect.extract.ConfigExtract)>": 0.27080602263046516
        }, 
        {
            "<boofcv.alg.feature.detect.interest.GeneralFeatureDetector: void <init>(boofcv.abst.feature.detect.intensity.GeneralFeatureIntensity,boofcv.abst.feature.detect.extract.NonMaxSuppression)>": 0.2680967402228233
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: int hashCode()>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.33079395522513394
        }, 
        {
            "<org.dyn4j.geometry.Matrix22: int hashCode()>": 0.32316328452209164
        }, 
        {
            "<org.dyn4j.geometry.Vector3: int hashCode()>": 0.3228474515825519
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: int hashCode()>": 0.3205657897285508
        }, 
        {
            "<org.dyn4j.geometry.Vector2: int hashCode()>": 0.3186541343468169
        }
    ], 
    "<net.imglib2.view.MixedRandomAccess: void setPosition(net.imglib2.Localizable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.34835057938993413
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.34491177708266874
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.33892381409161515
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.33561764173593867
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.33439052855778306
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: net.imglib2.type.numeric.NativeARGBDoubleType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.display.projector.composite.CompositeXYProjector: int updateCurrentArrays()>": [
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: int getNumUnknownViews()>": 0.3009283773684975
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: int[] makeFateTable()>": 0.27922317900328164
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.2640517105191177
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.26230688798192175
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.25867836547388084
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: long size()>": [
        {
            "<Catalano.Math.Random: long nextLong()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.25356909013876383
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.24518333341367335
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.24257833769207987
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.23024252222261737
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRealRandomAccessibleRealInterval: net.imglib2.converter.read.ConvertedRealRandomAccess realRandomAccess(net.imglib2.RealInterval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04032389192727559
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03904344047215152
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.038696496074155144
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.03828524323948056
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03790045715961838
        }
    ], 
    "<net.imglib2.position.transform.FloorOffset: void f(double[],long[])>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.3429132816033033
        }, 
        {
            "<Catalano.Statistics.Kernels.Linear: double Function(double[],double[])>": 0.31666549913370023
        }, 
        {
            "<Catalano.Math.Distances.IntersectionDistance: double Compute(double[],double[])>": 0.310805201940993
        }, 
        {
            "<Catalano.Statistics.Kernels.Hellinger: double Function(double[],double[])>": 0.29705623117754476
        }, 
        {
            "<Catalano.Imaging.Tools.HistogramOfOrientedGradients: double Euclidean(double[])>": 0.28649908809123625
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: void decIndex(int)>": [
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.6241711271514602
        }, 
        {
            "<boofcv.abst.fiducial.calib.CalibrationDetectorSquareFiducialGrid: int getPointIndex(int,int)>": 0.5747801203619927
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$9: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5631673913280111
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: int getIndex(int,int,int)>": 0.5573780954063181
        }, 
        {
            "<boofcv.struct.image.ImageBase: int getIndex(int,int)>": 0.5485724542486418
        }
    ], 
    "<net.imglib2.type.numeric.real.DoubleType: void incIndex(int)>": [
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.6241711271514602
        }, 
        {
            "<boofcv.abst.fiducial.calib.CalibrationDetectorSquareFiducialGrid: int getPointIndex(int,int)>": 0.5747801203619927
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$9: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5631673913280111
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: int getIndex(int,int,int)>": 0.5573780954063181
        }, 
        {
            "<boofcv.struct.image.ImageBase: int getIndex(int,int)>": 0.5485724542486418
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: void setComponentMapping(int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5016452850811526
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.49358880469178634
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.4816319390020964
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.4777494390974596
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.47397489626157424
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: void setPlane(int,net.imglib2.img.basictypeaccess.array.ArrayDataAccess)>": [
        {
            "<org.box2d.proto.Box2D$PbJoint: int getJoints(int)>": 0.21202651559508215
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint$Builder: int getJoints(int)>": 0.21202651559508215
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: int getBodies(int)>": 0.21202651559508215
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint$Builder: int getBodies(int)>": 0.21202651559508215
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint$Builder: org.box2d.proto.Box2D$PbJoint$Builder setJoints(int,int)>": 0.20935115458415
        }
    ], 
    "<net.imglib2.type.label.BasePairBitType$Base: void <init>(java.lang.String,int)>": [
        {
            "<net.smert.jreactphysics3d.configuration.ContactsPositionCorrectionTechnique: void <init>(java.lang.String,int)>": 0.4415584415584415
        }, 
        {
            "<net.smert.jreactphysics3d.constraint.JointType: void <init>(java.lang.String,int)>": 0.4415584415584415
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.CollisionShapeType: void <init>(java.lang.String,int)>": 0.4415584415584415
        }, 
        {
            "<net.smert.jreactphysics3d.configuration.JointsPositionCorrectionTechnique: void <init>(java.lang.String,int)>": 0.4415584415584415
        }, 
        {
            "<Catalano.Statistics.Analysis.PrincipalComponentAnalysis$AnalysisMethod: void <init>(java.lang.String,int)>": 0.4415584415584415
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg longs(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsPeriodic: void move(int,int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.30617888808505817
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.27662353425549735
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.26148842044715837
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2613625437880368
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2613625437880368
        }
    ], 
    "<net.imglib2.position.transform.Round: void move(double[])>": [
        {
            "<Catalano.Statistics.Correlations: double VectorInnerProduct(double[],double[])>": 0.3027512109199807
        }, 
        {
            "<Catalano.Math.Matrix: double InnerProduct(double[],double[])>": 0.3027512109199807
        }, 
        {
            "<Catalano.Math.Distances.Distance: double SquaredEuclidean(double[],double[])>": 0.2936885687388374
        }, 
        {
            "<Catalano.Math.Special: double Polevl(double,double[],int)>": 0.2926082013304288
        }, 
        {
            "<Catalano.Statistics.Kernels.Linear: double Function(double[],double[])>": 0.29229355750661956
        }
    ], 
    "<net.imglib2.img.planar.PlanarLocalizingCursor: void <init>(net.imglib2.img.planar.PlanarImg)>": [
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getIndex(int[])>": 0.367018232020117
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3655784702069969
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3653933498777949
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.36492057777156206
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal7(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3643343394764823
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgFactory: net.imglib2.img.NativeImg createFloatInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.13257949307988665
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.13257949307988665
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.12277271921448075
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.12050140956603536
        }, 
        {
            "<boofcv.gui.StandardAlgConfigPanel: void <init>()>": 0.11572751247156893
        }
    ], 
    "<net.imglib2.transform.integer.permutation.AbstractPermutationTransform: long applyChecked(int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.48403464276956165
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.48403464276956165
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.48403464276956165
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int max(int[],int,int,int,int)>": 0.4501558038107965
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int min(int[],int,int,int,int)>": 0.4501558038107965
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: int get()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.42101300312185536
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.42101300312185536
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.42101300312185536
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3845439992738321
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.SquaresIntoRegularClusters: int add(int,int)>": 0.37821769671933936
        }
    ], 
    "<net.imglib2.img.array.ArrayImg: net.imglib2.img.array.ArrayRandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05063696835418333
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04902903378454601
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04859335628264
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04807692307692309
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04759372565678686
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolator: void <init>(net.imglib2.RandomAccessible,net.imglib2.type.numeric.NumericType)>": [
        {
            "<boofcv.alg.segmentation.watershed.WatershedVincentSoille1991: int getTotalRegions()>": 0.1926682869585721
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: void <init>(int)>": 0.18907258694731244
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.StereoDisparityWtoNaiveFive: void <init>(int,int,int,int)>": 0.18870425996456705
        }, 
        {
            "<Catalano.Math.Decompositions.SingularValueDecomposition: double cond()>": 0.1837167269742557
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindowIntegral: void <init>(double,double,double,int,double,int,java.lang.Class)>": 0.1832112426124382
        }
    ], 
    "<net.imglib2.view.composite.NumericComposite: void <init>(net.imglib2.RandomAccess,int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36016035441676975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.35455846459436624
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.35455846459436624
        }
    ], 
    "<net.imglib2.Point: void fwd(int)>": [
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.3040307509187229
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: void set(int,float)>": 0.3031088913245535
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.28115957585733586
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.28115957585733586
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.28115957585733586
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: void bck(int)>": [
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.3040307509187229
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: void set(int,float)>": 0.3031088913245535
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.28115957585733586
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.28115957585733586
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.28115957585733586
        }
    ], 
    "<net.imglib2.view.composite.AbstractNumericComposite: void sub(net.imglib2.view.composite.AbstractNumericComposite)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27369975151850634
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27369975151850634
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27369975151850634
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.2715165016949687
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.27085028831903113
        }
    ], 
    "<net.imglib2.type.AbstractNativeType: void incIndex(int)>": [
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.6241711271514602
        }, 
        {
            "<boofcv.abst.fiducial.calib.CalibrationDetectorSquareFiducialGrid: int getPointIndex(int,int)>": 0.5747801203619927
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$9: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5631673913280111
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: int getIndex(int,int,int)>": 0.5573780954063181
        }, 
        {
            "<boofcv.struct.image.ImageBase: int getIndex(int,int)>": 0.5485724542486418
        }
    ], 
    "<net.imglib2.img.cell.AbstractCell: void <init>(int[],long[])>": [
        {
            "<boofcv.misc.BoofMiscOps: int countNotZero(int[],int)>": 0.30804696559569233
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: void bufferMove(int)>": 0.30799419012272816
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.305469550515188
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.305469550515188
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void getOutside(int,int,int[])>": 0.3022993723546171
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: void dec()>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.24835261320161472
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.23841676862237873
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.22861720296895982
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.22253502979609519
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.22085483808094833
        }
    ], 
    "<net.imglib2.img.list.ListImgFactory: net.imglib2.img.list.ListImg create(long[],java.lang.Object)>": [
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.1907721250695658
        }, 
        {
            "<net.coobird.thumbnailator.resizers.ProgressiveBilinearResizer: void <init>(java.util.Map)>": 0.1907721250695658
        }, 
        {
            "<net.coobird.thumbnailator.resizers.BicubicResizer: void <init>(java.util.Map)>": 0.1907721250695658
        }, 
        {
            "<net.coobird.thumbnailator.resizers.BilinearResizer: void <init>(java.util.Map)>": 0.1907721250695658
        }, 
        {
            "<boofcv.abst.geo.fitting.DistanceFromModelResidualN: void setModel(java.lang.Object)>": 0.1907721250695658
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.FloatArray: net.imglib2.img.basictypeaccess.array.FloatArray createArray(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.29781790326307295
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.29649405014104924
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.29649405014104924
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.2930792985571642
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.2930792985571642
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: void sub(net.imglib2.type.numeric.integer.UnsignedIntType)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.31376158296399126
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.29001144867368306
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.27879041970933305
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.2784751582084055
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.27376256708444696
        }
    ], 
    "<net.imglib2.AbstractCursor: void localize(int[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS32)>": 0.4199711370798867
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedS32)>": 0.3854336973927375
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void fill(boofcv.struct.convolve.Kernel2D_I32,int)>": 0.33705051045765616
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.3311969875455314
        }, 
        {
            "<Catalano.Math.Matrix: void Fill(int[],int)>": 0.322948973507397
        }
    ], 
    "<net.imglib2.view.SubsampleIntervalView: void realMin(double[])>": [
        {
            "<Catalano.Math.Matrix: void Clear(double[])>": 0.3657224268738773
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRow(double[][],int)>": 0.30721399398412463
        }, 
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.3053244678899324
        }, 
        {
            "<Catalano.Math.Matrix: void Fill(double[],double)>": 0.2964827221599526
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int[])>": 0.28343821153700616
        }
    ], 
    "<net.imglib2.position.transform.AbstractPositionableTransform: void move(int,int)>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxc020(double[],int)>": 0.3451471224549485
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxb020(double[],int)>": 0.3451471224549485
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftx020(double[],int)>": 0.341009305716013
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void rdft2d_sub(int,double[])>": 0.3259734241129261
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void rftbsub(int,double[],int,int,double[],int)>": 0.32572916874721997
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned2BitType: void <init>(net.imglib2.img.basictypeaccess.LongAccess)>": [
        {
            "<org.dyn4j.collision.manifold.Manifold: void <init>()>": 0.08964416837932251
        }, 
        {
            "<Catalano.Math.Transforms.FourierTransform: void FFTShift2D(double[][],Catalano.Math.Transforms.FourierTransform$Direction)>": 0.07039097780843663
        }, 
        {
            "<Catalano.Math.Transforms.FourierTransform: void FFTShift2D(java.lang.Object[][],Catalano.Math.Transforms.FourierTransform$Direction)>": 0.07039097780843663
        }, 
        {
            "<org.dyn4j.samples.SimulationFrame: void start()>": 0.06788603286956393
        }, 
        {
            "<org.dyn4j.examples.ExampleGraphics2D: void start()>": 0.06788603286956393
        }
    ], 
    "<net.imglib2.img.sparse.NtreeCursor: void <init>(net.imglib2.img.sparse.NtreeCursor)>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS8,boofcv.struct.image.GrayS64)>": 0.20779465020845012
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayS64)>": 0.20779465020845012
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayF64,boofcv.struct.image.GrayS64)>": 0.20779465020845012
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS16,boofcv.struct.image.GrayS64)>": 0.20779465020845012
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS64)>": 0.20759071719994626
        }
    ], 
    "<net.imglib2.transform.integer.shear.InverseShearTransform: net.imglib2.transform.integer.shear.AbstractShearTransform copy()>": [
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.36064475448091615
        }, 
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.35550739112981244
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.35550739112981244
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.35550739112981244
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.3435110344062333
        }
    ], 
    "<net.imglib2.util.Intervals: net.imglib2.FinalInterval intersect(net.imglib2.Interval,net.imglib2.Interval)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.30448528353704607
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void addObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.2963843757309752
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2927526769720503
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.2828830695957953
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.27388333609104365
        }
    ], 
    "<net.imglib2.position.transform.AbstractPositionableTransform: void move(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.34962629675332274
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.34962629675332274
        }, 
        {
            "<boofcv.alg.descriptor.UtilFeature: void normalizeL2(boofcv.struct.feature.TupleDesc_F64)>": 0.31795749818861674
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel2D_F64,double)>": 0.31520892848310184
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftx020(double[],int)>": 0.30292437062310906
        }
    ], 
    "<net.imglib2.view.iteration.IterableTransformBuilder$Slice: java.lang.Object firstElement()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.17644756289148478
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.16887738309407185
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.16887738309407185
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.15963821317628712
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.15702145185796754
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg ints(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccessible: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.type.logic.BitType: long getIntegerLong()>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.4290229578699429
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.42001296289923407
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean overlap(int,int)>": 0.3845799577222375
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean isSubset(int,int)>": 0.3845799577222375
        }, 
        {
            "<org.jbox2d.dynamics.Body: boolean isFixedRotation()>": 0.3781455734819416
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: void localize(long[])>": [
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.38166187337735
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.3360932364854249
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.32399332742693354
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.304729691515267
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS8,boofcv.struct.image.GrayS64)>": 0.29599130104844756
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: void fwd(int)>": [
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayF32)>": 0.20493739749916517
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegion pixelRegion(int,int,java.lang.Class)>": 0.1865077146355485
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegionNCC pixelRegionNCC(int,int,java.lang.Class)>": 0.1865077146355485
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayF32,int,int,boofcv.struct.image.GrayF32)>": 0.18191061672533412
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.GIntegralImageFeatureIntensity: void hessian(boofcv.struct.image.ImageGray,int,int,boofcv.struct.image.GrayF32)>": 0.17562079494962646
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType copy()>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.2119331571431725
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.2119331571431725
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.2119331571431725
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.InterleavedS64,long,long,boofcv.struct.image.InterleavedS64)>": 0.20172659041450897
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.InterleavedS64,long,long,long,boofcv.struct.image.InterleavedS64)>": 0.20172659041450897
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg complexFloats(float[],long[])>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void renderSelectedBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.15133719961189765
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.14500138301785087
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void <init>(float[],int,int)>": 0.14090915281241065
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: void <init>(int,float[])>": 0.13847840230472064
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void renderEditingBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.1374182122272168
        }
    ], 
    "<net.imglib2.display.awt.SignedShortDataBuffer: void setElem(int,int,int)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.5500916396159242
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.5500916396159242
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.545166705119368
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.5391191227455855
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.5391191227455855
        }
    ], 
    "<net.imglib2.img.planar.PlanarCursor: void jumpFwd(long)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.35565940117226263
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.InterleavedS64,java.util.Random,long,long)>": 0.3270508726939286
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.32453348078020294
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillUniform(boofcv.struct.image.InterleavedS64,java.util.Random,long,long)>": 0.3182484640266238
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.314276511135292
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.ByteArray: void <init>(int)>": [
        {
            "<boofcv.struct.feature.TupleDesc_I8: void <init>(int)>": 0.515625
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.48756114143768725
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.480546430335053
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.4690702513207908
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.45564948974375985
        }
    ], 
    "<net.imglib2.transform.integer.BoundingBox: void corner2(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.468536325802491
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.45644740722555815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4549590327161815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4514297284100339
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.44882531202406517
        }
    ], 
    "<net.imglib2.AbstractRealLocalizable: void <init>(int)>": [
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(int,int)>": 0.43702142191691895
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.39733846008307605
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,int)>": 0.39164643438854907
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int)>": 0.3751304661008273
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void <init>(int)>": 0.37145342306048473
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: double getPhaseDouble()>": [
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.3239158125380203
        }, 
        {
            "<boofcv.abst.geo.fitting.DistanceFromModelResidual: double computeDistance(java.lang.Object)>": 0.31287079776504223
        }, 
        {
            "<boofcv.io.SimpleStringNumberReader: double getDouble()>": 0.3125
        }, 
        {
            "<Catalano.Statistics.Distributions.LaplaceDistribution: double Entropy()>": 0.3109020581105081
        }, 
        {
            "<Catalano.Math.Approximation: double Lowprecision_Pow(double,double)>": 0.3084858451322381
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void inc()>": [
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.19504242526339868
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.1926507311049134
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.1926507311049134
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.1926507311049134
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.19252179372487355
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: float getRealFloat()>": [
        {
            "<Catalano.Imaging.Tools.ImageStatistics: float Variance(Catalano.Imaging.FastBitmap,float)>": 0.3135392598020063
        }, 
        {
            "<boofcv.alg.interpolate.array.Interpolate1D_F32: float process(int,float)>": 0.30881885353145466
        }, 
        {
            "<Catalano.Math.Geometry.Line: float DistanceToPoint(Catalano.Core.IntPoint)>": 0.30273991679910894
        }, 
        {
            "<boofcv.alg.weights.WeightPixelUniform_F32: float weightIndex(int)>": 0.3018132254679891
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$GSingleToMB: float getF(int)>": 0.29532163742690054
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.util.ConstantUtils$2: void <init>(int,java.lang.Object)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.3407558170541846
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.3407558170541846
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.3407558170541846
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.3388339168158685
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.3388339168158685
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: boolean valueEquals(net.imglib2.type.numeric.integer.GenericShortType)>": [
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.4254694532761816
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.406317917966039
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.406317917966039
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.406317917966039
        }, 
        {
            "<net.coobird.thumbnailator.ThumbnailParameter: boolean useOriginalImageType()>": 0.406317917966039
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.LongArray: long getValue(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.6444652635187575
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.5168876727488003
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.5115679070521639
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4966616068166122
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.4924576911988799
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: double realMin(int)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.3782432325354622
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F64: double unsafe_getD(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double convolveSparse(boofcv.struct.image.GrayF64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: long getBinCount()>": [
        {
            "<Catalano.Math.Random: long nextLong()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.25356909013876383
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.24518333341367335
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.24257833769207987
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.23024252222261737
        }
    ], 
    "<net.imglib2.img.cell.CellLocalizingCursor: void jumpFwd(long)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.24700429753520786
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.24700429753520786
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.24700429753520786
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.InterleavedS64,long,long,boofcv.struct.image.InterleavedS64)>": 0.2425489222457443
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.InterleavedS64,long,long,long,boofcv.struct.image.InterleavedS64)>": 0.2425489222457443
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListRandomAccess: void setPosition(long,int)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3121908242076813
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.31119825274658075
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.3022237950894747
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.2939231869658483
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2929899688024651
        }
    ], 
    "<net.imglib2.img.planar.PlanarCursor: void fwd()>": [
        {
            "<Catalano.Math.Tools: int DigitalRoot(int)>": 0.3752518025440728
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.36398313685192185
        }, 
        {
            "<Catalano.Imaging.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.36398313685192185
        }, 
        {
            "<boofcv.alg.filter.binary.impl.ImplBinaryBorderOps: void edge8(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayU8)>": 0.36130694343681413
        }, 
        {
            "<boofcv.alg.filter.binary.impl.ImplBinaryBorderOps: void removePointNoise(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayU8)>": 0.36130694343681413
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: void add(net.imglib2.type.numeric.integer.GenericShortType)>": [
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMaximum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.19236550035850902
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMinimum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.19236550035850902
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void process(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.1888602470210904
        }, 
        {
            "<boofcv.struct.QueueCorner: void add(int,int)>": 0.1784094133416528
        }, 
        {
            "<boofcv.demonstrations.feature.detect.VideoDetectCorners: void updateGUI(java.awt.image.BufferedImage,boofcv.struct.image.ImageGray)>": 0.16856832278677877
        }
    ], 
    "<net.imglib2.view.MixedRandomAccess: void setPosition(int,int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.41194722979619347
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.40384271683935186
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.40326590795040174
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.40087370119131766
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3989798192261084
        }
    ], 
    "<net.imglib2.util.ConstantUtils$2$ConstantRealRandomAccess: void <init>(net.imglib2.util.ConstantUtils$2)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.21943989681367793
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.21943989681367793
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.21943989681367793
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.2163123949343606
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.21255250817658958
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: void setPosition(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.37338675817008643
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3598842673638126
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3563493511401622
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.3481942293345487
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.34764467017437073
        }
    ], 
    "<net.imglib2.position.transform.FloorOffset: void setPosition(double[])>": [
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int[])>": 0.2772314391609189
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRows(double[],int[])>": 0.2772314391609189
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2662103793521105
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: double maxAbs(double[],int)>": 0.25120140680491804
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int,int)>": 0.2506604985974015
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: void setPosition(long,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.31325484913065393
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.31097891796791843
        }
    ], 
    "<net.imglib2.view.SubsampleIntervalView: long max(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.6444652635187575
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.5168876727488003
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.5115679070521639
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4966616068166122
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.4924576911988799
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: void mul(float)>": [
        {
            "<org.jbox2d.common.MathUtils: float clamp(float,float,float)>": 0.4229138867837098
        }, 
        {
            "<org.jbox2d.dynamics.contacts.Contact: float mixFriction(float,float)>": 0.4176041617788286
        }, 
        {
            "<org.jbox2d.common.Settings: float mixFriction(float,float)>": 0.4176041617788286
        }, 
        {
            "<org.jbox2d.common.Vec2: org.jbox2d.common.Vec2 addLocal(float,float)>": 0.375364862955231
        }, 
        {
            "<net.smert.jreactphysics3d.engine.Profiler: float GetElapsedTimeSinceStart()>": 0.365765453043506
        }
    ], 
    "<net.imglib2.neighborsearch.RadiusNeighborSearchOnKDTree$1: int compare(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.io.SimpleStringNumberReader: double getDouble()>": 0.2858281211094986
        }, 
        {
            "<org.dyn4j.geometry.hull.MinXPointComparator: int compare(java.lang.Object,java.lang.Object)>": 0.24105663487461218
        }, 
        {
            "<Catalano.Math.Geometry.QuadrilateralTransformationCalc: double[][] MapSquareToQuad(java.util.ArrayList)>": 0.2333320741753693
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.222671909805628
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.222671909805628
        }
    ], 
    "<net.imglib2.KDTreeNode: double squDistanceTo(net.imglib2.RealLocalizable)>": [
        {
            "<boofcv.alg.geo.pose.PnPStereoJacobianRodrigues: void addRodriguesJacobian(org.ejml.data.DenseMatrix64F,georegression.struct.point.Point3D_F64,georegression.struct.point.Point3D_F64)>": 0.5308714172827185
        }, 
        {
            "<boofcv.alg.geo.pose.PnPJacobianRodrigues: void addRodriguesJacobian(org.ejml.data.DenseMatrix64F,georegression.struct.point.Point3D_F64,georegression.struct.point.Point3D_F64)>": 0.5308714172827185
        }, 
        {
            "<boofcv.alg.geo.PerspectiveOps: georegression.struct.point.Point2D_F64 renderPixel(org.ejml.data.DenseMatrix64F,georegression.struct.point.Point3D_F64)>": 0.5270870110099121
        }, 
        {
            "<boofcv.alg.geo.pose.PnPJacobianRodrigues: void process(double[],double[])>": 0.5257617322525732
        }, 
        {
            "<boofcv.alg.geo.MultiViewOps: org.ejml.data.DenseMatrix64F inducedHomography12(boofcv.struct.geo.TrifocalTensor,georegression.struct.point.Vector3D_F64,org.ejml.data.DenseMatrix64F)>": 0.5232095102593488
        }
    ], 
    "<net.imglib2.position.transform.Floor: void move(net.imglib2.RealLocalizable)>": [
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.2518535647470833
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.2508652663127151
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindowIntegral: double compute(double,double)>": 0.2313472604785647
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.2306608843684091
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.2306608843684091
        }
    ], 
    "<net.imglib2.type.logic.BoolType: boolean valueEquals(net.imglib2.type.logic.BoolType)>": [
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.5850355610641479
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.5850355610641479
        }, 
        {
            "<boofcv.io.javacv.JavaCVVideoImageSequence: boolean hasNext()>": 0.5850355610641479
        }, 
        {
            "<boofcv.struct.flow.ImageFlow$D: boolean isValid()>": 0.5387054647788967
        }, 
        {
            "<org.dyn4j.BinarySearchTreeIterator: boolean hasNext()>": 0.5387054647788967
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: double distance(double[],double[])>": [
        {
            "<Catalano.Math.Distances.Distance: double Euclidean(double[],double[])>": 1.0
        }, 
        {
            "<Catalano.Math.Distances.JensenShannonDivergence: double Compute(double[],double[])>": 0.7858777164100607
        }, 
        {
            "<Catalano.Math.Distances.KullbackLeiblerDivergence: double Compute(double[],double[])>": 0.7858777164100607
        }, 
        {
            "<Catalano.Math.Distances.CanberraDistance: double Compute(double[],double[])>": 0.7858777164100607
        }, 
        {
            "<Catalano.Math.Distances.BrayCurtisDistance: double Compute(double[],double[])>": 0.7858777164100607
        }
    ], 
    "<net.imglib2.img.array.ArrayLocalizingSubIntervalCursor: void <init>(net.imglib2.img.array.ArrayImg,int,int)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.4954196921097764
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.4893810727715689
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.4893810727715689
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: void fwd(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.271286657205808
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.2693156430016144
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.2693156430016144
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.26705678033536095
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.26705678033536095
        }
    ], 
    "<net.imglib2.img.sparse.Ntree: net.imglib2.img.sparse.Ntree$NtreeNode createNode(long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.30621310138346436
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.3009651762420443
        }, 
        {
            "<Catalano.Imaging.Filters.HysteresisThreshold: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.2975300490980983
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.2972621836072004
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.29289644861827313
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsRandomValueFactory: net.imglib2.outofbounds.OutOfBoundsRandomValue create(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.geometry.TransformTest: void rotate()>": 0.21747481816437242
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawMouseJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.PinJoint,double)>": 0.2164732276804773
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void access$000(boofcv.app.calib.AssistedCalibration,double,double,double,double)>": 0.21237406453610927
        }, 
        {
            "<org.dyn4j.geometry.AABBTest: void expand()>": 0.2100131582510997
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawVector(com.jogamp.opengl.GL2,org.dyn4j.geometry.Vector2,org.dyn4j.geometry.Vector2,double)>": 0.20924522091422335
        }
    ], 
    "<net.imglib2.util.Intervals: boolean equals(net.imglib2.Interval,net.imglib2.Interval)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: int upperBound(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.317973768929143
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int lowerBound(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.317973768929143
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.29316281456106436
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean equals(java.lang.Object)>": 0.2921374179472392
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.26115984166490624
        }
    ], 
    "<net.imglib2.display.screenimage.awt.ByteAWTScreenImage: net.imglib2.display.awt.SignedByteDataBuffer createDataBuffer(net.imglib2.img.basictypeaccess.array.ByteArray)>": [
        {
            "<boofcv.struct.feature.TupleDesc_I8: void <init>(int)>": 0.13325044772225653
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_I8: void set(byte[])>": 0.1244489319234661
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_I8: int size()>": 0.11249426064331437
        }, 
        {
            "<boofcv.io.video.CreateMJpeg: byte[] readVariableLength(java.io.DataInputStream,byte)>": 0.11012693519343583
        }, 
        {
            "<boofcv.io.video.VideoMjpegCodec: byte[] convertToByteArray(java.io.InputStream)>": 0.10982013987326676
        }
    ], 
    "<net.imglib2.util.ConstantUtils$1: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06085806194501846
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.05892556509887897
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0584019459079829
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05778127044012804
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.05720053941530369
        }
    ], 
    "<net.imglib2.img.list.ListCursor: int getIntPosition(int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.41398470755714833
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.41398470755714833
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.41398470755714833
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.39667768159250366
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.SquaresIntoRegularClusters: int add(int,int)>": 0.3866172273808941
        }
    ], 
    "<net.imglib2.transform.integer.AbstractMixedTransform: void getComponentInversion(boolean[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5121700990831821
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.5038568742780369
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.49764933371708214
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4953337551774494
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.49521737027234347
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgs: net.imglib2.img.planar.PlanarImg unsignedInts(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg unsignedShorts(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImg: net.imglib2.img.sparse.NtreeAccess update(java.lang.Object)>": [
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.14359497141458744
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.14359497141458744
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.12123936127820656
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.10614759222998453
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.10614759222998453
        }
    ], 
    "<net.imglib2.AbstractInterval: long dimension(int)>": [
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5699004886710609
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.5699004886710609
        }, 
        {
            "<org.jbox2d.common.BufferUtils: java.lang.Object[] reallocateBuffer(java.lang.Class,java.lang.Object[],int,int,int,boolean)>": 0.5556040879423624
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5482905348984333
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.539903464414816
        }
    ], 
    "<net.imglib2.view.SubsampleView: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.07453559924999299
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07216878364870323
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.07152748373009106
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07076731463403724
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07005606728972563
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: double getA()>": [
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double DistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double OneSideDistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double ComplementaryDistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.32533950937620415
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double pixelScaleCurrentToInput()>": 0.3144161822359606
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImgFactory: net.imglib2.img.sparse.NtreeImg createDoubleInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.18526894788514375
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18185105632878742
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18185105632878742
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1791168235896834
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.17721812037236506
        }
    ], 
    "<net.imglib2.view.MixedRandomAccess: void move(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.3343743761583702
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.32218620278217935
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.31884177972599625
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.3136999131648905
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.31314506820438825
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerType: int compareTo(java.lang.Object)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.26829227778533277
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.2579630014446246
        }, 
        {
            "<Catalano.Math.Geometry.PointToProcess: int compareTo(java.lang.Object)>": 0.21700509419656616
        }, 
        {
            "<boofcv.abst.feature.detect.extract.NonMaxLimiter$LocalExtreme: int compareTo(java.lang.Object)>": 0.21700509419656616
        }, 
        {
            "<org.dyn4j.collision.narrowphase.ExpandingSimplexEdge: int compareTo(java.lang.Object)>": 0.21700509419656616
        }
    ], 
    "<net.imglib2.neighborsearch.KNearestNeighborSearchOnIterableRealInterval: double getDistance(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: double getOutside(int,int)>": 0.5355986698988371
        }, 
        {
            "<Catalano.Math.Approximation: double Lowprecision_Pow(double,double)>": 0.527263277480359
        }, 
        {
            "<Catalano.Math.Approximation: double Highprecision_Pow(double,double)>": 0.527263277480359
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Bhattacharyya(double[],double[])>": 0.511356220207549
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.5097684861688663
        }
    ], 
    "<net.imglib2.img.sparse.IntNtree: void setValue(int,int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4980548333102488
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.4911017614626907
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.48723405655412355
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.47296444271029114
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.47208550203103106
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: void move(long,int)>": [
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.3979489659622314
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.3979489659622314
        }, 
        {
            "<org.jbox2d.testbed.tests.DynamicTreeTest: void DestroyProxy()>": 0.38200253040388377
        }, 
        {
            "<boofcv.alg.feature.detect.line.LineImageOps: void pruneClutteredGrids(boofcv.struct.feature.MatrixOfList,int)>": 0.3773354980729873
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: int getReminder(int,int[])>": 0.37099124894178004
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: void setReal(double)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void access$000(boofcv.app.calib.AssistedCalibration,double,double,double,double)>": 0.32698200135725364
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceSe3SymmetricSq: void setIntrinsic(double,double,double,double,double,double)>": 0.3227982579192048
        }, 
        {
            "<boofcv.gui.fiducial.VisualizeFiducial: void drawLine(java.awt.Graphics2D,java.awt.geom.Line2D$Double,double,double,double,double)>": 0.3210716905727387
        }, 
        {
            "<boofcv.alg.sfm.robust.DistancePlane2DToPixelSq: void setIntrinsic(double,double,double)>": 0.3199511092812435
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceHomographyPixelSq: void setIntrinsic(double,double,double)>": 0.3199511092812435
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void realMin(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.view.MixedRandomAccess: void fwd(int)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4051197200762658
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.39323104991529095
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.38906876344126007
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.384673593470778
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateMetrics(int)>": 0.3708097497186654
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void setInteger(long)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.InterleavedS64,long,long,boofcv.struct.image.InterleavedS64)>": 0.2592864911920525
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.InterleavedS64,long,long,long,boofcv.struct.image.InterleavedS64)>": 0.2592864911920525
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.InterleavedS64,long,long,long,boofcv.struct.image.InterleavedS64)>": 0.2592864911920525
        }, 
        {
            "<Catalano.Imaging.Tools.FastRadialSymmetryTransform: void <init>(int)>": 0.24728698287764816
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Variance: void <init>(int)>": 0.24674899011058243
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRealRandomAccess: void <init>(net.imglib2.RealRandomAccess,net.imglib2.converter.Converter,net.imglib2.type.Type)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04032389192727559
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03904344047215152
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.038696496074155144
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.03828524323948056
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03790045715961838
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: void getComponentZero(boolean[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.47302461677289603
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.460597729177852
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4591713053184648
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.45330664298380163
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.45133604702775554
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgFactory: net.imglib2.img.NativeImg createShortInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.13257949307988665
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.13257949307988665
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.12277271921448075
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.12050140956603536
        }, 
        {
            "<boofcv.gui.StandardAlgConfigPanel: void <init>()>": 0.11572751247156893
        }
    ], 
    "<net.imglib2.view.iteration.IterableTransformBuilder$Slice: void <init>(net.imglib2.view.iteration.IterableTransformBuilder,net.imglib2.view.iteration.SubIntervalIterable,net.imglib2.Interval,net.imglib2.transform.integer.SlicingTransform,boolean)>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void setPaused(boolean)>": 0.18805691731134155
        }, 
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.16725910438345803
        }, 
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.166414011231036
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.166414011231036
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.1659057974803158
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: void inc()>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.25615451548668816
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.24205028805162548
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.2361279257492409
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.23555272453560627
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.22841157931256
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.AbstractWrappedInterval: void dimensions(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.174312949091992
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.174312949091992
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16141770450978618
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.15179865302147907
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.13349163706577288
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: void add(net.imglib2.type.numeric.integer.GenericLongType)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2679887933858064
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2579115331531891
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.25069894227480943
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.23626500399272526
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.23595832499639566
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: void move(int,int)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.4954196921097764
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.4893810727715689
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.4893810727715689
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: int cols(double[][])>": [
        {
            "<Catalano.Imaging.Filters.RandomConvolution: int CalcLines(double[][])>": 0.4651618077954604
        }, 
        {
            "<Catalano.Imaging.Tools.FastRadialSymmetryTransform: int CalcLines(double[][])>": 0.4651618077954604
        }, 
        {
            "<Catalano.Math.Matrix: double[][] SubMatrix(double[][],int,int)>": 0.4287655704841489
        }, 
        {
            "<boofcv.alg.scene.FeatureToWordHistogram_F64: int getTotalWords()>": 0.37337662337662336
        }, 
        {
            "<boofcv.struct.wavelet.WlCoef_F64: int getWaveletLength()>": 0.37337662337662336
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListRandomAccess: void <init>(net.imglib2.img.list.AbstractLongListImg)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.20296563252058447
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.20296563252058447
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.20296563252058447
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.19993717130605881
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.19656551490537133
        }
    ], 
    "<net.imglib2.RealPointSampleList$RealPointSampleListCursor: void fwd()>": [
        {
            "<Catalano.Math.Geometry.GrahamConvexHull: java.util.ArrayList FindFull(java.util.ArrayList)>": 0.2521200041520465
        }, 
        {
            "<Catalano.Math.Geometry.ConvexHullDefects: Catalano.Math.Geometry.ConvexityDefect ExtractDefect(java.util.ArrayList,int,int)>": 0.2312667560850784
        }, 
        {
            "<Catalano.Math.Geometry.ConvexHullDefects: java.util.ArrayList FindDefects(java.util.ArrayList,java.util.ArrayList)>": 0.22880185368194067
        }, 
        {
            "<Catalano.Math.Geometry.KCurvature: java.util.ArrayList FindPeaks(java.util.ArrayList)>": 0.226257734598229
        }, 
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.2232539058463875
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform: void set(net.imglib2.transform.integer.Translation)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5256091910568305
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.5090303794676198
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5085281685018156
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5018647418701996
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateMetrics(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.4949266645788068
        }
    ], 
    "<net.imglib2.converter.Converters: net.imglib2.converter.readwrite.WriteConvertedRandomAccessibleInterval argbChannel(net.imglib2.RandomAccessibleInterval,int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.2727845010818847
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.27105485062496204
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.27105485062496204
        }, 
        {
            "<boofcv.factory.feature.disparity.FactoryStereoDisparityAlgs: boofcv.alg.feature.disparity.DisparitySparseScoreSadRect scoreDisparitySparseSadRect_F32(int,int,int,int)>": 0.2664139111889144
        }, 
        {
            "<boofcv.factory.feature.disparity.FactoryStereoDisparityAlgs: boofcv.alg.feature.disparity.DisparitySparseScoreSadRect scoreDisparitySparseSadRect_U8(int,int,int,int)>": 0.2664139111889144
        }
    ], 
    "<net.imglib2.img.list.ListImg: void set(int,java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.3035950549866087
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: java.lang.Object getUserData(int)>": 0.29532163742690054
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Rendering: void <init>(java.lang.String,int,java.lang.Object)>": 0.28495546695384794
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Antialiasing: void <init>(java.lang.String,int,java.lang.Object)>": 0.28495546695384794
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Dithering: void <init>(java.lang.String,int,java.lang.Object)>": 0.28495546695384794
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void realMax(net.imglib2.RealPositionable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: net.imglib2.concatenate.Concatenable concatenate(java.lang.Object)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.3334914716104513
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.32658380873910065
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.322573164633926
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3173050277911449
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void addObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.31656715298455346
        }
    ], 
    "<net.imglib2.type.logic.BitType: void <init>(net.imglib2.img.NativeImg)>": [
        {
            "<Catalano.Imaging.Filters.HistogramShrink: void <init>()>": 0.14476650603589652
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: void <init>()>": 0.14476650603589652
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.SobelEdgeDetector: void <init>()>": 0.13442290969427412
        }, 
        {
            "<boofcv.gui.tracker.TrackerObjectQuadPanel: void enterSelectMode()>": 0.13442290969427412
        }, 
        {
            "<org.jbox2d.dynamics.Filter: void <init>()>": 0.1329726164507926
        }
    ], 
    "<net.imglib2.RealPoint: void setPosition(float,int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_F64: void set(int,float)>": 0.5388602512436507
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void setD(int,double)>": 0.36654472411578426
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMinimum(int,double)>": 0.36654472411578426
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMaximum(int,double)>": 0.36654472411578426
        }, 
        {
            "<Catalano.Imaging.Tools.ColorConverter: double[] RGBtoHunterLAB(int,int,int)>": 0.31333154551894804
        }
    ], 
    "<net.imglib2.display.screenimage.awt.DoubleAWTScreenImage: java.awt.image.DataBuffer createDataBuffer(java.lang.Object)>": [
        {
            "<boofcv.struct.image.GrayF64: void _setData(java.lang.Object)>": 0.1532590227806104
        }, 
        {
            "<boofcv.struct.image.InterleavedF64: void _setData(java.lang.Object)>": 0.1532590227806104
        }, 
        {
            "<boofcv.abst.geo.optimization.ModelCodecSwapData: void encode(java.lang.Object,double[])>": 0.13858981485143532
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.1345982968042152
        }, 
        {
            "<boofcv.alg.geo.robust.Affine2DCodec: void decode(double[],java.lang.Object)>": 0.1330525071801424
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: double relativeFrequency(long[])>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2847718899693011
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(org.jbox2d.particle.ParticleSystem$Proxy)>": 0.2618012638865043
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2605893696537076
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(java.lang.Object)>": 0.25881018559133234
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.2456540891059205
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: long positionToIndex(net.imglib2.Localizable,net.imglib2.Dimensions)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.3038181571566212
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.29532814063985724
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2921644012167157
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.28328391656738494
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.2617533439684702
        }
    ], 
    "<net.imglib2.img.array.ArrayImgFactory: net.imglib2.img.NativeImg createShortInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1686333664237103
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1686333664237103
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1559201193509509
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.15386142866645397
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.15386142866645397
        }
    ], 
    "<net.imglib2.util.Util: double average(double[])>": [
        {
            "<Catalano.Statistics.Correlations: double VectorInnerProduct(double[],double[])>": 0.6114029122798741
        }, 
        {
            "<Catalano.Math.Matrix: double InnerProduct(double[],double[])>": 0.6114029122798741
        }, 
        {
            "<Catalano.Math.Distances.IntersectionDistance: double Compute(double[],double[])>": 0.6065327118927162
        }, 
        {
            "<Catalano.Statistics.Kernels.Hellinger: double Function(double[],double[])>": 0.5898020358167438
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: double sum(boofcv.struct.convolve.Kernel2D_F64)>": 0.5877452330837867
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void realMin(net.imglib2.RealPositionable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.img.list.ListCursor: void <init>(net.imglib2.img.list.ListCursor)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void drawPadding()>": 0.3265243366415479
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.3252562443996344
        }, 
        {
            "<org.box2d.proto.Box2D$PbFilter: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.32489323470108744
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.32452781374020373
        }, 
        {
            "<Catalano.Imaging.Filters.Add: void <init>(int,int,int)>": 0.3188648854338827
        }
    ], 
    "<net.imglib2.display.ColorTable8: int getNative(int,int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.6838776513191586
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.6755894082189905
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.6595235471104282
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getGray(int)>": 0.6534530733460343
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.6393031884776392
        }
    ], 
    "<net.imglib2.img.array.AbstractArrayCursor: int getIntPosition(int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.4703374106463145
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.4703374106463145
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.4703374106463145
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.4413721828660875
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.SquaresIntoRegularClusters: int add(int,int)>": 0.43782846467630226
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: boolean valueEquals(java.lang.Object)>": [
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: boolean isWithin(int,int,int,int,int)>": 0.314826261108061
        }, 
        {
            "<org.box2d.proto.Box2D$PbVec2: boolean isInitialized()>": 0.3086202263573354
        }, 
        {
            "<Catalano.Math.Tools: boolean isPowerOf2(int)>": 0.3084352878147994
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.3062250664673431
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldTrackerApp: void togglePause()>": 0.29855426905761806
        }
    ], 
    "<net.imglib2.display.ColorTable16: int get(int,int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.6907359029586888
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.6907359029586888
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.6907359029586888
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int max(int[],int,int,int,int)>": 0.5691442635794125
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int min(int[],int,int,int,int)>": 0.5691442635794125
        }
    ], 
    "<net.imglib2.util.ConstantUtils: net.imglib2.RandomAccessibleInterval constantRandomAccessibleInterval(java.lang.Object,int,net.imglib2.Interval)>": [
        {
            "<org.jbox2d.common.BufferUtils: void rotate(java.lang.Object[],int,int,int)>": 0.17950534707352503
        }, 
        {
            "<boofcv.gui.SelectInputPanel: void setActiveAlgorithm(int,java.lang.String,java.lang.Object)>": 0.16994254779286347
        }, 
        {
            "<boofcv.struct.WrapArrayIntoList: java.lang.Object get(int)>": 0.16994254779286347
        }, 
        {
            "<boofcv.demonstrations.calibration.ShowRectifyCalibratedApp: void setActiveAlgorithm(int,java.lang.String,java.lang.Object)>": 0.16994254779286347
        }, 
        {
            "<boofcv.demonstrations.distort.RemoveLensDistortionApp: void setActiveAlgorithm(int,java.lang.String,java.lang.Object)>": 0.16994254779286347
        }
    ], 
    "<net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolatorFactory: net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolator create(net.imglib2.neighborsearch.KNearestNeighborSearch)>": [
        {
            "<org.dyn4j.geometry.TransformTest: void rotate()>": 0.1483478655861643
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawMouseJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.PinJoint,double)>": 0.14344853838687943
        }, 
        {
            "<org.dyn4j.geometry.AABBTest: void expand()>": 0.1431504859443297
        }, 
        {
            "<org.dyn4j.dynamics.AngleJointTest: void setMinAndMax()>": 0.14114305201697916
        }, 
        {
            "<org.dyn4j.geometry.Vector2Test: void distanceBugInVersions_1_1_0_to_3_1_7()>": 0.140997935221782
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: void <init>(net.imglib2.img.sparse.NtreeRandomAccess)>": [
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.294826891549389
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.29473943062325053
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.2854046620313339
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS64)>": 0.28335612739118127
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS8,boofcv.struct.image.GrayS64)>": 0.2820739027066627
        }
    ], 
    "<net.imglib2.type.logic.BitType: void mul(double)>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.3720460614423329
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.3565754586636352
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean overlap(int,int)>": 0.3347548928104189
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean isSubset(int,int)>": 0.3347548928104189
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean computeClosestPoint(net.smert.jreactphysics3d.mathematics.Vector3)>": 0.32471156866283546
        }
    ], 
    "<net.imglib2.view.TransformBuilder$1: void <init>(net.imglib2.view.TransformBuilder,net.imglib2.transform.Transform,net.imglib2.RandomAccessible)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04714045207910317
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04564354645876384
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.045237952777544825
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.044757179627464554
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04430734730991042
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned12BitType: net.imglib2.type.numeric.integer.Unsigned12BitType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: void setPosition(long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3710226395090665
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.36627543700493337
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.3360932364854249
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.32399332742693354
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.3201161278876837
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.IntArray: int getValue(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.7971082718892609
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.7875797356576464
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.7666734068198182
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.7611977688432564
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: int get(int)>": 0.759469696969697
        }
    ], 
    "<net.imglib2.img.sparse.Ntree: net.imglib2.img.sparse.Ntree$NtreeNode createNodeWithValue(long[],java.lang.Comparable)>": [
        {
            "<org.dyn4j.collision.manifold.IndexedManifoldPointId: boolean equals(java.lang.Object)>": 0.28170829780746
        }, 
        {
            "<Catalano.Imaging.Filters.HysteresisThreshold: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.28038908632889936
        }, 
        {
            "<boofcv.struct.image.ImageGray: void setTo(boofcv.struct.image.ImageGray)>": 0.279692357636199
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.2788813241229077
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: void setTo(boofcv.struct.image.ImageInterleaved)>": 0.27847868198190295
        }
    ], 
    "<net.imglib2.img.cell.AbstractCell: void dimensions(int[])>": [
        {
            "<Catalano.Math.Decompositions.LUDecomposition: int[] getPivot()>": 0.4329924519975518
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.406754657569875
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int[])>": 0.4045579620769534
        }, 
        {
            "<Catalano.Math.Matrix: int[] getRows(int[],int[])>": 0.4045579620769534
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumn(int[][],int)>": 0.40212575026158026
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: void move(long,int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.6292240465282719
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5606404026152911
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5492657532905405
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5311642946423635
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.5230713022002441
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: void updateContainer(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.3187477037083238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.22574829559349857
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.22057752193984925
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolatorARGB: void <init>(net.imglib2.RandomAccessible)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.107858371488239
        }, 
        {
            "<org.dyn4j.dynamics.WorldTest: void getUserData()>": 0.10067340828210365
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void getUserData()>": 0.10067340828210365
        }, 
        {
            "<org.dyn4j.collision.FixtureTest: void setUserData()>": 0.09743547036924464
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.09435641951204965
        }
    ], 
    "<net.imglib2.display.projector.sampler.SelectiveSampler: void <init>(int,long[])>": [
        {
            "<boofcv.alg.misc.PixelMath: void invert(long[],int,int,long[],int,int,int,int)>": 0.38452391200243285
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(long[],int,int,long[],int,int,int,int)>": 0.38171900599221187
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long[],int,int,int,int)>": 0.3769956768316564
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long[],int,int,int,int)>": 0.3769956768316564
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long[],int,int,int,int)>": 0.3769956768316564
        }
    ], 
    "<net.imglib2.view.TransformBuilder: net.imglib2.RandomAccessible build()>": [
        {
            "<boofcv.gui.DepthVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.23964694962206728
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.23964694962206728
        }, 
        {
            "<boofcv.abst.feature.associate.EnforceUniqueByScore: void <init>(boofcv.abst.feature.associate.Associate,boolean,boolean)>": 0.23892842668927494
        }, 
        {
            "<org.dyn4j.geometry.IntervalTest: void includes()>": 0.23413486151485022
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.22660876993514112
        }
    ], 
    "<net.imglib2.view.composite.RealComposite$Factory: net.imglib2.view.composite.RealComposite create(net.imglib2.RandomAccess)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.19627301050036933
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.19627301050036933
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.19627301050036933
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.1934756877796046
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.19011274282837365
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void setReal(float)>": [
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_F32: void <init>(int,float,float)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_I: void <init>(int,float,float)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide(boofcv.struct.image.GrayF32,float,float,float,boofcv.struct.image.GrayF32)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayF32,float,float,float,boofcv.struct.image.GrayF32)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply(boofcv.struct.image.GrayF32,float,float,float,boofcv.struct.image.GrayF32)>": 0.31943979135861733
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: void move(int,int)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.4954196921097764
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.4893810727715689
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.4893810727715689
        }
    ], 
    "<net.imglib2.transform.integer.permutation.PermutationTransform: net.imglib2.transform.integer.permutation.PermutationTransform inverse()>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(int,boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayS32)>": 0.29160976762858853
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS32,int,int,int,boofcv.struct.image.GrayS32)>": 0.29160976762858853
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS32,int,int,int,boofcv.struct.image.GrayS32)>": 0.29160976762858853
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(int,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.2913466934791011
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS32,int,boofcv.struct.image.GrayS32)>": 0.2913466934791011
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void move(float,int)>": [
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_F32: void <init>(int,float,float)>": 0.3964462393048189
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_I: void <init>(int,float,float)>": 0.3964462393048189
        }, 
        {
            "<boofcv.abst.feature.detect.interest.ConfigGeneralDetector: void <init>(int,int,float)>": 0.3456010616334146
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchGray: void <init>(int,float,boofcv.alg.interpolate.InterpolatePixelS,int,int,float,boolean)>": 0.3449367496482926
        }, 
        {
            "<boofcv.abst.feature.detect.interest.ConfigGeneralDetector: void <init>(int,int,float,int,boolean)>": 0.3442822428944223
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg: void <init>(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.29686485718781824
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.29686485718781824
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.27469388763850416
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.26459608085527087
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.22807865433809116
        }
    ], 
    "<net.imglib2.view.composite.AbstractNumericComposite: void div(net.imglib2.view.composite.AbstractNumericComposite)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27369975151850634
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27369975151850634
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27369975151850634
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.2715165016949687
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.27085028831903113
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: void set(java.math.BigInteger)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.22187986087078743
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.22187986087078743
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.22187986087078743
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.21524699743979925
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.InterleavedS64,long,long,boofcv.struct.image.InterleavedS64)>": 0.20916243127372558
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.LanczosInterpolatorFactory: void <init>(int,boolean)>": [
        {
            "<boofcv.abst.feature.detect.extract.ConfigExtract: void <init>(int,float,int,boolean,boolean,boolean)>": 0.3593468807158945
        }, 
        {
            "<boofcv.abst.feature.describe.ConfigBrief: void <init>(int,int,double,int,boolean)>": 0.34853184331063386
        }, 
        {
            "<Catalano.Math.PaddingMatrix: void <init>(int,int,boolean)>": 0.34696188981716825
        }, 
        {
            "<org.dyn4j.collision.manifold.IndexedManifoldPointId: void <init>(int,int,int,boolean)>": 0.33276744232051564
        }, 
        {
            "<Catalano.Imaging.Corners.Fast12: void <init>(int,boolean)>": 0.32533864963118975
        }
    ], 
    "<net.imglib2.position.transform.FloorOffset: void <init>(net.imglib2.RealLocalizable,net.imglib2.Localizable,net.imglib2.Localizable)>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2520731315128296
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.23845925078990457
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.23845925078990457
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2376542505809752
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2370002938767948
        }
    ], 
    "<net.imglib2.view.StackView: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06872138349613734
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.06487420998705473
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.06361464251628643
        }, 
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06266005147845038
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06250000000000001
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsPeriodic: void setPosition(long,int)>": [
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.2580023053940772
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.25654564583395495
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.25059036842610893
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.23421559306615938
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.23285579863396433
        }
    ], 
    "<net.imglib2.transform.integer.SequentializeTransform$1: int numTargetDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.img.sparse.LongNtree: net.imglib2.img.sparse.NtreeAccess createInstance(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1826418206216855
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1826418206216855
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16881288427264435
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.12701685073623692
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.12701685073623692
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: void realMax(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.img.list.ListLocalizingCursor: void reset()>": [
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: void unbufferMove(int)>": 0.2929605607526515
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: int[] getPivot()>": 0.28706043393296066
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.2774916567036132
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: void destroyProxy(int)>": 0.2760096324060416
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: void bufferMove(int)>": 0.27567054037916533
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: void set(net.imglib2.type.numeric.ARGBDoubleType)>": [
        {
            "<boofcv.alg.geo.h.HomographyLinear4: void createA(java.util.List,org.ejml.data.DenseMatrix64F)>": 0.3124123300661412
        }, 
        {
            "<org.dyn4j.sandbox.tests.Plotter: void render(com.jogamp.opengl.GL2)>": 0.3111896842911383
        }, 
        {
            "<org.dyn4j.sandbox.panels.PreviewPanel: void paintComponent(java.awt.Graphics)>": 0.3024625558450095
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitSegment: void <init>(double,double,int)>": 0.3005280099523034
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitLoop: void <init>(double,double,int)>": 0.3005280099523034
        }
    ], 
    "<net.imglib2.Point: void setPosition(long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3710226395090665
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.36627543700493337
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.3360932364854249
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.32399332742693354
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.3201161278876837
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: long[] toLongArray()>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2411343369589033
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomPixelDepthPnP: int dropUnusedTracks()>": 0.226457216409362
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomMonoPlaneInfinity: int dropUnusedTracks()>": 0.21204727673598325
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.1988063117337951
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.189064231964135
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.IntervalView interval(net.imglib2.RandomAccessible,long[],long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.21694418511365382
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.21694418511365382
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.20083017758361507
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.18256677540556263
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.17838122938951328
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void modifyCounts(java.lang.Iterable,net.imglib2.histogram.HistogramNd$Counter)>": [
        {
            "<org.dyn4j.dynamics.World: void removeAllBodiesAndJoints(boolean)>": 0.29709453753522325
        }, 
        {
            "<org.dyn4j.dynamics.World: void removeAllJoints(boolean)>": 0.27675679144819765
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void renderArrows()>": 0.2683496786838331
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void renderMagnets()>": 0.2683496786838331
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerTwoPassKltPyramid: void finishTracking()>": 0.2624234202717533
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: long dimension(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3508771929824561
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3142423944400126
        }
    ], 
    "<net.imglib2.img.cell.CellLocalizingCursor: void fwd()>": [
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.29866020743410243
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.2922558401396428
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.2922558401396428
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set(int,int,long[])>": 0.2808571058862236
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2789273933771142
        }
    ], 
    "<net.imglib2.AbstractInterval: double realMax(int)>": [
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.6837368139947142
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.6837368139947142
        }, 
        {
            "<org.jbox2d.common.BufferUtils: java.lang.Object[] reallocateBuffer(java.lang.Class,java.lang.Object[],int,int,int,boolean)>": 0.6666471527552539
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.6581664875033119
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.6486315185673585
        }
    ], 
    "<net.imglib2.display.projector.RandomAccessibleProjector2D: void map()>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.29520920817574503
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.29520920817574503
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.29520920817574503
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply(boofcv.struct.image.GrayS64,double,long,long,boofcv.struct.image.GrayS64)>": 0.290374176013053
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide(boofcv.struct.image.GrayS64,double,long,long,boofcv.struct.image.GrayS64)>": 0.290374176013053
        }
    ], 
    "<net.imglib2.KDTree: void realMin(net.imglib2.RealPositionable)>": [
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.21487335015826062
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.21487335015826062
        }, 
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.214027382399185
        }, 
        {
            "<boofcv.abst.geo.optimization.ModelCodecSwapData: void encode(org.ejml.data.DenseMatrix64F,double[])>": 0.19295834780215798
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.19121854800574056
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NearestNeighborInterpolatorFactory: net.imglib2.interpolation.randomaccess.NearestNeighborInterpolator create(net.imglib2.RandomAccessible)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06454972243679027
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0625
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06194461797903697
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.061286292230682514
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06067033396213444
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: float getPowerFloat()>": [
        {
            "<org.jbox2d.dynamics.contacts.Contact: float mixFriction(float,float)>": 0.3072378133345426
        }, 
        {
            "<org.jbox2d.common.Settings: float mixFriction(float,float)>": 0.3072378133345426
        }, 
        {
            "<Catalano.Math.Geometry.PointsCloud: void setQuadrilateralRelativeDistortionLimit(float)>": 0.3045366364956434
        }, 
        {
            "<org.jbox2d.common.Rot: float getAngle()>": 0.3028023210173788
        }, 
        {
            "<org.jbox2d.common.MathUtils: float fastAbs(float)>": 0.3022179620091295
        }
    ], 
    "<net.imglib2.view.TransformBuilder$1: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.transform.integer.permutation.SingleDimensionPermutationTransform: void apply(int[],int[])>": [
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.4118076036148897
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int)>": 0.40415789312754635
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.38694519307316877
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: void bufferMove(int)>": 0.3743549186684594
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void getOutside(int,int,int[])>": 0.3728723774915219
        }
    ], 
    "<net.imglib2.PointSampleList$PointSampleListCursor: void localize(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.type.label.BasePairBitType: boolean valueEquals(java.lang.Object)>": [
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: boolean isWithin(int,int,int,int,int)>": 0.3060995390408751
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldTrackerApp: void togglePause()>": 0.3048527518603049
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeCirculantTrackerApp: void togglePause()>": 0.3048527518603049
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.30230488283343315
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.30230488283343315
        }
    ], 
    "<net.imglib2.RealPointSampleList: void add(net.imglib2.RealPoint,java.lang.Object)>": [
        {
            "<boofcv.struct.pyramid.PyramidFloat: void setScaleFactors(double[])>": 0.29667998727549133
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.StereoDisparityWtoNaiveFive: double selectBest(int)>": 0.29590833936854594
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.StereoDisparityWtoNaive: double selectBest(int)>": 0.29590833936854594
        }, 
        {
            "<Catalano.Statistics.Tools: double Mode(double[])>": 0.28987906618412396
        }, 
        {
            "<Catalano.Statistics.DescriptiveStatistics: double Mode(double[])>": 0.28987906618412396
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerType: int compareTo(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.243547914662579
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.21335520300950625
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.20980842367718366
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.19279021299072144
        }, 
        {
            "<Catalano.Math.Geometry.PointToProcess: int compareTo(java.lang.Object)>": 0.1895996970723719
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: void add(net.imglib2.type.numeric.integer.GenericByteType)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void solveColorMixing(org.jbox2d.dynamics.TimeStep)>": 0.2601379698713402
        }, 
        {
            "<org.jbox2d.collision.ContactID: int getKey()>": 0.24870916725536762
        }, 
        {
            "<org.jbox2d.collision.ContactID: int compareTo(org.jbox2d.collision.ContactID)>": 0.2275609676739095
        }, 
        {
            "<org.jbox2d.collision.ContactID: boolean isEqual(org.jbox2d.collision.ContactID)>": 0.2248680901901646
        }, 
        {
            "<org.jbox2d.collision.ContactID: int compareTo(java.lang.Object)>": 0.21807504084797213
        }
    ], 
    "<net.imglib2.img.sparse.LongNtree: net.imglib2.img.sparse.LongNtree createInstance(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.12458962570367609
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.12458962570367609
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.11785109527680923
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11532909002102744
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.0989858659890338
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: long map(java.lang.Object)>": [
        {
            "<Catalano.Math.Random: long nextLong()>": 0.24257833769207987
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: long getTrackId(int)>": 0.23607130067549967
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: long getTrackId(int)>": 0.23607130067549967
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.22485155088823158
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomDualTrackPnP: long getTrackId(int)>": 0.21855955514482706
        }
    ], 
    "<net.imglib2.converter.RealLUTConverter: void convert(net.imglib2.type.numeric.RealType,net.imglib2.type.numeric.ARGBType)>": [
        {
            "<Catalano.Core.IntPoint: void <init>(double,double)>": 0.2625577001425531
        }, 
        {
            "<boofcv.struct.sparse.GradientValue_I32: void set(double,double)>": 0.26149081026959287
        }, 
        {
            "<org.dyn4j.samples.RenderingImagesOnBodies$ImageBody: void renderFixture(java.awt.Graphics2D,double,org.dyn4j.dynamics.BodyFixture,java.awt.Color)>": 0.2588279014414708
        }, 
        {
            "<boofcv.abst.feature.describe.WrapDescribePixelRegion: boolean process(double,double,double,double,boofcv.struct.feature.TupleDesc)>": 0.25157965493057977
        }, 
        {
            "<boofcv.alg.feature.describe.DescribePointBrief: void process(double,double,boofcv.struct.feature.TupleDesc_B)>": 0.2504595250473496
        }
    ], 
    "<net.imglib2.view.ExtendedRandomAccessibleInterval: net.imglib2.outofbounds.OutOfBounds randomAccess()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.021677749238102995
        }
    ], 
    "<net.imglib2.view.iteration.IterableTransformBuilder$SubInterval: net.imglib2.Cursor cursor()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.019702760155977515
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.019702760155977515
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.019702760155977515
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.019702760155977515
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.019702760155977515
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgs: net.imglib2.img.planar.PlanarImg shorts(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.type.numeric.integer.ShortType: net.imglib2.type.numeric.integer.ShortType createVariable()>": [
        {
            "<boofcv.demonstrations.fiducial.FiducialTrackerApp: void refreshAll(java.lang.Object[])>": 0.09512551571501338
        }, 
        {
            "<org.dyn4j.dynamics.CapacityTest: void createFailureListenerCount()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.dynamics.CapacityTest: void createFailureJointCount()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.dynamics.CapacityTest: void createFailureBodyCount()>": 0.09306821918192615
        }, 
        {
            "<boofcv.demonstrations.sfm.d3.VisualizeMonocularPlaneVisualOdometryApp: void process(boofcv.io.image.SimpleImageSequence)>": 0.09106841590512935
        }
    ], 
    "<net.imglib2.converter.ComplexPowerFloatConverter: void convert(net.imglib2.type.numeric.ComplexType,net.imglib2.type.numeric.real.FloatType)>": [
        {
            "<com.flowpowered.react.collision.shape.SphereShape: void getLocalBounds(com.flowpowered.react.math.Vector3,com.flowpowered.react.math.Vector3)>": 0.19435863798650005
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: void setAllValues(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)>": 0.19108644636634647
        }, 
        {
            "<org.jbox2d.callbacks.DebugDraw: void setCamera(float,float,float)>": 0.18994096893194629
        }, 
        {
            "<boofcv.factory.background.FactoryBackgroundModel: boofcv.alg.background.stationary.BackgroundStationaryGaussian stationaryGaussian(boofcv.factory.background.ConfigBackgroundGaussian,boofcv.struct.image.ImageType)>": 0.1897591722051496
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: void setAllValues(float,float,float,float,float,float,float,float,float)>": 0.1892278869165811
        }
    ], 
    "<net.imglib2.position.transform.Floor: void move(double,int)>": [
        {
            "<boofcv.abst.feature.tracker.PointTrack: void <init>(double,double,long)>": 0.26484567399827813
        }, 
        {
            "<Catalano.Imaging.Tools.ImageUtils: void Normalize(double[][],double,double)>": 0.26328647274210176
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.26212284841181344
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void complexInverse(double[],boolean)>": 0.25980897267639874
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.259525726890916
        }
    ], 
    "<net.imglib2.view.TransformView: net.imglib2.RandomAccess randomAccess()>": [
        {
            "<org.jbox2d.testbed.tests.ContinuousTest: void <init>()>": 0.031068488300060003
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.OvusculeSnake2DKeeper: void <init>()>": 0.02906190968595482
        }, 
        {
            "<org.dyn4j.BinarySearchTree: void <init>()>": 0.02906190968595482
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void stop()>": 0.02739983121755955
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrack: void reset()>": 0.02739983121755955
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: void add(net.imglib2.type.numeric.integer.UnsignedIntType)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.31376158296399126
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.29001144867368306
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.27879041970933305
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.2784751582084055
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.27376256708444696
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerType: java.lang.String toString()>": [
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String getPatternName(int)>": 0.7173216585908225
        }, 
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String selectDocumentName()>": 0.5762294791126183
        }, 
        {
            "<boofcv.misc.AutoTypeImage: java.lang.String getInterleavedName()>": 0.47574662447429517
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: java.lang.String toString()>": 0.4601472352869384
        }, 
        {
            "<net.coobird.thumbnailator.geometry.RelativeSize: java.lang.String toString()>": 0.4601472352869384
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.IntArray: net.imglib2.img.basictypeaccess.array.IntArray createArray(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.29781790326307295
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.29649405014104924
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.29649405014104924
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.2930792985571642
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.2930792985571642
        }
    ], 
    "<net.imglib2.histogram.Real1dBinMapper: void getCenterValue(long,net.imglib2.type.numeric.RealType)>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.4977202614926284
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.49688607202331986
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.4947609798882059
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Vector3 solve33(org.dyn4j.geometry.Vector3)>": 0.4599618874412968
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Matrix33 invert()>": 0.4543390829199657
        }
    ], 
    "<net.imglib2.img.ImgView: net.imglib2.img.Img wrap(net.imglib2.RandomAccessibleInterval,net.imglib2.img.ImgFactory)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.Joint,double)>": 0.2955745681869386
        }, 
        {
            "<boofcv.alg.filter.misc.AverageDownSampleOps: void down(boofcv.struct.image.ImageGray,int,boofcv.struct.image.ImageGray)>": 0.27110995462119863
        }, 
        {
            "<org.dyn4j.examples.Graphics2DRenderer: void render(java.awt.Graphics2D,org.dyn4j.geometry.Shape,double,java.awt.Color)>": 0.2664869302736409
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillShape(com.jogamp.opengl.GL2,org.dyn4j.geometry.Shape)>": 0.25479859449917147
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: void setB(boofcv.struct.image.ImageBase,int,int,int,double)>": 0.24415398789691134
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: void move(net.imglib2.Localizable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: double getImaginaryDouble()>": [
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double DistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double OneSideDistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double ComplementaryDistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.32533950937620415
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double pixelScaleCurrentToInput()>": 0.3144161822359606
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void subtract(double[],double[],double[])>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3978536474164201
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.38999437596346287
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3887828103108974
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.38419561429178434
        }, 
        {
            "<org.jbox2d.dynamics.Island: void add(org.jbox2d.dynamics.joints.Joint)>": 0.37986185802506495
        }
    ], 
    "<net.imglib2.AbstractInterval: void <init>(net.imglib2.Interval)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2937779917472402
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2937779917472402
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.271688464039605
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: void <init>(int,int,long[],boofcv.alg.fiducial.square.BaseDetectFiducialSquare)>": 0.2238746080452644
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set(int,int,long[])>": 0.2212682650184317
        }
    ], 
    "<net.imglib2.view.composite.CompositeIntervalView: void min(net.imglib2.Positionable)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.24581221372766712
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.24080371889280833
        }, 
        {
            "<Catalano.Imaging.Filters.GammaCorrection: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.23531127632841747
        }, 
        {
            "<Catalano.Imaging.Tools.Granulometry: float[] ProcessImage(Catalano.Imaging.FastBitmap)>": 0.23478763124039614
        }, 
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.23405848696614512
        }
    ], 
    "<net.imglib2.util.ImgUtil: void copy(float[],int,int[],net.imglib2.img.Img)>": [
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getIndex(int[])>": 0.46136687760412176
        }, 
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.43194937076981743
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.43194937076981743
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(float[],int,int,float[],int,int,int,int)>": 0.4080284449919514
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(float[],int,int,float[],int,int,int,int)>": 0.40634867642767897
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform: void apply(net.imglib2.Localizable,net.imglib2.Positionable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5845464998712748
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5679589407541452
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5602169992197462
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.554448918794042
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateMetrics(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.545453323948808
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: int getValue()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.42101300312185536
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.42101300312185536
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.42101300312185536
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3845439992738321
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.SquaresIntoRegularClusters: int add(int,int)>": 0.37821769671933936
        }
    ], 
    "<net.imglib2.img.cell.AbstractCell: long indexToGlobalPosition(int,int)>": [
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.4127949805774604
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.4125224241001491
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long[],int,int,int,int)>": 0.40582317277390567
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long[],int,int,int,int)>": 0.40582317277390567
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long[],int,int,int,int)>": 0.40582317277390567
        }
    ], 
    "<net.imglib2.type.logic.BitType: void updateContainer(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.3187477037083238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.22574829559349857
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.22057752193984925
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: int compareTo(net.imglib2.type.numeric.integer.UnsignedIntType)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.23551672977777013
        }, 
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(Catalano.Imaging.Corners.FeaturePoint)>": 0.2352522024751814
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.2337563834231567
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.2336704931297503
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.23354423231490992
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: int rgba(int,int,int,int)>": [
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(int,int,int,int,int,int)>": 0.5643222294814736
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(int,int,int,int,int)>": 0.561039583562775
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: void setMax(int)>": 0.5571992396778255
        }, 
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.5525134855615768
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.5460619946352709
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: void setPosition(long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.32345081072070736
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.28212446335294117
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.27420241838213555
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.2731216822013734
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(long[],int,int,int,int)>": 0.2672346876861069
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: float getFloatPosition(int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4277709349643226
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.41422904672203525
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.41422904672203525
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4141501619642559
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4133861278693982
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: void <init>(net.imglib2.Interval)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3032453591561014
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.29203970828662434
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2840310411797361
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set(int,int,long[])>": 0.2755482884888772
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.26936099781375444
        }
    ], 
    "<net.imglib2.type.numeric.integer.LongType: int compareTo(net.imglib2.type.numeric.integer.AbstractIntegerType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.26253298750374954
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.230960523604179
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2193386105675623
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.21546490714187164
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.21530246534264683
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: net.imglib2.transform.integer.SlicingTransform concatenate(net.imglib2.transform.integer.Slicing)>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3950505150209246
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.39485272322990533
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.38778265214802954
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3852453850535359
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.3833619245905054
        }
    ], 
    "<net.imglib2.type.numeric.AbstractARGBDoubleType: boolean valueEquals(net.imglib2.type.numeric.AbstractARGBDoubleType)>": [
        {
            "<org.dyn4j.geometry.Vector2: boolean equals(double,double)>": 0.4762685267961425
        }, 
        {
            "<org.dyn4j.geometry.Vector3: boolean equals(double,double,double)>": 0.4738279940871265
        }, 
        {
            "<org.dyn4j.geometry.Vector2: boolean isZero()>": 0.45061019519625034
        }, 
        {
            "<org.dyn4j.geometry.Interval: boolean contains(org.dyn4j.geometry.Interval)>": 0.4497422394901047
        }, 
        {
            "<org.dyn4j.geometry.Interval: boolean overlaps(org.dyn4j.geometry.Interval)>": 0.4497422394901047
        }
    ], 
    "<net.imglib2.img.array.ArrayImgFactory: net.imglib2.img.array.ArrayImg createLongInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.16989915581702875
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.16989915581702875
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: void <init>(net.imglib2.view.FullSourceMapSlicingRandomAccess)>": [
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.2366791103368842
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.2366791103368842
        }, 
        {
            "<Catalano.Math.Geometry.GrahamConvexHull: java.util.ArrayList FindFull(java.util.ArrayList)>": 0.16529837026884842
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawPolygon(java.util.List,boolean,java.awt.Graphics2D)>": 0.1624128104476061
        }, 
        {
            "<Catalano.Math.Matrix: int[][] toIntMatrix(java.util.List)>": 0.15863245970900552
        }
    ], 
    "<net.imglib2.img.sparse.Ntree: void <init>(net.imglib2.img.sparse.Ntree)>": [
        {
            "<boofcv.struct.image.ImageInterleaved: void setTo(boofcv.struct.image.ImageInterleaved)>": 0.24552672254566654
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.23796814439612807
        }, 
        {
            "<Catalano.Imaging.Filters.MoveTowards: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.23573568244485607
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.23543350953969927
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.23543350953969927
        }
    ], 
    "<net.imglib2.position.transform.AbstractPositionableTransform: void move(long,int)>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxc020(double[],int)>": 0.3129188160856899
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxb020(double[],int)>": 0.3129188160856899
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftx020(double[],int)>": 0.3111824046824289
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void rdft2d_sub(int,double[])>": 0.28454573970010083
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Mahalanobis(double[][],double[][])>": 0.2832819734084263
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: void setB(double)>": [
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitSegment: void <init>(double,double,int)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitLoop: void <init>(double,double,int)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationAverageGradientIntegral: void <init>(double,int,double,int,double,java.lang.Class)>": 0.34537863735525043
        }, 
        {
            "<boofcv.factory.feature.orientation.FactoryOrientationAlgs: boofcv.abst.feature.orientation.OrientationIntegral image_ii(double,int,double,int,double,java.lang.Class)>": 0.3341995859152048
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_S32: void <init>(double,int,double,boolean)>": 0.324532417269161
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorFactory: net.imglib2.outofbounds.OutOfBounds create(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.11974423796073262
        }, 
        {
            "<org.dyn4j.dynamics.WorldTest: void getUserData()>": 0.10193369259959789
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void getUserData()>": 0.10193369259959789
        }, 
        {
            "<boofcv.gui.SelectAlgorithmPanel: void performSetAlgorithm(java.lang.String,java.lang.Object)>": 0.10129520657105669
        }, 
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.10108473819860608
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: java.lang.String toString()>": [
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.5238151183636507
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendPrefix(java.lang.String,java.lang.String)>": 0.49858111303801717
        }, 
        {
            "<org.jbox2d.common.Transform: java.lang.String toString()>": 0.49752734251853054
        }, 
        {
            "<org.jbox2d.serialization.UnsupportedObjectException: java.lang.String getLocalizedMessage()>": 0.49644204395678865
        }, 
        {
            "<org.jbox2d.common.Sweep: java.lang.String toString()>": 0.47053110493330186
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: void <init>(long,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.3679950211112609
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.3679950211112609
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.3679950211112609
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36016035441676975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.35742259995382736
        }
    ], 
    "<net.imglib2.img.list.ListLocalizingCursor: void <init>(net.imglib2.img.list.AbstractListImg)>": [
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.32398739765990003
        }, 
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.30246070870311037
        }, 
        {
            "<boofcv.core.image.impl.ConvertInterleavedToSingle: void average(boofcv.struct.image.InterleavedS64,boofcv.struct.image.GrayS64)>": 0.29902238595241
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int indexOfNextCounterClockwiseEdge(int)>": 0.29857104180303257
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: int createProxy(org.jbox2d.collision.AABB,java.lang.Object)>": 0.2982689033519037
        }
    ], 
    "<net.imglib2.img.array.ArrayImg: void <init>(java.lang.Object,long[],net.imglib2.util.Fraction)>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.3582547429964847
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_U8: void <init>(int)>": 0.356322585919634
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_S32: void <init>(int)>": 0.356322585919634
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_S16: void <init>(int)>": 0.356322585919634
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_S32: void <init>(boofcv.struct.image.InterleavedS32)>": 0.35578008451128856
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: void localize(long[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS64)>": 0.2702219607172379
        }, 
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.2689747887658136
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.266755475835944
        }, 
        {
            "<boofcv.core.image.impl.ConvertInterleavedToSingle: void average(boofcv.struct.image.InterleavedS64,boofcv.struct.image.GrayS64)>": 0.26540474338257725
        }, 
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.264547643130124
        }
    ], 
    "<net.imglib2.img.array.AbstractArrayCursor: void <init>(net.imglib2.img.array.ArrayImg,int,int)>": [
        {
            "<boofcv.alg.filter.convolve.down.UtilDownConvolve: int computeOffset(int,int)>": 0.3909773823537641
        }, 
        {
            "<boofcv.alg.filter.misc.AverageDownSampleOps: int downSampleSize(int,int)>": 0.3885880703986171
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int round(int,int,int)>": 0.37873263517747613
        }, 
        {
            "<Catalano.Statistics.Distributions.DiscreteUniformDistribution: void <init>(int,int)>": 0.36834717020075103
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitLoop: int circularDistance(int,int)>": 0.36544947720791693
        }
    ], 
    "<net.imglib2.img.cell.CellImgFactory: net.imglib2.img.cell.CellImg createCharInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.19270150385571458
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.19270150385571458
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.17820800197681597
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.14336948875748118
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.14336948875748118
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.FloatArray: void <init>(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_F32: void setOutside(int,int,float[])>": 0.5315774075852734
        }, 
        {
            "<org.jbox2d.pooling.arrays.FloatArray: float[] getInitializedArray(int)>": 0.5265929256802434
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F32: void <init>(int)>": 0.515625
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F32: void <init>(int)>": 0.515625
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_F32: void getOutside(int,int,float[])>": 0.4891331417118402
        }
    ], 
    "<net.imglib2.type.AbstractBitType: void incIndex(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.35897774872115823
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.35897774872115823
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.3575868720767822
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.3453198173619748
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.32572542511667824
        }
    ], 
    "<net.imglib2.img.AbstractImg: void realMin(double[])>": [
        {
            "<Catalano.Math.Matrix: void Clear(double[])>": 0.4167904386991574
        }, 
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.37947822033799244
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: double[] getDoublePivot()>": 0.3690585441763509
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumn(double[][],int)>": 0.3528748925149711
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRow(double[][],int)>": 0.3449174105727942
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: int getIntPosition(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.6638045043100587
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.6067764656465279
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5617116072558871
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.5538313521482858
        }, 
        {
            "<org.jbox2d.collision.Distance$DistanceProxy: org.jbox2d.common.Vec2 getVertex(int)>": 0.5538313521482858
        }
    ], 
    "<net.imglib2.display.awt.UnsignedIntDataBuffer: float getElemFloat(int,int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.5573063509924431
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.5573063509924431
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.5573063509924431
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int max(int[],int,int,int,int)>": 0.49914554537882483
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int min(int[],int,int,int,int)>": 0.49914554537882483
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: void localize(long[])>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.24658972057991796
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2438722065612326
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.22695240982066917
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.22695240982066917
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.22257557366614794
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: void setValue(short)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2193376805259411
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2193376805259411
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2193376805259411
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.2159591436723548
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.21239808581646524
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.composite.CompositeIntervalView collapse(net.imglib2.RandomAccessibleInterval)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.10813939077487976
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.10010346614252381
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.09899201058442432
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.0956296065296812
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void <init>(boofcv.demonstrations.tracker.CirculantVisualizationPanel$Listener)>": 0.0933277359899136
        }
    ], 
    "<net.imglib2.KDTree: net.imglib2.KDTree$ValueNode makeNode(java.util.ListIterator,java.util.ListIterator,int,java.util.List,int[])>": [
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitLoop: int selectFarthest(java.util.List)>": 0.30200765169292515
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: void setTo(boofcv.struct.image.ImageInterleaved)>": 0.2888370989873424
        }, 
        {
            "<boofcv.core.image.border.BorderIndex1D_Reflect: int getIndex(int)>": 0.2881785076430421
        }, 
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.2879099120663214
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitLoop: boolean process(java.util.List)>": 0.2865952085386509
        }
    ], 
    "<net.imglib2.converter.readwrite.RealFloatSamplerConverter$RealConvertingFloatAccess: void setValue(int,float)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F32: void setOutside(int,int,float)>": 0.4257710040857421
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4083636416084332
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.40226116240759324
        }, 
        {
            "<boofcv.alg.weights.WeightPixelUniform_F32: float weight(int,int)>": 0.4015665367996064
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F32: float getOutside(int,int)>": 0.4015665367996064
        }
    ], 
    "<net.imglib2.display.awt.UnsignedIntDataBuffer: void setElemFloat(int,float)>": [
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.42399081561431073
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(Catalano.Core.IntPoint,int,int,int,int)>": 0.42310310365091536
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.4178682436552423
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int[],int,int,int,int)>": 0.4129475809611158
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int[],int,int,int,int)>": 0.4129475809611158
        }
    ], 
    "<net.imglib2.img.sparse.FloatNtree: void <init>(long[],long[],java.lang.Float)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2668001056849969
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2668001056849969
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2467353604592215
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.1793225683953813
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.1793225683953813
        }
    ], 
    "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: void searchNode(net.imglib2.KDTreeNode)>": [
        {
            "<org.dyn4j.geometry.Vector2: boolean equals(double,double)>": 0.3787620457692176
        }, 
        {
            "<org.dyn4j.geometry.Vector2: boolean isZero()>": 0.36298624405838475
        }, 
        {
            "<Catalano.Core.DoubleRange: boolean IsOverlapping(Catalano.Core.DoubleRange)>": 0.3616314064354796
        }, 
        {
            "<net.smert.jreactphysics3d.engine.Timer: boolean isPossibleToTakeStep()>": 0.36016116721854474
        }, 
        {
            "<com.flowpowered.react.engine.Timer: boolean isPossibleToTakeStep()>": 0.36016116721854474
        }
    ], 
    "<net.imglib2.type.logic.BitType: int compareTo(net.imglib2.type.numeric.integer.AbstractIntegerType)>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.46682521286027245
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.44649442101052905
        }, 
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.43104493873733585
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean overlap(int,int)>": 0.41215908397715584
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean isSubset(int,int)>": 0.41215908397715584
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorFactory: net.imglib2.outofbounds.AbstractOutOfBoundsMirror create(net.imglib2.Interval)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.08376441190802505
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.0790750967327194
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.07753981145352655
        }, 
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.07637626158259733
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.0761811750275055
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.1061907736783491
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.09923339599665497
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.0982996523411924
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.095314860705753
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.095314860705753
        }
    ], 
    "<net.imglib2.AbstractInterval: void dimensions(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3727647860398104
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3624481131324937
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.36169035526784354
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.35894509346178743
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.35643632746222254
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void localize(float[])>": [
        {
            "<boofcv.struct.feature.TupleDesc_F32: void set(float[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: void <init>(int,float[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void <init>(float[],int,int)>": 0.2540764877039817
        }, 
        {
            "<boofcv.alg.interpolate.array.PolynomialNeville_F32: void <init>(int,float[],float[],int)>": 0.25147436847440663
        }, 
        {
            "<Catalano.Imaging.Filters.ImagePyramids: void <init>()>": 0.22423504135338396
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: java.math.BigInteger getBigInteger()>": [
        {
            "<Catalano.Math.RationalNumber: void Subtract(Catalano.Math.RationalNumber)>": 0.27746646496367744
        }, 
        {
            "<Catalano.Math.RationalNumber: void Add(Catalano.Math.RationalNumber)>": 0.27746646496367744
        }, 
        {
            "<Catalano.Math.RationalNumber: void Factorize()>": 0.27628176522058717
        }, 
        {
            "<Catalano.Math.RationalNumber: void Subtract(java.math.BigInteger)>": 0.27494095115545064
        }, 
        {
            "<Catalano.Math.RationalNumber: void Add(java.math.BigInteger)>": 0.27494095115545064
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess: void move(int,int)>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void set(int,int,int)>": 0.4249991534864274
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void vertical9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.42122517093711476
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void vertical11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.42107388637323895
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void vertical7(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.42077144869860644
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal7(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.41977213251603884
        }
    ], 
    "<net.imglib2.PointSampleList: void <init>(int)>": [
        {
            "<org.dyn4j.geometry.MassTest: void createListOneNullElement()>": 0.3484910580161704
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: java.util.List createList3_F64(int)>": 0.33984757321435943
        }, 
        {
            "<org.dyn4j.geometry.GeometryTest: void getWindingListLessThan2Points()>": 0.3253802836098545
        }, 
        {
            "<boofcv.examples.geometry.ExampleImageStitching: georegression.struct.homography.Homography2D_F64 computeTransform(boofcv.struct.image.ImageGray,boofcv.struct.image.ImageGray,boofcv.abst.feature.detdesc.DetectDescribePoint,boofcv.abst.feature.associate.AssociateDescription,org.ddogleg.fitting.modelset.ModelMatcher)>": 0.31136756308043795
        }, 
        {
            "<boofcv.gui.feature.FancyInterestPointRender: void <init>()>": 0.29578023352454663
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgs: net.imglib2.img.planar.PlanarImg floats(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.transform.integer.permutation.PermutationTransform: void applyInverse(int[],int[])>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4148952761560914
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.40505006478995137
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.3961996781523039
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int)>": 0.39011412326301254
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.38040061962726834
        }
    ], 
    "<net.imglib2.position.transform.FloorOffset: void move(float,int)>": [
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.26721270550682036
        }, 
        {
            "<org.jbox2d.tests.math.SinCosTest: long speedTestMath(int,int)>": 0.25292363944282226
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.24721429176938509
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.24094365757262182
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.24020599092722533
        }
    ], 
    "<net.imglib2.transform.integer.permutation.AbstractPermutationTransform: long applyInverseChecked(int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.45949367254182305
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.45949367254182305
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.45949367254182305
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int max(int[],int,int,int,int)>": 0.4300159505539174
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int min(int[],int,int,int,int)>": 0.4300159505539174
        }
    ], 
    "<net.imglib2.transform.integer.SequentializeTransform: void apply(long[],long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.532503650005686
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5319612898433635
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5246302445638458
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void removeContactPoint(int)>": 0.5172192208756444
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void freeNode(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.5142216412671182
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void localize(float[])>": [
        {
            "<boofcv.struct.feature.TupleDesc_F32: void set(float[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: void <init>(int,float[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void <init>(float[],int,int)>": 0.2540764877039817
        }, 
        {
            "<boofcv.alg.interpolate.array.PolynomialNeville_F32: void <init>(int,float[],float[],int)>": 0.25147436847440663
        }, 
        {
            "<Catalano.Imaging.Filters.ImagePyramids: void <init>()>": 0.22423504135338396
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRandomAccessibleInterval: net.imglib2.converter.read.ConvertedRandomAccess randomAccess()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04794633014853841
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.046423834544262965
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04601130713546223
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04552231504557686
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04506479272965292
        }
    ], 
    "<net.imglib2.display.screenimage.awt.ByteAWTScreenImage: void <init>(net.imglib2.type.numeric.integer.ByteType,net.imglib2.img.basictypeaccess.array.ByteArray,long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.15729768613092662
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.15729768613092662
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1456513577327886
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.13908532168678328
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.12126492036826719
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: void apply(net.imglib2.Localizable,net.imglib2.Positionable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5637321816587821
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5631753858538152
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5539616163081005
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5525053255445446
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void shrinkArrays()>": 0.532176828848401
        }
    ], 
    "<net.imglib2.util.ImgUtil: void copy(boolean[],int,int[],net.imglib2.img.Img)>": [
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getIndex(int[])>": 0.45873129698143017
        }, 
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.4293416251858727
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.4293416251858727
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.4019064796207384
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(int[],int,int,int[],int,int,int,int)>": 0.39232367151270753
        }
    ], 
    "<net.imglib2.AbstractLocalizableInt: double getDoublePosition(int)>": [
        {
            "<boofcv.struct.pyramid.PyramidDiscrete: double getScale(int)>": 0.6812865497076022
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: double getDouble(int)>": 0.6812865497076022
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.5206056907299677
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: int get(int)>": 0.5206056907299677
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.5206056907299677
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: double getDoublePosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3849525311446277
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.36693378189071646
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.3647521773095299
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3372704398350133
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.3323583781734923
        }
    ], 
    "<net.imglib2.converter.Converters: net.imglib2.RealRandomAccessibleRealInterval convert(net.imglib2.RealRandomAccessibleRealInterval,net.imglib2.converter.Converter,net.imglib2.type.Type)>": [
        {
            "<boofcv.gui.DepthVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.14052767196315077
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.14052767196315077
        }, 
        {
            "<org.dyn4j.collision.narrowphase.PairwiseTypedFallbackCondition: boolean isMatch(java.lang.Class,java.lang.Class)>": 0.13990854174238493
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.1323301932270773
        }, 
        {
            "<boofcv.abst.feature.associate.EnforceUniqueByScore: void <init>(boofcv.abst.feature.associate.Associate,boolean,boolean)>": 0.13090996793955453
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsRandomValueFactory: net.imglib2.outofbounds.OutOfBounds create(java.lang.Object)>": [
        {
            "<org.dyn4j.geometry.TransformTest: void rotate()>": 0.20129120614366322
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawMouseJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.PinJoint,double)>": 0.2003788379573586
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void access$000(boofcv.app.calib.AssistedCalibration,double,double,double,double)>": 0.196610345002844
        }, 
        {
            "<org.dyn4j.geometry.AABBTest: void expand()>": 0.19442031055122272
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawVector(com.jogamp.opengl.GL2,org.dyn4j.geometry.Vector2,org.dyn4j.geometry.Vector2,double)>": 0.19366334310045533
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void <init>(float,float)>": [
        {
            "<com.flowpowered.react.math.Matrix4x4: void <init>(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)>": 0.4228281944777401
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.DebugDrawJ2D$1: java.lang.Object newColor(float,float,float,float)>": 0.41021228787603015
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: void <init>(float,float,float,float,float,float,float,float,float)>": 0.40983578120987046
        }, 
        {
            "<com.flowpowered.react.math.Matrix2x2: void <init>(float,float,float,float)>": 0.367507886349549
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplHarrisCornerWeighted_S16: void <init>(int,float)>": 0.3187795158900623
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: void mul(float)>": [
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float ArcTan2(float,float)>": 0.344721548525955
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.29549183940461815
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.28976459873177907
        }, 
        {
            "<Catalano.Core.DoublePoint: void <init>(float,float)>": 0.2793624454344339
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float Sqrt(float)>": 0.2604340321685027
        }
    ], 
    "<net.imglib2.histogram.Real1dBinMapper: double min(long)>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.48989892943535845
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.4891322142562847
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.4872118593295545
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Vector3 solve33(org.dyn4j.geometry.Vector3)>": 0.4553478939787158
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Matrix33 invert()>": 0.450253815621148
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgFactory: net.imglib2.img.Img create(long[],java.lang.Object)>": [
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.21110361716348555
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.21110361716348555
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.19177377961240089
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.19177377961240089
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1773215478370479
        }
    ], 
    "<net.imglib2.neighborsearch.KNearestNeighborSearchOnKDTree: net.imglib2.neighborsearch.KNearestNeighborSearchOnKDTree copy()>": [
        {
            "<Catalano.Core.Structs.DoubleArrayList: void ensureCapacity(int)>": 0.28762612882497574
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void cdft2d_sub(int,double[][],boolean)>": 0.284195279174971
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: void add(double)>": 0.266712794485307
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void complexInverse(double[],boolean)>": 0.2598851604030645
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void complexForward(double[])>": 0.25947890189509387
        }
    ], 
    "<net.imglib2.img.list.ListCursor: void jumpFwd(long)>": [
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.3459979992145379
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.3389792284760776
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3309263573515891
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.3295466603441929
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.32699348333161893
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.FloorInterpolatorFactory: net.imglib2.interpolation.randomaccess.FloorInterpolator create(net.imglib2.RandomAccessible,net.imglib2.RealInterval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04364357804719847
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04225771273642583
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04188220595401253
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.041437096508237244
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04102063270711835
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: void setPosition(int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.43928044179380327
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.43468808993589203
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.42096117311192677
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.41530935102847033
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.4118318364438042
        }
    ], 
    "<net.imglib2.view.RandomAccessibleIntervalCursor: double getDoublePosition(int)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.3782432325354622
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F64: double unsafe_getD(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double convolveSparse(boofcv.struct.image.GrayF64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: int compareTo(net.imglib2.type.numeric.integer.UnsignedShortType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(Catalano.Imaging.Corners.FeaturePoint)>": 0.4258491346281389
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.42307211475038187
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(boofcv.alg.geo.calibration.CalibrationObservation$Point,boofcv.alg.geo.calibration.CalibrationObservation$Point)>": 0.3877991700277703
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.33137892671572144
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.33137892671572144
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.CharArray: char getValue(int)>": [
        {
            "<org.dyn4j.sandbox.help.HelpReader: void characters(char[],int,int)>": 0.5168876727488003
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4966616068166122
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.4893146606557609
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.47437111780712504
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.46420451256364215
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.1061907736783491
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.09923339599665497
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.0982996523411924
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.095314860705753
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.095314860705753
        }
    ], 
    "<net.imglib2.view.ExtendedRandomAccessibleInterval: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3969363340782325
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.38392977988564303
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.38141933846745585
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateMetrics(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.3799864642902052
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.3758927523310671
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: void setBigInteger(java.math.BigInteger)>": [
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void process(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.2404979045267504
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMaximum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.23797687476275292
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMinimum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.23797687476275292
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.22844610387820563
        }, 
        {
            "<Catalano.Imaging.Filters.Add: void <init>(int,int,int)>": 0.22753908985084925
        }
    ], 
    "<net.imglib2.view.MixedRandomAccess: void move(net.imglib2.Localizable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.3644167157996104
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.36128548211703826
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3540739596542676
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.35032814031499615
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.3470085510642267
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.SubsampleView subsample(net.imglib2.RandomAccessible,long[])>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.33480541582704604
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.31339654079857593
        }, 
        {
            "<org.jbox2d.pooling.normal.OrderedStack: void push(int)>": 0.3121519675228611
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.31047544308566216
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.30881555305436087
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: void bck(int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.2859570819078428
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.2859570819078428
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.2859570819078428
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.InterleavedS64,long,long,boofcv.struct.image.InterleavedS64)>": 0.27227452349427345
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.InterleavedS64,long,long,long,boofcv.struct.image.InterleavedS64)>": 0.27227452349427345
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: int compareTo(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.42020104153392573
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.37183342002070013
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.32943893241394046
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.32943893241394046
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.32943893241394046
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: long getValue()>": [
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.29532163742690054
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.27731152179204405
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.2680173780879102
        }, 
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: long getTrackId(int)>": 0.2601275618917341
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.25930159226645905
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.MixedTransformView permute(net.imglib2.RandomAccessible,int,int)>": [
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.3967523818855058
        }, 
        {
            "<Catalano.Math.Matrix: void Fill(int[],int)>": 0.38723597906383145
        }, 
        {
            "<Sort10: void swapKeys(int[],int,int)>": 0.36641965856507286
        }, 
        {
            "<Sort09: void swapKeys(int[],int,int)>": 0.36641965856507286
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMax(int,int)>": 0.35376175107037056
        }
    ], 
    "<net.imglib2.FinalDimensions: void dimensions(long[])>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.32749624523823023
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.25592842593542114
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.25505049943266234
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.246020459367563
        }, 
        {
            "<boofcv.core.image.border.ImageBorder_IL_S64: void setGeneral(int,int,double[])>": 0.24356032133110112
        }
    ], 
    "<net.imglib2.position.transform.FloorOffset: void setPosition(net.imglib2.RealLocalizable)>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2762998184866987
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayF64,boofcv.struct.image.GrayS64)>": 0.25255654328720434
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.23351104766497327
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedF64,boofcv.struct.image.InterleavedS64)>": 0.22328304848414193
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.21624466242907903
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowingFactory: void <init>(int)>": [
        {
            "<boofcv.abst.feature.detect.interest.ConfigFastHessian: void <init>(float,int,int,int,int,int,int)>": 0.33805396789124686
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.3373917435011729
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.3373917435011729
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.3373917435011729
        }, 
        {
            "<boofcv.factory.feature.detect.line.ConfigHoughFootSubimage: void <init>(int,int,int,float,int,int,int)>": 0.3334144567112841
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedIterableRandomAccessibleInterval: net.imglib2.converter.readwrite.WriteConvertedRandomAccess randomAccess()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.051639777949432225
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.05
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04955569438322958
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04902903378454601
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04853626716970755
        }
    ], 
    "<net.imglib2.transform.integer.shear.ShearTransform: void <init>(int,int,int,net.imglib2.transform.integer.shear.AbstractShearTransform)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.5500916396159242
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.5500916396159242
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.545166705119368
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.5391191227455855
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.5391191227455855
        }
    ], 
    "<net.imglib2.img.list.ListCursor: void <init>(net.imglib2.img.list.AbstractListImg)>": [
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.2854779116337508
        }, 
        {
            "<Catalano.Math.Approximation: int abs(int)>": 0.27100399777113127
        }, 
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.26630482477676626
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int indexOfNextCounterClockwiseEdge(int)>": 0.26630482477676626
        }, 
        {
            "<boofcv.io.wrapper.images.LoadFileImageSequence: int getFrameNumber()>": 0.2662669530525141
        }
    ], 
    "<net.imglib2.AbstractCursorInt: void <init>(int)>": [
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplSsdCorner_S16: void setImageShape(int,int)>": 0.4533600932023333
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int,int)>": 0.43702142191691895
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void <init>(int,int,double)>": 0.40879610787347276
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparitySparseScoreSadRect_S16: void <init>(int,int,int,int)>": 0.4086467759569381
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparitySparseScoreSadRect_U8: void <init>(int,int,int,int)>": 0.4086467759569381
        }
    ], 
    "<net.imglib2.view.RandomAccessibleIntervalCursor: void fwd()>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.29244485121945596
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2490006005283414
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.24552384078399797
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2376343202090333
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.2297127892361162
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.LanczosInterpolator: void resetKernel()>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal11(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5677713805241451
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve11(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.558958786724894
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal9(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5588358035352162
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve9(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.552528391576761
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal7(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5411475791815329
        }
    ], 
    "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: double getDistance()>": [
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.6116198616198616
        }, 
        {
            "<Catalano.Statistics.DescriptiveStatistics: double StandartDeviation(double[])>": 0.5942358989703281
        }, 
        {
            "<Catalano.Statistics.Tools: double StandartDeviation(double[])>": 0.5942358989703281
        }, 
        {
            "<Catalano.Statistics.Tools: double StandartDeviation(double[],double)>": 0.5854908577056641
        }, 
        {
            "<Catalano.Statistics.DescriptiveStatistics: double StandartDeviation(double[],double)>": 0.5854908577056641
        }
    ], 
    "<net.imglib2.type.numeric.integer.ShortType: net.imglib2.type.numeric.integer.ShortType copy()>": [
        {
            "<boofcv.struct.QueueCorner: void add(georegression.struct.point.Point2D_I16)>": 0.13841646900471033
        }, 
        {
            "<boofcv.demonstrations.feature.detect.interest.DetectFeaturePointApp: void refreshAll(java.lang.Object[])>": 0.09241197778678095
        }, 
        {
            "<boofcv.demonstrations.feature.detect.interest.DetectFeaturePointApp: void setActiveAlgorithm(int,java.lang.String,java.lang.Object)>": 0.09199119134373279
        }, 
        {
            "<org.dyn4j.sandbox.input.Mouse: void mouseClicked(com.jogamp.newt.event.MouseEvent)>": 0.08596889919407658
        }, 
        {
            "<boofcv.demonstrations.feature.detect.VideoDetectCorners: void updateGUI(java.awt.image.BufferedImage,boofcv.struct.image.ImageGray)>": 0.06953840623693443
        }
    ], 
    "<net.imglib2.AbstractLocalizingCursor: void jumpFwd(long)>": [
        {
            "<org.jbox2d.testbed.tests.ConveyorBelt: void processFixture(org.jbox2d.dynamics.Fixture,java.lang.Long)>": 0.32395378672635117
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.27155777860217123
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.25881247462951407
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.24975770593987426
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2467720467617631
        }
    ], 
    "<net.imglib2.iterator.IntervalIterator: double getDoublePosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: double unsafe_getD(int,int)>": 0.2572567294325986
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.23577138176789286
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.21932095412253078
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.21932095412253078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.20228364075891758
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: net.imglib2.img.planar.PlanarCursor cursor()>": [
        {
            "<boofcv.alg.filter.convolve.ConvolveNormalized: void convolve(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayU8,boofcv.struct.image.GrayI8)>": 0.23552103569126814
        }, 
        {
            "<boofcv.alg.filter.convolve.ConvolveNormalized: void convolve(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS16,boofcv.struct.image.GrayI16)>": 0.23552103569126814
        }, 
        {
            "<Catalano.Imaging.Filters.ReplaceColor: void ApplyInPlace(Catalano.Imaging.FastBitmap,int,int,int)>": 0.2281146151073195
        }, 
        {
            "<boofcv.alg.distort.ImageDistortCache_SB: void init(boofcv.struct.image.ImageGray,boofcv.struct.image.ImageGray)>": 0.2269690736721599
        }, 
        {
            "<boofcv.alg.InputSanityCheck: void checkSameShape(boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase)>": 0.2248956206892972
        }
    ], 
    "<net.imglib2.exception.ImgLibException: void <init>(java.lang.Object,java.lang.String)>": [
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendPrefix(java.lang.String,java.lang.String)>": 0.5896606211354707
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.5515990055857596
        }, 
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareFiducial: void main(java.lang.String[])>": 0.5001704236345635
        }, 
        {
            "<org.dyn4j.Version: void main(java.lang.String[])>": 0.49256274696430435
        }, 
        {
            "<boofcv.applet.AppletMediaManager: java.io.Reader openFile(java.lang.String)>": 0.4885951554513996
        }
    ], 
    "<net.imglib2.type.label.BasePairBitType: void complement()>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.21147605322689828
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.21147605322689828
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(boofcv.struct.image.GrayS64)>": 0.2061350306073917
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(boofcv.struct.image.GrayS64)>": 0.2061350306073917
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long min(boofcv.struct.image.GrayS64)>": 0.2061350306073917
        }
    ], 
    "<net.imglib2.util.Util: void quicksort(float[])>": [
        {
            "<Catalano.Math.Matrix: void Clear(float[])>": 0.3229166666666667
        }, 
        {
            "<Catalano.Math.Matrix: float[] RemoveColumn(float[],int)>": 0.32184455063012984
        }, 
        {
            "<Catalano.Core.ArraysUtil: float[] Concatenate(float[],float[])>": 0.3023065226934998
        }, 
        {
            "<Catalano.Math.Matrix: void Fill(float[],float)>": 0.2933612455857992
        }, 
        {
            "<Catalano.Math.Matrix: float[] RemoveColumns(float[],int[])>": 0.2870437171528314
        }
    ], 
    "<net.imglib2.img.sparse.FloatNtree: void <init>(net.imglib2.img.sparse.Ntree,long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.242012144279314
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.242012144279314
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2237584400126592
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.17235608187218834
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.17235608187218834
        }
    ], 
    "<net.imglib2.type.numeric.integer.ShortType: void setBigInteger(java.math.BigInteger)>": [
        {
            "<boofcv.struct.QueueCorner: void add(georegression.struct.point.Point2D_I16)>": 0.18361041015608384
        }, 
        {
            "<Catalano.Math.RationalNumber: void <init>(java.math.BigInteger)>": 0.16866989818336642
        }, 
        {
            "<Catalano.Math.RationalNumber: void <init>(java.math.BigInteger,java.math.BigInteger)>": 0.15677907758317103
        }, 
        {
            "<Catalano.Math.RationalNumber: void <init>(int)>": 0.15451573749774417
        }, 
        {
            "<Catalano.Math.RationalNumber: void <init>(int,int)>": 0.15249898564749015
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileNumericType: void mul(net.imglib2.type.volatiles.AbstractVolatileNumericType)>": [
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.23777855777677998
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.23777855777677998
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.23568803939131827
        }, 
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.23536608771641823
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean raycast(org.dyn4j.geometry.Vector2,org.dyn4j.geometry.Vector2,boolean,boolean,boolean,java.util.List)>": 0.22054992511898777
        }
    ], 
    "<net.imglib2.type.numeric.real.DoubleType: boolean valueEquals(java.lang.Object)>": [
        {
            "<Catalano.Core.DoubleRange: boolean IsOverlapping(Catalano.Core.DoubleRange)>": 0.3873173095512064
        }, 
        {
            "<org.dyn4j.geometry.Vector2: boolean isZero()>": 0.38485778340062454
        }, 
        {
            "<net.smert.jreactphysics3d.engine.Timer: boolean isPossibleToTakeStep()>": 0.38057665259607953
        }, 
        {
            "<com.flowpowered.react.engine.Timer: boolean isPossibleToTakeStep()>": 0.38057665259607953
        }, 
        {
            "<org.dyn4j.geometry.Interval: boolean isDegenerate()>": 0.38057665259607953
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void <init>(java.util.List,java.util.List)>": [
        {
            "<boofcv.alg.geo.triangulate.ResidualsTriangulateSimple: void setObservations(java.util.List,java.util.List)>": 0.27866201602276786
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.RegularClustersIntoGrids: void process(java.util.List)>": 0.2543939382966501
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void renderArrows()>": 0.25121721600313657
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void renderMagnets()>": 0.25121721600313657
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationPlanarGridZhang99: int totalPoints(java.util.List)>": 0.24790774524501
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.021677749238102995
        }
    ], 
    "<net.imglib2.img.AbstractImg: void min(long[])>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.30482023422929255
        }, 
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.2824260606413482
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.2820358554307283
        }, 
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.27876604507064606
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS64)>": 0.27756938133212616
        }
    ], 
    "<net.imglib2.img.array.AbstractArrayCursor: java.lang.String toString()>": [
        {
            "<org.dyn4j.sandbox.resources.Messages: java.lang.String getString(java.lang.String)>": 0.3100041420236116
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$2: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$3: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$5: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$4: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: void setPosition(int,int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.3934931189468561
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.3857504731668535
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.38392698679775095
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.380222521169742
        }, 
        {
            "<Catalano.Imaging.Shapes.IntRectangle: boolean isInside(int,int)>": 0.3790445772872477
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: void setPosition(long,int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.3613192333012921
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void boundRectangleInside(boofcv.struct.image.ImageBase,boofcv.struct.ImageRectangle)>": 0.35675240344504233
        }, 
        {
            "<Catalano.Imaging.Shapes.IntRectangle: boolean isInside(int,int)>": 0.35403066710881725
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.3533819407985126
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.3533819407985126
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void move(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.view.TransformBuilder$3: net.imglib2.view.TranslationRandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04879500364742665
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04724555912615341
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04682572978040922
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04632808229131882
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04586246160658393
        }
    ], 
    "<net.imglib2.type.volatiles.VolatileNumericType: void <init>(net.imglib2.type.numeric.NumericType,boolean)>": [
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlockRelaxed: void <init>(boolean,boolean)>": 0.3438694806559756
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlockStrict: void <init>(boolean,boolean)>": 0.3438694806559756
        }, 
        {
            "<boofcv.abst.feature.associate.EnforceUniqueByScore$Describe2D: void <init>(boofcv.abst.feature.associate.AssociateDescription2D,boolean,boolean)>": 0.3144163788737706
        }, 
        {
            "<boofcv.abst.feature.associate.EnforceUniqueByScore$Describe: void <init>(boofcv.abst.feature.associate.AssociateDescription,boolean,boolean)>": 0.3144163788737706
        }, 
        {
            "<boofcv.alg.geo.calibration.Zhang99ParamAll: void <init>(boolean,int,boolean)>": 0.3144163788737706
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: void setImaginary(float)>": [
        {
            "<com.flowpowered.react.math.Matrix4x4: void setAllValues(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)>": 0.32921128423317975
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: void setAllValues(float,float,float,float,float,float,float,float,float)>": 0.3224149197105202
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.DebugDrawJ2D$1: java.awt.Color newColor(float,float,float,float)>": 0.3210716905727387
        }, 
        {
            "<org.jbox2d.callbacks.DebugDraw: void setCamera(float,float,float)>": 0.3199511092812435
        }, 
        {
            "<org.jbox2d.common.Mat33: void <init>(float,float,float,float,float,float,float,float,float)>": 0.3121973203170267
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform$InverseTranslationTransform: void apply(int[],int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.34381608450188594
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.3400885355425245
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.3018412667314224
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.3018412667314224
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.2886401704745511
        }
    ], 
    "<net.imglib2.AbstractInterval: void max(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.468536325802491
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.45644740722555815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4549590327161815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4514297284100339
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.44882531202406517
        }
    ], 
    "<net.imglib2.display.awt.SignedShortDataBuffer: int getElem(int,int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.5614003750143596
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.5614003750143596
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.5614003750143596
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.5360710143610926
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: int block_zero(boofcv.struct.image.GrayS32,int,int,int,int)>": 0.5328665867369609
        }
    ], 
    "<net.imglib2.transform.integer.shear.InverseShearTransform: void apply(int[],int[])>": [
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int)>": 0.47509630494847
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.4669080099870698
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.4638087763307206
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4604903972653938
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4568556838584709
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: boolean valueEquals(net.imglib2.type.numeric.integer.GenericIntType)>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.5846165927731498
        }, 
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.531434694236937
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.5155930519101228
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean overlap(int,int)>": 0.4865153566947954
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean isSubset(int,int)>": 0.4865153566947954
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowingFactory: net.imglib2.outofbounds.OutOfBounds create(java.lang.Object)>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: void fill(boofcv.struct.convolve.Kernel2D_I32,int)>": 0.4325871724792751
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplSsdCorner_S16: void vertical(boofcv.struct.image.GrayF32)>": 0.3800049064748125
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.3797155859811733
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedF32,boofcv.struct.image.InterleavedS32)>": 0.3755999258185637
        }, 
        {
            "<boofcv.alg.filter.misc.ImplAverageDownSample2: void down(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.37261780897953534
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: void sub(net.imglib2.type.numeric.integer.GenericByteType)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void solveColorMixing(org.jbox2d.dynamics.TimeStep)>": 0.2601379698713402
        }, 
        {
            "<org.jbox2d.collision.ContactID: int getKey()>": 0.24870916725536762
        }, 
        {
            "<org.jbox2d.collision.ContactID: int compareTo(org.jbox2d.collision.ContactID)>": 0.2275609676739095
        }, 
        {
            "<org.jbox2d.collision.ContactID: boolean isEqual(org.jbox2d.collision.ContactID)>": 0.2248680901901646
        }, 
        {
            "<org.jbox2d.collision.ContactID: int compareTo(java.lang.Object)>": 0.21807504084797213
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void add(double[],double[],double[])>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3978536474164201
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.38999437596346287
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3887828103108974
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.38419561429178434
        }, 
        {
            "<org.jbox2d.dynamics.Island: void add(org.jbox2d.dynamics.joints.Joint)>": 0.37986185802506495
        }
    ], 
    "<net.imglib2.Point: void move(long,int)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.35350928689744904
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.3489014444905407
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long[],int,int,int,int)>": 0.34586390507655385
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long[],int,int,int,int)>": 0.34586390507655385
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long[],int,int,int,int)>": 0.34586390507655385
        }
    ], 
    "<net.imglib2.img.list.ListRandomAccess: void <init>(net.imglib2.img.list.ListRandomAccess)>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: void fill(boofcv.struct.convolve.Kernel2D_I32,int)>": 0.3743109245912118
        }, 
        {
            "<Catalano.Math.Random: int[] permutate(int)>": 0.33654140393543536
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: int[] getPivot()>": 0.33644818131877063
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.3362821885166705
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: void unbufferMove(int)>": 0.3334377816166927
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: void move(long,int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.561270507874727
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.49775780436902706
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.4946270432883173
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.47284497910791196
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.46772300416525814
        }
    ], 
    "<net.imglib2.converter.ChannelARGBConverter: void convert(net.imglib2.type.numeric.integer.UnsignedByteType,net.imglib2.type.numeric.ARGBType)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void drawPadding()>": 0.33776836927210546
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.33592251171054766
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.33156272491466116
        }, 
        {
            "<Catalano.Imaging.Filters.Add: void <init>(int,int,int)>": 0.32885547683370187
        }, 
        {
            "<Catalano.Imaging.Filters.Subtract: void <init>(int,int,int)>": 0.32885547683370187
        }
    ], 
    "<net.imglib2.type.numeric.AbstractARGBDoubleType: boolean valueEquals(java.lang.Object)>": [
        {
            "<org.dyn4j.geometry.Vector3: boolean equals(double,double,double)>": 0.442697664899398
        }, 
        {
            "<org.dyn4j.geometry.Vector2: boolean equals(double,double)>": 0.43949598126646083
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: boolean equals(java.lang.Object)>": 0.43446531427022494
        }, 
        {
            "<org.dyn4j.geometry.Matrix22: boolean equals(java.lang.Object)>": 0.42734024945000143
        }, 
        {
            "<org.dyn4j.geometry.Vector3: boolean equals(org.dyn4j.geometry.Vector3)>": 0.4269296412617392
        }
    ], 
    "<net.imglib2.position.transform.AbstractPositionableTransform: void localize(double[])>": [
        {
            "<Catalano.Imaging.Tools.HistogramOfOrientedGradients: double[] Divide(double[],double)>": 0.4284043384060054
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int[])>": 0.40320134579722144
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRows(double[],int[])>": 0.40320134579722144
        }, 
        {
            "<Catalano.Math.ComplexNumber: double[] getImaginary(Catalano.Math.ComplexNumber[])>": 0.3888741098069322
        }, 
        {
            "<Catalano.Math.ComplexNumber: double[] Abs(Catalano.Math.ComplexNumber[])>": 0.3888741098069322
        }
    ], 
    "<net.imglib2.img.cell.AbstractCellImgFactory: void <init>()>": [
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.26658716038056
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.26658716038056
        }, 
        {
            "<Catalano.Imaging.Shapes.IntPolygon: void <init>()>": 0.2620054124571688
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.25962379271422026
        }, 
        {
            "<Catalano.Imaging.Texture.LawsTextureEnergy: void <init>(int[],int[])>": 0.25962379271422026
        }
    ], 
    "<net.imglib2.type.logic.BitType: void or(net.imglib2.type.logic.BitType)>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.46708056725764807
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.4634901589244901
        }, 
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.4154969833228084
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean overlap(int,int)>": 0.4150195767707182
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean isSubset(int,int)>": 0.4150195767707182
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: long frequency(long[])>": [
        {
            "<Catalano.Math.Random: long nextLong()>": 0.24257833769207987
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.22721273761281652
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.22485155088823158
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.21752875840422167
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.21491228070175433
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: double getMinIncrement()>": [
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.3239158125380203
        }, 
        {
            "<boofcv.abst.geo.fitting.DistanceFromModelResidual: double computeDistance(java.lang.Object)>": 0.31287079776504223
        }, 
        {
            "<boofcv.io.SimpleStringNumberReader: double getDouble()>": 0.3125
        }, 
        {
            "<Catalano.Statistics.Distributions.LaplaceDistribution: double Entropy()>": 0.3109020581105081
        }, 
        {
            "<Catalano.Math.Approximation: double Lowprecision_Pow(double,double)>": 0.3084858451322381
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: int compareTo(net.imglib2.type.numeric.integer.AbstractIntegerType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.26253298750374954
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.230960523604179
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2193386105675623
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.21546490714187164
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.21530246534264683
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: void mul(float)>": [
        {
            "<boofcv.gui.image.VisualizeImageData: java.awt.image.BufferedImage grayMagnitude(boofcv.struct.image.GrayF32,java.awt.image.BufferedImage,float)>": 0.23304105059089927
        }, 
        {
            "<boofcv.alg.segmentation.ms.MergeRegionMeanShift: void <init>(int,float)>": 0.22469281209165162
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplHarrisCornerWeighted_S16: void <init>(int,float)>": 0.22355374093181296
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplHarrisCorner_S16: void <init>(int,float)>": 0.22355374093181296
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplHarrisCornerWeighted_F32: void <init>(int,float)>": 0.22355374093181296
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: boolean isOutside(java.util.List)>": [
        {
            "<boofcv.io.SimpleStringNumberReader: boolean next()>": 0.3733240035632567
        }, 
        {
            "<boofcv.demonstrations.calibration.CommonDetectCalibrationApp: boolean isInGrids(georegression.struct.shapes.Polygon2D_F64)>": 0.3453453800672239
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerTwoPassKltPyramid: void finishTracking()>": 0.3320819683190484
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void renderArrows()>": 0.3192137568845412
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void renderMagnets()>": 0.3192137568845412
        }
    ], 
    "<net.imglib2.util.Intervals: boolean contains(net.imglib2.RealInterval,net.imglib2.RealInterval)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3299540466391047
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.32708781553385885
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.SquaresIntoCrossClusters: int getCornerIndex(boofcv.alg.fiducial.calib.squares.SquareNode,double,double)>": 0.32485073703519945
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: boolean equals(java.lang.Object)>": 0.3227257181225602
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.32152500664464395
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned2BitType: net.imglib2.type.numeric.integer.Unsigned2BitType copy()>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2985797956916959
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2816282319207863
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.27513419732253463
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2643111562064573
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.25256099669523774
        }
    ], 
    "<net.imglib2.img.planar.PlanarCursor1D: boolean hasNext()>": [
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.6023849455289535
        }, 
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.5934959054221014
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.5928412662400641
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.5928412662400641
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.5928412662400641
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileNumericType: void sub(net.imglib2.type.volatiles.AbstractVolatileNumericType)>": [
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.23777855777677998
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.23777855777677998
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.23568803939131827
        }, 
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.23536608771641823
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean raycast(org.dyn4j.geometry.Vector2,org.dyn4j.geometry.Vector2,boolean,boolean,boolean,java.util.List)>": 0.22054992511898777
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolatorFactory: net.imglib2.interpolation.randomaccess.NLinearInterpolator create(net.imglib2.RandomAccessible,net.imglib2.RealInterval)>": [
        {
            "<boofcv.alg.enhance.EnhanceImageOps: void equalizeLocal(boofcv.struct.image.GrayU16,int,boofcv.struct.image.GrayU16,int[],int[])>": 0.13453298816085638
        }, 
        {
            "<boofcv.alg.enhance.EnhanceImageOps: void equalizeLocal(boofcv.struct.image.GrayU8,int,boofcv.struct.image.GrayU8,int[],int[])>": 0.13453298816085638
        }, 
        {
            "<boofcv.alg.filter.convolve.ConvolveNormalized: void convolve(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayU8,boofcv.struct.image.GrayI8)>": 0.13375050814213263
        }, 
        {
            "<boofcv.alg.filter.convolve.ConvolveNormalized: void convolve(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS16,boofcv.struct.image.GrayI16)>": 0.13375050814213263
        }, 
        {
            "<Catalano.Imaging.Filters.Threshold: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.1291597394652324
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void add(java.lang.Iterable)>": [
        {
            "<boofcv.alg.filter.binary.BinaryImageOps: void clusterToBinary(java.util.List,boofcv.struct.image.GrayU8)>": 0.22673631158257815
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: java.awt.image.BufferedImage renderContours(java.util.List,int,int,int,int,java.awt.image.BufferedImage)>": 0.20995762239942609
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: java.awt.image.BufferedImage renderContours(java.util.List,int[],int,int,int,java.awt.image.BufferedImage)>": 0.20712174118369875
        }, 
        {
            "<boofcv.alg.filter.binary.Contour: boofcv.alg.filter.binary.Contour copy()>": 0.2033394328215221
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: void renderExternal(java.util.List,boolean,boolean,double,java.awt.Graphics2D)>": 0.20315576583583164
        }
    ], 
    "<net.imglib2.type.numeric.complex.AbstractComplexType: float getPhaseFloat()>": [
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float Sqrt(float)>": 0.40262486386116164
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float ArcSin(float)>": 0.40262486386116164
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float Cos(float)>": 0.40262486386116164
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float ArcCos(float)>": 0.40262486386116164
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float Tan(float)>": 0.40262486386116164
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsBorder: void setPosition(int[])>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2502578927995986
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getIndex(int[])>": 0.2254405962596306
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.22449966842059738
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(long[],int,int,int,int)>": 0.2234839655324468
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long min(long[],int,int,int,int)>": 0.2234839655324468
        }
    ], 
    "<net.imglib2.img.list.ListCursor: java.lang.Object get()>": [
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: java.lang.Object getUserData(int)>": 0.29532163742690054
        }, 
        {
            "<boofcv.gui.SelectAlgorithmAndInputPanel: java.lang.Object getAlgorithmCookie(int)>": 0.2557870110234477
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2535623089962512
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.24257833769207987
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.24257833769207987
        }
    ], 
    "<net.imglib2.converter.RealFloatConverter: void convert(net.imglib2.type.numeric.RealType,net.imglib2.type.numeric.real.FloatType)>": [
        {
            "<com.flowpowered.react.collision.shape.SphereShape: void getLocalBounds(com.flowpowered.react.math.Vector3,com.flowpowered.react.math.Vector3)>": 0.19435863798650005
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: void setAllValues(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)>": 0.19108644636634647
        }, 
        {
            "<org.jbox2d.callbacks.DebugDraw: void setCamera(float,float,float)>": 0.18994096893194629
        }, 
        {
            "<boofcv.factory.background.FactoryBackgroundModel: boofcv.alg.background.stationary.BackgroundStationaryGaussian stationaryGaussian(boofcv.factory.background.ConfigBackgroundGaussian,boofcv.struct.image.ImageType)>": 0.1897591722051496
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: void setAllValues(float,float,float,float,float,float,float,float,float)>": 0.1892278869165811
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: int compareTo(java.lang.Object)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.44067284167776294
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.40870221758588354
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.34840015583511963
        }, 
        {
            "<org.jbox2d.pooling.normal.CircleStack: java.lang.Object pop()>": 0.3323791657627646
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(java.lang.Object)>": 0.33225308460036296
        }
    ], 
    "<net.imglib2.converter.VolatileRealTypeARGBConverter: void convert(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.2136441789451004
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.19193590817939235
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.19193590817939235
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void addDecomposablePolygonAction()>": 0.17913351506948988
        }, 
        {
            "<org.dyn4j.Reference: boolean equals(java.lang.Object)>": 0.17610602275177847
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: void setComplexNumber(double,double)>": [
        {
            "<org.dyn4j.geometry.Transform$1: void rotate(double,double,double)>": 0.4492442599278129
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerTwoPassCombined: void setHint(double,double,boofcv.abst.feature.tracker.PointTrack)>": 0.4387875057980553
        }, 
        {
            "<boofcv.abst.feature.describe.WrapDescribeBrief: boolean process(double,double,double,double,boofcv.struct.feature.TupleDesc_B)>": 0.4016831999920884
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerToTwoPass: void setHint(double,double,boofcv.abst.feature.tracker.PointTrack)>": 0.39044457941172084
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void setTranslation(double,double)>": 0.39044457941172084
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: void <init>(net.imglib2.RandomAccessibleInterval[],net.imglib2.Interval)>": [
        {
            "<Catalano.Imaging.Filters.HysteresisThreshold: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.33077340609766803
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.32790626096689846
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.32790626096689846
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3225981423414869
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3225981423414869
        }
    ], 
    "<net.imglib2.img.sparse.ByteNtree: void setValue(int,byte)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.38901104269312653
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3846723536618065
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.3832696151969503
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.37155075560642714
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.36358570700650333
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: net.imglib2.type.numeric.integer.UnsignedShortType createVariable()>": [
        {
            "<boofcv.demonstrations.fiducial.FiducialTrackerApp: void refreshAll(java.lang.Object[])>": 0.09512551571501338
        }, 
        {
            "<org.dyn4j.dynamics.CapacityTest: void createFailureListenerCount()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.dynamics.CapacityTest: void createFailureJointCount()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.dynamics.CapacityTest: void createFailureBodyCount()>": 0.09306821918192615
        }, 
        {
            "<boofcv.demonstrations.sfm.d3.VisualizeMonocularPlaneVisualOdometryApp: void process(boofcv.io.image.SimpleImageSequence)>": 0.09106841590512935
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: net.imglib2.type.numeric.NativeARGBDoubleType copy()>": [
        {
            "<boofcv.alg.denoise.wavelet.UtilDenoiseWavelet: double universalThreshold(boofcv.struct.image.ImageGray,double)>": 0.2714327278783457
        }, 
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double Variance()>": 0.27020938905748093
        }, 
        {
            "<Catalano.Statistics.Distributions.FisherDistribution: double LogProbabilityDensityFunction(double)>": 0.26734014703696674
        }, 
        {
            "<Catalano.Statistics.Distributions.BinomialDistribution: double LogProbabilityMassFunction(int)>": 0.267319703173538
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: double contrast()>": 0.26713366656177545
        }
    ], 
    "<net.imglib2.type.volatiles.VolatileRealType: net.imglib2.type.volatiles.VolatileRealType createVariable()>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.10065952899503389
        }, 
        {
            "<org.dyn4j.dynamics.WorldTest: void getUserData()>": 0.09395411519917388
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void getUserData()>": 0.09395411519917388
        }, 
        {
            "<org.dyn4j.Reference: boolean equals(java.lang.Object)>": 0.09211554424898176
        }, 
        {
            "<org.dyn4j.collision.FixtureTest: void setUserData()>": 0.09093228851361994
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImgFactory: net.imglib2.img.sparse.NtreeImg create(long[],net.imglib2.type.NativeType)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.139987229624723
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.139987229624723
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.12960910073940318
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.11200170379633057
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.10650160840378231
        }
    ], 
    "<net.imglib2.img.cell.AbstractCellImgFactory: long[] checkDimensions(long[])>": [
        {
            "<boofcv.app.CommandParserFiducialSquare: void execute(java.lang.String[],boofcv.app.BaseFiducialSquare)>": 0.40626461280731035
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void printDetectedConfidence()>": 0.4039491059538472
        }, 
        {
            "<boofcv.examples.features.ExampleFeatureSurf: void easy(boofcv.struct.image.GrayF32)>": 0.39476477693237694
        }, 
        {
            "<boofcv.app.BaseStandardInputApp: com.github.sarxos.webcam.Webcam openSelectedCamera()>": 0.3930620415812993
        }, 
        {
            "<boofcv.app.CreateFiducialSquareBinary: void printPatternDefinitions()>": 0.3925014180817358
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: void indexToPosition(long,long[],float[])>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.30216783629693594
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.28185119756140387
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2713222188573243
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.2669039909623142
        }, 
        {
            "<org.jbox2d.tests.math.SinCosTest: long speedTestMath(int,int)>": 0.26410350950879735
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void decrement(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.img.AbstractImg: void dimensions(long[])>": [
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.38166187337735
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.3360932364854249
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.32399332742693354
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.304729691515267
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS8,boofcv.struct.image.GrayS64)>": 0.29599130104844756
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: net.imglib2.type.numeric.complex.ComplexFloatType createVariable()>": [
        {
            "<org.jbox2d.testbed.tests.DominoTower: org.jbox2d.common.Vec2 getDefaultCameraPos()>": 0.07939310570042547
        }, 
        {
            "<org.jbox2d.testbed.tests.BulletTest: org.jbox2d.common.Vec2 getDefaultCameraPos()>": 0.07939310570042547
        }, 
        {
            "<org.jbox2d.testbed.framework.TestbedTest: org.jbox2d.common.Vec2 getDefaultCameraPos()>": 0.07939310570042547
        }, 
        {
            "<org.jbox2d.testbed.tests.BlobTest4: org.jbox2d.common.Vec2 getDefaultCameraPos()>": 0.07939310570042547
        }, 
        {
            "<org.jbox2d.testbed.tests.CircleStress: org.jbox2d.common.Vec2 getDefaultCameraPos()>": 0.07939310570042547
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRandomAccessible: net.imglib2.converter.read.ConvertedRandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04564354645876383
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.044194173824159216
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04380145943098717
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04333595283009603
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04290040456147775
        }
    ], 
    "<net.imglib2.type.numeric.real.DoubleType: void set(double)>": [
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitSegment: void <init>(double,double,int)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitLoop: void <init>(double,double,int)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationAverageGradientIntegral: void <init>(double,int,double,int,double,java.lang.Class)>": 0.34537863735525043
        }, 
        {
            "<boofcv.factory.feature.orientation.FactoryOrientationAlgs: boofcv.abst.feature.orientation.OrientationIntegral image_ii(double,int,double,int,double,java.lang.Class)>": 0.3341995859152048
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_S32: void <init>(double,int,double,boolean)>": 0.324532417269161
        }
    ], 
    "<net.imglib2.display.projector.composite.CompositeXYProjector: void <init>(net.imglib2.RandomAccessibleInterval,net.imglib2.IterableInterval,java.util.ArrayList,int)>": [
        {
            "<boofcv.alg.InputSanityCheck: void checkSameShapeB(boofcv.struct.image.ImageMultiBand,boofcv.struct.image.ImageMultiBand)>": 0.35340037092509546
        }, 
        {
            "<org.imgscalr.Scalr: java.awt.image.BufferedImage crop(java.awt.image.BufferedImage,int,int,int,int,java.awt.image.BufferedImageOp[])>": 0.34365664527940815
        }, 
        {
            "<boofcv.alg.InputSanityCheck: void checkSameShape(boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase)>": 0.34121171257173155
        }, 
        {
            "<boofcv.struct.convolve.KernelBase: void <init>(int)>": 0.3333812629992993
        }, 
        {
            "<boofcv.struct.convolve.KernelBase: void <init>(int,int)>": 0.3259863443400729
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRealRandomAccess: net.imglib2.converter.read.ConvertedRealRandomAccess copy()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.03984095364447979
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03857583749052298
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.03823304826514973
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.037826720791800154
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03744654309470488
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImgFactory: net.imglib2.img.NativeImg createDoubleInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.21502420910886527
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.21502420910886527
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2140651468204297
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.17384752189777775
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.17275322472499285
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImgFactory: net.imglib2.img.sparse.NtreeImg createIntInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.19276205875091
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1894188866874611
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1894188866874611
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.18748458655706846
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1843130748885495
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.CharArray: java.lang.Object createArray(int)>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_F32_U8: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.33562632983523094
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_S32_U8: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.33562632983523094
        }, 
        {
            "<boofcv.alg.distort.impl.ImplImageDistort_PL: void apply(boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase,int,int,int,int)>": 0.3042974058213425
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2838082849127157
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2838082849127157
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: void localize(int[])>": [
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.3079084216593246
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: void bufferMove(int)>": 0.29829194172841117
        }, 
        {
            "<Catalano.Math.Matrix: void Fill(int[],int)>": 0.2977354195157838
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: int createProxy(org.jbox2d.collision.AABB,java.lang.Object)>": 0.2909869025779015
        }, 
        {
            "<Catalano.Imaging.Shapes.IntPolygon: void <init>(java.util.List)>": 0.2886709635289936
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void set(long,long)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.InterleavedS64,long,long,boofcv.struct.image.InterleavedS64)>": 0.3085292613352112
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.InterleavedS64,long,long,long,boofcv.struct.image.InterleavedS64)>": 0.3085292613352112
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.InterleavedS64,long,long,long,boofcv.struct.image.InterleavedS64)>": 0.3085292613352112
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.299773674849083
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.299773674849083
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: float getImaginaryFloat()>": [
        {
            "<org.jbox2d.dynamics.contacts.Contact: float mixFriction(float,float)>": 0.3072378133345426
        }, 
        {
            "<org.jbox2d.common.Settings: float mixFriction(float,float)>": 0.3072378133345426
        }, 
        {
            "<Catalano.Math.Geometry.PointsCloud: void setQuadrilateralRelativeDistortionLimit(float)>": 0.3045366364956434
        }, 
        {
            "<org.jbox2d.common.Rot: float getAngle()>": 0.3028023210173788
        }, 
        {
            "<org.jbox2d.common.MathUtils: float fastAbs(float)>": 0.3022179620091295
        }
    ], 
    "<net.imglib2.type.numeric.complex.AbstractComplexType: void mul(net.imglib2.type.numeric.complex.AbstractComplexType)>": [
        {
            "<Catalano.Math.ComplexNumber: Catalano.Math.ComplexNumber Multiply(Catalano.Math.ComplexNumber,Catalano.Math.ComplexNumber)>": 0.442749062057263
        }, 
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 rotate(double)>": 0.40647558857129035
        }, 
        {
            "<org.dyn4j.geometry.Transform: double setRotation(double)>": 0.393172985493474
        }, 
        {
            "<org.dyn4j.geometry.Transform: void rotate(double,double,double)>": 0.3930612089289274
        }, 
        {
            "<org.dyn4j.geometry.Transform: void rotate(double,org.dyn4j.geometry.Vector2)>": 0.39108378027494994
        }
    ], 
    "<net.imglib2.AbstractRealLocalizable: void localize(float[])>": [
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_F64: void getF(int,float[])>": 0.4494482389628714
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF32)>": 0.43403432413324206
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedF64,boofcv.struct.image.InterleavedF32)>": 0.3949959276042379
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchColor: void meanColor(float[],float[],float)>": 0.3832306753076067
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$PL: void getF(int,float[])>": 0.3805787737085878
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: void move(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2362397310229929
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.23115276354329706
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.21645440365336222
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.21645440365336222
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.19796401980500927
        }
    ], 
    "<net.imglib2.view.TransformBuilder: void visit(net.imglib2.RandomAccessible)>": [
        {
            "<boofcv.gui.DepthVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.25012373056210574
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.25012373056210574
        }, 
        {
            "<org.dyn4j.collision.narrowphase.PairwiseTypedFallbackCondition: boolean isMatch(java.lang.Class,java.lang.Class)>": 0.24062936305060018
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.2352238552301113
        }, 
        {
            "<boofcv.abst.feature.associate.EnforceUniqueByScore: boolean uniqueDestination()>": 0.233392243248013
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: void indexToPositionWithOffset(long,long[],long[],int[])>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3223344978712339
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.3088584905780088
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.30092156462725955
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.30092156462725955
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.30092156462725955
        }
    ], 
    "<net.imglib2.display.projector.composite.CompositeXYProjector: boolean isComposite(int)>": [
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: boolean isViewKnown(int)>": 0.6383928571428571
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.5418768088102737
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4966616068166122
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplSsdCornerNaive: void <init>(int,int,int,boolean)>": 0.4961377433998866
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.4893146606557609
        }
    ], 
    "<net.imglib2.iterator.LocalizingIntervalIterator: void localize(long[])>": [
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.38166187337735
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.3360932364854249
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.32399332742693354
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.304729691515267
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS8,boofcv.struct.image.GrayS64)>": 0.29599130104844756
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: void dec()>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.28593561871521345
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.27085279948959046
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>()>": 0.24372685929874666
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.2379802920342033
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2300246167861285
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void incIndex(int)>": [
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int checkInverseLower(boofcv.struct.wavelet.WlCoef,int,boofcv.core.image.border.BorderIndex1D,int)>": 0.441481505897173
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int checkInverseUpper(boofcv.struct.wavelet.WlCoef,int,boofcv.core.image.border.BorderIndex1D,int)>": 0.44032425248151813
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: boofcv.struct.image.ImageInterleaved subimage(int,int,int,int,boofcv.struct.image.ImageInterleaved)>": 0.4344891428398681
        }, 
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: int block_unsafe(boofcv.struct.image.GrayS32,int,int,int,int)>": 0.43080961357866054
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void selectBlockSize(int,int)>": 0.42726466582222905
        }
    ], 
    "<net.imglib2.type.numeric.complex.AbstractComplexType: void div(net.imglib2.type.numeric.complex.AbstractComplexType)>": [
        {
            "<org.dyn4j.geometry.Transform: void lerp(org.dyn4j.geometry.Vector2,double,double)>": 0.45018901145567813
        }, 
        {
            "<org.dyn4j.geometry.Transform: double setRotation(double)>": 0.45014816617995806
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Matrix33 multiply(org.dyn4j.geometry.Matrix33)>": 0.4473247129635018
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: Catalano.Core.DoublePoint[] contrastGradient(Catalano.Imaging.ActiveContour.Ovuscule.OvusculeSnake2DNode,Catalano.Imaging.ActiveContour.Ovuscule.OvusculeSnake2DNode)>": 0.4466585148177552
        }, 
        {
            "<org.dyn4j.geometry.Matrix22: org.dyn4j.geometry.Matrix22 multiply(org.dyn4j.geometry.Matrix22)>": 0.44590919934934226
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsValue: void move(int[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.36581534547922095
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int max(int[],int,int,int,int)>": 0.359877721191949
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int min(int[],int,int,int,int)>": 0.359877721191949
        }, 
        {
            "<boofcv.misc.BoofMiscOps: int countNotZero(int[],int)>": 0.35940610217274027
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.35334439280181207
        }
    ], 
    "<net.imglib2.histogram.Real1dBinMapper: void getCenterValue(long,java.lang.Object)>": [
        {
            "<Catalano.Statistics.Distributions.RayleighDistribution: double DistributionFunction(double)>": 0.3123248952039296
        }, 
        {
            "<Catalano.Statistics.Distributions.RayleighDistribution: double LogProbabilityDensityFunction(double)>": 0.31132180783203095
        }, 
        {
            "<Catalano.Statistics.Distributions.RayleighDistribution: double ProbabilityDensityFunction(double)>": 0.31132180783203095
        }, 
        {
            "<Catalano.Math.Functions.Gaussian: double Function2D(double,double)>": 0.31131249651964
        }, 
        {
            "<Catalano.Statistics.Distributions.TStudentDistribution: double ProbabilityDensityFunction(double)>": 0.3110814484358281
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: net.imglib2.type.numeric.integer.UnsignedLongType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.AbstractInterval: void max(net.imglib2.Positionable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5256091910568305
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.5090303794676198
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5085281685018156
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5018647418701996
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateMetrics(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.4949266645788068
        }
    ], 
    "<net.imglib2.type.numeric.complex.AbstractComplexType: void setComplexNumber(float,float)>": [
        {
            "<com.flowpowered.react.math.Matrix4x4: void setAllValues(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)>": 0.4908539856342903
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: void setAllValues(float,float,float,float,float,float,float,float,float)>": 0.47938134027906676
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.DebugDrawJ2D$1: java.awt.Color newColor(float,float,float,float)>": 0.4741212356267128
        }, 
        {
            "<org.jbox2d.callbacks.DebugDraw: void setCamera(float,float,float)>": 0.47023662561620366
        }, 
        {
            "<org.jbox2d.common.Mat33: void <init>(float,float,float,float,float,float,float,float,float)>": 0.4644056006972552
        }
    ], 
    "<net.imglib2.transform.integer.shear.InverseShearTransform: void apply(net.imglib2.Localizable,net.imglib2.Positionable)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.42816645411671167
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.42612029652874117
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.42202254810816164
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4198028028129276
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.40771615397455535
        }
    ], 
    "<net.imglib2.type.logic.BoolType: void or(boolean)>": [
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.43059763171516496
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.42608958284242704
        }, 
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.41672369967353645
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.41672369967353645
        }, 
        {
            "<boofcv.abst.feature.detect.extract.WrapperNonMaxCandidate: void <init>(boofcv.alg.feature.detect.extract.NonMaxCandidate,boolean,boolean)>": 0.37767244829427316
        }
    ], 
    "<net.imglib2.iterator.IntervalIterator: void localize(int[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2165868455583067
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2165868455583067
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.21471933902187387
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1796296296296296
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.167728686198957
        }
    ], 
    "<net.imglib2.AbstractLocalizable: void localize(long[])>": [
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.38166187337735
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.3360932364854249
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.32399332742693354
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.304729691515267
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS8,boofcv.struct.image.GrayS64)>": 0.29599130104844756
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: double getDoublePosition(int)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.3782432325354622
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F64: double unsafe_getD(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double convolveSparse(boofcv.struct.image.GrayF64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListCursor: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2535623089962512
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.24257833769207987
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.24257833769207987
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.22426820488056018
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.2196844671691046
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned12BitType: void <init>(net.imglib2.img.basictypeaccess.LongAccess)>": [
        {
            "<boofcv.alg.segmentation.slic.SegmentSlic$Pixel: void <init>()>": 0.07107376920097479
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>()>": 0.06950480468569159
        }, 
        {
            "<boofcv.demonstrations.feature.disparity.DisparityDisplayPanel: void setActiveGui(boolean,boolean)>": 0.06708126812339572
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.06677805632941779
        }, 
        {
            "<org.jbox2d.testbed.framework.TestbedController: void stepAndRender()>": 0.06668313367115805
        }
    ], 
    "<net.imglib2.PointSampleList$PointSampleListCursor: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.AbstractWrappedRealInterval: void realMin(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.FinalInterval: net.imglib2.FinalInterval createMinMax(long[])>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2860009989105726
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.25110656533359976
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.23923840166150107
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.23923840166150107
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.23800861134255558
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: void setPosition(int,int)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.4523204806151393
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.4523204806151393
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.4508930347806693
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.44586584115062977
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.44586584115062977
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.MixedTransformView hyperSlice(net.imglib2.RandomAccessible,int,long)>": [
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.24108037489630435
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(long[],int,int,long[],int,int,int,int)>": 0.23384819285164496
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.22947638547420735
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.22947638547420735
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.22947638547420735
        }
    ], 
    "<net.imglib2.type.numeric.complex.AbstractComplexType: void setComplexNumber(double,double)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void access$000(boofcv.app.calib.AssistedCalibration,double,double,double,double)>": 0.4892163468657971
        }, 
        {
            "<boofcv.gui.fiducial.VisualizeFiducial: void drawLine(java.awt.Graphics2D,java.awt.geom.Line2D$Double,double,double,double,double)>": 0.4802351854772693
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceSe3SymmetricSq: void setIntrinsic(double,double,double,double,double,double)>": 0.478631186673401
        }, 
        {
            "<boofcv.alg.sfm.robust.DistancePlane2DToPixelSq: void setIntrinsic(double,double,double)>": 0.47023662561620366
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceHomographyPixelSq: void setIntrinsic(double,double,double)>": 0.47023662561620366
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileNumericType: void mul(double)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void access$000(boofcv.app.calib.AssistedCalibration,double,double,double,double)>": 0.32698200135725364
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceSe3SymmetricSq: void setIntrinsic(double,double,double,double,double,double)>": 0.3227982579192048
        }, 
        {
            "<boofcv.gui.fiducial.VisualizeFiducial: void drawLine(java.awt.Graphics2D,java.awt.geom.Line2D$Double,double,double,double,double)>": 0.3210716905727387
        }, 
        {
            "<boofcv.alg.sfm.robust.DistancePlane2DToPixelSq: void setIntrinsic(double,double,double)>": 0.3199511092812435
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceHomographyPixelSq: void setIntrinsic(double,double,double)>": 0.3199511092812435
        }
    ], 
    "<net.imglib2.iterator.ZeroMinIntervalIterator: double getDoublePosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: double unsafe_getD(int,int)>": 0.3169955089543533
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.2490264329518036
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.2490264329518036
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.2408054357413457
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.22901578928035618
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: void setImaginary(double)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void access$000(boofcv.app.calib.AssistedCalibration,double,double,double,double)>": 0.32698200135725364
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceSe3SymmetricSq: void setIntrinsic(double,double,double,double,double,double)>": 0.3227982579192048
        }, 
        {
            "<boofcv.gui.fiducial.VisualizeFiducial: void drawLine(java.awt.Graphics2D,java.awt.geom.Line2D$Double,double,double,double,double)>": 0.3210716905727387
        }, 
        {
            "<boofcv.alg.sfm.robust.DistancePlane2DToPixelSq: void setIntrinsic(double,double,double)>": 0.3199511092812435
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceHomographyPixelSq: void setIntrinsic(double,double,double)>": 0.3199511092812435
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: int rgba(float,float,float,float)>": [
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_F32: float get_fast(float,float)>": 0.5673583397158631
        }, 
        {
            "<Catalano.Core.IntPoint: void <init>(float,float)>": 0.5632299503296244
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_S32: float get_fast(float,float)>": 0.5532962344386586
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_S16: float get_fast(float,float)>": 0.5516605282356992
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_U16: float get_fast(float,float)>": 0.5415841969034554
        }
    ], 
    "<net.imglib2.KDTree$SamplerNode: java.lang.String toString()>": [
        {
            "<boofcv.struct.feature.Match: java.lang.String toString()>": 0.49562940407242445
        }, 
        {
            "<boofcv.factory.shape.ConfigRefinePolygonLineToImage: java.lang.String toString()>": 0.48814508420220826
        }, 
        {
            "<boofcv.factory.fiducial.ConfigFiducialBinary: java.lang.String toString()>": 0.4841313543927775
        }, 
        {
            "<boofcv.factory.shape.ConfigRefinePolygonCornersToImage: java.lang.String toString()>": 0.48370636507449166
        }, 
        {
            "<boofcv.factory.filter.binary.ConfigThreshold: java.lang.String toString()>": 0.48245223716902824
        }
    ], 
    "<net.imglib2.util.Util: float min(java.util.List)>": [
        {
            "<boofcv.alg.feature.detect.line.ImageLinePruneMerge: void pruneRelative(float)>": 0.46344192573029364
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerKltPyramid: void addToList(java.util.List,java.util.List)>": 0.4476386743355305
        }, 
        {
            "<boofcv.alg.filter.binary.BinaryImageOps: void clusterToBinary(java.util.List,boofcv.struct.image.GrayU8)>": 0.43511120707222467
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: java.awt.image.BufferedImage renderExternal(java.util.List,java.awt.Color,java.awt.image.BufferedImage)>": 0.4171280029699011
        }, 
        {
            "<boofcv.alg.feature.detect.edge.CannyEdge: void performThresholding(float,float,boofcv.struct.image.GrayU8)>": 0.4138449144281552
        }
    ], 
    "<net.imglib2.util.Intervals: int[] dimensionsAsIntArray(net.imglib2.Dimensions)>": [
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.38228053212403357
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: int[] getPivot()>": 0.37818306648675876
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumn(int[][],int)>": 0.35562862883378354
        }, 
        {
            "<Catalano.Math.Matrix: int[] getRow(int[][],int)>": 0.3503182938712224
        }, 
        {
            "<Catalano.Imaging.Filters.IsoDataClassifier: int[] Histogram(Catalano.Imaging.FastBitmap)>": 0.32420169770228563
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: double realMin(int)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.3782432325354622
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F64: double unsafe_getD(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double convolveSparse(boofcv.struct.image.GrayF64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void count(java.util.List,net.imglib2.histogram.HistogramNd$Counter)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void renderArrows()>": 0.284895716556875
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void renderMagnets()>": 0.284895716556875
        }, 
        {
            "<boofcv.gui.feature.AssociationScorePanel: void computeScore(boolean,int)>": 0.2716537302206834
        }, 
        {
            "<boofcv.demonstrations.calibration.CommonDetectCalibrationApp: boolean isInGrids(georegression.struct.shapes.Polygon2D_F64)>": 0.2677599072988248
        }, 
        {
            "<boofcv.io.SimpleStringNumberReader: boolean next()>": 0.26463649255470323
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: void move(long,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.31325484913065393
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.31097891796791843
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: long getLongPosition(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3508771929824561
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3142423944400126
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.FloatArray: float getValue(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F32: void setOutside(int,int,float)>": 0.6444652635187575
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: float get(int)>": 0.6383928571428571
        }, 
        {
            "<Catalano.Imaging.Tools.GradientImage: float getOrientation(int,int)>": 0.6036711055814894
        }, 
        {
            "<Catalano.Imaging.Tools.GradientImage: float getMagnitude(int,int)>": 0.6036711055814894
        }, 
        {
            "<boofcv.alg.weights.WeightPixelKernel_F32: float weightIndex(int)>": 0.5680918025570473
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorSingleBoundary: void bck(int)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.22631407604427725
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.2020285136146955
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.19342508609763984
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.19042052125455533
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.18703426617736948
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: void getComponentInversion(boolean[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.47302461677289603
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.460597729177852
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4591713053184648
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.45330664298380163
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.45133604702775554
        }
    ], 
    "<net.imglib2.transform.integer.AbstractMixedTransform: void getComponentMapping(int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5261086415758813
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5164815018993401
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5152714446147021
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.5038568742780369
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5007042628345033
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void realMax(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsConstantValue: void <init>(net.imglib2.Interval,net.imglib2.type.Type)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06454972243679027
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0625
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06194461797903697
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.061286292230682514
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06067033396213444
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: int compareTo(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.33303839254483486
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.3321895127820626
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: int getSerializedSize()>": 0.32826243499358454
        }, 
        {
            "<org.box2d.proto.Box2D$PbBody: int getSerializedSize()>": 0.32813413709879463
        }, 
        {
            "<Catalano.Imaging.Texture.LawsTextureEnergy: long getTextureEnergyMap(Catalano.Core.IntPoint,int,int)>": 0.32681409478085477
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.RandomAccessibleInterval stack(net.imglib2.view.StackView$StackAccessMode,java.util.List)>": [
        {
            "<boofcv.gui.feature.AssociationScorePanel: void setLocation(java.util.List,java.util.List,java.util.List,java.util.List)>": 0.2703642557406695
        }, 
        {
            "<boofcv.abst.geo.triangulate.WrapNViewsTriangulateDLT: boolean triangulate(java.util.List,java.util.List,georegression.struct.point.Point3D_F64)>": 0.24028956392861128
        }, 
        {
            "<boofcv.gui.learning.ConfusionMatrixPanel: void setLabels(java.util.List)>": 0.21067679333668565
        }, 
        {
            "<boofcv.gui.feature.CompareTwoImagePanel: void setLocation(java.util.List,java.util.List)>": 0.20307938847371287
        }, 
        {
            "<boofcv.gui.feature.FancyInterestPointRender: void reset()>": 0.1975703340252388
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: int getIntPosition(int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.4913551708496777
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.4913551708496777
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.4913551708496777
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.SquaresIntoRegularClusters: int add(int,int)>": 0.4346650465426438
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.43186202659143663
        }
    ], 
    "<net.imglib2.img.planar.PlanarCursor1D: void localize(int[])>": [
        {
            "<boofcv.alg.filter.binary.ContourTracer: void setOffsets4(int[],int)>": 0.2432539227781373
        }, 
        {
            "<Catalano.Core.ArraysUtil: int[] Concatenate(int[],int[])>": 0.24127908305862264
        }, 
        {
            "<boofcv.alg.segmentation.ms.ClusterLabeledImage: void setUpEdges4(boofcv.struct.image.GrayS32,int[])>": 0.24043124759618517
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.TriangleEPA: void <init>(int,int,int)>": 0.23542153714013914
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int[])>": 0.2337514569969473
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: void mul(double)>": [
        {
            "<net.coobird.thumbnailator.geometry.RelativeSize: java.awt.Dimension calculate(int,int)>": 0.3585436492594568
        }, 
        {
            "<net.coobird.thumbnailator.makers.ScaledThumbnailMaker: java.awt.image.BufferedImage make(java.awt.image.BufferedImage)>": 0.32536338136919096
        }, 
        {
            "<net.coobird.thumbnailator.makers.FixedSizeThumbnailMaker: java.awt.image.BufferedImage make(java.awt.image.BufferedImage)>": 0.3245402981775809
        }, 
        {
            "<boofcv.misc.DiscretizedCircle: int[][] imageOffsets2(double)>": 0.30567633665498833
        }, 
        {
            "<boofcv.misc.DiscretizedCircle: int[] imageOffsets(double,int)>": 0.3004380243359648
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: void setFrequency(long[],long)>": [
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.25570031827040834
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.24970242784259072
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.24804811035552538
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2350873326363272
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.23178735482105808
        }
    ], 
    "<net.imglib2.KDTree$KDTreeCursor: double getDoublePosition(int)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.3782432325354622
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F64: double unsafe_getD(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double convolveSparse(boofcv.struct.image.GrayF64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedRandomAccess: void <init>(net.imglib2.RandomAccess,net.imglib2.converter.readwrite.SamplerConverter)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.19905310101316329
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.16716519317121678
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.16716519317121678
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.15758958898849007
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.15758958898849007
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: void setPosition(net.imglib2.Localizable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4013189704337474
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.3849120059831782
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.384506701789329
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.38191148890759063
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.38096131697686564
        }
    ], 
    "<net.imglib2.img.cell.CellRandomAccess: void move(long,int)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.35989585560992304
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.3481732022299299
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.33857494611886446
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2658929842139115
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2658929842139115
        }
    ], 
    "<net.imglib2.AbstractWrappedInterval: long dimension(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.35421796416552154
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.35421796416552154
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.34914275634306197
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3376600946233209
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.30328141972374945
        }
    ], 
    "<net.imglib2.type.numeric.integer.IntType: net.imglib2.type.numeric.integer.IntType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.position.transform.Round: void move(net.imglib2.RealLocalizable)>": [
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.2518535647470833
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.2508652663127151
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindowIntegral: double compute(double,double)>": 0.2313472604785647
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.2306608843684091
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.2306608843684091
        }
    ], 
    "<net.imglib2.img.array.ArrayImgFactory: net.imglib2.img.array.ArrayImg createDoubleInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.16989915581702875
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.16989915581702875
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: net.imglib2.img.planar.PlanarImg copy()>": [
        {
            "<Catalano.Imaging.Filters.Threshold: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.1957858276614905
        }, 
        {
            "<Catalano.Imaging.Filters.BlobsFiltering: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.1932104510946549
        }, 
        {
            "<boofcv.alg.filter.convolve.ConvolveNormalized: void convolve(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayU8,boofcv.struct.image.GrayI8)>": 0.19050565128107522
        }, 
        {
            "<boofcv.alg.filter.convolve.ConvolveNormalized: void convolve(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS16,boofcv.struct.image.GrayI16)>": 0.19050565128107522
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: void updatePairs(org.jbox2d.callbacks.PairCallback)>": 0.1876299099910141
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: long totalCount()>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3620048385323752
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.32337798977337195
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3047553880816998
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.30110809613914735
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.2936496625362176
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsBorder: void move(int,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.26780297721978974
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.26780297721978974
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.26780297721978974
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.2625428387668905
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.2588988565057251
        }
    ], 
    "<net.imglib2.iterator.IntervalIterator: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: float unsafe_getF(int,int)>": 0.2572567294325986
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.23577138176789286
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: float getF(int)>": 0.23204254576120587
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_S64: float getF(int)>": 0.23204254576120587
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.21932095412253078
        }
    ], 
    "<net.imglib2.img.planar.PlanarPlaneSubsetCursor: boolean hasNext()>": [
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.6023849455289535
        }, 
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.5934959054221014
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.5928412662400641
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.5928412662400641
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.5928412662400641
        }
    ], 
    "<net.imglib2.img.planar.PlanarPlaneSubsetCursor: void <init>(net.imglib2.img.planar.PlanarPlaneSubsetCursor)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void drawPadding()>": 0.316920337273082
        }, 
        {
            "<org.box2d.proto.Box2D$PbFilter: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.3109451393872876
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.3099225981197811
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.30913923968335183
        }, 
        {
            "<org.box2d.proto.Box2D$PbBody: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.3028942320181002
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: void move(long,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.31325484913065393
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.31097891796791843
        }
    ], 
    "<net.imglib2.type.label.BasePairCharType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.10842661409823065
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.10132274924351498
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.10036934567095813
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.09785730607238811
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.09785730607238811
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: int compareTo(net.imglib2.type.numeric.integer.GenericByteType)>": [
        {
            "<boofcv.struct.feature.MatchScoreType$1: int compareTo(double,double)>": 0.27325880683831266
        }, 
        {
            "<boofcv.struct.feature.MatchScoreType$2: int compareTo(double,double)>": 0.27325880683831266
        }, 
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(Catalano.Imaging.Corners.FeaturePoint)>": 0.24217160381226985
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.24054141466165557
        }, 
        {
            "<org.jbox2d.particle.ParticleColor: boolean isZero()>": 0.23247187280563508
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: void setG(double)>": [
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitSegment: void <init>(double,double,int)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitLoop: void <init>(double,double,int)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationAverageGradientIntegral: void <init>(double,int,double,int,double,java.lang.Class)>": 0.34537863735525043
        }, 
        {
            "<boofcv.factory.feature.orientation.FactoryOrientationAlgs: boofcv.abst.feature.orientation.OrientationIntegral image_ii(double,int,double,int,double,java.lang.Class)>": 0.3341995859152048
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_S32: void <init>(double,int,double,boolean)>": 0.324532417269161
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: double getDoublePosition(int)>": [
        {
            "<net.smert.jreactphysics3d.engine.Timer: void nextStep()>": 0.4417156581466972
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4277709349643226
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.41422904672203525
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.41422904672203525
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4141501619642559
        }
    ], 
    "<net.imglib2.KDTree$ValueNode: java.lang.String toString()>": [
        {
            "<boofcv.struct.feature.Match: java.lang.String toString()>": 0.5039424426625961
        }, 
        {
            "<boofcv.factory.shape.ConfigRefinePolygonLineToImage: java.lang.String toString()>": 0.49616458361494203
        }, 
        {
            "<boofcv.factory.fiducial.ConfigFiducialBinary: java.lang.String toString()>": 0.49207784023492424
        }, 
        {
            "<boofcv.factory.shape.ConfigRefinePolygonCornersToImage: java.lang.String toString()>": 0.4916025207030149
        }, 
        {
            "<boofcv.factory.filter.binary.ConfigThreshold: java.lang.String toString()>": 0.4902863695725404
        }
    ], 
    "<net.imglib2.AbstractRealInterval: void <init>(int)>": [
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void <init>(int)>": 0.4502157631597529
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void <init>(boofcv.struct.image.InterleavedF64)>": 0.4045110601675021
        }, 
        {
            "<Catalano.Imaging.Filters.SeparableConvolution: void <init>(double[],double[])>": 0.4027252046443261
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int)>": 0.40162931958839226
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.3993295176103819
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: void inc()>": [
        {
            "<Catalano.Math.Geometry.Line: float DistanceToPoint(Catalano.Core.IntPoint)>": 0.2725360425127187
        }, 
        {
            "<boofcv.gui.feature.VisualizeOpticalFlow: void magnitudeAbs(boofcv.struct.flow.ImageFlow,float,java.awt.image.BufferedImage)>": 0.2701881642456757
        }, 
        {
            "<boofcv.alg.tracker.klt.KltTracker: boofcv.alg.tracker.klt.KltTrackFault track(boofcv.alg.tracker.klt.KltFeature)>": 0.2699478458133539
        }, 
        {
            "<boofcv.alg.interpolate.array.Interpolate1D_F32: float process(int,float)>": 0.26850751368310377
        }, 
        {
            "<boofcv.alg.tracker.klt.KltTracker: boolean internalSetDescriptionBorder(boofcv.alg.tracker.klt.KltFeature)>": 0.2675423496560587
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,int,int,java.util.List,int[],java.util.Comparator)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5283673617323266
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5274519738901274
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.5226094711003464
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5126502456322873
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5111473457087751
        }
    ], 
    "<net.imglib2.img.cell.CellImgFactory: net.imglib2.img.Img create(long[],java.lang.Object)>": [
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.21110361716348555
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.21110361716348555
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.19177377961240089
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.19177377961240089
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1773215478370479
        }
    ], 
    "<net.imglib2.util.RealSum: void <init>(int)>": [
        {
            "<Catalano.Imaging.Filters.Add: void <init>(int,int,int)>": 0.4803914117033396
        }, 
        {
            "<Catalano.Imaging.Filters.Subtract: void <init>(int,int,int)>": 0.4803914117033396
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(Catalano.Core.IntPoint,int,int,int,int)>": 0.4306446396050999
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.4250401550369799
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: double getDouble(int,int)>": 0.4219030756344556
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.LanczosInterpolatorFactory: void <init>(double,double)>": [
        {
            "<Catalano.Imaging.Filters.GaborFilter: void <init>(double,double,double,double,double)>": 0.4559880919523512
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillCircleFromTopLeft(com.jogamp.opengl.GL2,double,double,double,double)>": 0.44979171582184896
        }, 
        {
            "<org.dyn4j.geometry.Vector3: void <init>(double,double,double,double,double,double)>": 0.44601646138591666
        }, 
        {
            "<Catalano.Math.Distances.Distance: double SquaredEuclidean(double,double,double,double)>": 0.4452262247264021
        }, 
        {
            "<Catalano.Math.Geometry.QuadrilateralTransformationCalc: double Det2(double,double,double,double)>": 0.4447786133363434
        }
    ], 
    "<net.imglib2.view.TransformBuilder$2: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void renderBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.10713406771240823
        }, 
        {
            "<boofcv.gui.DepthVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.10482966455811951
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.10482966455811951
        }, 
        {
            "<org.dyn4j.sandbox.dialogs.AddNonConvexFixtureDialog: void actionPerformed(java.awt.event.ActionEvent)>": 0.09838756953312419
        }, 
        {
            "<org.dyn4j.sandbox.dialogs.AddConvexHullFixtureDialog: void actionPerformed(java.awt.event.ActionEvent)>": 0.09838756953312419
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRealRandomAccessibleRealInterval: net.imglib2.RealRandomAccess realRandomAccess(net.imglib2.RealInterval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.03390317518104052
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.032826608214930636
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.032534907286742326
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.0321891376640378
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.0318656205319038
        }
    ], 
    "<net.imglib2.type.label.BasePairCharType: byte baseToValue()>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: int trans(int)>": 0.1800819920868907
        }, 
        {
            "<Catalano.Math.Tools: boolean isNumeric(java.lang.String)>": 0.161708760971158
        }, 
        {
            "<org.jbox2d.testbed.tests.ApplyForce: void keyPressed(char,int)>": 0.1513825177048746
        }, 
        {
            "<Catalano.Math.Distances.Distance: int Hamming(java.lang.String,java.lang.String)>": 0.14997158016617165
        }, 
        {
            "<boofcv.gui.image.ProcessImageSequence: void keyTyped(java.awt.event.KeyEvent)>": 0.14630173422309906
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: void move(int,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long[],int,int,int,int)>": 0.4413863346600179
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long[],int,int,int,int)>": 0.4413863346600179
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long[],int,int,int,int)>": 0.4413863346600179
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.41037608283706584
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.41037608283706584
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgFactory: net.imglib2.img.NativeImg createIntInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.13257949307988665
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.13257949307988665
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.12277271921448075
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.12050140956603536
        }, 
        {
            "<boofcv.gui.StandardAlgConfigPanel: void <init>()>": 0.11572751247156893
        }
    ], 
    "<net.imglib2.view.TransformBuilder$4: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void renderBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.10713406771240823
        }, 
        {
            "<boofcv.gui.DepthVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.10482966455811951
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.10482966455811951
        }, 
        {
            "<org.dyn4j.sandbox.dialogs.AddNonConvexFixtureDialog: void actionPerformed(java.awt.event.ActionEvent)>": 0.09838756953312419
        }, 
        {
            "<org.dyn4j.sandbox.dialogs.AddConvexHullFixtureDialog: void actionPerformed(java.awt.event.ActionEvent)>": 0.09838756953312419
        }
    ], 
    "<net.imglib2.view.SubsampleIntervalView: long dimension(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.6444652635187575
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.5168876727488003
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.5115679070521639
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4966616068166122
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.4924576911988799
        }
    ], 
    "<net.imglib2.type.numeric.complex.AbstractComplexType: java.lang.String toString()>": [
        {
            "<org.dyn4j.geometry.Vector2: java.lang.String toString()>": 0.5210266482876877
        }, 
        {
            "<boofcv.abst.fiducial.FiducialStability: java.lang.String toString()>": 0.5143402968968843
        }, 
        {
            "<org.dyn4j.geometry.Vector3: java.lang.String toString()>": 0.5115889591395991
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint: java.lang.String toString()>": 0.5012867777173854
        }, 
        {
            "<Catalano.Core.DoublePoint: java.lang.String toString()>": 0.5007784005805932
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned2BitType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.13241728540917574
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(boofcv.struct.image.GrayS64)>": 0.12114716624303801
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(boofcv.struct.image.GrayS64)>": 0.12114716624303801
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long min(boofcv.struct.image.GrayS64)>": 0.12114716624303801
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.1175542054203689
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: double squareLength(double[])>": [
        {
            "<Catalano.Statistics.Correlations: double VectorInnerProduct(double[],double[])>": 0.7711973882014463
        }, 
        {
            "<Catalano.Math.Matrix: double InnerProduct(double[],double[])>": 0.7711973882014463
        }, 
        {
            "<Catalano.Statistics.Correlations: double Tanimoto(double[],double[])>": 0.6519471737601419
        }, 
        {
            "<Catalano.Imaging.Tools.HistogramOfOrientedGradients: double Euclidean(double[])>": 0.6420829364897224
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: double correlation(boofcv.struct.feature.TupleDesc_F64,boofcv.struct.feature.TupleDesc_F64)>": 0.6133409924843021
        }
    ], 
    "<net.imglib2.transform.integer.shear.AbstractShearTransform: void applyInverse(net.imglib2.Positionable,net.imglib2.Localizable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05923488777590923
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.057353933467640436
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.05684427997196944
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05624015883323094
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.055674916760380555
        }
    ], 
    "<net.imglib2.util.Partition: int partitionSubList(int,int,long[])>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.3205355287301467
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.3205355287301467
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.3205355287301467
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.31708258435748926
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(long[],int,int,double,long,long,long[],int,int,int,int)>": 0.31562194284742995
        }
    ], 
    "<net.imglib2.iterator.ZeroMinIntervalIterator: int getIntPosition(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.30321599405805455
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.30321599405805455
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2853946217001431
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.27903506336511047
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.2788296957748481
        }
    ], 
    "<net.imglib2.transform.integer.SequentializeTransform: void <init>(long[],int)>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.443174677276979
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4329942269615578
        }, 
        {
            "<org.jbox2d.dynamics.Island: void add(org.jbox2d.dynamics.Body)>": 0.4167923039692854
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4156191735689564
        }, 
        {
            "<org.jbox2d.particle.StackQueue: java.lang.Object pop()>": 0.41540243607144206
        }
    ], 
    "<net.imglib2.iterator.LocalizingIntervalIterator: void localize(double[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF64)>": 0.43403432413324206
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedF64)>": 0.3949959276042379
        }, 
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.355658579433933
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.3530837074107076
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.3530837074107076
        }
    ], 
    "<net.imglib2.img.ImgView: net.imglib2.Cursor localizingCursor()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.024397501823713325
        }
    ], 
    "<net.imglib2.view.iteration.IterableTransformBuilder$SubInterval: java.lang.Object firstElement()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.19039431320576383
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.18230145058913616
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.18230145058913616
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.16776364355278128
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.16543351241135362
        }
    ], 
    "<net.imglib2.converter.CompositeChannelConverter: void convert(net.imglib2.view.composite.Composite,net.imglib2.type.Type)>": [
        {
            "<boofcv.abst.feature.tracker.PointTrack: void reset()>": 0.11907241805196006
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: long getTrackId(int)>": 0.11458333333333336
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: long getTrackId(int)>": 0.11458333333333336
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.11440107883060736
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.11440107883060736
        }
    ], 
    "<net.imglib2.type.numeric.complex.AbstractComplexType: void set(net.imglib2.type.numeric.complex.AbstractComplexType)>": [
        {
            "<org.dyn4j.geometry.TransformTest: void rotate()>": 0.29481925312483265
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawMouseJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.PinJoint,double)>": 0.28655571002633423
        }, 
        {
            "<org.dyn4j.geometry.AABBTest: void expand()>": 0.28605855870240854
        }, 
        {
            "<org.dyn4j.dynamics.AngleJointTest: void setMinAndMax()>": 0.27931766950422166
        }, 
        {
            "<org.dyn4j.geometry.Vector2Test: void distanceBugInVersions_1_1_0_to_3_1_7()>": 0.27873537311027374
        }
    ], 
    "<net.imglib2.position.transform.Floor: void setPosition(net.imglib2.RealLocalizable)>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayF64,boofcv.struct.image.GrayS64)>": 0.27109781482023637
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2561369201994019
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedF64,boofcv.struct.image.InterleavedS64)>": 0.24240842807339438
        }, 
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.2263213043075249
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS8,boofcv.struct.image.GrayS64)>": 0.22200850854656345
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: int compareTo(net.imglib2.type.numeric.integer.GenericByteType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.42020104153392573
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.37183342002070013
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(org.jbox2d.collision.broadphase.Pair)>": 0.338196041930255
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(java.lang.Object)>": 0.33140772433646115
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.32943893241394046
        }
    ], 
    "<net.imglib2.view.MixedTransformView: void <init>(net.imglib2.RandomAccessible,net.imglib2.transform.integer.Mixed)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3611685072413105
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.36076108694670883
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.3555203117793783
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.35535997995593527
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateMetrics(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.3464626159910695
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: long size()>": [
        {
            "<Catalano.Math.Random: long nextLong()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.25356909013876383
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.24518333341367335
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.24257833769207987
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.23024252222261737
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: void fwd(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36016035441676975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.35455846459436624
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.35455846459436624
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void reset()>": [
        {
            "<org.jbox2d.testbed.framework.TestbedController: void run()>": 0.1294275288016361
        }, 
        {
            "<org.jbox2d.testbed.framework.TestbedController: void stepAndRender()>": 0.12436708454077276
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>()>": 0.1111111111111111
        }, 
        {
            "<org.box2d.proto.Box2D$PbShape$Builder: org.box2d.proto.Box2D$PbShape$Builder clearTag()>": 0.10844813536519846
        }, 
        {
            "<org.box2d.proto.Box2D$PbBody$Builder: org.box2d.proto.Box2D$PbBody$Builder clearTag()>": 0.10844813536519846
        }
    ], 
    "<net.imglib2.display.awt.UnsignedIntDataBuffer: void <init>(int[][],int)>": [
        {
            "<Catalano.Math.Matrix: int[][] MultiplyByTranspose(int[][],int[][])>": 0.33692336905582904
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.30436228763412315
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.30236784240854425
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.30236784240854425
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.2995921542186023
        }
    ], 
    "<net.imglib2.position.transform.FloorOffset: void move(double[])>": [
        {
            "<Catalano.Statistics.Correlations: double VectorInnerProduct(double[],double[])>": 0.27728801665056807
        }, 
        {
            "<Catalano.Math.Matrix: double InnerProduct(double[],double[])>": 0.27728801665056807
        }, 
        {
            "<Catalano.Math.Distances.Distance: double SquaredEuclidean(double[],double[])>": 0.2690293819000427
        }, 
        {
            "<Catalano.Math.Special: double Polevl(double,double[],int)>": 0.2689420141771626
        }, 
        {
            "<Catalano.Statistics.Kernels.Linear: double Function(double[],double[])>": 0.26753433170174956
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform$InverseTranslationTransform: void <init>(net.imglib2.transform.integer.TranslationTransform,int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.31871009265509614
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.3167249163010024
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.3167249163010024
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.31370340328680457
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.31370340328680457
        }
    ], 
    "<net.imglib2.display.projector.sampler.IntervalSampler: void fwd()>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.25354227271269925
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.25354227271269925
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.25354227271269925
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.24954432952155303
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.24550017373855176
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: java.lang.String toString()>": [
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String getPatternName(int)>": 0.5007554818161598
        }, 
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String selectDocumentName()>": 0.409761201583305
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: java.lang.String toString()>": 0.4091857429014163
        }, 
        {
            "<boofcv.misc.AutoTypeImage: java.lang.String getInterleavedName()>": 0.409137925881331
        }, 
        {
            "<net.coobird.thumbnailator.geometry.RelativeSize: java.lang.String toString()>": 0.3958913494273325
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void move(net.imglib2.Localizable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.iterator.IntervalIterator: java.lang.String toString()>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1831482021886939
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1831482021886939
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.17956088165684872
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1720075367633463
        }, 
        {
            "<org.dyn4j.sandbox.resources.Messages: java.lang.String getString(java.lang.String)>": 0.1701290503913763
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: boolean isInUpperTail(java.lang.Object)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: boolean equals(java.lang.Object)>": 0.3459691630769936
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldTrackerApp: void togglePause()>": 0.32163219414474786
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeCirculantTrackerApp: void togglePause()>": 0.32163219414474786
        }, 
        {
            "<Catalano.Core.Stopwatch: boolean isRunning()>": 0.3211750540447461
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.31774561063201545
        }
    ], 
    "<net.imglib2.img.cell.AbstractCellImgFactory: void <init>(int[])>": [
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void printDetectedConfidence()>": 0.5084203583119454
        }, 
        {
            "<boofcv.app.BaseStandardInputApp: com.github.sarxos.webcam.Webcam openSelectedCamera()>": 0.48787720345209756
        }, 
        {
            "<boofcv.examples.features.ExampleFeatureSurf: void easy(boofcv.struct.image.GrayF32)>": 0.48739510030532235
        }, 
        {
            "<boofcv.app.CreateFiducialSquareBinary: void printPatternDefinitions()>": 0.4819318150966423
        }, 
        {
            "<Sort10: void main(java.lang.String[])>": 0.47400836752973663
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void min(net.imglib2.Positionable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess: void move(int[])>": [
        {
            "<boofcv.alg.transform.wavelet.impl.ImplWaveletTransformInner: void horizontalInverse(boofcv.struct.wavelet.WlCoef_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.5155450046479039
        }, 
        {
            "<boofcv.alg.transform.wavelet.impl.ImplWaveletTransformInner: void verticalInverse(boofcv.struct.wavelet.WlCoef_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.5143451880218496
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve7(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.5002512478389417
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve5(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.4999542981828432
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve9(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.49900583620836114
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: void move(long[])>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.27071451118766676
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2662296535154992
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2662296535154992
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2575491969443224
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.25225208071682204
        }
    ], 
    "<net.imglib2.type.numeric.real.DoubleType: void <init>(double)>": [
        {
            "<boofcv.alg.geo.robust.DistanceSe3SymmetricSq: void <init>(boofcv.abst.geo.TriangulateTwoViewsCalibrated,double,double,double,double,double,double)>": 0.31088424954312605
        }, 
        {
            "<boofcv.alg.geo.pose.PnPDistanceReprojectionSq: void <init>(double,double,double)>": 0.30464983434106513
        }, 
        {
            "<boofcv.abst.feature.describe.WrapDescribeSurf: boolean process(double,double,double,double,boofcv.struct.feature.TupleDesc)>": 0.2940231613005151
        }, 
        {
            "<boofcv.abst.feature.describe.SurfPlanar_to_DescribeRegionPoint: boolean process(double,double,double,double,boofcv.struct.feature.TupleDesc)>": 0.2940231613005151
        }, 
        {
            "<boofcv.struct.feature.ScalePoint: void <init>(double,double,double,boolean)>": 0.28928923137839146
        }
    ], 
    "<net.imglib2.RealPoint: void bck(int)>": [
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void setD(int,double)>": 0.4305107846323415
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMinimum(int,double)>": 0.4305107846323415
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMaximum(int,double)>": 0.4305107846323415
        }, 
        {
            "<boofcv.alg.scene.FeatureToWordHistogram_F64: void addFeature(boofcv.struct.feature.TupleDesc_F64)>": 0.37132772835963374
        }, 
        {
            "<Catalano.Imaging.Tools.ColorConverter: double[] RGBtoHunterLAB(int,int,int)>": 0.3359964662145292
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolatorARGB: void graycodeFwdRecursive(int)>": [
        {
            "<Catalano.Imaging.Tools.QuadrilateralTransformation: Catalano.Imaging.FastBitmap ProcessImage(Catalano.Imaging.FastBitmap)>": 0.47395024165363825
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal11(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.4589965354052981
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve11(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.45850478610263823
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal9(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.4579323392520346
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve9(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.45702900915349653
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: void setPosition(int,int)>": [
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.40812791625510453
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.40812791625510453
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: net.coobird.thumbnailator.util.exif.Orientation typeOf(int)>": 0.3926148615171837
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdType: net.coobird.thumbnailator.util.exif.IfdType typeOf(int)>": 0.3926148615171837
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: int getReminder(int,int[])>": 0.37980584049877425
        }
    ], 
    "<net.imglib2.KDTreeNode: void <init>(net.imglib2.RealLocalizable,int,net.imglib2.KDTreeNode,net.imglib2.KDTreeNode)>": [
        {
            "<boofcv.alg.feature.disparity.impl.StereoDisparityWtoNaiveFive: void <init>(int,int,int,int)>": 0.3155798104513491
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.StereoDisparityWtoNaive: void <init>(int,int,int,int)>": 0.3023743047354439
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(double[],int,int,double[],int,int,int,int)>": 0.3009687245492249
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(double[],int,int,double[],int,int,int,int)>": 0.29880442349545583
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(double[],int,int,double,double[],int,int,int,int)>": 0.29508445659426263
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: net.imglib2.type.numeric.integer.LongType firstElement()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.024397501823713325
        }
    ], 
    "<net.imglib2.type.label.BasePairBitType: void set(net.imglib2.type.label.BasePairBitType$Base)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.21438734692485475
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.21438734692485475
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(boofcv.struct.image.GrayS64)>": 0.20897017274338103
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(boofcv.struct.image.GrayS64)>": 0.20897017274338103
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long min(boofcv.struct.image.GrayS64)>": 0.20897017274338103
        }
    ], 
    "<net.imglib2.display.awt.SignedShortDataBuffer: short[] getData(int)>": [
        {
            "<boofcv.struct.image.InterleavedI16: short[] get(int,int,short[])>": 0.23682814200738855
        }, 
        {
            "<boofcv.struct.image.GrayI16: void unsafe_set(int,int,int)>": 0.22929246815406318
        }, 
        {
            "<boofcv.struct.image.GrayS16: int unsafe_get(int,int)>": 0.2234490766148035
        }, 
        {
            "<boofcv.alg.distort.impl.ImplImageDistort_I16: void assign(int,float)>": 0.21845775154401878
        }, 
        {
            "<boofcv.alg.distort.impl.ImplImageDistortCache_I16: void assign(int,float)>": 0.21845775154401878
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: void setTranslation(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.468536325802491
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.45644740722555815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4549590327161815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4514297284100339
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.44882531202406517
        }
    ], 
    "<net.imglib2.interpolation.neighborsearch.NearestNeighborSearchInterpolatorFactory: net.imglib2.interpolation.neighborsearch.NearestNeighborSearchInterpolator create(net.imglib2.neighborsearch.NearestNeighborSearch)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04879500364742665
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04724555912615341
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04682572978040922
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04632808229131882
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04586246160658393
        }
    ], 
    "<net.imglib2.img.cell.CellCursor: long getLongPosition(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3672380405252125
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3672380405252125
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.33800819988958386
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.2991742150475424
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(boofcv.struct.image.GrayS64)>": 0.28009879991502784
        }
    ], 
    "<net.imglib2.img.array.ArrayImgFactory: net.imglib2.img.Img create(long[],java.lang.Object)>": [
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.21110361716348555
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.21110361716348555
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.19177377961240089
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.19177377961240089
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1773215478370479
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: void sub(net.imglib2.type.numeric.integer.GenericShortType)>": [
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMaximum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.19214063239443324
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMinimum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.19214063239443324
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void process(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.1886600590546473
        }, 
        {
            "<boofcv.struct.QueueCorner: void add(int,int)>": 0.17740835847715808
        }, 
        {
            "<boofcv.demonstrations.feature.detect.VideoDetectCorners: void updateGUI(java.awt.image.BufferedImage,boofcv.struct.image.ImageGray)>": 0.16738765586033494
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: void mul(float)>": [
        {
            "<boofcv.alg.feature.detect.peak.MeanShiftPeak: void setRegion(float,float)>": 0.3142555542996721
        }, 
        {
            "<boofcv.alg.interpolate.PolynomialPixel: boolean isInFastBounds(float,float)>": 0.3087432539836443
        }, 
        {
            "<boofcv.alg.tracker.klt.KltTracker: void computeSubImageBounds(boofcv.alg.tracker.klt.KltFeature,float,float)>": 0.3001494374611085
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.2960764912984841
        }, 
        {
            "<boofcv.alg.tracker.klt.KltTracker: int computeGandE_border(boofcv.alg.tracker.klt.KltFeature,float,float)>": 0.29182300563263797
        }
    ], 
    "<net.imglib2.img.cell.AbstractCell: long min(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.6444652635187575
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.5168876727488003
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.5115679070521639
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4966616068166122
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.4924576911988799
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: void updateContainer(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.3187477037083238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.22574829559349857
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.22057752193984925
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: void localize(int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.2540764877039817
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.21777659600227028
        }
    ], 
    "<net.imglib2.view.ExtendedRandomAccessibleInterval: void <init>(net.imglib2.RandomAccessibleInterval,net.imglib2.outofbounds.OutOfBoundsFactory)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0563436169819011
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0545544725589981
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.05406969538743988
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05349506156386412
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.05295740910852022
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void setPosition(net.imglib2.Localizable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: void localize(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.RealPointSampleList: void realMax(double[])>": [
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.41549793349128344
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumn(double[][],int)>": 0.3973144980183334
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRow(double[][],int)>": 0.39592283060630346
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int[])>": 0.39110786522669816
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRows(double[],int[])>": 0.39110786522669816
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsPeriodic: void setPosition(long[])>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.290902831073912
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.2594000137399737
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2449928822430883
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addGaussian(boofcv.struct.image.GrayS64,java.util.Random,double,long,long)>": 0.22171615241574028
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.22113230963162497
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: java.lang.String toString()>": [
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String getPatternName(int)>": 0.6776432171441845
        }, 
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String selectDocumentName()>": 0.5321712647162194
        }, 
        {
            "<boofcv.misc.AutoTypeImage: java.lang.String getInterleavedName()>": 0.42597698300581355
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: java.lang.String toString()>": 0.42578491111071176
        }, 
        {
            "<net.coobird.thumbnailator.geometry.RelativeSize: java.lang.String toString()>": 0.4120875660837369
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: long get()>": [
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.29532163742690054
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.27731152179204405
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.2680173780879102
        }, 
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: long getTrackId(int)>": 0.2601275618917341
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.25930159226645905
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: void mul(net.imglib2.type.numeric.integer.AbstractIntegerBitType)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2938780873461854
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2825107610076849
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2503660146807406
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.24466754041157818
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.24439866693571877
        }
    ], 
    "<net.imglib2.view.TransformRandomAccess: void setPosition(long,int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.5280648604945994
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5097075606623539
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.5097075606623539
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5094028764227336
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5091169419667372
        }
    ], 
    "<net.imglib2.KDTree$KDTreeCursor: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileNumericType: void <init>(net.imglib2.type.numeric.NumericType,boolean)>": [
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlockRelaxed: void <init>(boolean,boolean)>": 0.3438694806559756
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlockStrict: void <init>(boolean,boolean)>": 0.3438694806559756
        }, 
        {
            "<boofcv.abst.feature.associate.EnforceUniqueByScore$Describe2D: void <init>(boofcv.abst.feature.associate.AssociateDescription2D,boolean,boolean)>": 0.3144163788737706
        }, 
        {
            "<boofcv.abst.feature.associate.EnforceUniqueByScore$Describe: void <init>(boofcv.abst.feature.associate.AssociateDescription,boolean,boolean)>": 0.3144163788737706
        }, 
        {
            "<boofcv.alg.geo.calibration.Zhang99ParamAll: void <init>(boolean,int,boolean)>": 0.3144163788737706
        }
    ], 
    "<net.imglib2.type.numeric.ARGBDoubleType: void <init>(double,double,double,double)>": [
        {
            "<Catalano.Math.Tools: double Log(double,double)>": 0.6346441003755238
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double computeWeight(double,double,double)>": 0.6120498132901213
        }, 
        {
            "<Catalano.Math.Approximation: double Lowprecision_Pow(double,double)>": 0.6065147709774841
        }, 
        {
            "<Catalano.Math.Approximation: double Highprecision_Pow(double,double)>": 0.6065147709774841
        }, 
        {
            "<Catalano.Imaging.Filters.Multiply: void <init>(double,double,double)>": 0.601504615851066
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: void localize(float[])>": [
        {
            "<boofcv.struct.feature.TupleDesc_F32: void set(float[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: void <init>(int,float[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void <init>(float[],int,int)>": 0.2540764877039817
        }, 
        {
            "<boofcv.alg.interpolate.array.PolynomialNeville_F32: void <init>(int,float[],float[],int)>": 0.25147436847440663
        }, 
        {
            "<Catalano.Imaging.Filters.ImagePyramids: void <init>()>": 0.22423504135338396
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess: void move(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.transform.wavelet.impl.ImplWaveletTransformInner: void horizontalInverse(boofcv.struct.wavelet.WlCoef_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.49433834862120957
        }, 
        {
            "<boofcv.alg.transform.wavelet.impl.ImplWaveletTransformInner: void verticalInverse(boofcv.struct.wavelet.WlCoef_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.49392850130503363
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve5(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.47485733236739497
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve3(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.47291239062107315
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve7(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.47262843085300976
        }
    ], 
    "<net.imglib2.iterator.ZeroMinIntervalIterator: void localize(float[])>": [
        {
            "<boofcv.struct.feature.TupleDesc_F32: void set(float[])>": 0.23358513863768443
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: void <init>(int,float[])>": 0.2213851494399855
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void <init>(float[],int,int)>": 0.22031074191333022
        }, 
        {
            "<boofcv.alg.interpolate.array.PolynomialNeville_F32: void <init>(int,float[],float[],int)>": 0.21834043870243497
        }, 
        {
            "<Catalano.Imaging.Filters.ImagePyramids: void <init>()>": 0.19395774448232017
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: java.lang.Object iterationOrder()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: void inc()>": [
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.35638414368918736
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.3550742203543657
        }, 
        {
            "<Catalano.Imaging.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.3550742203543657
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Maximum: void <init>(int)>": 0.3530463637085623
        }, 
        {
            "<Catalano.Imaging.Filters.ConservativeSmoothing: void <init>(int)>": 0.3530463637085623
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: java.util.List modePositions()>": [
        {
            "<boofcv.alg.fiducial.calib.squares.CrossClustersIntoGrids: void process(java.util.List)>": 0.2465972184894063
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.21827090435384158
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.21827090435384158
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.21827090435384158
        }, 
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.21084114005993065
        }
    ], 
    "<net.imglib2.img.planar.PlanarPlaneSubsetCursor: long offset(net.imglib2.Interval)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.2980358634463385
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.28983758944698845
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2890533874709051
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.27938127982017663
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.26147582308487954
        }
    ], 
    "<net.imglib2.util.ImgUtil: void copy(int[],int,int[],net.imglib2.img.Img)>": [
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getIndex(int[])>": 0.48431035484456153
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.47810267307645693
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.4773266960058784
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int[])>": 0.45607861536012595
        }, 
        {
            "<Catalano.Math.Matrix: int[] getRows(int[],int[])>": 0.45607861536012595
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void setPosition(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsValue: void setPosition(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.27803386150914117
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.2514616620723622
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.2473353518360995
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void addObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.24259791496231642
        }, 
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: int getNumUnknownViews()>": 0.24061764125077847
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListRandomAccess: void fwd(int)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2886946772882095
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2754641542367446
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.2687819740240789
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.268086409792313
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.2660630549725637
        }
    ], 
    "<net.imglib2.img.cell.AbstractCell: void min(long[])>": [
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.38166187337735
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.3360932364854249
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.32399332742693354
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.304729691515267
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS8,boofcv.struct.image.GrayS64)>": 0.29599130104844756
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolator1D: void <init>(net.imglib2.RandomAccessible,net.imglib2.type.numeric.NumericType)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void setPosition(float,int)>": [
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_F32: void <init>(int,float,float)>": 0.3964462393048189
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_I: void <init>(int,float,float)>": 0.3964462393048189
        }, 
        {
            "<boofcv.abst.feature.detect.interest.ConfigGeneralDetector: void <init>(int,int,float)>": 0.3456010616334146
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchGray: void <init>(int,float,boofcv.alg.interpolate.InterpolatePixelS,int,int,float,boolean)>": 0.3449367496482926
        }, 
        {
            "<boofcv.abst.feature.detect.interest.ConfigGeneralDetector: void <init>(int,int,float,int,boolean)>": 0.3442822428944223
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRealRandomAccessible: net.imglib2.RealRandomAccess realRandomAccess(net.imglib2.RealInterval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.03849001794597505
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03726779962499649
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.03693663377103528
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.036544084137792886
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03617679758851913
        }
    ], 
    "<net.imglib2.util.Util: void quicksort(double[],int[],int,int)>": [
        {
            "<Catalano.Imaging.Filters.MedianCut: void quickSort(int[],int,int)>": 0.44490083742800457
        }, 
        {
            "<Catalano.Statistics.Tools: double Mode(double[])>": 0.35805145035704095
        }, 
        {
            "<Catalano.Statistics.DescriptiveStatistics: double Mode(double[])>": 0.35805145035704095
        }, 
        {
            "<org.jbox2d.common.BufferUtils: void rotate(int[],int,int,int)>": 0.3211154392879264
        }, 
        {
            "<Catalano.Statistics.Tools: double Max(double[])>": 0.3202732916465274
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: int compareTo(java.lang.Object)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.2999617068337929
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.2834536488377925
        }, 
        {
            "<Catalano.Math.Geometry.PointToProcess: int compareTo(java.lang.Object)>": 0.24202156130642755
        }, 
        {
            "<boofcv.abst.feature.detect.extract.NonMaxLimiter$LocalExtreme: int compareTo(java.lang.Object)>": 0.24202156130642755
        }, 
        {
            "<org.dyn4j.collision.narrowphase.ExpandingSimplexEdge: int compareTo(java.lang.Object)>": 0.24202156130642755
        }
    ], 
    "<net.imglib2.display.AbstractLinearRange: void setMin(double)>": [
        {
            "<Catalano.Math.Distances.Distance: double BrayCurtis(double,double,double,double)>": 0.4244744968848417
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Canberra(double,double,double,double)>": 0.41343352784941123
        }, 
        {
            "<Catalano.Math.Functions.Beta: double Log(double,double)>": 0.4110841524555428
        }, 
        {
            "<boofcv.abst.tracker.Sfot_to_TrackObjectQuad: void setPoint(georegression.struct.point.Point2D_F64,double,double,double,double)>": 0.4096004634711338
        }, 
        {
            "<Catalano.Math.Tools: double Scale(double,double,double,double,double)>": 0.4072306455694919
        }
    ], 
    "<net.imglib2.view.TransformView: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.021677749238102995
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void <init>(java.lang.Iterable,net.imglib2.histogram.BinMapper1d)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.20495978530794356
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1876002309559586
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1876002309559586
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.1860818003069955
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomPixelDepthPnP: int dropUnusedTracks()>": 0.1770951601372424
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void setPositionDim0(int)>": [
        {
            "<boofcv.alg.segmentation.watershed.WatershedVincentSoille1991: void handleNeighborAssign(int,int)>": 0.23948115301406458
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getIndex(int[])>": 0.23301531245991158
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int[] getRGB(int)>": 0.2328697280941176
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int,int)>": 0.2312399492410394
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.22978664443835353
        }
    ], 
    "<net.imglib2.AbstractInterval: long min(int)>": [
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.6942075542430779
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.6942075542430779
        }, 
        {
            "<org.jbox2d.common.BufferUtils: java.lang.Object[] reallocateBuffer(java.lang.Class,java.lang.Object[],int,int,int,boolean)>": 0.6768465759886374
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.6681210053873723
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.6583948812821963
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: void localize(int[])>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4707928547867241
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4660108543309735
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4603917237725471
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4547420955851278
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4528144101059391
        }
    ], 
    "<net.imglib2.converter.VolatileRealTypeARGBConverter: void <init>(double,double)>": [
        {
            "<boofcv.alg.geo.robust.DistanceSe3SymmetricSq: void <init>(boofcv.abst.geo.TriangulateTwoViewsCalibrated,double,double,double,double,double,double)>": 0.50262603353155
        }, 
        {
            "<boofcv.abst.feature.describe.WrapDescribeSurf: boolean process(double,double,double,double,boofcv.struct.feature.TupleDesc)>": 0.4959469468389952
        }, 
        {
            "<boofcv.abst.feature.describe.SurfPlanar_to_DescribeRegionPoint: boolean process(double,double,double,double,boofcv.struct.feature.TupleDesc)>": 0.4959469468389952
        }, 
        {
            "<boofcv.alg.geo.pose.PnPDistanceReprojectionSq: void <init>(double,double,double)>": 0.48944923027809417
        }, 
        {
            "<boofcv.struct.feature.ScalePoint: void <init>(double,double,double,boolean)>": 0.47603729780723614
        }
    ], 
    "<net.imglib2.FinalDimensions: long dimension(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.6444652635187575
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.5168876727488003
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.5115679070521639
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4966616068166122
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.4924576911988799
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: float getFloatPosition(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.6188643624249502
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5517168169858438
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5382297579524616
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.5137724358016377
        }, 
        {
            "<org.jbox2d.collision.Distance$DistanceProxy: org.jbox2d.common.Vec2 getVertex(int)>": 0.5137724358016377
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListLocalizingCursor: void jumpFwd(long)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.34864597817315107
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3205398063459241
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.3202313096291117
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.30948308345954784
        }, 
        {
            "<org.jbox2d.common.Timer: float getMilliseconds()>": 0.2929687008519732
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: void mul(double)>": [
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.27055204670324057
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.27027452086734005
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillGaussian(boofcv.struct.image.GrayS64,java.util.Random,double,double,long,long)>": 0.23806739613847358
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.23690701092341485
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.23150300144944308
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: java.math.BigInteger getBigInteger()>": [
        {
            "<Catalano.Math.RationalNumber: void Multiply(int,int)>": 0.22374078832646838
        }, 
        {
            "<org.jbox2d.collision.ContactID: int compareTo(java.lang.Object)>": 0.22301550327698433
        }, 
        {
            "<Catalano.Math.RationalNumber: void pow(int)>": 0.2225695983583853
        }, 
        {
            "<org.jbox2d.collision.ContactID: int compareTo(org.jbox2d.collision.ContactID)>": 0.22136210127160427
        }, 
        {
            "<Catalano.Math.RationalNumber: void Subtract(int,int)>": 0.22066079162837698
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void add(java.util.List)>": [
        {
            "<boofcv.alg.fiducial.calib.squares.CrossClustersIntoGrids: void process(java.util.List)>": 0.3217991161156942
        }, 
        {
            "<Catalano.Math.Geometry.ConvexHullDefects: java.util.ArrayList FindDefects(java.util.ArrayList,java.util.ArrayList)>": 0.2995762832382667
        }, 
        {
            "<org.dyn4j.dynamics.Body: java.util.List getJoints()>": 0.2989409631270295
        }, 
        {
            "<boofcv.alg.feature.detect.line.ImageLinePruneMerge: void pruneNBest(int)>": 0.2972041312965613
        }, 
        {
            "<boofcv.examples.sfm.ExampleMultiviewSceneReconstruction: void performReconstruction(java.util.List,int,double[][])>": 0.294646790714985
        }
    ], 
    "<net.imglib2.converter.readwrite.RealFloatSamplerConverter$RealConvertingFloatAccess: void <init>(net.imglib2.Sampler,net.imglib2.converter.readwrite.RealFloatSamplerConverter$1)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05063696835418333
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04902903378454601
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04859335628264
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04807692307692309
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04759372565678686
        }
    ], 
    "<net.imglib2.view.TransformRandomAccess: void move(net.imglib2.Localizable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.45973185998714683
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.44701700310082376
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.44661739944140355
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.44336807613892154
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4403949557822951
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedCursor: long getLongPosition(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3508771929824561
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3142423944400126
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: void sub(net.imglib2.type.numeric.integer.AbstractIntegerBitType)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2938780873461854
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2825107610076849
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2503660146807406
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.24466754041157818
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.24439866693571877
        }
    ], 
    "<net.imglib2.neighborsearch.RadiusNeighborSearchOnKDTree: void search(net.imglib2.RealLocalizable,double,boolean)>": [
        {
            "<net.smert.jreactphysics3d.engine.Timer: void setTimeStep(double)>": 0.4229199249047881
        }, 
        {
            "<net.smert.jreactphysics3d.engine.Timer: void <init>(double)>": 0.4114603630266867
        }, 
        {
            "<net.smert.jreactphysics3d.engine.Timer: void nextStep()>": 0.35592729825981667
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void render(com.jogamp.opengl.GL2)>": 0.34963023497886975
        }, 
        {
            "<org.dyn4j.dynamics.joint.WeldJoint: boolean isSpring()>": 0.33328203186659133
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedCursor: net.imglib2.converter.readwrite.WriteConvertedCursor copy()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04364357804719847
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04225771273642583
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04188220595401253
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.041437096508237244
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04102063270711835
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolator2D: net.imglib2.type.numeric.NumericType get()>": [
        {
            "<boofcv.alg.geo.f.FundamentalLinear7: void computeCoefficients(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F,int,int,int,double[],boolean)>": 0.20690106657510715
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void complexInverse(double[],boolean)>": 0.18628536958474923
        }, 
        {
            "<Catalano.Math.Decompositions.EigenvalueDecomposition: void tql2()>": 0.18598366552103537
        }, 
        {
            "<boofcv.alg.geo.pose.PnPRodriguesCodec: void decode(double[],java.lang.Object)>": 0.18061780204509081
        }, 
        {
            "<boofcv.alg.geo.MultiViewOps: org.ejml.data.DenseMatrix64F inducedHomography12(boofcv.struct.geo.TrifocalTensor,georegression.struct.point.Vector3D_F64,org.ejml.data.DenseMatrix64F)>": 0.18011019126228042
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: boolean valueEquals(java.lang.Object)>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.45929739390889646
        }, 
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.4194347937635405
        }, 
        {
            "<org.jbox2d.callbacks.ContactFilter: boolean shouldCollide(org.jbox2d.dynamics.Fixture,org.jbox2d.dynamics.Fixture)>": 0.39484128083596104
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: boolean isWithin(int,int,int,int,int)>": 0.39079663577324225
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.3903317435807435
        }
    ], 
    "<net.imglib2.display.ColorTable8: int getResampled(int,int,int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.42012776299667276
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.42012776299667276
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.42012776299667276
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.38958605323413137
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.38958605323413137
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.MixedTransformView addDimension(net.imglib2.RandomAccessible)>": [
        {
            "<org.dyn4j.collision.broadphase.DynamicAABBTree: void <init>(int)>": 0.18187305203226203
        }, 
        {
            "<org.dyn4j.dynamics.contact.SimpleContactManager: void <init>(org.dyn4j.dynamics.Capacity)>": 0.17656057603882086
        }, 
        {
            "<org.dyn4j.dynamics.contact.WarmStartingContactManager: void <init>(org.dyn4j.dynamics.Capacity)>": 0.17071552859126038
        }, 
        {
            "<org.dyn4j.collision.broadphase.Sap: void <init>(int)>": 0.16956360604733123
        }, 
        {
            "<boofcv.demonstrations.feature.associate.VisualizeAssociationScoreApp$3: void run()>": 0.16940328329015458
        }
    ], 
    "<net.imglib2.KDTree: net.imglib2.KDTree$ValueNode makeNode(java.util.List,int,int,int,java.util.List,int[])>": [
        {
            "<org.dyn4j.collision.narrowphase.ExpandingSimplex: void <init>(java.util.List)>": 0.27823893803810995
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.27552683388183774
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$2: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.27552683388183774
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$5: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.2743450344095888
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(int[],int,int,int[],int,int,int,int)>": 0.2731557499966372
        }
    ], 
    "<net.imglib2.img.array.ArrayImg: long size(net.imglib2.Interval,int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.46730711565215993
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.43990405598933296
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.38782515350165625
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.3825286034066927
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.37776990569119967
        }
    ], 
    "<net.imglib2.view.iteration.IterableTransformBuilder$SubInterval: net.imglib2.Cursor localizingCursor()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.019702760155977515
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.019702760155977515
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.019702760155977515
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.019702760155977515
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.019702760155977515
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: void decIndex(int)>": [
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int checkInverseLower(boofcv.struct.wavelet.WlCoef,int,boofcv.core.image.border.BorderIndex1D,int)>": 0.441481505897173
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int checkInverseUpper(boofcv.struct.wavelet.WlCoef,int,boofcv.core.image.border.BorderIndex1D,int)>": 0.44032425248151813
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: boofcv.struct.image.ImageInterleaved subimage(int,int,int,int,boofcv.struct.image.ImageInterleaved)>": 0.4344891428398681
        }, 
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: int block_unsafe(boofcv.struct.image.GrayS32,int,int,int,int)>": 0.43080961357866054
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void selectBlockSize(int,int)>": 0.42726466582222905
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg argbs(int[],long[])>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.16273621160603557
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.14702947288269252
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.14456567617355504
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.1420743506677539
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.1361035951395862
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.IntervalView zeroMin(net.imglib2.RandomAccessibleInterval)>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2492018825966159
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.23564130696201152
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.23564130696201152
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2284252362756372
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.19846465346337158
        }
    ], 
    "<net.imglib2.view.MixedTransformView: net.imglib2.RandomAccess randomAccess()>": [
        {
            "<org.jbox2d.testbed.tests.ContinuousTest: void <init>()>": 0.031068488300060003
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.OvusculeSnake2DKeeper: void <init>()>": 0.02906190968595482
        }, 
        {
            "<org.dyn4j.BinarySearchTree: void <init>()>": 0.02906190968595482
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void stop()>": 0.02739983121755955
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrack: void reset()>": 0.02739983121755955
        }
    ], 
    "<net.imglib2.display.projector.sampler.IntervalSampler: void <init>(int,long,long)>": [
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.405130231073045
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.40225748264436517
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.40214301350754195
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.3875800052054159
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.3554978187703423
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void dec()>": [
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.19504242526339868
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.1926507311049134
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.1926507311049134
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.1926507311049134
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.19252179372487355
        }
    ], 
    "<net.imglib2.AbstractRealInterval: void realMin(net.imglib2.RealPositionable)>": [
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.28987922798590576
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: double[] getDoublePivot()>": 0.28282253698356824
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumn(double[][],int)>": 0.2636968177673989
        }, 
        {
            "<Catalano.Math.Decompositions.EigenvalueDecomposition: double[][] getD()>": 0.2636739763109507
        }, 
        {
            "<Catalano.Imaging.Tools.FlusserSukMoments: double[] Convert(java.util.ArrayList)>": 0.2612131746674461
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void move(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.iterator.ZeroMinIntervalIterator: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: float unsafe_getF(int,int)>": 0.3169955089543533
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: float getF(int)>": 0.24918359107134513
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_S64: float getF(int)>": 0.24918359107134513
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.2490264329518036
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.2490264329518036
        }
    ], 
    "<net.imglib2.RealPoint: void setPosition(long[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF64)>": 0.43403432413324206
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedF64)>": 0.3949959276042379
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.3530837074107076
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.3530837074107076
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.34906369920670166
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: net.imglib2.transform.integer.SlicingTransform preConcatenate(net.imglib2.transform.integer.Slicing)>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.403128293557929
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.39705953338283273
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.3929646940416108
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.39178115021659216
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.PairManager: boolean removePair(int,int)>": 0.38831391959988976
        }
    ], 
    "<net.imglib2.img.cell.CellImgFactory: net.imglib2.img.cell.CellImg createDoubleInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.19270150385571458
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.19270150385571458
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.17820800197681597
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.14336948875748118
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.14336948875748118
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void max(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.img.array.ArrayImgFactory: net.imglib2.img.ImgFactory imgFactory(java.lang.Object)>": [
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareFiducial: void main(java.lang.String[])>": 0.4215982327505652
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.4110876076876874
        }, 
        {
            "<boofcv.demonstrations.feature.disparity.VisualizeStereoDisparity: void main(java.lang.String[])>": 0.40593088532578125
        }, 
        {
            "<boofcv.demonstrations.distort.RemoveLensDistortionApp: void main(java.lang.String[])>": 0.39342786807928365
        }, 
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareBinaryFiducial: void main(java.lang.String[])>": 0.3872018256073534
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: java.lang.String toString()>": [
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String getPatternName(int)>": 0.5007554818161598
        }, 
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String selectDocumentName()>": 0.409761201583305
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: java.lang.String toString()>": 0.4091857429014163
        }, 
        {
            "<boofcv.misc.AutoTypeImage: java.lang.String getInterleavedName()>": 0.409137925881331
        }, 
        {
            "<net.coobird.thumbnailator.geometry.RelativeSize: java.lang.String toString()>": 0.3958913494273325
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: void <init>(net.imglib2.img.NativeImg)>": [
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void clear()>": 0.22590872142596802
        }, 
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.20463950469600758
        }, 
        {
            "<Catalano.Imaging.Filters.Erosion: void <init>(int)>": 0.20084542878702014
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Erosion: void <init>(int)>": 0.20084542878702014
        }, 
        {
            "<Catalano.Imaging.Filters.Dilatation: void <init>(int)>": 0.20084542878702014
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: void move(long[])>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.3275248087804981
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.31610650811554586
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long[],int,int,int,int)>": 0.3119464314199228
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long[],int,int,int,int)>": 0.3119464314199228
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long[],int,int,int,int)>": 0.3119464314199228
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsValue: void setPosition(int[])>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.30539626592807395
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.25051813223708597
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.24672167653126784
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2438755335465963
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.23960392890575968
        }
    ], 
    "<net.imglib2.util.RealSum: double getSum()>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: double sum(boofcv.struct.convolve.Kernel2D_F64)>": 0.7381709039906978
        }, 
        {
            "<Catalano.Statistics.Tools: double Sum(double[])>": 0.6665349328503678
        }, 
        {
            "<Catalano.Math.Tools: double Sum(double[])>": 0.6665349328503678
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: double computeSum()>": 0.6157376330408196
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.5885940247911903
        }
    ], 
    "<net.imglib2.display.awt.SignedShortDataBuffer: void <init>(short[],int)>": [
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayF32)>": 0.22398068794462375
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegion pixelRegion(int,int,java.lang.Class)>": 0.20344135936612762
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegionNCC pixelRegionNCC(int,int,java.lang.Class)>": 0.20344135936612762
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayF32,int,int,boofcv.struct.image.GrayF32)>": 0.19888665627115115
        }, 
        {
            "<boofcv.struct.image.InterleavedI16: short[] get(int,int,short[])>": 0.1969603859792714
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRealRandomAccessibleRealInterval: net.imglib2.type.Type getDestinationType()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.018184824186332698
        }
    ], 
    "<net.imglib2.img.array.ArrayImg: net.imglib2.Cursor localizingCursor(net.imglib2.Interval)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void addObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.3362787335697425
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.3033358834347191
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3005138652576499
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.29860859798869654
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.29736372050455645
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: double[][] getMatrix()>": [
        {
            "<Catalano.Math.Matrix: double[][] Identity(int,int)>": 0.38127365051523654
        }, 
        {
            "<Catalano.Math.Matrix: double[][] CreateMatrix2D(int,int,double)>": 0.3769206179006702
        }, 
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: int getNumUnknownViews()>": 0.3707904492272893
        }, 
        {
            "<Catalano.Math.Matrix: double[][] SubMatrix(double[][],int,int)>": 0.3565470956205849
        }, 
        {
            "<Catalano.Math.Decompositions.SingularValueDecomposition: double[][] getS()>": 0.3512888068759939
        }
    ], 
    "<net.imglib2.img.sparse.BooleanNtree: void <init>(net.imglib2.img.sparse.Ntree,long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.242012144279314
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.242012144279314
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2237584400126592
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.17235608187218834
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.17235608187218834
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.IntervalView offsetInterval(net.imglib2.RandomAccessible,net.imglib2.Interval)>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.27752279093204074
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.25827674619993324
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.25827674619993324
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.25094596930814145
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.22562121898555387
        }
    ], 
    "<net.imglib2.util.Util: java.lang.String printCoordinates(int[])>": [
        {
            "<boofcv.demonstrations.feature.disparity.VisualizeStereoDisparity: void main(java.lang.String[])>": 0.5720299280112311
        }, 
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareFiducial: void main(java.lang.String[])>": 0.5511844599703544
        }, 
        {
            "<boofcv.demonstrations.denoise.DenoiseAccuracyStudyApp: void main(java.lang.String[])>": 0.5288451272845824
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.5202386870884967
        }, 
        {
            "<org.jbox2d.common.Transform: java.lang.String toString()>": 0.5124790006925938
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: int compareTo(net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: int access$200(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.28961571851798523
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$100(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.28961571851798523
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.24686327509527572
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.24686327509527572
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.24686327509527572
        }
    ], 
    "<net.imglib2.type.label.BasePairCharType: net.imglib2.type.label.BasePairCharType createVariable()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.RealPointSampleList: void realMin(net.imglib2.RealPositionable)>": [
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.21487335015826062
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.21487335015826062
        }, 
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.214027382399185
        }, 
        {
            "<boofcv.abst.geo.optimization.ModelCodecSwapData: void encode(org.ejml.data.DenseMatrix64F,double[])>": 0.19295834780215798
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.19121854800574056
        }
    ], 
    "<net.imglib2.type.numeric.real.AbstractRealType: void mul(float)>": [
        {
            "<Catalano.Core.DoublePoint: void <init>(float,float)>": 0.4585106313468902
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float ArcTan2(float,float)>": 0.45241022618818416
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float Sqrt(float)>": 0.42899368997912396
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float ArcSin(float)>": 0.42899368997912396
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float Cos(float)>": 0.42899368997912396
        }
    ], 
    "<net.imglib2.neighborsearch.KNearestNeighborSearchOnKDTree: double getDistance(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: double getOutside(int,int)>": 0.5355986698988371
        }, 
        {
            "<Catalano.Math.Approximation: double Lowprecision_Pow(double,double)>": 0.527263277480359
        }, 
        {
            "<Catalano.Math.Approximation: double Highprecision_Pow(double,double)>": 0.527263277480359
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Bhattacharyya(double[],double[])>": 0.511356220207549
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.5097684861688663
        }
    ], 
    "<net.imglib2.util.ConstantUtils$2: net.imglib2.util.ConstantUtils$2$ConstantRealRandomAccess realRandomAccess(net.imglib2.RealInterval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05063696835418333
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04902903378454601
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04859335628264
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04807692307692309
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04759372565678686
        }
    ], 
    "<net.imglib2.Point: void move(long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.32591261406225114
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.3132408223769344
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.3132408223769344
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.3132408223769344
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long[],int,int,int,int)>": 0.3132365508978433
        }
    ], 
    "<net.imglib2.display.projector.sampler.IntervalSampler: boolean hasNext()>": [
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.48392006037443147
        }, 
        {
            "<Catalano.Core.Stopwatch: boolean isRunning()>": 0.4653287891675728
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.4639205035710584
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.4639205035710584
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.4639205035710584
        }
    ], 
    "<net.imglib2.img.ImgView: net.imglib2.Cursor cursor(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.Joint,double)>": 0.1837833918678511
        }, 
        {
            "<boofcv.alg.filter.misc.AverageDownSampleOps: void down(boofcv.struct.image.ImageGray,int,boofcv.struct.image.ImageGray)>": 0.1650473124615462
        }, 
        {
            "<org.dyn4j.examples.Graphics2DRenderer: void render(java.awt.Graphics2D,org.dyn4j.geometry.Shape,double,java.awt.Color)>": 0.16260412140847472
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillShape(com.jogamp.opengl.GL2,org.dyn4j.geometry.Shape)>": 0.15898339425088207
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawShape(com.jogamp.opengl.GL2,org.dyn4j.geometry.Shape,boolean)>": 0.15014620195567696
        }
    ], 
    "<net.imglib2.transform.integer.SequentializeTransform$1: void apply(net.imglib2.Localizable,net.imglib2.Positionable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06666666666666665
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.06454972243679029
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06397612635199752
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.06329621044272916
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06266005147845038
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.RandomAccessibleInterval dropSingletonDimensions(net.imglib2.RandomAccessibleInterval)>": [
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.21231102551178638
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.20635918411701976
        }, 
        {
            "<org.jbox2d.testbed.tests.TheoJansen: void processBody(org.jbox2d.dynamics.Body,java.lang.Long)>": 0.19851576006909463
        }, 
        {
            "<org.box2d.proto.Box2D$PbShape$Builder: org.box2d.proto.Box2D$PbShape$Builder setTag(long)>": 0.19771960449632192
        }, 
        {
            "<org.box2d.proto.Box2D$PbFixture$Builder: org.box2d.proto.Box2D$PbFixture$Builder setTag(long)>": 0.19771960449632192
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: void div(net.imglib2.type.numeric.integer.GenericByteType)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void solveColorMixing(org.jbox2d.dynamics.TimeStep)>": 0.2601379698713402
        }, 
        {
            "<org.jbox2d.collision.ContactID: int getKey()>": 0.24870916725536762
        }, 
        {
            "<org.jbox2d.collision.ContactID: int compareTo(org.jbox2d.collision.ContactID)>": 0.2275609676739095
        }, 
        {
            "<org.jbox2d.collision.ContactID: boolean isEqual(org.jbox2d.collision.ContactID)>": 0.2248680901901646
        }, 
        {
            "<org.jbox2d.collision.ContactID: int compareTo(java.lang.Object)>": 0.21807504084797213
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: net.imglib2.util.Fraction getEntitiesPerPixel()>": [
        {
            "<org.dyn4j.dynamics.WorldTest: void testNewDetectMethod()>": 0.07571036279605228
        }, 
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06900655593423542
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0668153104781061
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>()>": 0.0668153104781061
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06622158212347246
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void increment(java.util.List)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void renderArrows()>": 0.2815758479812761
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void renderMagnets()>": 0.2815758479812761
        }, 
        {
            "<boofcv.gui.feature.AssociationScorePanel: void computeScore(boolean,int)>": 0.2681259096664741
        }, 
        {
            "<boofcv.demonstrations.calibration.CommonDetectCalibrationApp: boolean isInGrids(georegression.struct.shapes.Polygon2D_F64)>": 0.26445407167623486
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerTwoPassKltPyramid: void finishTracking()>": 0.2637338756778449
        }
    ], 
    "<net.imglib2.img.list.ListRandomAccess: java.lang.Object get()>": [
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: java.lang.Object getUserData(int)>": 0.29532163742690054
        }, 
        {
            "<boofcv.gui.SelectAlgorithmAndInputPanel: java.lang.Object getAlgorithmCookie(int)>": 0.2557870110234477
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2535623089962512
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.24257833769207987
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.24257833769207987
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.DoubleArray: void setValue(int,double)>": [
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void setD(int,double)>": 0.5758928571428571
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMinimum(int,double)>": 0.5758928571428571
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMaximum(int,double)>": 0.5758928571428571
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setRange(int,double,double)>": 0.4845514268887624
        }, 
        {
            "<boofcv.struct.image.GrayF64: void unsafe_set(int,int,double)>": 0.40575276384648046
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: void localize(double[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.41890531890176924
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4087054016314014
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4070034317351934
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.40379344444386467
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4018451520737821
        }
    ], 
    "<net.imglib2.AbstractLocalizableInt: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_S32: float getF(int)>": 0.5956319870656317
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_S32: float getF(int)>": 0.5956319870656317
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F32: void setOutside(int,int,float)>": 0.5206056907299677
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: int get(int)>": 0.5206056907299677
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.5206056907299677
        }
    ], 
    "<net.imglib2.AbstractLocalizableInt: int getIntPosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.7971082718892609
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.7875797356576464
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.7666734068198182
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.7611977688432564
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: int get(int)>": 0.759469696969697
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: void decIndex()>": [
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.38668033786823425
        }, 
        {
            "<boofcv.alg.enhance.impl.ImplEnhanceFilter: void sharpenBorder4(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayU8,int,int)>": 0.3832149407953735
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: int getSerializedSize()>": 0.38222398789683343
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.3821208141838207
        }, 
        {
            "<Catalano.Imaging.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.3821208141838207
        }
    ], 
    "<net.imglib2.type.label.BasePairCharType: net.imglib2.type.label.BasePairCharType copy()>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: int trans(int)>": 0.059114227934949554
        }, 
        {
            "<org.jbox2d.testbed.tests.ApplyForce: void keyPressed(char,int)>": 0.05405624776173354
        }, 
        {
            "<Catalano.Math.Tools: boolean isNumeric(java.lang.String)>": 0.04956324135184985
        }, 
        {
            "<Catalano.Math.Distances.Distance: int Hamming(java.lang.String,java.lang.String)>": 0.04893539826463222
        }, 
        {
            "<org.jbox2d.testbed.framework.QueueItem: void <init>(org.jbox2d.testbed.framework.QueueItemType,char,int)>": 0.04734991146032219
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: int compareTo(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.27853790090102365
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.2448691276343342
        }, 
        {
            "<boofcv.io.video.VideoMjpegCodec: boolean findMarker(java.io.DataInputStream,byte)>": 0.21891294438365672
        }, 
        {
            "<Catalano.Math.Geometry.PointToProcess: int compareTo(java.lang.Object)>": 0.21839836612578653
        }, 
        {
            "<boofcv.abst.feature.detect.extract.NonMaxLimiter$LocalExtreme: int compareTo(java.lang.Object)>": 0.21839836612578653
        }
    ], 
    "<net.imglib2.img.cell.CellImgFactory: net.imglib2.img.NativeImg createCharInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.20557172820160094
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.20557172820160094
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.19009418367404002
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.15968814578412494
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.15968814578412494
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: net.imglib2.histogram.DiscreteFrequencyDistribution copy()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.044280744277004756
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04287464628562721
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04249365736239222
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.042042049624769526
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04161950573851823
        }
    ], 
    "<net.imglib2.Point: void <init>(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.23941398324951169
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.23941398324951169
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,boofcv.struct.image.GrayS64)>": 0.23562353183050327
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide(boofcv.struct.image.GrayS64,double,boofcv.struct.image.GrayS64)>": 0.23562353183050327
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply(boofcv.struct.image.GrayS64,double,boofcv.struct.image.GrayS64)>": 0.23562353183050327
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: double getDoublePosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: double unsafe_getD(int,int)>": 0.3578910124571392
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.3362980189090006
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.3299812201690197
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(long[],int,int,double,long,long,long[],int,int,int,int)>": 0.3267575192821182
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply_A(long[],int,int,double,long,long,long[],int,int,int,int)>": 0.3267575192821182
        }
    ], 
    "<net.imglib2.view.TransformBuilder$3: net.imglib2.view.TranslationRandomAccess randomAccess()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05270462766947299
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.05103103630798288
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.050577568786757836
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05004004806408974
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04953712024382607
        }
    ], 
    "<net.imglib2.PointSampleList$PointSampleListCursor: void localize(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.type.numeric.integer.IntType: void setBigInteger(java.math.BigInteger)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void drawPadding()>": 0.27277361504820424
        }, 
        {
            "<org.box2d.proto.Box2D$PbFilter: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.2625359669106653
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.2596887098245998
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void computeMinMax(boofcv.struct.image.ImageGray,int,int)>": 0.2592857175492762
        }, 
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.25711667987760445
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: void move(int[])>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4447012315602099
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.44412593702872144
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.43863103683108584
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.4347699538599976
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4207519625055012
        }
    ], 
    "<net.imglib2.converter.Converters: net.imglib2.RealRandomAccessible convert(net.imglib2.RealRandomAccessible,net.imglib2.converter.Converter,net.imglib2.type.Type)>": [
        {
            "<boofcv.gui.DepthVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.14052767196315077
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.14052767196315077
        }, 
        {
            "<org.dyn4j.collision.narrowphase.PairwiseTypedFallbackCondition: boolean isMatch(java.lang.Class,java.lang.Class)>": 0.13990854174238493
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.1323301932270773
        }, 
        {
            "<boofcv.abst.feature.associate.EnforceUniqueByScore: void <init>(boofcv.abst.feature.associate.Associate,boolean,boolean)>": 0.13090996793955453
        }
    ], 
    "<net.imglib2.AbstractCursor: void localize(double[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF64)>": 0.4038446782269746
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedF64)>": 0.36592657624266656
        }, 
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.3229351870123416
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.32194183747466926
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.32194183747466926
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: double[][] getMatrix()>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.41660601036095013
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.PairManager: boolean removePair(int,int)>": 0.4064739198747501
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.40293418018485505
        }, 
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: int getNumUnknownViews()>": 0.4009489766109274
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.3938031920982055
        }
    ], 
    "<net.imglib2.display.ColorTable16: int getLength()>": [
        {
            "<org.dyn4j.sandbox.ContactCounter: int getSensed()>": 0.2403963055372464
        }, 
        {
            "<org.jbox2d.pooling.normal.CircleStack: java.lang.Object pop()>": 0.2228513946579653
        }, 
        {
            "<Catalano.Imaging.Filters.RandomConvolution: int CalcLines(double[][])>": 0.21629192689911286
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Convolution: int CalcLines(int[][])>": 0.21629192689911286
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryErosion: int CalcLines(int[][])>": 0.21629192689911286
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: void updateContainer(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.3187477037083238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.22574829559349857
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.22057752193984925
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: java.lang.Object iterationOrder()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: double angleFromR(double[][])>": [
        {
            "<Catalano.Math.Geometry.QuadrilateralTransformationCalc: double[][] MultiplyMatrix(double[][],double[][])>": 0.6046743018851186
        }, 
        {
            "<Catalano.Imaging.Filters.PeronaMalikAnisotropicDiffusion: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.5703151999317049
        }, 
        {
            "<Catalano.Imaging.Filters.Photometric.RetinaModel: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.5313057681009663
        }, 
        {
            "<Catalano.Imaging.Filters.Photometric.RetinaModel: double[][] NonLinearity(double[][],double[][])>": 0.5255397112758515
        }, 
        {
            "<Catalano.Imaging.Tools.FastRadialSymmetryTransform: double[][] Magnitude(double[][],double[][])>": 0.5115764905742743
        }
    ], 
    "<net.imglib2.view.TransformRandomAccess: void setPosition(net.imglib2.Localizable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5256091910568305
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.5090303794676198
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5085281685018156
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5018647418701996
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateMetrics(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.4949266645788068
        }
    ], 
    "<net.imglib2.interpolation.Interpolant: void <init>(net.imglib2.EuclideanSpace,net.imglib2.interpolation.InterpolatorFactory)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0563436169819011
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0545544725589981
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.05406969538743988
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05349506156386412
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.05295740910852022
        }
    ], 
    "<net.imglib2.type.numeric.AbstractARGBDoubleType: void mul(float)>": [
        {
            "<boofcv.alg.feature.describe.DescribePointSift: void process(double,double,double,double,boofcv.struct.feature.TupleDesc_F64)>": 0.38614843180094116
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.3832029029813363
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.38310801430299257
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.38309703343013424
        }, 
        {
            "<boofcv.alg.distort.radtan.AddRadialPtoN_F64: void compute(double,double,georegression.struct.point.Point2D_F64)>": 0.382932665232949
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void setPosition(int,int)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.4954196921097764
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.4893810727715689
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.4893810727715689
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void min(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImgFactory: net.imglib2.img.NativeImg createShortInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.22221821173234435
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.22221821173234435
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.22106802320784072
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.18251408096129465
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.17685992130468772
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.CharArray: void setValue(int,char)>": [
        {
            "<org.jbox2d.testbed.tests.ApplyForce: void keyPressed(char,int)>": 0.24812547738381663
        }, 
        {
            "<org.dyn4j.sandbox.help.HelpReader: void characters(char[],int,int)>": 0.23621697305489453
        }, 
        {
            "<boofcv.io.SimpleStringNumberReader: void <init>(char)>": 0.21900663169337592
        }, 
        {
            "<boofcv.io.SimpleNumberSequenceReader: void <init>(char)>": 0.21900663169337592
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$7: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.2039296158424022
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void fwdDim0()>": [
        {
            "<org.dyn4j.sandbox.ContactCounter: void sensed(org.dyn4j.dynamics.contact.ContactPoint)>": 0.3755119868588148
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.EPAAlgorithm: void addFaceCandidate(net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA,java.util.Queue,int[],float)>": 0.27982282191581026
        }, 
        {
            "<Catalano.Math.Matrix: int[] SubMatrix(int[],int)>": 0.2742958095801854
        }, 
        {
            "<org.dyn4j.sandbox.ContactCounter: void end(org.dyn4j.dynamics.contact.ContactPoint)>": 0.27076758930340716
        }, 
        {
            "<Catalano.Imaging.Filters.EnsembleThreshold: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.26605689943914873
        }
    ], 
    "<net.imglib2.iterator.LocalizingZeroMinIntervalIterator: void reset()>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.24257271898910168
        }, 
        {
            "<boofcv.core.image.impl.ConvertInterleavedToSingle: void average(boofcv.struct.image.InterleavedS64,boofcv.struct.image.GrayS64)>": 0.23899666573610787
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.23787833791834065
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.23111840592245256
        }, 
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.22855820029541452
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void move(float,int)>": [
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_F32: void <init>(int,float,float)>": 0.3964462393048189
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_I: void <init>(int,float,float)>": 0.3964462393048189
        }, 
        {
            "<boofcv.abst.feature.detect.interest.ConfigGeneralDetector: void <init>(int,int,float)>": 0.3456010616334146
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchGray: void <init>(int,float,boofcv.alg.interpolate.InterpolatePixelS,int,int,float,boolean)>": 0.3449367496482926
        }, 
        {
            "<boofcv.abst.feature.detect.interest.ConfigGeneralDetector: void <init>(int,int,float,int,boolean)>": 0.3442822428944223
        }
    ], 
    "<net.imglib2.util.Partition: int partitionSubList(int,int,java.util.List,java.util.Comparator)>": [
        {
            "<Catalano.Core.Structs.BinaryHeap: void downHeap(int,java.lang.Comparable)>": 0.335424842709418
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: java.lang.Comparable remove()>": 0.3141011714336527
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: void <init>(java.lang.Comparable[])>": 0.31147654732272007
        }, 
        {
            "<Catalano.Imaging.Filters.BlobsFiltering: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.2967973450059777
        }, 
        {
            "<boofcv.gui.SelectAlgorithmAndInputPanel: java.lang.Object getAlgorithmCookie(int)>": 0.29678886525034
        }
    ], 
    "<net.imglib2.converter.ComplexRealFloatConverter: void convert(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.24305110926064444
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.201832294726364
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.201832294726364
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.18427430546639723
        }, 
        {
            "<boofcv.alg.sfm.robust.ModelManagerScaleTranslate2D: void copyModel(java.lang.Object,java.lang.Object)>": 0.1810950483542926
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgs: net.imglib2.img.planar.PlanarImg argbs(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.RealPointSampleList: void realMin(double[])>": [
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.41549793349128344
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumn(double[][],int)>": 0.3973144980183334
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRow(double[][],int)>": 0.39592283060630346
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int[])>": 0.39110786522669816
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRows(double[],int[])>": 0.39110786522669816
        }
    ], 
    "<net.imglib2.img.cell.CellRandomAccess: void <init>(net.imglib2.img.cell.CellRandomAccess)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.23803845922232827
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.23803845922232827
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2202519480010688
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set(int,int,long[])>": 0.21296429367670847
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2040370412389325
        }
    ], 
    "<net.imglib2.util.ImgUtil: void copy(long[],int,int[],net.imglib2.img.Img)>": [
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getIndex(int[])>": 0.46136687760412176
        }, 
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.43194937076981743
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.43194937076981743
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(long[],int,int,long[],int,int,int,int)>": 0.4080284449919514
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.40634867642767897
        }
    ], 
    "<net.imglib2.AbstractLocalizableInt: void <init>(int)>": [
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplSsdCorner_S16: void setImageShape(int,int)>": 0.4533600932023333
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int,int)>": 0.43702142191691895
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void <init>(int,int,double)>": 0.40879610787347276
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparitySparseScoreSadRect_S16: void <init>(int,int,int,int)>": 0.4086467759569381
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparitySparseScoreSadRect_U8: void <init>(int,int,int,int)>": 0.4086467759569381
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,int,int,double[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5811787841893516
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5795957554113238
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.574959397921157
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5628405374594679
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5608701810597032
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: int getIntPosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.46164642111448273
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.44539001889542384
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.43043501849212296
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.41830135351801223
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.41242605736727156
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: java.util.Iterator iterator()>": [
        {
            "<Catalano.Math.SparseArray: java.util.Iterator iterator()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$BufferedImageImageSourceIterator$1: void <init>(net.coobird.thumbnailator.Thumbnails$Builder$BufferedImageImageSourceIterator)>": 0.14138610242640864
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$InputStreamImageSourceIterator$1: void <init>(net.coobird.thumbnailator.Thumbnails$Builder$InputStreamImageSourceIterator)>": 0.14138610242640864
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$URLImageSourceIterator$1: void <init>(net.coobird.thumbnailator.Thumbnails$Builder$URLImageSourceIterator)>": 0.14138610242640864
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$StringImageSourceIterator$1: void <init>(net.coobird.thumbnailator.Thumbnails$Builder$StringImageSourceIterator)>": 0.14138610242640864
        }
    ], 
    "<net.imglib2.img.cell.CellCursor: java.lang.String toString()>": [
        {
            "<org.dyn4j.sandbox.resources.Messages: java.lang.String getString(java.lang.String)>": 0.3100041420236116
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$2: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$3: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$5: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$4: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }
    ], 
    "<net.imglib2.AbstractInterval: void min(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.468536325802491
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.45644740722555815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4549590327161815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4514297284100339
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.44882531202406517
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListLocalizingCursor: void set(java.lang.Object)>": [
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<net.coobird.thumbnailator.resizers.ProgressiveBilinearResizer: void <init>(java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<net.coobird.thumbnailator.resizers.BicubicResizer: void <init>(java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<net.coobird.thumbnailator.resizers.BilinearResizer: void <init>(java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<boofcv.abst.geo.fitting.DistanceFromModelResidualN: void setModel(java.lang.Object)>": 0.21126595987653524
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: void setPosition(int,int)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.4954196921097764
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.4893810727715689
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.4893810727715689
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsConstantValue: void <init>(net.imglib2.outofbounds.OutOfBoundsConstantValue)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.049690399499995326
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.048112522432468816
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04768498915339404
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.047178209756024825
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.046704044859817086
        }
    ], 
    "<net.imglib2.img.array.ArrayImgFactory: net.imglib2.img.array.ArrayImg create(long[],net.imglib2.type.NativeType)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.139987229624723
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.139987229624723
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.12960910073940318
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.11200170379633057
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.10650160840378231
        }
    ], 
    "<net.imglib2.display.awt.SignedByteDataBuffer: void <init>(byte[],int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.251629130767405
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.2502803576636923
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.2502803576636923
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.24765149559550065
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.24765149559550065
        }
    ], 
    "<net.imglib2.RealPoint: net.imglib2.RealPoint wrap(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.32572717181277694
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.2724402965151518
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.2724402965151518
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.2544502753892892
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2535506352014063
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: void fwd(int)>": [
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.3040307509187229
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: void set(int,float)>": 0.3031088913245535
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.28115957585733586
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.28115957585733586
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.28115957585733586
        }
    ], 
    "<net.imglib2.display.projector.AbstractProjector2D: void <init>(int)>": [
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int indexOfPreviousCounterClockwiseEdge(int)>": 0.372579254913245
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$5: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.3577210036526292
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.EdgeEPA: int indexOfPreviousCounterClockwiseEdge(int)>": 0.3487405816018003
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Median$Run: int CalcLines(int)>": 0.3487405816018003
        }, 
        {
            "<Catalano.Imaging.Filters.Mode: int CalcLines(int)>": 0.3487405816018003
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolatorARGB: void printCode()>": [
        {
            "<boofcv.struct.image.GrayI: void printNotZero()>": 0.328120056397652
        }, 
        {
            "<boofcv.alg.fiducial.square.DetectFiducialSquareBinary: void printClassified()>": 0.3127070958022792
        }, 
        {
            "<org.imgscalr.Scalr: void log(int,java.lang.String,java.lang.Object[])>": 0.28256875659939185
        }, 
        {
            "<net.smert.jreactphysics3d.engine.Profiler: void PrintRecursiveNodeReport(net.smert.jreactphysics3d.engine.ProfileNodeIterator,int,int)>": 0.2804299159196359
        }, 
        {
            "<boofcv.app.CameraCalibration: void process()>": 0.2687270406023639
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: double getDoublePosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.49163800764408094
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.49163800764408094
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: double getOutside(int,int)>": 0.4868016044136483
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.47153771681976947
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.46449118080111146
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: net.imglib2.util.Fraction getEntitiesPerPixel()>": [
        {
            "<org.dyn4j.dynamics.WorldTest: void testNewDetectMethod()>": 0.07571036279605228
        }, 
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06900655593423542
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0668153104781061
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>()>": 0.0668153104781061
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06622158212347246
        }
    ], 
    "<net.imglib2.display.screenimage.awt.IntAWTScreenImage: java.awt.image.DataBuffer createDataBuffer(java.lang.Object)>": [
        {
            "<boofcv.struct.image.InterleavedS32: void _setData(java.lang.Object)>": 0.1532590227806104
        }, 
        {
            "<boofcv.struct.image.GrayS32: void _setData(java.lang.Object)>": 0.1532590227806104
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.1345982968042152
        }, 
        {
            "<Catalano.Math.Dissimilarities.RogersTanimotoDissimilarity: double Compute(java.lang.Object,java.lang.Object)>": 0.13158359579729784
        }, 
        {
            "<Catalano.Math.Dissimilarities.SokalMichenerDissimilarity: double Compute(java.lang.Object,java.lang.Object)>": 0.13158359579729784
        }
    ], 
    "<net.imglib2.view.StackView: net.imglib2.RandomAccess randomAccess()>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.07152748373009106
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.06752321858613904
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.06621221919717306
        }, 
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06521864934374387
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06505206248331666
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: void setValue(long)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.InterleavedS64,long,long,boofcv.struct.image.InterleavedS64)>": 0.3076250912475072
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.InterleavedS64,long,long,long,boofcv.struct.image.InterleavedS64)>": 0.3076250912475072
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowing: float getWeight(long[])>": [
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.3237447032718836
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(long[],int,int,int,int)>": 0.3206225498265186
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long min(long[],int,int,int,int)>": 0.3206225498265186
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.31792439309577725
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3152995353231308
        }
    ], 
    "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: void <init>(net.imglib2.IterableRealInterval)>": [
        {
            "<boofcv.alg.feature.disparity.impl.StereoDisparityWtoNaiveFive: void <init>(int,int,int,int)>": 0.2844271639900997
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int)>": 0.27680468411535597
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindowIntegral: void <init>(double,double,double,int,double,int,java.lang.Class)>": 0.27436959755529716
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void <init>(boofcv.struct.image.InterleavedF64)>": 0.274096069633589
        }, 
        {
            "<boofcv.struct.FastQueueArray_F64: double[] createInstance()>": 0.2731273633755613
        }
    ], 
    "<net.imglib2.img.sparse.BooleanNtree: net.imglib2.img.sparse.NtreeAccess createInstance(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1826418206216855
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1826418206216855
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16881288427264435
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.12701685073623692
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.12701685073623692
        }
    ], 
    "<net.imglib2.util.Intervals: double[] minAsDoubleArray(net.imglib2.RealInterval)>": [
        {
            "<Catalano.Core.Structs.DoubleArrayList: double[] toArray(double[])>": 0.298452727399759
        }, 
        {
            "<boofcv.struct.FastQueueArray_F64: double[] createInstance()>": 0.29801166703846915
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_F64: void setOutside(int,int,double[])>": 0.27794369028632787
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: void ensureCapacity(int)>": 0.2772820211463032
        }, 
        {
            "<Catalano.Math.Decompositions.EigenvalueDecomposition: double[][] getD()>": 0.2734791930798969
        }
    ], 
    "<net.imglib2.histogram.HistogramNd$Decrementer: void count(long[],boolean)>": [
        {
            "<boofcv.alg.fiducial.calib.chess.ChessboardPolygonHelper: boolean filterContour(java.util.List,boolean,boolean)>": 0.31960197741148066
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void renderBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.29980087157898166
        }, 
        {
            "<org.dyn4j.geometry.Circle: void <init>(boolean,double)>": 0.24769612888161685
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void renderSelectedBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.2447738535794578
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void display(com.jogamp.opengl.GLAutoDrawable)>": 0.24387409533976404
        }
    ], 
    "<net.imglib2.KDTree$KDTreeCursor: void <init>(net.imglib2.KDTree,net.imglib2.KDTree)>": [
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double Median()>": 0.25594594904789214
        }, 
        {
            "<org.dyn4j.sandbox.panels.PreviewPanel: void paintComponent(java.awt.Graphics)>": 0.2325465632262871
        }, 
        {
            "<Catalano.Math.Functions.Gaussian: double Function2D(double,double)>": 0.22945093579779197
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: Catalano.Imaging.ActiveContour.Ovuscule.OvusculeSnake2DScale[] getScales()>": 0.2292078266178402
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.2289669124324413
        }
    ], 
    "<net.imglib2.AbstractWrappedInterval: void max(net.imglib2.Positionable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.07453559924999299
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07216878364870323
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.07152748373009106
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07076731463403724
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07005606728972563
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: void mul(double)>": [
        {
            "<net.coobird.thumbnailator.makers.ScaledThumbnailMaker: java.awt.image.BufferedImage make(java.awt.image.BufferedImage)>": 0.3536698380749349
        }, 
        {
            "<Catalano.Imaging.Tools.SpatialHistogram: double[] Compute(Catalano.Imaging.FastBitmap,Catalano.Imaging.Tools.IAggregateVectors)>": 0.33474267587874995
        }, 
        {
            "<Catalano.Imaging.Tools.BlockProcessing: double[] Compute(Catalano.Imaging.FastBitmap,Catalano.Imaging.Tools.IAggregateVectors)>": 0.33474267587874995
        }, 
        {
            "<Catalano.Imaging.Tools.SpatialHistogram: int[] Compute(Catalano.Imaging.FastBitmap,Catalano.Imaging.Texture.BinaryPattern.IBinaryPattern)>": 0.33309948298470704
        }, 
        {
            "<Catalano.Imaging.Filters.AdditiveNoise: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.3328593774506065
        }
    ], 
    "<net.imglib2.transform.integer.shear.InverseShearTransform: net.imglib2.transform.integer.BoundingBox transform(net.imglib2.transform.integer.BoundingBox)>": [
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.3416054823597941
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.3219220647003815
        }, 
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: void transform(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.28890534225850056
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.InterleavedS64,java.util.Random,long,long)>": 0.28861179861111325
        }, 
        {
            "<boofcv.core.image.ConvertImage: boofcv.struct.image.GrayU8 convert(boofcv.struct.image.GrayS64,long,long,int,boofcv.struct.image.GrayU8)>": 0.28642103086354215
        }
    ], 
    "<net.imglib2.view.composite.RealComposite: net.imglib2.view.composite.RealComposite createVariable()>": [
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.17325100696748919
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(boofcv.struct.image.GrayS64)>": 0.1691792403461894
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(boofcv.struct.image.GrayS64)>": 0.1691792403461894
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long min(boofcv.struct.image.GrayS64)>": 0.1691792403461894
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.16678204796064638
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgFactory: net.imglib2.img.NativeImg createLongInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.13257949307988665
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.13257949307988665
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.12277271921448075
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.12050140956603536
        }, 
        {
            "<boofcv.gui.StandardAlgConfigPanel: void <init>()>": 0.11572751247156893
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: boolean getComponentZero(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.6834580649234657
        }, 
        {
            "<org.jbox2d.collision.shapes.CircleShape: org.jbox2d.common.Vec2 getVertex(int)>": 0.6267124991771027
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.6186610555340056
        }, 
        {
            "<org.jbox2d.collision.Distance$DistanceProxy: org.jbox2d.common.Vec2 getVertex(int)>": 0.6186610555340056
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: org.jbox2d.collision.AABB getFatAABB(int)>": 0.6186610555340056
        }
    ], 
    "<net.imglib2.converter.RealUnsignedShortConverter: void convert(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.37607319931427524
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.3758327784829476
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.37537214585944456
        }, 
        {
            "<Catalano.Statistics.Kernels.ThinPlateSpline: double Function(java.lang.Object,java.lang.Object)>": 0.3686181437227593
        }, 
        {
            "<Catalano.Statistics.Kernels.SquaredSinc: double Function(java.lang.Object,java.lang.Object)>": 0.3686181437227593
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: void <init>(net.imglib2.img.NativeImg)>": [
        {
            "<Catalano.Imaging.Filters.HistogramShrink: void <init>()>": 0.14476650603589652
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: void <init>()>": 0.14476650603589652
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.SobelEdgeDetector: void <init>()>": 0.13442290969427412
        }, 
        {
            "<boofcv.gui.tracker.TrackerObjectQuadPanel: void enterSelectMode()>": 0.13442290969427412
        }, 
        {
            "<org.jbox2d.dynamics.Filter: void <init>()>": 0.1329726164507926
        }
    ], 
    "<net.imglib2.type.logic.BitType: int getInteger()>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.4689893116610338
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.4555556866843369
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean overlap(int,int)>": 0.42491607542468124
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean isSubset(int,int)>": 0.42491607542468124
        }, 
        {
            "<boofcv.abst.fiducial.CalibrationFiducialDetector: int totalFound()>": 0.416875077038553
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform: void setTranslation(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.468536325802491
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.45644740722555815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4549590327161815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4514297284100339
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.44882531202406517
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void min(net.imglib2.Positionable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: void localize(long[])>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.3097525972635921
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.29950922632498833
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2735405710315715
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2735405710315715
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.27190054894788573
        }
    ], 
    "<net.imglib2.type.numeric.integer.LongType: long get()>": [
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.29532163742690054
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.27731152179204405
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.2680173780879102
        }, 
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: long getTrackId(int)>": 0.2601275618917341
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.25930159226645905
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsPeriodic: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess: void bck(int)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMax(int,int)>": 0.41139664939761134
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMin(int,int)>": 0.41139664939761134
        }, 
        {
            "<boofcv.struct.learning.ClassificationHistogram: void increment(int,int)>": 0.40990473364688557
        }, 
        {
            "<boofcv.struct.image.GrayS32: void unsafe_set(int,int,int)>": 0.38093861305496907
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void set(int,int,int)>": 0.37902036059532807
        }
    ], 
    "<net.imglib2.type.numeric.real.AbstractRealType: void inc()>": [
        {
            "<Catalano.Statistics.Kernels.ThinPlateSpline: void <init>(double)>": 0.3305560073711855
        }, 
        {
            "<Catalano.Statistics.Distributions.LognormalDistribution: void <init>()>": 0.3221691006090672
        }, 
        {
            "<Catalano.Statistics.Distributions.LognormalDistribution: void <init>(double)>": 0.3208190892079149
        }, 
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double Entropy()>": 0.3196478031370171
        }, 
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double DistributionFunction(double)>": 0.31731769182164404
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: net.imglib2.type.numeric.integer.UnsignedIntType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedIterableInterval: net.imglib2.converter.readwrite.WriteConvertedCursor localizingCursor()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.051639777949432225
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.05
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04955569438322958
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04902903378454601
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04853626716970755
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: void setPosition(int,int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4865771842816353
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.47021067859184285
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.47021067859184285
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.4633824583783914
        }, 
        {
            "<org.jbox2d.common.BufferUtils: java.lang.Object[] reallocateBuffer(java.lang.Class,java.lang.Object[],int,int,int,boolean)>": 0.45895091430243296
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.ShortArray: void setValue(int,short)>": [
        {
            "<boofcv.alg.distort.impl.ImplImageDistort_I16: void assign(int,float)>": 0.32080690859671385
        }, 
        {
            "<boofcv.alg.distort.impl.ImplImageDistortCache_I16: void assign(int,float)>": 0.32080690859671385
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_U16: void set(int,float)>": 0.32080690859671385
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_S16: void set(int,float)>": 0.32080690859671385
        }, 
        {
            "<boofcv.struct.image.InterleavedI16: void setBand(int,int,int,short)>": 0.3139084167639316
        }
    ], 
    "<net.imglib2.util.Util: double log2(double)>": [
        {
            "<Catalano.Math.Tools: double Log(double,double)>": 0.8569669752001662
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.7292192400822556
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.7152655592189475
        }, 
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double Median()>": 0.6906883084419864
        }, 
        {
            "<Catalano.Math.Approximation: double Lowprecision_Pow(double,double)>": 0.6831099771593143
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: void setPosition(int[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS64)>": 0.44889338435450676
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS32,boofcv.struct.image.InterleavedS64)>": 0.4132829780629394
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.3869177292274659
        }, 
        {
            "<boofcv.misc.BoofMiscOps: int countNotZero(int[],int)>": 0.38267047448121627
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.3679776442021223
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void <init>(net.imglib2.img.basictypeaccess.FloatAccess)>": [
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void clear()>": 0.21520506251499538
        }, 
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.19540834646029157
        }, 
        {
            "<com.flowpowered.react.engine.ContactManifold: void clear()>": 0.1940312983034716
        }, 
        {
            "<Catalano.Imaging.Filters.Erosion: void <init>(int)>": 0.19207937635580083
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Erosion: void <init>(int)>": 0.19207937635580083
        }
    ], 
    "<net.imglib2.type.logic.BoolType: void and(net.imglib2.type.logic.BoolType)>": [
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.2956572448217507
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.29421560826684073
        }, 
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.28831399045930317
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.28831399045930317
        }, 
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: boolean process(boofcv.struct.image.ImageBase)>": 0.2712573740901436
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: int compareTo(net.imglib2.type.numeric.integer.AbstractIntegerType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.27853790090102365
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.2448691276343342
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMaximum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.18681897545012485
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMinimum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.18681897545012485
        }, 
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(Catalano.Imaging.Corners.FeaturePoint)>": 0.18467115424563557
        }
    ], 
    "<net.imglib2.view.RandomAccessibleIntervalCursor: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F32: float unsafe_getF(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.segmentation.slic.SegmentSlic_F32: float getIntensity(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_zero(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_unsafe(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float convolveSparse(boofcv.struct.image.GrayF32,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.transform.integer.permutation.SingleDimensionPermutationTransform: void <init>(int[],int,int,int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.5192562222862325
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.5020901182825318
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.5020901182825318
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.5020901182825318
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(int[],int,int,int[],int,int,int,int)>": 0.493387380245608
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,int[])>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparitySparseScoreSadRect_S16: void <init>(int,int,int,int)>": 0.3950142737868755
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparitySparseScoreSadRect_U8: void <init>(int,int,int,int)>": 0.3950142737868755
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int,int)>": 0.3697130601479975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.36609304571965384
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.36609304571965384
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: int compareTo(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.27853790090102365
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.2448691276343342
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMaximum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.18681897545012485
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMinimum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.18681897545012485
        }, 
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(Catalano.Imaging.Corners.FeaturePoint)>": 0.18467115424563557
        }
    ], 
    "<net.imglib2.iterator.IntervalIterator: void dimensions(long[])>": [
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.38166187337735
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.3360932364854249
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.32399332742693354
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.304729691515267
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS8,boofcv.struct.image.GrayS64)>": 0.29599130104844756
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: void move(net.imglib2.Localizable)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09718671256528
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.09174598761193291
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.08996469021204838
        }, 
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.08861469461982084
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.08838834764831845
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: void move(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4156928440167355
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4019245761509461
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3954946375509902
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.3884930083314896
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.38609372394383323
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: void localize(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4062358405101728
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3988203056672238
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.3948666794833233
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.3937974704663389
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3926577917534483
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void move(int[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.4923852077468898
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.4822494513791665
        }, 
        {
            "<Catalano.Math.Matrix: int[] Multiply(int[],int[][])>": 0.4717779365602071
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(int,int[])>": 0.4449595332049743
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setRGB(int,int[])>": 0.44425236507564736
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: boolean valueEquals(java.lang.Object)>": [
        {
            "<org.box2d.proto.Box2D$PbVec2: boolean isInitialized()>": 0.3425429677192279
        }, 
        {
            "<org.box2d.proto.Box2D$PbFilter: boolean isInitialized()>": 0.3387846873545095
        }, 
        {
            "<org.box2d.proto.Box2D$PbFixture: boolean isInitialized()>": 0.33300224971496634
        }, 
        {
            "<org.jbox2d.particle.ParticleColor: boolean isZero()>": 0.31992602143697296
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: void cleanupMaxima(Catalano.Imaging.FastBitmap,Catalano.Imaging.FastBitmap,long[])>": 0.31860859970249567
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: void move(long[])>": [
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.3954477631169342
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.39250638308359037
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3860779690778199
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayI8,boofcv.struct.image.GrayI8)>": 0.3852975734127533
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.3852975734127533
        }
    ], 
    "<net.imglib2.display.projector.sampler.SelectiveSampler: void jumpFwd(long)>": [
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.3459979992145379
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.3389792284760776
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3309263573515891
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.3295466603441929
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.32699348333161893
        }
    ], 
    "<net.imglib2.view.TransformBuilder: net.imglib2.RandomAccessible wrapGenericTransform(net.imglib2.RandomAccessible,net.imglib2.transform.Transform)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05773502691896257
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.05590169943749474
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.055404950656552925
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05481612620668933
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.054265196382778706
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsPeriodic: void fwd(int)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.3343431182394596
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.27224101612677404
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.2668171570642611
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.2250233768733313
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.22348660622074534
        }
    ], 
    "<net.imglib2.img.list.ListImg: java.lang.Object get(int)>": [
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: java.lang.Object getUserData(int)>": 0.3508771929824561
        }, 
        {
            "<boofcv.gui.SelectAlgorithmAndInputPanel: java.lang.Object getAlgorithmCookie(int)>": 0.27730358516904446
        }, 
        {
            "<Catalano.Math.Geometry.ConvexHullDefects: Catalano.Math.Geometry.ConvexityDefect ExtractDefect(java.util.ArrayList,int,int)>": 0.255793035891208
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2535623089962512
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.24257833769207987
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: void apply(long[],long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5771959421139279
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.5513456667053207
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5505958194345026
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5500649716571783
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5430410845044971
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: void mul(float)>": [
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float ArcTan2(float,float)>": 0.344721548525955
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.29549183940461815
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.28976459873177907
        }, 
        {
            "<Catalano.Core.DoublePoint: void <init>(float,float)>": 0.2793624454344339
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float Sqrt(float)>": 0.2604340321685027
        }
    ], 
    "<net.imglib2.img.list.ListLocalizingCursor: void fwd()>": [
        {
            "<boofcv.alg.misc.ImageStatistics: long max(long[],int,int,int,int)>": 0.3229888531458815
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long min(long[],int,int,int,int)>": 0.3229888531458815
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(long[],int,int,long[],int,int,int,int)>": 0.3171857043616487
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(int[],int,int,int[],int,int,int,int)>": 0.31714125834331053
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(long[],int,int,double,long,long,long[],int,int,int,int)>": 0.3168727557939521
        }
    ], 
    "<net.imglib2.KDTree$KDTreeCursor: void localize(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.util.BenchmarkHelper: long median(java.util.ArrayList)>": [
        {
            "<Catalano.Imaging.Texture.LawsTextureEnergy: long getTextureEnergyMap(Catalano.Core.IntPoint,int,int)>": 0.3088464378213962
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.30743484923038683
        }, 
        {
            "<Catalano.Imaging.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.30743484923038683
        }, 
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.3038516708541745
        }, 
        {
            "<Catalano.Math.Geometry.KCurvature: java.util.ArrayList FindPeaks(java.util.ArrayList)>": 0.3019223259015562
        }
    ], 
    "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree copy()>": [
        {
            "<boofcv.struct.feature.TupleDesc_F64: boofcv.struct.feature.TupleDesc_F64 copy()>": 0.2927347266334068
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.24619024569969497
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.24619024569969497
        }, 
        {
            "<boofcv.abst.geo.optimization.ModelCodecSwapData: void encode(org.ejml.data.DenseMatrix64F,double[])>": 0.2317217911083766
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: void ensureCapacity(int)>": 0.22800274483865704
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.ExtendedRandomAccessibleInterval extendPeriodic(net.imglib2.RandomAccessibleInterval)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.10813939077487976
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.10010346614252381
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.09899201058442432
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.0956296065296812
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void <init>(boofcv.demonstrations.tracker.CirculantVisualizationPanel$Listener)>": 0.0933277359899136
        }
    ], 
    "<net.imglib2.view.composite.CompositeIntervalView: void <init>(net.imglib2.RandomAccessibleInterval,net.imglib2.view.composite.CompositeFactory)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05270462766947299
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.05103103630798288
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.050577568786757836
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05004004806408974
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04953712024382607
        }
    ], 
    "<net.imglib2.util.Intervals: long numElements(net.imglib2.Dimensions)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.30450559949242567
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.28546003596698083
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.27921666078933
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.2547049988458357
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.2508575281537883
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: void move(int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.46377009540868036
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.45182869931320724
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.43679167157263643
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.43418155429480043
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.42872927172891595
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: void setReal(double)>": [
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitSegment: void <init>(double,double,int)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitLoop: void <init>(double,double,int)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationAverageGradientIntegral: void <init>(double,int,double,int,double,java.lang.Class)>": 0.34537863735525043
        }, 
        {
            "<boofcv.factory.feature.orientation.FactoryOrientationAlgs: boofcv.abst.feature.orientation.OrientationIntegral image_ii(double,int,double,int,double,java.lang.Class)>": 0.3341995859152048
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_S32: void <init>(double,int,double,boolean)>": 0.324532417269161
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: long distributionCount()>": [
        {
            "<Catalano.Math.Random: long nextLong()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.25356909013876383
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.24518333341367335
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.24257833769207987
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.23024252222261737
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F32: float unsafe_getF(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.segmentation.slic.SegmentSlic_F32: float getIntensity(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_zero(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_unsafe(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float convolveSparse(boofcv.struct.image.GrayF32,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedIterableInterval: net.imglib2.converter.readwrite.WriteConvertedCursor cursor()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.051639777949432225
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.05
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04955569438322958
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04902903378454601
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04853626716970755
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgFactory: net.imglib2.img.NativeImg create(long[],net.imglib2.type.NativeType)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18468978709403533
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18468978709403533
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.17073302537381008
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.13283668434178905
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.13283668434178905
        }
    ], 
    "<net.imglib2.view.composite.CompositeIntervalView: void max(long[])>": [
        {
            "<boofcv.alg.misc.PixelMath: void abs(long[],int,int,long[],int,int,int,int)>": 0.25846675897786575
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.25380825089202996
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.25163951777832444
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.25163951777832444
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.25163951777832444
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: void fwd(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36016035441676975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.35455846459436624
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.35455846459436624
        }
    ], 
    "<net.imglib2.type.logic.BitType: int compareTo(java.lang.Object)>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.46682521286027245
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.44649442101052905
        }, 
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.43104493873733585
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean overlap(int,int)>": 0.41215908397715584
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean isSubset(int,int)>": 0.41215908397715584
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void setReal(double)>": [
        {
            "<boofcv.abst.feature.describe.WrapDescribeBriefSo: boolean process(double,double,double,double,boofcv.struct.feature.TupleDesc_B)>": 0.3938932030004507
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerTwoPassKltPyramid: void setHint(double,double,boofcv.abst.feature.tracker.PointTrack)>": 0.34471455582844185
        }, 
        {
            "<Catalano.Core.FloatPoint: void <init>(double,double)>": 0.2567234320939922
        }, 
        {
            "<boofcv.alg.distort.TransformThenPixel_F32: boofcv.struct.distort.PointTransform_F32 set(double,double,double,double,double)>": 0.252831519888401
        }, 
        {
            "<boofcv.alg.distort.NormalizedToPixel_F32: boofcv.alg.distort.NormalizedToPixel_F32 set(double,double,double,double,double)>": 0.25216654846468495
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void quaternionPower(double[],double,double[])>": [
        {
            "<Catalano.Imaging.Tools.MaitraMoments: double[] Compute(Catalano.Imaging.FastBitmap)>": 0.4584278664947505
        }, 
        {
            "<net.smert.jreactphysics3d.engine.Timer: void nextStep()>": 0.4372800703292597
        }, 
        {
            "<Catalano.Math.Functions.Gabor: double Function1D(double,double,double,double,double,double,double)>": 0.4351121408451557
        }, 
        {
            "<net.coobird.thumbnailator.filters.Rotation$1: double[] calculatePosition(double,double,double)>": 0.43078494258866185
        }, 
        {
            "<Catalano.Math.Distances.Distance: double BrayCurtis(double,double,double,double)>": 0.4301804775999883
        }
    ], 
    "<net.imglib2.view.TransformRandomAccess: void move(int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4626877196288954
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4588597647362364
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4541986699492962
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.44898960499943297
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.44305596868103353
        }
    ], 
    "<net.imglib2.img.cell.CellCursor: void <init>(net.imglib2.img.cell.CellCursor)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void drawPadding()>": 0.24951260131330785
        }, 
        {
            "<org.box2d.proto.Box2D$PbFilter: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.23985031847186736
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.23762579536557493
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.23740784478485816
        }, 
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2373506513267161
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: long min(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3508771929824561
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3142423944400126
        }
    ], 
    "<net.imglib2.transform.integer.shear.ShearTransform: void apply(long[],long[])>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.424748745501553
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4186487525171029
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.41312350899862654
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4120602076111697
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4050327819956414
        }
    ], 
    "<net.imglib2.RealPointSampleList$RealPointSampleListCursor: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: void updateContainer(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.3187477037083238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.22574829559349857
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.22057752193984925
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void <init>(net.imglib2.img.NativeImg)>": [
        {
            "<boofcv.struct.feature.TupleDesc_I8: void <init>(int)>": 0.24936823005472716
        }, 
        {
            "<boofcv.alg.filter.binary.impl.BinaryThinning$Mask: void <init>(boofcv.alg.filter.binary.impl.BinaryThinning,byte[])>": 0.2005071688225957
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_I8: void set(byte[])>": 0.19879494824004765
        }, 
        {
            "<boofcv.io.video.VideoMjpegCodec: byte[] convertToByteArray(java.io.InputStream)>": 0.1869323231144853
        }, 
        {
            "<boofcv.struct.image.GrayI8: void _setData(java.lang.Object)>": 0.16308561962945087
        }
    ], 
    "<net.imglib2.view.IterableRandomAccessibleInterval: net.imglib2.FlatIterationOrder iterationOrder()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06262242910851494
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.06063390625908324
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0600951065567304
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05945643676931177
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.05885886947467735
        }
    ], 
    "<net.imglib2.histogram.Integer1dBinMapper: long map(java.lang.Object)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3176149100394111
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean equals(java.lang.Object)>": 0.3038436080965995
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(org.jbox2d.particle.ParticleSystem$Proxy)>": 0.3015813821339418
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(java.lang.Object)>": 0.2853287404628232
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2724841715476572
        }
    ], 
    "<net.imglib2.view.ExtendedRealRandomAccessibleRealInterval: net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess realRandomAccess()>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.15555496974535976
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.15555496974535976
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.15555496974535976
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.15343332992168357
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.15069361627678599
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: void <init>(net.imglib2.img.basictypeaccess.DoubleAccess)>": [
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void clear()>": 0.21520506251499538
        }, 
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.19540834646029157
        }, 
        {
            "<com.flowpowered.react.engine.ContactManifold: void clear()>": 0.1940312983034716
        }, 
        {
            "<Catalano.Imaging.Filters.Erosion: void <init>(int)>": 0.19207937635580083
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Erosion: void <init>(int)>": 0.19207937635580083
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: int compareTo(net.imglib2.type.numeric.integer.Unsigned128BitType)>": [
        {
            "<org.box2d.proto.Box2D$PbJoint: int getSerializedSize()>": 0.33218158064849473
        }, 
        {
            "<org.box2d.proto.Box2D$PbBody: int getSerializedSize()>": 0.33201728439435657
        }, 
        {
            "<Catalano.Imaging.Texture.LawsTextureEnergy: long getTextureEnergyMap(Catalano.Core.IntPoint,int,int)>": 0.3318827337733906
        }, 
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.33110917457752603
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.3299634736989447
        }
    ], 
    "<net.imglib2.view.composite.AbstractNumericComposite$1: net.imglib2.type.numeric.NumericType next()>": [
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.14388700930945444
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawPolygon(java.util.List,boolean,java.awt.Graphics2D)>": 0.14229555008576764
        }, 
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.14156086612803942
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.14156086612803942
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.14156086612803942
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.LanczosInterpolator: void <init>(net.imglib2.RandomAccessible,int,boolean,double,double)>": [
        {
            "<boofcv.alg.misc.ImageMiscOps: void addGaussian(boofcv.struct.image.GrayF64,java.util.Random,double,double,double)>": 0.3010622420142989
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillGaussian(boofcv.struct.image.GrayF64,java.util.Random,double,double,double,double)>": 0.30077252645900565
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(double[],int,int,double,double,double,double[],int,int,int,int)>": 0.2993471116576247
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply_A(double[],int,int,double,double,double,double[],int,int,int,int)>": 0.2993471116576247
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(double[],int,int,double,double,double,double[],int,int,int,int)>": 0.2993471116576247
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.IntArray: void setValue(int,int)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMax(int,int)>": 0.6761363636363636
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMin(int,int)>": 0.6761363636363636
        }, 
        {
            "<boofcv.struct.image.GrayS32: void unsafe_set(int,int,int)>": 0.5132158016095391
        }, 
        {
            "<Catalano.Imaging.Shapes.IntPolygon: void addPoint(int,int)>": 0.47279891623177767
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void setD(int,double)>": 0.4724931682974988
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: void move(long,int)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.35350928689744904
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.3489014444905407
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long[],int,int,int,int)>": 0.34586390507655385
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long[],int,int,int,int)>": 0.34586390507655385
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long[],int,int,int,int)>": 0.34586390507655385
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: void <init>(net.imglib2.type.numeric.RealType,boolean)>": [
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlockRelaxed: void <init>(boolean,boolean)>": 0.3438694806559756
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlockStrict: void <init>(boolean,boolean)>": 0.3438694806559756
        }, 
        {
            "<boofcv.abst.feature.associate.EnforceUniqueByScore$Describe2D: void <init>(boofcv.abst.feature.associate.AssociateDescription2D,boolean,boolean)>": 0.3144163788737706
        }, 
        {
            "<boofcv.abst.feature.associate.EnforceUniqueByScore$Describe: void <init>(boofcv.abst.feature.associate.AssociateDescription,boolean,boolean)>": 0.3144163788737706
        }, 
        {
            "<boofcv.alg.geo.calibration.Zhang99ParamAll: void <init>(boolean,int,boolean)>": 0.3144163788737706
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowingFactory: void <init>(int[])>": [
        {
            "<boofcv.struct.image.InterleavedS32: void _setData(java.lang.Object)>": 0.2288407051767995
        }, 
        {
            "<boofcv.struct.image.GrayS32: void _setData(java.lang.Object)>": 0.2288407051767995
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplSsdCorner_S16: void setImageShape(int,int)>": 0.22175716142595348
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplSsdCorner_S16: void <init>(int)>": 0.21808307573468005
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.2179210646017648
        }
    ], 
    "<net.imglib2.converter.Converters: net.imglib2.RandomAccessibleInterval argbChannels(net.imglib2.RandomAccessibleInterval,int[])>": [
        {
            "<boofcv.alg.geo.GeoTestingOps: java.util.List createList3_F64(int)>": 0.3433434277046319
        }, 
        {
            "<Catalano.Imaging.Shapes.IntPolygon: java.util.List getPoints()>": 0.3153414991993059
        }, 
        {
            "<boofcv.struct.feature.MatrixOfList: java.util.List createSingleList()>": 0.3016304297171285
        }, 
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.30011884854959203
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.30011884854959203
        }
    ], 
    "<net.imglib2.KDTreeNode: double getDoublePosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.6444652635187575
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.PyramidDiscreteSampleBlur: double getSigma(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.NoCacheScaleSpace: double getScale(int)>": 0.6383928571428571
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: void <init>(net.imglib2.view.SubsampleView)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.14139350784579072
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1402909787118255
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1402909787118255
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.13305171556861786
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1296713463813516
        }
    ], 
    "<net.imglib2.img.AbstractNativeImg: void <init>(long[],net.imglib2.util.Fraction)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2781777728039066
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.26672919597880884
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.23691831076778974
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.2315050965318633
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.23074797774344086
        }
    ], 
    "<net.imglib2.display.screenimage.awt.ShortAWTScreenImage: void <init>(net.imglib2.type.numeric.integer.ShortType,net.imglib2.img.basictypeaccess.array.ShortArray,long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.15729768613092662
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.15729768613092662
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1456513577327886
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.13908532168678328
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.12126492036826719
        }
    ], 
    "<net.imglib2.util.Util: double gLogInv(float,float)>": [
        {
            "<boofcv.abst.tracker.Sfot_to_TrackObjectQuad: void rectRotToQuad(boofcv.struct.RectangleRotate_F32,georegression.struct.shapes.Quadrilateral_F64)>": 0.409387405020014
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float ArcTan2(float,float)>": 0.4088031134960169
        }, 
        {
            "<Catalano.Math.Special: double LogSum(float,float)>": 0.40780746798762446
        }, 
        {
            "<Catalano.Imaging.Tools.ColorDifference: double DeltaCMC(float[],float[],float,float)>": 0.4001640641458363
        }, 
        {
            "<Catalano.Imaging.Tools.ColorDifference: double DeltaE(float[],float[])>": 0.3771800865868659
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform$InverseTranslationTransform: net.imglib2.transform.integer.TranslationTransform preConcatenate(net.imglib2.transform.integer.Translation)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3784998934489602
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3655313016367837
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.3652282566556999
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3647878342002778
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.3621053118897762
        }
    ], 
    "<net.imglib2.img.cell.CellImgFactory: net.imglib2.img.NativeImg createByteInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.20557172820160094
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.20557172820160094
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.19009418367404002
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.15968814578412494
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.15968814578412494
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: void setPosition(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4435034276190505
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.42970165235333685
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4213525746546586
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.4129318427911
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.41097647168782137
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned4BitType: net.imglib2.type.numeric.integer.Unsigned4BitType copy()>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.29646666006051237
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2813481737693112
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2746536328723424
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.26169226538148205
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.24790726582294037
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListRandomAccess: void setPosition(int,int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.3402076318202928
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3094549390395968
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.2954476455905036
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.2943843881811262
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.2895006945867048
        }
    ], 
    "<net.imglib2.position.transform.Round: void round(float[],long[])>": [
        {
            "<Catalano.Math.Tools: float Sum(float[])>": 0.47541841068846447
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchColor: void meanColor(float[],float[],float)>": 0.45272994374190334
        }, 
        {
            "<Catalano.Math.Matrix: float Max(float[])>": 0.4501330894282636
        }, 
        {
            "<Catalano.Math.Matrix: float Min(float[])>": 0.4501330894282636
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: double sumCoefficients(float[])>": 0.43468605505350555
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: void sub(net.imglib2.type.numeric.integer.UnsignedLongType)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2679887933858064
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2579115331531891
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.25069894227480943
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.23626500399272526
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.23595832499639566
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: void <init>(java.math.BigInteger)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.1902322447217932
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.1902322447217932
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.1902322447217932
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.1785747193665983
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.InterleavedS64,long,long,boofcv.struct.image.InterleavedS64)>": 0.17807659379700413
        }
    ], 
    "<net.imglib2.neighborsearch.KNearestNeighborSearchOnIterableRealInterval: double getSquareDistance(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.6444652635187575
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.PyramidDiscreteSampleBlur: double getSigma(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.NoCacheScaleSpace: double getScale(int)>": 0.6383928571428571
        }
    ], 
    "<net.imglib2.util.Fraction: void <init>(long,long)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.44358974358974357
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.3910367305852817
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3850920226529757
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3632573967350005
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void <init>(boofcv.struct.image.InterleavedS64,long)>": 0.3370908316326504
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: void move(int[])>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.24097661078051374
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2386672792747817
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS64)>": 0.2191559933993539
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.21841534365662235
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int[])>": 0.21686109627825123
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: long min(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3508771929824561
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3142423944400126
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform$InverseTranslationTransform: net.imglib2.transform.integer.TranslationTransform concatenate(net.imglib2.transform.integer.Translation)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3989597682318956
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3860896688503993
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.385529811064101
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.38534992502190535
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.38214393027774185
        }
    ], 
    "<net.imglib2.display.screenimage.awt.ArrayImgAWTScreenImage: void <init>(net.imglib2.img.array.ArrayImg)>": [
        {
            "<net.coobird.thumbnailator.util.BufferedImages: java.awt.image.BufferedImage copy(java.awt.image.BufferedImage,int)>": 0.2232159393907773
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: java.awt.image.BufferedImage renderLabeled(boofcv.struct.image.GrayS32,int[],java.awt.image.BufferedImage)>": 0.22280992097256103
        }, 
        {
            "<net.coobird.thumbnailator.builders.BufferedImageBuilder: java.awt.image.BufferedImage build()>": 0.22023976795348574
        }, 
        {
            "<boofcv.io.wrapper.DefaultMediaManager: java.awt.image.BufferedImage openImage(java.lang.String)>": 0.2196206628642451
        }, 
        {
            "<boofcv.demonstrations.segmentation.VisualizeImageSegmentationApp: void changeInput(java.lang.String,int)>": 0.2196180014833421
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: boolean isOutside(int,java.lang.Object)>": [
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isInlier(int)>": 0.30413615652403153
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isInlier(int)>": 0.30413615652403153
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: long getTrackId(int)>": 0.29854246627015507
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: long getTrackId(int)>": 0.29854246627015507
        }, 
        {
            "<org.dyn4j.sandbox.panels.FromFileNonConvexPolygonPanel: boolean isValidInput()>": 0.2955689626528622
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListRandomAccess: void setPosition(long[])>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.28289235789636913
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.28111194135243484
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.27668127281570487
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2713946814670964
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.2711623258722157
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: net.imglib2.concatenate.Concatenable concatenate(java.lang.Object)>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.38312538236910165
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.3827247980020191
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.37836890175867977
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3734610247612351
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.3717626060559015
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: boolean getComponentZero(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.6834580649234657
        }, 
        {
            "<org.jbox2d.collision.shapes.CircleShape: org.jbox2d.common.Vec2 getVertex(int)>": 0.6267124991771027
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.6186610555340056
        }, 
        {
            "<org.jbox2d.collision.Distance$DistanceProxy: org.jbox2d.common.Vec2 getVertex(int)>": 0.6186610555340056
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: org.jbox2d.collision.AABB getFatAABB(int)>": 0.6186610555340056
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolator3D: net.imglib2.type.numeric.NumericType get()>": [
        {
            "<boofcv.alg.geo.MultiViewOps: org.ejml.data.DenseMatrix64F inducedHomography12(boofcv.struct.geo.TrifocalTensor,georegression.struct.point.Vector3D_F64,org.ejml.data.DenseMatrix64F)>": 0.21271940002290549
        }, 
        {
            "<boofcv.alg.geo.MultiViewOps: org.ejml.data.DenseMatrix64F inducedHomography13(boofcv.struct.geo.TrifocalTensor,georegression.struct.point.Vector3D_F64,org.ejml.data.DenseMatrix64F)>": 0.21271940002290549
        }, 
        {
            "<boofcv.alg.geo.PerspectiveOps: georegression.struct.point.Point2D_F64 renderPixel(org.ejml.data.DenseMatrix64F,georegression.struct.point.Point3D_F64)>": 0.21109615182498018
        }, 
        {
            "<Catalano.Math.Decompositions.EigenvalueDecomposition: void tql2()>": 0.2080016321159994
        }, 
        {
            "<boofcv.alg.geo.f.FundamentalLinear7: void computeCoefficients(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F,int,int,int,double[],boolean)>": 0.20578856574737348
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: double getDoublePosition(int)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.3782432325354622
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F64: double unsafe_getD(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double convolveSparse(boofcv.struct.image.GrayF64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void setPosition(long,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.31325484913065393
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.31097891796791843
        }
    ], 
    "<net.imglib2.view.IterableRandomAccessibleInterval: java.lang.Object firstElement()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.21729641181045117
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.20772080762772444
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.20772080762772444
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.19776162986644208
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.19593389750705878
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: int hashCode()>": [
        {
            "<net.smert.jreactphysics3d.mathematics.Quaternion: int hashCode()>": 0.34354943606475613
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Matrix2x2: int hashCode()>": 0.34354943606475613
        }, 
        {
            "<com.flowpowered.react.math.Quaternion: int hashCode()>": 0.34354943606475613
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Vector3: int hashCode()>": 0.3430650084478694
        }, 
        {
            "<com.flowpowered.react.math.Vector4: int hashCode()>": 0.3419787331459631
        }
    ], 
    "<net.imglib2.iterator.LocalizingIntervalIterator: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: float getF(int)>": 0.5869727736761196
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_S64: float getF(int)>": 0.5869727736761196
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F32: void setOutside(int,int,float)>": 0.49163800764408094
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.49163800764408094
        }, 
        {
            "<boofcv.alg.weights.WeightPixelUniform_F32: float weight(int,int)>": 0.4868016044136483
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: void localize(int[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS32)>": 0.44889338435450676
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedS32)>": 0.4132829780629394
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void fill(boofcv.struct.convolve.Kernel2D_I32,int)>": 0.36661737439650505
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.3605775583000914
        }, 
        {
            "<Catalano.Math.Matrix: void Fill(int[],int)>": 0.35163589953845803
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolator3D: void fillWeights()>": [
        {
            "<boofcv.alg.geo.pose.Relinearlize: void multiplyQuadratic4(double,double,double,double,double,double,double,double,double[])>": 0.39849837019698464
        }, 
        {
            "<boofcv.alg.geo.MultiViewOps: org.ejml.data.DenseMatrix64F inducedHomography12(boofcv.struct.geo.TrifocalTensor,georegression.struct.point.Vector3D_F64,org.ejml.data.DenseMatrix64F)>": 0.38903423753938765
        }, 
        {
            "<boofcv.alg.geo.MultiViewOps: org.ejml.data.DenseMatrix64F inducedHomography13(boofcv.struct.geo.TrifocalTensor,georegression.struct.point.Vector3D_F64,org.ejml.data.DenseMatrix64F)>": 0.38903423753938765
        }, 
        {
            "<boofcv.alg.geo.f.FundamentalLinear7: void computeCoefficients(double,double,double,double,double,double,double[])>": 0.3768001243790786
        }, 
        {
            "<boofcv.alg.geo.f.FundamentalLinear7: void computeCoefficientsMinus(double,double,double,double,double,double,double[])>": 0.3768001243790786
        }
    ], 
    "<net.imglib2.display.projector.specialized.PlanarImgXYByteProjector: void map()>": [
        {
            "<boofcv.alg.misc.PixelMath: void multiplyU_A(byte[],int,int,double,byte[],int,int,int,int)>": 0.26788881794351976
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divideU_A(byte[],int,int,double,byte[],int,int,int,int)>": 0.26788881794351976
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_U8: double getDouble(int)>": 0.25651247358650053
        }, 
        {
            "<boofcv.alg.color.ColorRgb: void rgbToGray_Weighted(boofcv.struct.image.InterleavedU8,boofcv.struct.image.GrayU8)>": 0.2544592688325911
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayI8)>": 0.24831323042469497
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: void <init>(net.imglib2.img.basictypeaccess.DoubleAccess)>": [
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int indexOfPreviousCounterClockwiseEdge(int)>": 0.24145695239947135
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int indexOfNextCounterClockwiseEdge(int)>": 0.24145695239947135
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.EdgeEPA: int indexOfPreviousCounterClockwiseEdge(int)>": 0.2364638707711033
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.EdgeEPA: int indexOfNextCounterClockwiseEdge(int)>": 0.2364638707711033
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Median$Run: int CalcLines(int)>": 0.2364638707711033
        }
    ], 
    "<net.imglib2.view.MixedRandomAccess: void bck(int)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4051197200762658
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.39323104991529095
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.38906876344126007
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.384673593470778
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateMetrics(int)>": 0.3708097497186654
        }
    ], 
    "<net.imglib2.iterator.IntervalIterator: void localize(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.261249856532006
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.261249856532006
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.253107015919362
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2227779123353968
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.18799027714935554
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: void set(net.imglib2.type.volatiles.AbstractVolatileRealType)>": [
        {
            "<org.dyn4j.Reference: boolean equals(java.lang.Object)>": 0.1645913150908774
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.16317848796612636
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.16317848796612636
        }, 
        {
            "<boofcv.demonstrations.calibration.SquareGridPanel: void itemStateChanged(java.awt.event.ItemEvent)>": 0.1631115614133926
        }, 
        {
            "<boofcv.demonstrations.calibration.ChessboardPanel: void itemStateChanged(java.awt.event.ItemEvent)>": 0.1631115614133926
        }
    ], 
    "<net.imglib2.transform.integer.shear.InverseShearTransform: void apply(long[],long[])>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.424748745501553
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4186487525171029
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.41312350899862654
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4120602076111697
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4050327819956414
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: void bck(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36016035441676975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.35455846459436624
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.35455846459436624
        }
    ], 
    "<net.imglib2.KDTree$SamplerNode: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.position.transform.AbstractPositionableTransform: void localize(float[])>": [
        {
            "<boofcv.misc.BoofMiscOps: float[] convertTo_F32(double[],float[])>": 0.358743311928497
        }, 
        {
            "<boofcv.misc.BoofMiscOps: float[] convertArray(double[],float[])>": 0.358743311928497
        }, 
        {
            "<Catalano.Core.ArraysUtil: float[] toFloat(double[])>": 0.35651405549948584
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F32: boofcv.alg.distort.radtan.RadialTangential_F32 set(double[],double,double)>": 0.32777017215872434
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchColor: void savePeakColor(float[])>": 0.32669239129200284
        }
    ], 
    "<net.imglib2.type.AbstractNativeType: void decIndex(int)>": [
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.6241711271514602
        }, 
        {
            "<boofcv.abst.fiducial.calib.CalibrationDetectorSquareFiducialGrid: int getPointIndex(int,int)>": 0.5747801203619927
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$9: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5631673913280111
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: int getIndex(int,int,int)>": 0.5573780954063181
        }, 
        {
            "<boofcv.struct.image.ImageBase: int getIndex(int,int)>": 0.5485724542486418
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsPeriodic: void setPosition(net.imglib2.Localizable)>": [
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.2669414727982326
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2654638637333308
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.265002028748399
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.23102852950611008
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.2306308481529016
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: void localize(float[])>": [
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_S64: void getF(int,float[])>": 0.3170534406371518
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF32)>": 0.29919820583753465
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2939575399198539
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchColor: void meanColor(float[],float[],float)>": 0.2847020730349382
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$PL: void getF(int,float[])>": 0.28235008127888356
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: void bck(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36016035441676975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.35455846459436624
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.35455846459436624
        }
    ], 
    "<net.imglib2.neighborsearch.KNearestNeighborSearchOnKDTree: net.imglib2.Sampler getSampler(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.507951431150968
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.500192321953524
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.4851771862988099
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.4748176736264324
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.4686374391227377
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg unsignedBytes(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: int alpha(int)>": [
        {
            "<Catalano.Imaging.FastBitmap: int getAlpha(int)>": 0.5847491954558717
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getAlpha(int,int)>": 0.5513865950315384
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(int,int,int,int,int)>": 0.49260427231397136
        }, 
        {
            "<Catalano.Imaging.Tools.ImageStatistics: int Minimum(Catalano.Imaging.FastBitmap,int,int,int,int)>": 0.48271758996331793
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(int,int,int,int,int,int)>": 0.47629555425666703
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: boolean hasFullSourceMapping()>": [
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: int getNumUnknownViews()>": 0.4098710701914879
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: int[] makeFateTable()>": 0.3926233529791366
        }, 
        {
            "<org.dyn4j.collision.manifold.IndexedManifoldPointId: boolean equals(java.lang.Object)>": 0.35758109456307735
        }, 
        {
            "<org.dyn4j.dynamics.Capacity: boolean equals(java.lang.Object)>": 0.35555568934672116
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: double get(boofcv.struct.image.ImageInterleaved,int,int,int)>": 0.3486279164130395
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void intoBytes(long,long)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.21870695546634994
        }, 
        {
            "<org.dyn4j.geometry.Vector2: int hashCode()>": 0.20719339946736845
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.20501979245105795
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.Utils: long encodeFloatIntoInteger(float)>": 0.20383942012383324
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: long encodeFloatIntoInteger(float)>": 0.20383942012383324
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType duplicateTypeOnSameNativeImg()>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.18106196654630508
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.18106196654630508
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.18106196654630508
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.1787899772116862
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.17544683171128142
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowingFactory: net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowing create(net.imglib2.Interval)>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: void fill(boofcv.struct.convolve.Kernel2D_I32,int)>": 0.43793639727395905
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplSsdCorner_S16: void vertical(boofcv.struct.image.GrayF32)>": 0.38404404563119027
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.3837504303226142
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedF32,boofcv.struct.image.InterleavedS32)>": 0.37976333118953026
        }, 
        {
            "<boofcv.alg.filter.misc.ImplAverageDownSample2: void down(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.37656381783810694
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRealRandomAccessibleRealInterval: void <init>(net.imglib2.RealRandomAccessibleRealInterval,net.imglib2.converter.Converter,net.imglib2.type.Type)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04032389192727559
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03904344047215152
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.038696496074155144
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.03828524323948056
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03790045715961838
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.IntervalView translate(net.imglib2.RandomAccessibleInterval,long[])>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.27142095500505636
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2705650585884413
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2705650585884413
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.25292669957456615
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.25063064182540784
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsBorder: void setPosition(int,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2726470135400342
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2726470135400342
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2726470135400342
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(long[],int,int,double,long,long,long[],int,int,int,int)>": 0.2710179493471896
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply_A(long[],int,int,double,long,long,long[],int,int,int,int)>": 0.2710179493471896
        }
    ], 
    "<net.imglib2.type.logic.BitType: void not()>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.4629158470887735
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.4550787238305757
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean overlap(int,int)>": 0.4121010905081608
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean isSubset(int,int)>": 0.4121010905081608
        }, 
        {
            "<org.jbox2d.dynamics.Body: boolean isFixedRotation()>": 0.40582210824024734
        }
    ], 
    "<net.imglib2.img.ImgView: net.imglib2.Cursor cursor()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.024397501823713325
        }
    ], 
    "<net.imglib2.type.numeric.integer.ByteType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.10842661409823065
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.10132274924351498
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.10036934567095813
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.09785730607238811
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.09785730607238811
        }
    ], 
    "<net.imglib2.img.list.ListRandomAccess: void move(int,int)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMax(int,int)>": 0.4737634255217416
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMin(int,int)>": 0.4737634255217416
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve7(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.47000880915391674
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve5(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.4694034322917487
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve9(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.46918537989188125
        }
    ], 
    "<net.imglib2.view.IntervalView: long size()>": [
        {
            "<Catalano.Math.Random: long nextLong()>": 0.16907195642463727
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.14975441337651563
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.14971051210035308
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.1420695962108543
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.13621184222678112
        }
    ], 
    "<net.imglib2.KDTree: java.lang.String toString()>": [
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.5973140772067761
        }, 
        {
            "<boofcv.demonstrations.feature.disparity.VisualizeStereoDisparity: void main(java.lang.String[])>": 0.5692897792570653
        }, 
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareFiducial: void main(java.lang.String[])>": 0.5465643653770461
        }, 
        {
            "<org.jbox2d.common.Transform: java.lang.String toString()>": 0.5412038668024657
        }, 
        {
            "<boofcv.demonstrations.denoise.DenoiseAccuracyStudyApp: void main(java.lang.String[])>": 0.525028625438473
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: void incIndex(int)>": [
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.6241711271514602
        }, 
        {
            "<boofcv.abst.fiducial.calib.CalibrationDetectorSquareFiducialGrid: int getPointIndex(int,int)>": 0.5747801203619927
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$9: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5631673913280111
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: int getIndex(int,int,int)>": 0.5573780954063181
        }, 
        {
            "<boofcv.struct.image.ImageBase: int getIndex(int,int)>": 0.5485724542486418
        }
    ], 
    "<net.imglib2.view.SubsampleIntervalView: double realMax(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.49163800764408094
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.49163800764408094
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: double getOutside(int,int)>": 0.4868016044136483
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.47153771681976947
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.46449118080111146
        }
    ], 
    "<net.imglib2.PointSampleList$PointSampleListCursor: void localize(float[])>": [
        {
            "<boofcv.struct.feature.TupleDesc_F32: void set(float[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: void <init>(int,float[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void <init>(float[],int,int)>": 0.2540764877039817
        }, 
        {
            "<boofcv.alg.interpolate.array.PolynomialNeville_F32: void <init>(int,float[],float[],int)>": 0.25147436847440663
        }, 
        {
            "<Catalano.Imaging.Filters.ImagePyramids: void <init>()>": 0.22423504135338396
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NearestNeighborInterpolatorFactory: net.imglib2.RealRandomAccess create(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.15166887845560387
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.1263514767671512
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.1263514767671512
        }, 
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.11959585451399861
        }, 
        {
            "<net.coobird.thumbnailator.resizers.ProgressiveBilinearResizer: void <init>(java.util.Map)>": 0.11959585451399861
        }
    ], 
    "<net.imglib2.iterator.LocalizingIntervalIterator: void <init>(int[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.30639013741926985
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.30639013741926985
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2944374949732499
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2574816541550636
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.24269683589264446
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void setPosition(double,int)>": [
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationAverageGradientIntegral: void <init>(double,int,double,int,double,java.lang.Class)>": 0.4043042024541294
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.SelectRectSubpixel$F32_F32: void <init>(int,int,double)>": 0.3964462393048189
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_F32_U8: void <init>(int,int,double)>": 0.3964462393048189
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.SelectRectSubpixel$S32_F32: void <init>(int,int,double)>": 0.3964462393048189
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_S32_U8: void <init>(int,int,double)>": 0.3964462393048189
        }
    ], 
    "<net.imglib2.histogram.HistogramNd$Decrementer: void <init>(net.imglib2.histogram.HistogramNd,net.imglib2.histogram.HistogramNd$1)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05063696835418333
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04902903378454601
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04859335628264
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04807692307692309
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04759372565678686
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: void move(net.imglib2.Localizable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4586576688233276
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4574380177074554
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.44376647886264087
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.43900506758553226
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.432810729537663
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,int,int,short[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5811787841893516
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5795957554113238
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.574959397921157
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5628405374594679
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5608701810597032
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: void setPosition(net.imglib2.Localizable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4586576688233276
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4574380177074554
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.44376647886264087
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.43900506758553226
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.432810729537663
        }
    ], 
    "<net.imglib2.position.transform.Round: void round(net.imglib2.RealLocalizable,long[])>": [
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.23424635238503744
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.23323871153125036
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.23192054581464552
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: int hashCode()>": 0.22157883432467834
        }, 
        {
            "<org.dyn4j.geometry.Matrix22: int hashCode()>": 0.22110270830572348
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: boolean valueEquals(java.lang.Object)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: boolean equals(java.lang.Object)>": 0.30801325704654653
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isInlier(int)>": 0.2833541973218383
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isInlier(int)>": 0.2833541973218383
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int upperBound(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.2608842266614818
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int lowerBound(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.2608842266614818
        }
    ], 
    "<net.imglib2.img.array.ArrayImgFactory: net.imglib2.img.NativeImg createLongInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1686333664237103
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1686333664237103
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1559201193509509
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.15386142866645397
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.15386142866645397
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolatorARGB: void accumulate()>": [
        {
            "<Catalano.Imaging.Tools.QuadrilateralTransformation: Catalano.Imaging.FastBitmap ProcessImage(Catalano.Imaging.FastBitmap)>": 0.49981297125128415
        }, 
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: double interpolateAngle(int,int,int,double)>": 0.4613121095464467
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal11(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.45811196440413054
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve11(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.454619735184314
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal9(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.4521992575954717
        }
    ], 
    "<net.imglib2.util.Util: double[] createGaussianKernel1DDouble(double,boolean)>": [
        {
            "<Catalano.Statistics.Tools: double[] StandartDeviation(double[][],double[])>": 0.3947234698298816
        }, 
        {
            "<Catalano.Statistics.Kernels.BSpline: double Function(double[],double[])>": 0.38121426175422235
        }, 
        {
            "<Catalano.Statistics.Tools: double Inclination(double[],double[])>": 0.3796199439225589
        }, 
        {
            "<Catalano.Statistics.Kernels.Polynomial: double Function(double[],double[])>": 0.3779431163815219
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void scale(double,double[],int,boolean)>": 0.37697393155945125
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.LanczosInterpolatorFactory: net.imglib2.interpolation.randomaccess.LanczosInterpolator create(net.imglib2.RandomAccessible,net.imglib2.RealInterval)>": [
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_S32: void <init>(double,int,double,boolean)>": 0.24031630632476125
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_F32: void <init>(double,int,double,boolean)>": 0.24031630632476125
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_S16: void <init>(double,int,double,boolean)>": 0.24031630632476125
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitSegment: void <init>(double,double,int)>": 0.21864197922257703
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitLoop: void <init>(double,double,int)>": 0.21864197922257703
        }
    ], 
    "<net.imglib2.display.projector.sampler.SamplingProjector2D: void map()>": [
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.257126535329696
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.2548005883493016
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.2548005883493016
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.2548005883493016
        }, 
        {
            "<boofcv.struct.image.GrayS64: void set(int,int,long)>": 0.24472950660429213
        }
    ], 
    "<net.imglib2.iterator.LocalizingZeroMinIntervalIterator: void fwd()>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.32022721966405165
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.271256655200971
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.23862534587294382
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.23613008661743234
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.23613008661743234
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: double getImaginaryDouble()>": [
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.3239158125380203
        }, 
        {
            "<boofcv.abst.geo.fitting.DistanceFromModelResidual: double computeDistance(java.lang.Object)>": 0.31287079776504223
        }, 
        {
            "<boofcv.io.SimpleStringNumberReader: double getDouble()>": 0.3125
        }, 
        {
            "<Catalano.Statistics.Distributions.LaplaceDistribution: double Entropy()>": 0.3109020581105081
        }, 
        {
            "<Catalano.Math.Approximation: double Lowprecision_Pow(double,double)>": 0.3084858451322381
        }
    ], 
    "<net.imglib2.iterator.IntervalIterator: long getLongPosition(int)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.25412601416071645
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.24958603619655345
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.24345895777693383
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.23139997242864813
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.23139997242864813
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void mult(double[][],double[][],double[][])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4367016367274704
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4365951060357773
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.4355184779112239
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void removeContactPoint(int)>": 0.4339569990545226
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void freeNode(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.42742307409523345
        }
    ], 
    "<net.imglib2.position.transform.FloorOffset: void move(double,int)>": [
        {
            "<boofcv.abst.feature.tracker.PointTrack: void <init>(double,double,long)>": 0.27096812862251923
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.2635616215574088
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.24676570059507524
        }, 
        {
            "<Catalano.Imaging.Tools.ImageUtils: void Normalize(double[][],double,double)>": 0.24304195731760564
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.24090203710962943
        }
    ], 
    "<net.imglib2.img.planar.PlanarCursor: java.lang.String toString()>": [
        {
            "<org.dyn4j.sandbox.resources.Messages: java.lang.String getString(java.lang.String)>": 0.3100041420236116
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$2: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$3: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$5: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$4: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }
    ], 
    "<net.imglib2.type.label.BasePairCharType: int compareTo(java.lang.Object)>": [
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(org.jbox2d.particle.ParticleSystem$Proxy)>": 0.29446048637853317
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(java.lang.Object)>": 0.2917175477118731
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Vector2: int getMinAxis()>": 0.25891718919490864
        }, 
        {
            "<com.flowpowered.react.math.Vector2: int getMinAxis()>": 0.25891718919490864
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EPAAlgorithm$TriangleComparison: int compare(com.flowpowered.react.collision.narrowphase.EPA.TriangleEPA,com.flowpowered.react.collision.narrowphase.EPA.TriangleEPA)>": 0.25108851536462484
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: void mul(double)>": [
        {
            "<boofcv.alg.feature.describe.DescribeSiftCommon: void trilinearInterpolation(float,float,float,double,boofcv.struct.feature.TupleDesc_F64)>": 0.27117744761593504
        }, 
        {
            "<Catalano.Imaging.Filters.PoissonNoise: int Poisson(float)>": 0.2705595855120517
        }, 
        {
            "<Catalano.Math.Matrix: float NormF(float[][])>": 0.2649001324213526
        }, 
        {
            "<org.jbox2d.tests.math.SinCosTest: double accuracyTest(org.jbox2d.tests.math.SinCosTable,int)>": 0.26475738420538314
        }, 
        {
            "<Catalano.Imaging.Filters.PoissonNoise: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.26129585100311814
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.composite.CompositeView collapseNumeric(net.imglib2.RandomAccessible,int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.2702785332223212
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.26284665735196233
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.26284665735196233
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.26012883902950906
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.26012883902950906
        }
    ], 
    "<net.imglib2.type.numeric.real.AbstractRealType: int hashCode()>": [
        {
            "<org.dyn4j.geometry.Matrix22: int hashCode()>": 0.46636616386926194
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: int hashCode()>": 0.46492726344103963
        }, 
        {
            "<org.dyn4j.geometry.Vector3: int hashCode()>": 0.4637398001167234
        }, 
        {
            "<org.dyn4j.geometry.Vector2: int hashCode()>": 0.45206753240189984
        }, 
        {
            "<org.dyn4j.geometry.Mass: int hashCode()>": 0.4184056844269156
        }
    ], 
    "<net.imglib2.img.array.ArrayImgFactory: net.imglib2.img.NativeImg createFloatInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1686333664237103
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1686333664237103
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1559201193509509
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.15386142866645397
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.15386142866645397
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void setPosition(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: void <init>(net.imglib2.view.StackView$MoveAllSlicesRA)>": [
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.26564625748014464
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectBasicWta_S32_U8: void process(int,java.lang.Object)>": 0.2651863465477151
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: int getSerializedSize()>": 0.26436278880250863
        }, 
        {
            "<org.box2d.proto.Box2D$PbFilter: int getSerializedSize()>": 0.26420963222571925
        }, 
        {
            "<org.box2d.proto.Box2D$PbBody: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.26395791721775336
        }
    ], 
    "<net.imglib2.type.label.BasePairCharType: void <init>(char)>": [
        {
            "<org.jbox2d.testbed.tests.ApplyForce: void keyPressed(char,int)>": 0.23800590629368756
        }, 
        {
            "<org.jbox2d.testbed.tests.Car: void keyReleased(char,int)>": 0.2114688011964198
        }, 
        {
            "<org.jbox2d.testbed.framework.QueueItem: void <init>(org.jbox2d.testbed.framework.QueueItemType,char,int)>": 0.18186637176264292
        }, 
        {
            "<org.dyn4j.dynamics.WorldTest: void listeners()>": 0.17794658879405198
        }, 
        {
            "<boofcv.io.SimpleStringNumberReader: void <init>(char)>": 0.17397431797715712
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(java.util.ListIterator,java.util.ListIterator,int,java.util.Comparator)>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: int selectRightToLeft(int,int[])>": 0.37668053067943846
        }, 
        {
            "<boofcv.alg.shapes.polyline.FitLinesToContour: boolean sanityCheckCornerOrder(int,org.ddogleg.struct.GrowQueue_I32)>": 0.3745383667529825
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.3676659177766581
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.3674321207184993
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void process(int,java.lang.Object)>": 0.3654021332936842
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: int compareTo(java.lang.Object)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.2999617068337929
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.2834536488377925
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.21080816699466626
        }, 
        {
            "<Catalano.Math.Geometry.PointToProcess: int compareTo(java.lang.Object)>": 0.2045281220842736
        }, 
        {
            "<boofcv.abst.feature.detect.extract.NonMaxLimiter$LocalExtreme: int compareTo(java.lang.Object)>": 0.2045281220842736
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsBorder: void bck(int)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.27514708171999197
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: void setB(boofcv.struct.image.ImageBase,int,int,int,double)>": 0.2669989971603726
        }, 
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: int getNumUnknownViews()>": 0.2596542217052865
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: void setM(boofcv.struct.image.ImageBase,int,int,double[])>": 0.25447594472262897
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: double get(boofcv.struct.image.ImageInterleaved,int,int,int)>": 0.2532678369168408
        }
    ], 
    "<net.imglib2.img.cell.CellCursor: void fwd()>": [
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.26260749151700197
        }, 
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.25415505681621586
        }, 
        {
            "<boofcv.core.image.border.BorderIndex1D_Extend: int getIndex(int)>": 0.24214529704139862
        }, 
        {
            "<Catalano.Imaging.Filters.Erosion: void <init>(int)>": 0.24142257625779062
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Erosion: void <init>(int)>": 0.24142257625779062
        }
    ], 
    "<net.imglib2.img.cell.CellCursor: net.imglib2.img.cell.AbstractCell getCell()>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.13908716006604668
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.12971863041569273
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.12971863041569273
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.1244838243607278
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.12215681871998943
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: long max(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3508771929824561
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3142423944400126
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg complexDoubles(double[],long[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.17335128696373225
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.14500138301785087
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.14090915281241065
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.13847840230472064
        }, 
        {
            "<boofcv.alg.geo.f.FundamentalLinear7: void computeCoefficients(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F,double[])>": 0.1380120436418404
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.IntervalView permuteCoordinateInverse(net.imglib2.RandomAccessibleInterval,int[],int)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.3448839985732947
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateMetrics(int)>": 0.3385944958341436
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.3365795158557216
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.33029811744619136
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateMetrics(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.3297969251168611
        }
    ], 
    "<net.imglib2.util.Intervals: boolean contains(net.imglib2.Interval,net.imglib2.Localizable)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void addObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.4051671085984435
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3908473682064824
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3841183395048613
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.3796235044163066
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.37844517838376435
        }
    ], 
    "<net.imglib2.KDTreeNode: void localize(double[])>": [
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.41549793349128344
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumn(double[][],int)>": 0.3973144980183334
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRow(double[][],int)>": 0.39592283060630346
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int[])>": 0.39110786522669816
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRows(double[],int[])>": 0.39110786522669816
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: double getDoublePosition(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.6188643624249502
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5517168169858438
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5382297579524616
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.5137724358016377
        }, 
        {
            "<org.jbox2d.collision.Distance$DistanceProxy: org.jbox2d.common.Vec2 getVertex(int)>": 0.5137724358016377
        }
    ], 
    "<net.imglib2.converter.readwrite.RealDoubleSamplerConverter$RealConvertingDoubleAccess: void <init>(net.imglib2.Sampler,net.imglib2.converter.readwrite.RealDoubleSamplerConverter$1)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05063696835418333
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04902903378454601
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04859335628264
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04807692307692309
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04759372565678686
        }
    ], 
    "<net.imglib2.view.iteration.IterableTransformBuilder$Slice: net.imglib2.Cursor localizingCursor()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04879500364742665
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04724555912615341
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04682572978040922
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04632808229131882
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04586246160658393
        }
    ], 
    "<net.imglib2.converter.readwrite.ARGBChannelSamplerConverter: java.lang.Object convert(net.imglib2.Sampler)>": [
        {
            "<boofcv.core.image.FactoryGImageGray: boofcv.core.image.GImageGray create(java.lang.Class)>": 0.12832847014558646
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void startWorkerThread()>": 0.10312708398593502
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void startWorkerThread()>": 0.10312708398593502
        }, 
        {
            "<boofcv.gui.DepthVideoAppBase: void startWorkerThread()>": 0.10312708398593502
        }, 
        {
            "<org.dyn4j.samples.LinkTerrain: void <init>()>": 0.08965676973579312
        }
    ], 
    "<net.imglib2.img.cell.CellRandomAccess: void bck(int)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.33007892009085793
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.32132497154622885
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.30937458480294755
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2769954783800784
        }, 
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.2727573442979454
        }
    ], 
    "<net.imglib2.view.SlicingRandomAccess: void <init>(net.imglib2.RandomAccess,net.imglib2.transform.integer.Slicing)>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.39032562003232146
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.37565861731149397
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.PairManager: void shrinkMemory()>": 0.36917002317316994
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3673463043112416
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.PairManager: boolean removePair(int,int)>": 0.36672518623210926
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: double[] invert3x3(double,double,double,double,double,double,double,double,double)>": [
        {
            "<boofcv.alg.geo.f.FundamentalLinear7: void computeCoefficients(double,double,double,double,double,double,double[])>": 0.5087636063384613
        }, 
        {
            "<boofcv.alg.geo.f.FundamentalLinear7: void computeCoefficientsMinus(double,double,double,double,double,double,double[])>": 0.5087636063384613
        }, 
        {
            "<boofcv.alg.geo.RodriguesRotationJacobian: void process(double,double,double)>": 0.4941731505244131
        }, 
        {
            "<Catalano.Math.Decompositions.EigenvalueDecomposition: void cdiv(double,double,double,double)>": 0.48696725984954414
        }, 
        {
            "<Catalano.Imaging.Tools.HuMoments: double[] Compute(Catalano.Imaging.FastBitmap)>": 0.4654836007922443
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg ints(int[],long[])>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.16273621160603557
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.14702947288269252
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.14456567617355504
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.1420743506677539
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.1361035951395862
        }
    ], 
    "<net.imglib2.transform.integer.shear.AbstractShearTransform: void <init>(int,int,int)>": [
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(Catalano.Core.IntPoint,int,int,int,int)>": 0.5878815226466617
        }, 
        {
            "<Catalano.Imaging.Filters.Add: void <init>(int,int,int)>": 0.5760787534402211
        }, 
        {
            "<Catalano.Imaging.Filters.Subtract: void <init>(int,int,int)>": 0.5760787534402211
        }, 
        {
            "<org.dyn4j.collision.manifold.IndexedManifoldPointId: void <init>(int,int,int)>": 0.57103539923749
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.5679835547586991
        }
    ], 
    "<net.imglib2.converter.read.ConvertedIterableInterval: net.imglib2.type.Type getDestinationType()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.018184824186332698
        }
    ], 
    "<net.imglib2.iterator.OffsetableLocalizingIntervalIterator: void <init>(int[],int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.376249835445469
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.37212013194273585
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.3307701856388421
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.3307701856388421
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.3166333608866119
        }
    ], 
    "<net.imglib2.img.planar.PlanarPlaneSubsetCursor: int getIntPosition(int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.5004179938823186
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.5004179938823186
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.5004179938823186
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.SquaresIntoRegularClusters: int add(int,int)>": 0.46981719330749966
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: int block_zero(boofcv.struct.image.GrayS32,int,int,int,int)>": 0.46442390885844603
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible: net.imglib2.RandomAccess randomAccess()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06454972243679027
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0625
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06194461797903697
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.061286292230682514
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06067033396213444
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedIterableRandomAccessibleInterval: net.imglib2.converter.AbstractConvertedRandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.041885390829169554
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.040555355282690636
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04019497583984625
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.039767797685986116
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03936811118326167
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void getUpperBound(long,java.lang.Object)>": [
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<net.coobird.thumbnailator.resizers.ProgressiveBilinearResizer: void <init>(java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<net.coobird.thumbnailator.resizers.BicubicResizer: void <init>(java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<net.coobird.thumbnailator.resizers.BilinearResizer: void <init>(java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<boofcv.abst.geo.fitting.DistanceFromModelResidualN: void setModel(java.lang.Object)>": 0.21126595987653524
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: net.imglib2.type.numeric.ARGBType copy()>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void drawPadding()>": 0.28790164130958257
        }, 
        {
            "<org.box2d.proto.Box2D$PbFilter: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.2864452377815365
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.28641687352744544
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.28605736688346717
        }, 
        {
            "<org.box2d.proto.Box2D$PbBody: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.28055524256142533
        }
    ], 
    "<net.imglib2.display.projector.composite.CompositeXYRandomAccessibleProjector: boolean isComposite(int)>": [
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: boolean isViewKnown(int)>": 0.6383928571428571
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.5418768088102737
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4966616068166122
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplSsdCornerNaive: void <init>(int,int,int,boolean)>": 0.4961377433998866
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.4893146606557609
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: void decIndex(int)>": [
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int checkInverseUpper(boofcv.struct.wavelet.WlCoef,int,boofcv.core.image.border.BorderIndex1D,int)>": 0.44051341934100985
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int checkInverseLower(boofcv.struct.wavelet.WlCoef,int,boofcv.core.image.border.BorderIndex1D,int)>": 0.4400380907456539
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: boofcv.struct.image.ImageInterleaved subimage(int,int,int,int,boofcv.struct.image.ImageInterleaved)>": 0.4351555027507932
        }, 
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: int block_zero(boofcv.struct.image.GrayS32,int,int,int,int)>": 0.4338775344945867
        }, 
        {
            "<boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder: void vertical(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayU16,boofcv.struct.image.GrayI8)>": 0.4322058016648451
        }
    ], 
    "<net.imglib2.util.Intervals: boolean isEmpty(net.imglib2.Interval)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: int upperBound(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.29800163507296
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int lowerBound(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.29800163507296
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean equals(java.lang.Object)>": 0.2810400576995189
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.27757357763932455
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(java.lang.Object)>": 0.24761176141867372
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void quaternionFromR(double[][],double[])>": [
        {
            "<Catalano.Math.Geometry.QuadrilateralTransformationCalc: double[][] MultiplyMatrix(double[][],double[][])>": 0.854587594229316
        }, 
        {
            "<Catalano.Imaging.Filters.PeronaMalikAnisotropicDiffusion: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.7378572450570915
        }, 
        {
            "<Catalano.Math.Geometry.QuadrilateralTransformationCalc: double[][] AdjugateMatrix(double[][])>": 0.6543065918803327
        }, 
        {
            "<Catalano.Imaging.Tools.QuadrilateralTransformation: Catalano.Imaging.FastBitmap ProcessImage(Catalano.Imaging.FastBitmap)>": 0.6539258102012387
        }, 
        {
            "<Catalano.Math.Decompositions.EigenvalueDecomposition: void <init>(double[][])>": 0.6428395954882634
        }
    ], 
    "<net.imglib2.converter.RealLUTConverter: void setLUT(net.imglib2.display.ColorTable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04564354645876383
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.044194173824159216
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04380145943098717
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04333595283009603
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04290040456147775
        }
    ], 
    "<net.imglib2.util.ConstantUtils: net.imglib2.RandomAccessible constantRandomAccessible(java.lang.Object,int)>": [
        {
            "<boofcv.gui.SelectAlgorithmAndInputPanel: void access$100(boofcv.gui.SelectAlgorithmAndInputPanel,int,java.lang.String,java.lang.Object)>": 0.32262253309587385
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.32052392242162336
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.3180517104454311
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.3180517104454311
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.3126784287734
        }
    ], 
    "<net.imglib2.converter.read.ConvertedIterableInterval: net.imglib2.converter.read.ConvertedCursor cursor()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04794633014853841
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.046423834544262965
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04601130713546223
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04552231504557686
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04506479272965292
        }
    ], 
    "<net.imglib2.img.array.ArrayImgFactory: net.imglib2.img.array.ArrayImg createShortInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.16989915581702875
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.16989915581702875
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: double getMaxValue()>": [
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double Mean()>": 0.5087551332017118
        }, 
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double Entropy()>": 0.4951167150522183
        }, 
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double DistributionFunction(double)>": 0.45738161159959156
        }, 
        {
            "<Catalano.Statistics.Distributions.RayleighDistribution: double DistributionFunction(double)>": 0.4388734705755452
        }, 
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double Variance()>": 0.4030099989601111
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void setCol(int,double[],double[][])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5833524370753739
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5736385517066668
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5705387302639275
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ConstraintSolver: void solvePositionConstraints(net.smert.jreactphysics3d.engine.Island)>": 0.569374922816338
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ConstraintSolver: void solveVelocityConstraints(net.smert.jreactphysics3d.engine.Island)>": 0.569374922816338
        }
    ], 
    "<net.imglib2.img.sparse.DoubleNtree: void <init>(long[],long[],java.lang.Double)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2668001056849969
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2668001056849969
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2467353604592215
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.1793225683953813
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.1793225683953813
        }
    ], 
    "<net.imglib2.transform.integer.shear.AbstractShearTransform: void applyInverse(int[],int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.32924463565344336
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.32597160653636864
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.28637881766657897
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.28637881766657897
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int)>": 0.2727146477753761
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: void localize(double[])>": [
        {
            "<Catalano.Math.Decompositions.LUDecomposition: double[] getDoublePivot()>": 0.29462869871818015
        }, 
        {
            "<Catalano.Imaging.Tools.FlusserSukMoments: double[] Convert(java.util.ArrayList)>": 0.2928648003973313
        }, 
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.27911487134623586
        }, 
        {
            "<Catalano.Imaging.Filters.DisparityMap: double PearsonDistance(Catalano.Imaging.FastBitmap,Catalano.Imaging.FastBitmap)>": 0.27835595484908265
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF64)>": 0.2757826101461773
        }
    ], 
    "<net.imglib2.transform.integer.SequentializeTransform$1: void applyInverse(int[],int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.34381608450188594
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.3400885355425245
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.3018412667314224
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.3018412667314224
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.2886401704745511
        }
    ], 
    "<net.imglib2.transform.integer.shear.InverseShearTransform: void <init>(int,int,int,net.imglib2.transform.integer.shear.AbstractShearTransform)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.5500916396159242
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.5500916396159242
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.545166705119368
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.5391191227455855
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.5391191227455855
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: double length(double[])>": [
        {
            "<Catalano.Statistics.DescriptiveStatistics: double StandartDeviation(double[])>": 1.0
        }, 
        {
            "<Catalano.Statistics.Tools: double StandartDeviation(double[])>": 1.0
        }, 
        {
            "<Catalano.Statistics.Tools: double StandartDeviation(double[],double)>": 0.6646379209081776
        }, 
        {
            "<Catalano.Statistics.DescriptiveStatistics: double StandartDeviation(double[],double)>": 0.6646379209081776
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Euclidean(double[],double[])>": 0.6454056145762262
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.composite.CompositeView collapseReal(net.imglib2.RandomAccessible,int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.2702785332223212
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.26284665735196233
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.26284665735196233
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.26012883902950906
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.26012883902950906
        }
    ], 
    "<net.imglib2.type.numeric.real.DoubleType: void <init>(net.imglib2.img.NativeImg)>": [
        {
            "<Catalano.Imaging.Filters.HistogramShrink: void <init>()>": 0.14476650603589652
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: void <init>()>": 0.14476650603589652
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.SobelEdgeDetector: void <init>()>": 0.13442290969427412
        }, 
        {
            "<boofcv.gui.tracker.TrackerObjectQuadPanel: void enterSelectMode()>": 0.13442290969427412
        }, 
        {
            "<org.jbox2d.dynamics.Filter: void <init>()>": 0.1329726164507926
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F32: float unsafe_getF(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.segmentation.slic.SegmentSlic_F32: float getIntensity(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_zero(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_unsafe(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float convolveSparse(boofcv.struct.image.GrayF32,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.img.ImgView: net.imglib2.img.Img copy()>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.14557104891371556
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void addDecomposablePolygonAction()>": 0.14335821295871473
        }, 
        {
            "<org.dyn4j.Reference: boolean equals(java.lang.Object)>": 0.13933168739550794
        }, 
        {
            "<org.dyn4j.dynamics.WorldTest: void getUserData()>": 0.13738357306087734
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void getUserData()>": 0.13738357306087734
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: long get()>": [
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3333102648854247
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.31301080348315186
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.30718611022169495
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3022281605041228
        }, 
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: long getTrackId(int)>": 0.2935751419611517
        }
    ], 
    "<net.imglib2.view.composite.NumericComposite$Factory: net.imglib2.view.composite.NumericComposite create(net.imglib2.RandomAccess)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.19627301050036933
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.19627301050036933
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.19627301050036933
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.1934756877796046
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.19011274282837365
        }
    ], 
    "<net.imglib2.type.numeric.real.AbstractRealType: void sub(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawPrismaticJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.PrismaticJoint)>": 0.342783015976373
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawRopeJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.RopeJoint)>": 0.3425471189570898
        }, 
        {
            "<Catalano.Math.ComplexNumber: Catalano.Math.ComplexNumber Pow(Catalano.Math.ComplexNumber,double)>": 0.3405267680946604
        }, 
        {
            "<Catalano.Math.ComplexNumber: void Pow(double)>": 0.3352156507986024
        }, 
        {
            "<Catalano.Statistics.Distributions.GammaDistribution: double Entropy()>": 0.33215170322091153
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImgFactory: net.imglib2.img.NativeImg createIntInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.22221821173234435
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.22221821173234435
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.22106802320784072
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.18251408096129465
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.17685992130468772
        }
    ], 
    "<net.imglib2.view.MixedRandomAccess: void setPosition(int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.35454775759913654
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3434742762999504
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.3394735348535703
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.33527464013290154
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.3340683201572385
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: void move(int[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.1500387911598941
        }, 
        {
            "<Catalano.Imaging.Texture.LawsTextureEnergy: void <init>(int[],int[])>": 0.1500387911598941
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void <init>()>": 0.1500387911598941
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.14895594547948113
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.14895594547948113
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: void setPosition(long[])>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.24619762248663069
        }, 
        {
            "<boofcv.core.image.border.ImageBorder_IL_S64: void setGeneral(int,int,double[])>": 0.23939236765323715
        }, 
        {
            "<boofcv.core.image.border.ImageBorder_IL_S64: void getGeneral(int,int,double[])>": 0.23939236765323715
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.23695226731874186
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.21822407160401938
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolator: void accumulate()>": [
        {
            "<boofcv.alg.geo.f.FundamentalLinear7: void computeCoefficients(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F,int,int,int,double[],boolean)>": 0.15355514441553347
        }, 
        {
            "<boofcv.alg.scene.ClassifierKNearestNeighborsBow: int classify(boofcv.struct.image.ImageBase)>": 0.1441602215204531
        }, 
        {
            "<Catalano.Math.Decompositions.EigenvalueDecomposition: double[][] getD()>": 0.1300151150673206
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void complexInverse(double[],boolean)>": 0.12929048396051632
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_F64: void getOutside(int,int,double[])>": 0.1287407303163076
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: void setComponentMapping(int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5016452850811526
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.49358880469178634
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.4816319390020964
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.4777494390974596
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.47397489626157424
        }
    ], 
    "<net.imglib2.AbstractInterval: void min(net.imglib2.Positionable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5256091910568305
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.5090303794676198
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5085281685018156
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5018647418701996
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateMetrics(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.4949266645788068
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: double getRealDouble()>": [
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.3239158125380203
        }, 
        {
            "<boofcv.abst.geo.fitting.DistanceFromModelResidual: double computeDistance(java.lang.Object)>": 0.31287079776504223
        }, 
        {
            "<boofcv.io.SimpleStringNumberReader: double getDouble()>": 0.3125
        }, 
        {
            "<Catalano.Statistics.Distributions.LaplaceDistribution: double Entropy()>": 0.3109020581105081
        }, 
        {
            "<Catalano.Math.Approximation: double Lowprecision_Pow(double,double)>": 0.3084858451322381
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedIterableInterval: long size()>": [
        {
            "<Catalano.Math.Random: long nextLong()>": 0.26159727180913483
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.24327833503941312
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2357957291023048
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.23177318131741953
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2208502880385313
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,short[])>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.36609304571965384
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.36609304571965384
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36549264850998225
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.3595523916209714
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.3595523916209714
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg unsignedInts(int[],long[])>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.16273621160603557
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.14702947288269252
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.14456567617355504
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.1420743506677539
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.1361035951395862
        }
    ], 
    "<net.imglib2.position.transform.Floor: long floor(float)>": [
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.3046247132811093
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeTag(float,float)>": 0.30409782477056063
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.Utils: long encodeFloatIntoInteger(float)>": 0.2632878120156502
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: long encodeFloatIntoInteger(float)>": 0.2632878120156502
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.24190602435321212
        }
    ], 
    "<net.imglib2.converter.Converters: net.imglib2.converter.readwrite.WriteConvertedRandomAccessible argbChannel(net.imglib2.RandomAccessible,int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.2727845010818847
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.27105485062496204
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.27105485062496204
        }, 
        {
            "<boofcv.factory.feature.disparity.FactoryStereoDisparityAlgs: boofcv.alg.feature.disparity.DisparitySparseScoreSadRect scoreDisparitySparseSadRect_F32(int,int,int,int)>": 0.2664139111889144
        }, 
        {
            "<boofcv.factory.feature.disparity.FactoryStereoDisparityAlgs: boofcv.alg.feature.disparity.DisparitySparseScoreSadRect scoreDisparitySparseSadRect_U8(int,int,int,int)>": 0.2664139111889144
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.IntervalView permuteCoordinates(net.imglib2.RandomAccessibleInterval,int[])>": [
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.3953317153236638
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.37225620446704616
        }, 
        {
            "<org.jbox2d.common.BufferUtils: java.lang.Object[] reallocateBuffer(java.lang.Class,java.lang.Object[],int,int,int,boolean)>": 0.3634954690563075
        }, 
        {
            "<org.dyn4j.collision.broadphase.DynamicAABBTree: void validate(org.dyn4j.collision.broadphase.DynamicAABBTreeNode)>": 0.3379427182334623
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ConstraintSolver: void solvePositionConstraints(net.smert.jreactphysics3d.engine.Island)>": 0.3350000920498846
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: int compareTo(net.imglib2.type.numeric.integer.GenericShortType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.42020104153392573
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.37183342002070013
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.32943893241394046
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.32943893241394046
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.32943893241394046
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void <init>(java.lang.Iterable,java.util.List)>": [
        {
            "<boofcv.alg.fiducial.calib.squares.RegularClustersIntoGrids: void process(java.util.List)>": 0.2397746787332209
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationPlanarGridZhang99: int totalPoints(java.util.List)>": 0.23659019097738643
        }, 
        {
            "<Catalano.Imaging.Shapes.IntPolygon: void <init>(java.util.List)>": 0.23430351577269323
        }, 
        {
            "<boofcv.alg.geo.triangulate.ResidualsTriangulateSimple: void setObservations(java.util.List,java.util.List)>": 0.23238201446505297
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.CrossClustersIntoGrids: boofcv.alg.fiducial.calib.squares.SquareNode findSeedNode(java.util.List)>": 0.2295003088248823
        }
    ], 
    "<net.imglib2.AbstractRealInterval: void realMax(net.imglib2.RealPositionable)>": [
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.28987922798590576
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: double[] getDoublePivot()>": 0.28282253698356824
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumn(double[][],int)>": 0.2636968177673989
        }, 
        {
            "<Catalano.Math.Decompositions.EigenvalueDecomposition: double[][] getD()>": 0.2636739763109507
        }, 
        {
            "<Catalano.Imaging.Tools.FlusserSukMoments: double[] Convert(java.util.ArrayList)>": 0.2612131746674461
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListLocalizingCursor: void <init>(net.imglib2.img.list.AbstractLongListImg)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2801861103330717
        }, 
        {
            "<boofcv.core.image.impl.ConvertInterleavedToSingle: void average(boofcv.struct.image.InterleavedS64,boofcv.struct.image.GrayS64)>": 0.2579427698594624
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.24306161844879381
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2375873551849361
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.23531876261265858
        }
    ], 
    "<net.imglib2.view.SlicingRandomAccess: void fwd(int)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4677244719891344
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.4610420083573563
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.4486006127376103
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.4470640584702392
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4417621941718377
        }
    ], 
    "<net.imglib2.img.cell.CellRandomAccess: void fwd(int)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.35154762420654545
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.34194217523976306
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.33607422290968647
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2716680423539752
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void updateObjectIntegerAABB(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.broadphase.AABBInt)>": 0.26870438740912184
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: void move(long[])>": [
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.37530587795451154
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.35692701144330424
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(long[],int,int,int,int)>": 0.3470235121751342
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long min(long[],int,int,int,int)>": 0.3470235121751342
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fill(boofcv.struct.image.InterleavedS64,long[])>": 0.34322974434780074
        }
    ], 
    "<net.imglib2.img.cell.CellCursor: void jumpFwd(long)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.2848585779068641
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.2782844015452123
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.271645729798234
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2707972303722113
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.2693085507967216
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: net.imglib2.type.numeric.integer.UnsignedIntType createVariable()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05923488777590923
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.057353933467640436
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.05684427997196944
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05624015883323094
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.055674916760380555
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg argbs(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.view.SubsampleIntervalView: void dimensions(long[])>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.31096659430952167
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.3057382683596148
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2547835729863967
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.24629105240841243
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.24629105240841243
        }
    ], 
    "<net.imglib2.display.screenimage.awt.ArrayImgAWTScreenImage: long[] dimensions(net.imglib2.Dimensions)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.27794369028632787
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2674783269152191
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.23856877404808868
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2322352143515134
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.23156838761183193
        }
    ], 
    "<net.imglib2.type.numeric.real.AbstractRealType: void dec()>": [
        {
            "<Catalano.Statistics.Kernels.ThinPlateSpline: void <init>(double)>": 0.3305560073711855
        }, 
        {
            "<Catalano.Statistics.Distributions.LognormalDistribution: void <init>()>": 0.3221691006090672
        }, 
        {
            "<Catalano.Statistics.Distributions.LognormalDistribution: void <init>(double)>": 0.3208190892079149
        }, 
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double Entropy()>": 0.3196478031370171
        }, 
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double DistributionFunction(double)>": 0.31731769182164404
        }
    ], 
    "<net.imglib2.util.Binning: double[] centerValuesPerBin(int,double,double)>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverse(double[],boolean)>": 0.5110484414588894
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal11(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5063156901435272
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void complexInverse(double[],boolean)>": 0.5043549398751179
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal9(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5022327323083329
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve11(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5012457010383224
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: void <init>(net.imglib2.RandomAccessibleInterval[],net.imglib2.Interval)>": [
        {
            "<Catalano.Imaging.Filters.HysteresisThreshold: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.3228579873808914
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.3204707306722517
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.3204707306722517
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.31476819754244034
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.31476819754244034
        }
    ], 
    "<net.imglib2.img.sparse.NtreeCursor: void <init>(net.imglib2.img.sparse.NtreeImg)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.18623557695746504
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.17939421377532028
        }, 
        {
            "<boofcv.core.image.impl.ConvertInterleavedToSingle: void average(boofcv.struct.image.InterleavedS64,boofcv.struct.image.GrayS64)>": 0.17666147804150367
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.17279861278257674
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.17022104298616622
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorDoubleBoundary: void bck(int)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.24847682039867036
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.22102084816664566
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.21274495331780785
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.2092817624212339
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.20121002920124517
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void setPosition(int[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.4719341794334669
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.4699450453810455
        }, 
        {
            "<Catalano.Math.Matrix: int[] Multiply(int[],int[][])>": 0.4314130154354315
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getIndex(int[])>": 0.408389384708912
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.4083676853277743
        }
    ], 
    "<net.imglib2.img.AbstractImg: long dimension(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.4257710040857421
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.4257710040857421
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4083636416084332
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.4064976779875514
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.40226116240759324
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: void <init>(int)>": [
        {
            "<boofcv.struct.QueueCorner: void add(int,int)>": 0.3330616297605786
        }, 
        {
            "<boofcv.struct.image.GrayI16: void unsafe_set(int,int,int)>": 0.2753644357140094
        }, 
        {
            "<boofcv.struct.image.GrayI16: void set(int,int,int)>": 0.25994835944451034
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void boundImage(boofcv.struct.image.GrayS16,int,int)>": 0.25779068574293657
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void boundImage(boofcv.struct.image.GrayU16,int,int)>": 0.2547108001232964
        }
    ], 
    "<net.imglib2.util.Util: int[] getArrayFromValue(int,int)>": [
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 1.0
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumn(int[][],int)>": 0.6405572356159809
        }, 
        {
            "<Catalano.Math.Matrix: int[] getRow(int[][],int)>": 0.6240348205539915
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.5802082952203
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5601456862521956
        }
    ], 
    "<net.imglib2.util.Intervals: net.imglib2.FinalInterval translate(net.imglib2.Interval,long,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2709692448941334
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2709692448941334
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2709692448941334
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.26296277132375695
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.26233842375810024
        }
    ], 
    "<net.imglib2.img.ImgView: net.imglib2.Cursor localizingCursor(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.Joint,double)>": 0.1837833918678511
        }, 
        {
            "<boofcv.alg.filter.misc.AverageDownSampleOps: void down(boofcv.struct.image.ImageGray,int,boofcv.struct.image.ImageGray)>": 0.1650473124615462
        }, 
        {
            "<org.dyn4j.examples.Graphics2DRenderer: void render(java.awt.Graphics2D,org.dyn4j.geometry.Shape,double,java.awt.Color)>": 0.16260412140847472
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillShape(com.jogamp.opengl.GL2,org.dyn4j.geometry.Shape)>": 0.15898339425088207
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawShape(com.jogamp.opengl.GL2,org.dyn4j.geometry.Shape,boolean)>": 0.15014620195567696
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void realMin(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.KDTree: void <init>(net.imglib2.IterableRealInterval)>": [
        {
            "<boofcv.alg.shapes.polyline.FitLinesToContour: boolean linesIntoCorners(int,org.ddogleg.struct.GrowQueue_I32)>": 0.2859658138366083
        }, 
        {
            "<boofcv.alg.scene.ClassifierKNearestNeighborsBow: void setClassificationData(java.util.List,int)>": 0.2850988455627232
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.CrossClustersIntoGrids: void process(java.util.List)>": 0.28057872330163675
        }, 
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.2799052467768018
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.StereoDisparityWtoNaiveFive: void <init>(int,int,int,int)>": 0.2778689176594609
        }
    ], 
    "<net.imglib2.AbstractCursorInt: void localize(float[])>": [
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_IL_S16: void get_fast(float,float,float[])>": 0.477938428744226
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_IL_U16: void get_fast(float,float,float[])>": 0.477938428744226
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_IL_S32: void get_fast(float,float,float[])>": 0.477938428744226
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_IL_U8: void get_fast(float,float,float[])>": 0.477938428744226
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_S32: void getF(int,float[])>": 0.43381574966921665
        }
    ], 
    "<net.imglib2.img.array.ArrayImg: java.lang.Object update(java.lang.Object)>": [
        {
            "<boofcv.testing.CompareIdenticalFunctions: void compareResults(java.lang.Object,java.lang.Object[],java.lang.Object,java.lang.Object[])>": 0.38574626848774773
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.37520664845747764
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails: void checkForNull(java.lang.Object,java.lang.String)>": 0.3707883892803556
        }, 
        {
            "<boofcv.gui.SelectInputPanel: void setActiveAlgorithm(int,java.lang.String,java.lang.Object)>": 0.3634637060697815
        }, 
        {
            "<boofcv.struct.WrapArrayIntoList: java.lang.Object get(int)>": 0.3634637060697815
        }
    ], 
    "<net.imglib2.display.awt.SignedShortDataBuffer: short[] getData()>": [
        {
            "<boofcv.struct.image.GrayI16: void _setData(java.lang.Object)>": 0.20238095238095238
        }, 
        {
            "<boofcv.struct.image.InterleavedI16: void _setData(java.lang.Object)>": 0.20238095238095238
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_U16: void setImage(boofcv.struct.image.GrayU16)>": 0.15758958898849007
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_S16: void setImage(boofcv.struct.image.GrayS16)>": 0.15758958898849007
        }, 
        {
            "<boofcv.struct.image.InterleavedI16: short[] get(int,int,short[])>": 0.1308751446583492
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: void setPlane(int,java.lang.Object)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2820729771438355
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2820729771438355
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2820729771438355
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.2804798883454391
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.2804798883454391
        }
    ], 
    "<net.imglib2.util.ImgUtil: void copy(net.imglib2.img.Img,float[],int,int[])>": [
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.43194937076981743
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.43194937076981743
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.4045285667184208
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(int[],int,int,int[],int,int,int,int)>": 0.39492240746903456
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(int[],int,int,int[],int,int,int,int)>": 0.3940970615945107
        }
    ], 
    "<net.imglib2.view.SlicingRandomAccess: void setPosition(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.40017594066083384
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3861165865907148
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.38145686793610795
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.3730981722024062
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.37152139860614186
        }
    ], 
    "<net.imglib2.RealPointSampleList$RealPointSampleListCursor: boolean hasNext()>": [
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.6023849455289535
        }, 
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.5934959054221014
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.5928412662400641
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.5928412662400641
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.5928412662400641
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: void add(net.imglib2.type.numeric.integer.UnsignedShortType)>": [
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void process(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.3430430866943239
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(Catalano.Core.IntPoint,int,int,int,int)>": 0.34279574994035583
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getBlue(Catalano.Core.IntPoint)>": 0.336430021688703
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: boofcv.struct.image.ImageBase subimage(int,int,int,int,boofcv.struct.image.ImageBase)>": 0.3361673280624054
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMaximum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.33434687216512604
        }
    ], 
    "<net.imglib2.converter.readwrite.ARGBChannelSamplerConverter$ARGBChannelConvertingAccess: byte getValue(int)>": [
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.4551571338609724
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.447051510442092
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$7: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.44309733978690413
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$3: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.44309733978690413
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.44135367550311017
        }
    ], 
    "<net.imglib2.iterator.OffsetableIntervalIterator: void setMin(long[])>": [
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.2797341435574188
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2787264225147654
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.2780808033415065
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.27502649419240466
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.27248866196871957
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void quaternionFromAngleAxis(double[],double,double[])>": [
        {
            "<Catalano.Imaging.Tools.MaitraMoments: double[] Compute(Catalano.Imaging.FastBitmap)>": 0.4391394776247588
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftx020(double[],int)>": 0.4307109182970214
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxc020(double[],int)>": 0.42458527946178004
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxb020(double[],int)>": 0.42458527946178004
        }, 
        {
            "<net.smert.jreactphysics3d.engine.Timer: void nextStep()>": 0.4076442755586736
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: long getLongPosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.6444652635187575
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.5168876727488003
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.5115679070521639
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4966616068166122
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.4924576911988799
        }
    ], 
    "<net.imglib2.img.cell.CellLocalizingCursor: net.imglib2.img.cell.AbstractCell getCell()>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.13908716006604668
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.12971863041569273
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.12971863041569273
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.1244838243607278
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.12215681871998943
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void div(net.imglib2.type.numeric.integer.Unsigned128BitType)>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayI8)>": 0.23614791713289285
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2351449530630278
        }, 
        {
            "<boofcv.core.image.ConvertImage: boofcv.struct.image.GrayU8 convert(boofcv.struct.image.GrayS64,long,long,int,boofcv.struct.image.GrayU8)>": 0.22894787074994105
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedI8)>": 0.22462625618538337
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.22192002553328397
        }
    ], 
    "<net.imglib2.exception.IncompatibleTypeException: void <init>(java.lang.Object,java.lang.String)>": [
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendPrefix(java.lang.String,java.lang.String)>": 0.5896606211354707
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.5515990055857596
        }, 
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareFiducial: void main(java.lang.String[])>": 0.5001704236345635
        }, 
        {
            "<org.dyn4j.Version: void main(java.lang.String[])>": 0.49256274696430435
        }, 
        {
            "<boofcv.applet.AppletMediaManager: java.io.Reader openFile(java.lang.String)>": 0.4885951554513996
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: boolean valueEquals(net.imglib2.type.numeric.integer.Unsigned128BitType)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: boolean equals(java.lang.Object)>": 0.3001570825508291
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isInlier(int)>": 0.2750463907386353
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isInlier(int)>": 0.2750463907386353
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int upperBound(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.2735796295900646
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int lowerBound(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.2735796295900646
        }
    ], 
    "<net.imglib2.type.logic.BitType: boolean get()>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.5055643812173394
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.49347929998852663
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean overlap(int,int)>": 0.45569847433257893
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean isSubset(int,int)>": 0.45569847433257893
        }, 
        {
            "<org.jbox2d.dynamics.Body: boolean isFixedRotation()>": 0.4471603014398993
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void <init>(net.imglib2.img.NativeImg)>": [
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void clear()>": 0.22590872142596802
        }, 
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.20463950469600758
        }, 
        {
            "<Catalano.Imaging.Filters.Erosion: void <init>(int)>": 0.20084542878702014
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Erosion: void <init>(int)>": 0.20084542878702014
        }, 
        {
            "<Catalano.Imaging.Filters.Dilatation: void <init>(int)>": 0.20084542878702014
        }
    ], 
    "<net.imglib2.util.Intervals: int[] maxAsIntArray(net.imglib2.Interval)>": [
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.38228053212403357
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: int[] getPivot()>": 0.37818306648675876
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumn(int[][],int)>": 0.35562862883378354
        }, 
        {
            "<Catalano.Math.Matrix: int[] getRow(int[][],int)>": 0.3503182938712224
        }, 
        {
            "<Catalano.Imaging.Filters.IsoDataClassifier: int[] Histogram(Catalano.Imaging.FastBitmap)>": 0.32420169770228563
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned2BitType: void set(long)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.40911832686662347
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.37592130110689626
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.3379410913064502
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3227687268624061
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2937653174389967
        }
    ], 
    "<net.imglib2.type.AbstractBit64Type: long getBits()>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3211837711223471
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.3143296429400437
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3135417398002628
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.3130203092515954
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.28679184671060926
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: boolean includesLowerBounds(long[])>": [
        {
            "<org.dyn4j.dynamics.World: boolean isEmpty()>": 0.37106663236822124
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerTwoPassKltPyramid: void finishTracking()>": 0.34664191767371033
        }, 
        {
            "<org.dyn4j.collision.AbstractCollidable: boolean contains(org.dyn4j.geometry.Vector2)>": 0.34533510695395325
        }, 
        {
            "<boofcv.io.wrapper.images.LoadFileImageSequence: boolean hasNext()>": 0.33326026451734947
        }, 
        {
            "<boofcv.io.wrapper.images.JpegByteImageSequence: boolean hasNext()>": 0.33228722866412386
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: net.imglib2.util.Fraction getEntitiesPerPixel()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06900655593423542
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0668153104781061
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>()>": 0.0668153104781061
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06622158212347246
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.0655178022951199
        }
    ], 
    "<net.imglib2.interpolation.neighborsearch.NearestNeighborSearchInterpolatorFactory: net.imglib2.RealRandomAccess create(java.lang.Object,net.imglib2.RealInterval)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.09430493037581797
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.07827524784143293
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.07827524784143293
        }, 
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.07420145434341793
        }, 
        {
            "<net.coobird.thumbnailator.resizers.ProgressiveBilinearResizer: void <init>(java.util.Map)>": 0.07420145434341793
        }
    ], 
    "<net.imglib2.neighborsearch.RadiusNeighborSearchOnKDTree: void <init>(net.imglib2.KDTree)>": [
        {
            "<boofcv.alg.scene.ClassifierKNearestNeighborsBow: void setClassificationData(java.util.List,int)>": 0.27070545828594533
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.StereoDisparityWtoNaiveFive: void <init>(int,int,int,int)>": 0.2704062874378109
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int)>": 0.26788911426200923
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void <init>(boofcv.struct.image.InterleavedF64)>": 0.26637676945453187
        }, 
        {
            "<Catalano.Imaging.Tools.SpatialPyramidHistogram: double[] Compute(Catalano.Imaging.FastBitmap,Catalano.Imaging.Tools.IAggregateVectors)>": 0.26483393135462346
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: void fwd(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36016035441676975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.35455846459436624
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.35455846459436624
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgFactory: net.imglib2.img.NativeImg createCharInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.13257949307988665
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.13257949307988665
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.12277271921448075
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.12050140956603536
        }, 
        {
            "<boofcv.gui.StandardAlgConfigPanel: void <init>()>": 0.11572751247156893
        }
    ], 
    "<net.imglib2.util.Partition: void partitionSubList(java.util.ListIterator,java.util.ListIterator)>": [
        {
            "<boofcv.struct.image.ImageInterleaved: void setTo(boofcv.struct.image.ImageInterleaved)>": 0.33911646242518023
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.33131998756971354
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.33131998756971354
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.33131998756971354
        }, 
        {
            "<org.jbox2d.particle.StackQueue: void push(java.lang.Object)>": 0.3293216577258253
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: void <init>(net.imglib2.img.basictypeaccess.IntAccess)>": [
        {
            "<boofcv.gui.StereoVideoAppBase: void startWorkerThread()>": 0.08058229640253803
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void startWorkerThread()>": 0.08058229640253803
        }, 
        {
            "<boofcv.gui.DepthVideoAppBase: void startWorkerThread()>": 0.08058229640253803
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray: boofcv.core.image.GImageGray create(java.lang.Class)>": 0.07667979486648716
        }, 
        {
            "<org.jbox2d.testbed.tests.ContinuousTest: void <init>()>": 0.07576144084141581
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListRandomAccess: void setPosition(net.imglib2.Localizable)>": [
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.31663391548339703
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2888877107325679
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.28144334088785955
        }, 
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.26262776536717697
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.2548365526699478
        }
    ], 
    "<net.imglib2.RealPoint: void setPosition(long,int)>": [
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void setD(int,double)>": 0.36654472411578426
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMinimum(int,double)>": 0.36654472411578426
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMaximum(int,double)>": 0.36654472411578426
        }, 
        {
            "<Catalano.Imaging.Tools.ColorConverter: double[] RGBtoHunterLAB(int,int,int)>": 0.31333154551894804
        }, 
        {
            "<Catalano.Imaging.Tools.ColorConverter: double[] RGBtoLAB(int,int,int,double[])>": 0.30925353586688253
        }
    ], 
    "<net.imglib2.AbstractCursorInt: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_S16: float unsafe_getF(int,int)>": 0.4827121526332953
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_I32: float unsafe_getF(int,int)>": 0.4827121526332953
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_S8: float unsafe_getF(int,int)>": 0.4827121526332953
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_U8: float unsafe_getF(int,int)>": 0.4827121526332953
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_S32: float unsafe_getF(int,int)>": 0.4827121526332953
        }
    ], 
    "<net.imglib2.display.screenimage.awt.ArrayImgAWTScreenImage: int getBitsPerPixel(net.imglib2.type.NativeType)>": [
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder: net.coobird.thumbnailator.Thumbnails$Builder outputFormat(java.lang.String)>": 0.4331104972531134
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder: net.coobird.thumbnailator.Thumbnails$Builder forceSize(int,int)>": 0.4311411330622474
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder: net.coobird.thumbnailator.Thumbnails$Builder outputFormatType(java.lang.String)>": 0.43011487427631145
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder: net.coobird.thumbnailator.Thumbnails$Builder size(int,int)>": 0.4300600683142361
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder: net.coobird.thumbnailator.Thumbnails$Builder resizerFactory(net.coobird.thumbnailator.resizers.ResizerFactory)>": 0.4252298084261571
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: long frequency(long[])>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.3105987240724484
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2630278437633158
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomPixelDepthPnP: int dropUnusedTracks()>": 0.2596469558133314
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2576998692063304
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: boolean detect(boofcv.struct.image.ImageGray)>": 0.2457728070800302
        }
    ], 
    "<net.imglib2.type.numeric.real.DoubleType: void decIndex(int)>": [
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.6241711271514602
        }, 
        {
            "<boofcv.abst.fiducial.calib.CalibrationDetectorSquareFiducialGrid: int getPointIndex(int,int)>": 0.5747801203619927
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$9: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5631673913280111
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: int getIndex(int,int,int)>": 0.5573780954063181
        }, 
        {
            "<boofcv.struct.image.ImageBase: int getIndex(int,int)>": 0.5485724542486418
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: int compareTo(net.imglib2.type.numeric.real.FloatType)>": [
        {
            "<Catalano.Math.Geometry.PointToProcess: int compareTo(Catalano.Math.Geometry.PointToProcess)>": 0.32929660280067446
        }, 
        {
            "<boofcv.abst.feature.detect.extract.NonMaxLimiter$LocalExtreme: int compareTo(boofcv.abst.feature.detect.extract.NonMaxLimiter$LocalExtreme)>": 0.32929660280067446
        }, 
        {
            "<boofcv.alg.feature.detect.line.ImageLinePruneMerge$1: int compare(boofcv.alg.feature.detect.line.ImageLinePruneMerge$Data,boofcv.alg.feature.detect.line.ImageLinePruneMerge$Data)>": 0.3011337266065353
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EPAAlgorithm$TriangleComparison: int compare(com.flowpowered.react.collision.narrowphase.EPA.TriangleEPA,com.flowpowered.react.collision.narrowphase.EPA.TriangleEPA)>": 0.27830890470313274
        }, 
        {
            "<boofcv.alg.tracker.klt.KltTracker: boofcv.alg.tracker.klt.KltTrackFault track(boofcv.alg.tracker.klt.KltFeature)>": 0.2760938299471628
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListCursor: void <init>(net.imglib2.img.list.AbstractLongListImg,net.imglib2.img.list.AbstractLongListImg$LongListCursor)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2448980115178926
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2354646039729995
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.22542820909611427
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2230012717048061
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.2161703772207853
        }
    ], 
    "<net.imglib2.transform.integer.SequentializeTransform$1: void apply(int[],int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.34381608450188594
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.3400885355425245
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.3018412667314224
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.3018412667314224
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.2886401704745511
        }
    ], 
    "<net.imglib2.type.numeric.integer.LongType: net.imglib2.type.numeric.integer.LongType createVariable()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05923488777590923
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.057353933467640436
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.05684427997196944
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05624015883323094
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.055674916760380555
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRealRandomAccessible: net.imglib2.converter.read.ConvertedRealRandomAccess realRandomAccess(net.imglib2.RealInterval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04564354645876383
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.044194173824159216
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04380145943098717
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04333595283009603
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04290040456147775
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: net.imglib2.type.numeric.ARGBType createVariable()>": [
        {
            "<boofcv.demonstrations.fiducial.FiducialTrackerApp: void refreshAll(java.lang.Object[])>": 0.09512551571501338
        }, 
        {
            "<org.dyn4j.dynamics.CapacityTest: void createFailureListenerCount()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.dynamics.CapacityTest: void createFailureJointCount()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.dynamics.CapacityTest: void createFailureBodyCount()>": 0.09306821918192615
        }, 
        {
            "<boofcv.demonstrations.sfm.d3.VisualizeMonocularPlaneVisualOdometryApp: void process(boofcv.io.image.SimpleImageSequence)>": 0.09106841590512935
        }
    ], 
    "<net.imglib2.img.AbstractImg: void min(net.imglib2.Positionable)>": [
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.26698093205087026
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(org.jbox2d.collision.broadphase.Pair)>": 0.2576696457996196
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.2561303361961954
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void clear()>": 0.25587756560490377
        }, 
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(Catalano.Imaging.Corners.FeaturePoint)>": 0.25583363680084636
        }
    ], 
    "<net.imglib2.converter.Converters: net.imglib2.converter.readwrite.WriteConvertedRandomAccessible convert(net.imglib2.RandomAccessible,net.imglib2.converter.readwrite.SamplerConverter)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0584019459079829
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.05406205059012895
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.05346179598430837
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.05164589025080292
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void <init>(boofcv.demonstrations.tracker.CirculantVisualizationPanel$Listener)>": 0.05040273807667476
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorDoubleBoundary: void <init>(net.imglib2.Interval)>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2630322738922746
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.25283344884701114
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.22973434756295588
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.22973434756295588
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.22374919333682436
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: void setBigInteger(java.math.BigInteger)>": [
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.22844610387820563
        }, 
        {
            "<Catalano.Imaging.Filters.Add: void <init>(int,int,int)>": 0.22753908985084925
        }, 
        {
            "<Catalano.Imaging.Filters.Subtract: void <init>(int,int,int)>": 0.22753908985084925
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.2268456115607017
        }, 
        {
            "<org.box2d.proto.Box2D$PbBody: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.22666966507881497
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorDoubleBoundary: void fwd(int)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.25507452341464676
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.2203911929996675
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.2198915262447852
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.2119262963140013
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.20849653420810668
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: void div(net.imglib2.type.numeric.integer.UnsignedByteType)>": [
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(Catalano.Core.IntPoint,int,int,int,int)>": 0.34279574994035583
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getBlue(Catalano.Core.IntPoint)>": 0.336430021688703
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: boofcv.struct.image.ImageBase subimage(int,int,int,int,boofcv.struct.image.ImageBase)>": 0.3361673280624054
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getGreen(Catalano.Core.IntPoint)>": 0.33418363988614425
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getRed(Catalano.Core.IntPoint)>": 0.33418363988614425
        }
    ], 
    "<net.imglib2.img.cell.CellCursor: void localize(long[])>": [
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.19166867278972372
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.19166867278972372
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,boofcv.struct.image.GrayS64)>": 0.18862687923792337
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide(boofcv.struct.image.GrayS64,double,boofcv.struct.image.GrayS64)>": 0.18862687923792337
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply(boofcv.struct.image.GrayS64,double,boofcv.struct.image.GrayS64)>": 0.18862687923792337
        }
    ], 
    "<net.imglib2.transform.integer.SequentializeTransform: void applyInverse(int[],int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.511757254945265
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4961470524656755
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4951394030840421
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4938416745547106
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.48555836488530435
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void setPosition(int,int)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMax(int,int)>": 0.4621606408967593
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMin(int,int)>": 0.4621606408967593
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setRGB(int,int[])>": 0.4225455576771337
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(int,int[])>": 0.4211426774766313
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.4195411048826069
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void <init>(net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.155020109508439
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.155020109508439
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.155020109508439
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.1527197454450231
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.15013464575127644
        }
    ], 
    "<net.imglib2.img.sparse.DoubleNtree: void setValue(int,double)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.4046883728874424
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.38901104269312653
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3846723536618065
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.3832696151969503
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: double getOutside(int,int)>": 0.3812515471264423
        }
    ], 
    "<net.imglib2.img.array.ArrayLocalizingCursor: void <init>(net.imglib2.img.array.ArrayImg)>": [
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.1664375714839207
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.16216232622474322
        }, 
        {
            "<net.coobird.thumbnailator.geometry.RelativeSize: java.awt.Dimension calculate(int,int)>": 0.15799084923013598
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.15594107177393954
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.15544045708951465
        }
    ], 
    "<net.imglib2.AbstractInterval: void <init>(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.33040271382467545
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.33040271382467545
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.31454686138748195
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.3119928595129414
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2700694036501091
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRandomAccessible: net.imglib2.type.Type getDestinationType()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.018184824186332698
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void mult(double[][],double[],double[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.519772105439494
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5132638481617114
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.505284081958669
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4972837564339603
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void removeContactPoint(int)>": 0.496070195579509
        }
    ], 
    "<net.imglib2.display.projector.specialized.ArrayImgXYByteProjector: void <init>(net.imglib2.img.array.ArrayImg,net.imglib2.img.array.ArrayImg,double,double)>": [
        {
            "<org.dyn4j.geometry.Vector2: boolean isOrthogonal(double,double)>": 0.28577421992028634
        }, 
        {
            "<org.dyn4j.sandbox.panels.UnitCirclePolygonPanel: boolean isValidInput()>": 0.2751000448505956
        }, 
        {
            "<org.dyn4j.geometry.Vector3: boolean isOrthogonal(double,double,double)>": 0.2734450414335164
        }, 
        {
            "<org.dyn4j.geometry.Interval: boolean isDegenerate(double)>": 0.26768780719894664
        }, 
        {
            "<boofcv.alg.shapes.edge.PolygonEdgeIntensity: boolean checkIntensity(boolean,double)>": 0.2676577006167146
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: void mul(double)>": [
        {
            "<boofcv.alg.misc.PixelMath: void multiply_A(short[],int,int,double,short[],int,int,int,int)>": 0.24954580999036186
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(short[],int,int,double,short[],int,int,int,int)>": 0.24954580999036186
        }, 
        {
            "<boofcv.misc.DiscretizedCircle: int[] imageOffsets(double,int)>": 0.23542514573394827
        }, 
        {
            "<net.coobird.thumbnailator.geometry.RelativeSize: java.awt.Dimension calculate(int,int)>": 0.22867802487088892
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void paintComponent(java.awt.Graphics)>": 0.22565854440307292
        }
    ], 
    "<net.imglib2.converter.read.ConvertedCursor: net.imglib2.type.Type get()>": [
        {
            "<org.dyn4j.dynamics.WorldTest: void getUserData()>": 0.13072589053758338
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void getUserData()>": 0.13072589053758338
        }, 
        {
            "<org.dyn4j.collision.FixtureTest: void setUserData()>": 0.1260928308340071
        }, 
        {
            "<org.dyn4j.geometry.AbstractShapeTest: void setUserData()>": 0.1172913120753782
        }, 
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.10743667507913031
        }
    ], 
    "<net.imglib2.view.composite.CompositeIntervalView: double realMax(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: double unsafe_getD(int,int)>": 0.3536520694668201
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.3287931553282879
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.31940660019314776
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(long[],int,int,double,long,long,long[],int,int,int,int)>": 0.3113131961881614
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply_A(long[],int,int,double,long,long,long[],int,int,int,int)>": 0.3113131961881614
        }
    ], 
    "<net.imglib2.transform.integer.ComponentMappingTransform: void apply(int[],int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.6285251117136144
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.609286540479477
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.59963732362521
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5926675088489636
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.576295359175151
        }
    ], 
    "<net.imglib2.position.transform.Floor: void setPosition(double,int)>": [
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setRange(int,double,double)>": 0.2485466599481866
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void setD(int,double)>": 0.2481703745059739
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMinimum(int,double)>": 0.2481703745059739
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMaximum(int,double)>": 0.2481703745059739
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void complexInverse(double[],boolean)>": 0.23269353826992173
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListCursor: void <init>(net.imglib2.img.list.AbstractLongListImg)>": [
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.25998307194385567
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2522698106752988
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.22971367187155972
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2211517270783494
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.21851377698691213
        }
    ], 
    "<net.imglib2.util.Util: float averageFloat(java.util.List)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double FeretDiameter(java.util.List)>": 0.39107770346858406
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: void renderExternal(java.util.List,int[],java.awt.image.BufferedImage)>": 0.3565424393019145
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: java.awt.image.BufferedImage renderContours(java.util.List,int[],int,int,int,java.awt.image.BufferedImage)>": 0.353201803501856
        }, 
        {
            "<boofcv.alg.geo.LowLevelMultiViewOps: void computeNormalization(java.util.List,org.ejml.data.DenseMatrix64F)>": 0.34540771519509406
        }, 
        {
            "<boofcv.alg.feature.detect.line.ImageLinePruneMerge: void pruneRelative(float)>": 0.3346790045725113
        }
    ], 
    "<net.imglib2.view.ExtendedRealRandomAccessibleRealInterval: void <init>(net.imglib2.RealRandomAccessibleRealInterval,net.imglib2.outofbounds.RealOutOfBoundsFactory)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0563436169819011
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0545544725589981
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.05406969538743988
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05349506156386412
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.05295740910852022
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: void setPosition(int[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.3615735608242674
        }, 
        {
            "<boofcv.misc.BoofMiscOps: int countNotZero(int[],int)>": 0.3576409983491106
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.3439169734941024
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.3411674570554192
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectSparseBasicWta_S32: boolean select(int[],int)>": 0.33444556057506003
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedCursor: boolean hasNext()>": [
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: boolean process(boofcv.struct.image.ImageBase)>": 0.2782949759634314
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: boolean isEmpty()>": 0.2738095238095238
        }, 
        {
            "<Catalano.Math.SparseArray: boolean isEmpty()>": 0.2738095238095238
        }, 
        {
            "<Catalano.Math.Geometry.Line: boolean isVertical()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$BufferedImageIterable$1: boolean hasNext()>": 0.2738095238095238
        }
    ], 
    "<net.imglib2.view.RandomAccessibleIntervalCursor: void localize(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.FloorInterpolator: void <init>(net.imglib2.interpolation.randomaccess.FloorInterpolator)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05270462766947299
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.05103103630798288
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.050577568786757836
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05004004806408974
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04953712024382607
        }
    ], 
    "<net.imglib2.img.AbstractImg: void <init>(long[])>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2755030313567498
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.27258857939611336
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2679743533221401
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2679743533221401
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.24193311827275335
        }
    ], 
    "<net.imglib2.iterator.LocalizingIntervalIterator: void <init>(int[],int[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.30510566319345167
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.30510566319345167
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2912406092906744
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.23311040964356927
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2264504020877499
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: int compareTo(net.imglib2.type.volatiles.AbstractVolatileRealType)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.27613510210322567
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.27613510210322567
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.27613510210322567
        }, 
        {
            "<org.dyn4j.Reference: int hashCode()>": 0.2582912827278757
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: void setTo(boofcv.struct.image.ImageInterleaved)>": 0.2540274735513339
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: void setComponentInversion(boolean[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.47302461677289603
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.460597729177852
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4591713053184648
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.45330664298380163
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.45133604702775554
        }
    ], 
    "<net.imglib2.view.RandomAccessibleIntervalCursor: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: int compareTo(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.27143901582835495
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.23875131874632927
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.22922981152000166
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.22554886991647033
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.22148801744043484
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: void updateIndex(int)>": [
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.4893175719811658
        }, 
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void setSize(int)>": 0.4562755192701245
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.4484994918764973
        }, 
        {
            "<Catalano.Imaging.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.4484994918764973
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int indexOfPreviousCounterClockwiseEdge(int)>": 0.4434374297790593
        }
    ], 
    "<net.imglib2.util.Partition: int partitionSubList(int,int,float[])>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectSparseStandardWta_F32: boolean select(float[],int)>": 0.38657931456694766
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectSparseBasicWta_F32: boolean select(float[],int)>": 0.37877481403269536
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectSparseStandardWta_F32: boolean select(java.lang.Object,int)>": 0.3735305705116754
        }, 
        {
            "<org.jbox2d.common.BufferUtils: void rotate(float[],int,int,int)>": 0.3728875942151554
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F32_1D: void bitrv216neg(float[],int)>": 0.36158892818460003
        }
    ], 
    "<net.imglib2.RealPoint: void move(float[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.4456727144318825
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.4456727144318825
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel2D_F64,double)>": 0.4050803223871045
        }, 
        {
            "<Catalano.Math.Matrix: void Add(double[],double)>": 0.37319499086411423
        }, 
        {
            "<Catalano.Math.Matrix: void Subtract(double[],double)>": 0.37319499086411423
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerType: void dec()>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.28593561871521345
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.27085279948959046
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>()>": 0.24372685929874666
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.2379802920342033
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2300246167861285
        }
    ], 
    "<net.imglib2.img.planar.PlanarCursor: void <init>(net.imglib2.img.planar.PlanarCursor)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void drawPadding()>": 0.3495941387184841
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.34812299182050027
        }, 
        {
            "<org.box2d.proto.Box2D$PbFilter: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.3474027386019153
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.3473748120235932
        }, 
        {
            "<org.box2d.proto.Box2D$PbBody: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.3413863936594337
        }
    ], 
    "<net.imglib2.position.transform.Floor: void setPosition(double[])>": [
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int[])>": 0.31323267727225756
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRows(double[],int[])>": 0.31323267727225756
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int,int)>": 0.2841133877010048
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: double maxAbs(double[],int)>": 0.2833413270522986
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void cdft2d_sub(int,double[][],boolean)>": 0.2815327860810526
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.IntervalView hyperSlice(net.imglib2.RandomAccessibleInterval,int,long)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.27458058649432415
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.27458058649432415
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.27458058649432415
        }, 
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.2706065249032064
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.2627227607402044
        }
    ], 
    "<net.imglib2.transform.integer.SequentializeTransform: void applyInverse(long[],long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5102873605588207
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.503627286740423
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.49850226046406626
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.49063220856233114
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void removeContactPoint(int)>": 0.48376609922860025
        }
    ], 
    "<net.imglib2.img.NativeImgFactory: net.imglib2.img.Img create(long[],java.lang.Object)>": [
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.21026003983328395
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.21026003983328395
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.19194817332738848
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.19194817332738848
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.17746458138355492
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned2BitType: long get()>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.32450654946439617
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.30276191793050117
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.29907708292257856
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.29513939902932734
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.27451681880387074
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: void setPosition(int[])>": [
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getIndex(int[])>": 0.4285902386238978
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int[])>": 0.42488360283967386
        }, 
        {
            "<Catalano.Math.Matrix: int[] getRows(int[],int[])>": 0.42488360283967386
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int[])>": 0.3685593848615448
        }, 
        {
            "<Catalano.Math.Matrix: float[] getColumns(float[],int[])>": 0.3685593848615448
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void getUpperBounds(long[],java.util.List)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void renderArrows()>": 0.38177871044769857
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void renderMagnets()>": 0.38177871044769857
        }, 
        {
            "<boofcv.demonstrations.calibration.CommonDetectCalibrationApp: boolean isInGrids(georegression.struct.shapes.Polygon2D_F64)>": 0.3703689017361448
        }, 
        {
            "<boofcv.gui.feature.AssociationScorePanel: void computeScore(boolean,int)>": 0.3592813643856071
        }, 
        {
            "<org.dyn4j.collision.AbstractCollidable: org.dyn4j.collision.Fixture removeFixture(org.dyn4j.geometry.Vector2)>": 0.3533833279992318
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: java.lang.String toString(double[][],java.lang.String)>": [
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.556162384293669
        }, 
        {
            "<Catalano.Statistics.Regression.PolynomialRegression: java.lang.String toString()>": 0.5473328835474947
        }, 
        {
            "<boofcv.demonstrations.feature.disparity.VisualizeStereoDisparity: void main(java.lang.String[])>": 0.5206791405447556
        }, 
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareFiducial: void main(java.lang.String[])>": 0.5001973044461806
        }, 
        {
            "<boofcv.demonstrations.denoise.DenoiseAccuracyStudyApp: void main(java.lang.String[])>": 0.4805284397946795
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void quaternionToR(double[],double[][])>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.47962833690878026
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.4792068779511334
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.4786620896860636
        }, 
        {
            "<boofcv.alg.geo.pose.P3PGrunert: boolean process(georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,georegression.struct.point.Point2D_F64,double,double,double)>": 0.4674533667403955
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Vector3 solve33(org.dyn4j.geometry.Vector3)>": 0.464513929384229
        }
    ], 
    "<net.imglib2.img.ImgFactory: net.imglib2.img.Img create(net.imglib2.Dimensions,java.lang.Object)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.18880998788990877
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.1819997532590129
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.18144605648299086
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.17904868625500547
        }, 
        {
            "<org.jbox2d.pooling.normal.CircleStack: java.lang.Object pop()>": 0.17325548999473941
        }
    ], 
    "<net.imglib2.transform.integer.permutation.SingleDimensionPermutationTransform: void applyInverse(int[],int[])>": [
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.4118076036148897
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int)>": 0.40415789312754635
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.38694519307316877
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: void bufferMove(int)>": 0.3743549186684594
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void getOutside(int,int,int[])>": 0.3728723774915219
        }
    ], 
    "<net.imglib2.transform.integer.SequentializeTransform$1: void applyInverse(long[],long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.24729034217626794
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.24729034217626794
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.22895986090025797
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.20773877534405594
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.19764098730509247
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.10842661409823065
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.10132274924351498
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.10036934567095813
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.09785730607238811
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.09785730607238811
        }
    ], 
    "<net.imglib2.position.transform.Floor: void setPosition(float[])>": [
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_S64: void setF(int,float[])>": 0.26733684424316645
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_F64: void setF(int,float[])>": 0.263870403767031
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_F32: void setOutside(int,int,float[])>": 0.26290622615828363
        }, 
        {
            "<Catalano.Math.Matrix: float[] getColumns(float[],int[])>": 0.26119605467981727
        }, 
        {
            "<Catalano.Math.Matrix: float[] getRows(float[],int[])>": 0.26119605467981727
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: void setPosition(int[])>": [
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.37794415642800666
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.3617552817387517
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int)>": 0.34751461817540563
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void getOutside(int,int,int[])>": 0.33877256044241244
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int)>": 0.3158315215773959
        }
    ], 
    "<net.imglib2.img.array.ArrayImg: java.lang.Object subIntervalIterationOrder(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.dynamics.WorldTest: void getUserData()>": 0.10067340828210365
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void getUserData()>": 0.10067340828210365
        }, 
        {
            "<org.dyn4j.collision.FixtureTest: void setUserData()>": 0.09743547036924464
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.09245003270420486
        }, 
        {
            "<org.dyn4j.geometry.AbstractShapeTest: void setUserData()>": 0.09128709291752769
        }
    ], 
    "<net.imglib2.view.TransformRandomAccess: void fwd(int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.515050663840322
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.49687649454939165
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.49687649454939165
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4965452888056134
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4963742906040283
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsPeriodic: void setPosition(int[])>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2848468199168308
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.25305003037045315
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.24782144101189063
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.24279841995848597
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.23360907983420226
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform: void <init>(int)>": [
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayF32)>": 0.21539603261591198
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: void <init>(int,int,long[],boofcv.alg.fiducial.square.BaseDetectFiducialSquare)>": 0.21522686824972784
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.21359180575475883
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.21325563152553606
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.21325563152553606
        }
    ], 
    "<net.imglib2.img.ImgFactory: net.imglib2.img.Img create(int[],java.lang.Object)>": [
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.17654516718090502
        }, 
        {
            "<boofcv.struct.image.InterleavedS32: void _setData(java.lang.Object)>": 0.17654516718090502
        }, 
        {
            "<boofcv.struct.image.GrayS32: void _setData(java.lang.Object)>": 0.17654516718090502
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.17654516718090502
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.15532598337848308
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRandomAccessibleInterval: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.03806934938134405
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.036860489038724284
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.03653294259238809
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.03614468324789001
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03578141087979197
        }
    ], 
    "<net.imglib2.img.cell.AbstractCellImg: long[] getDimensionsFromCells(net.imglib2.img.cell.Cells)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.27794369028632787
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2674783269152191
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.23856877404808868
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2322352143515134
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.23156838761183193
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: float getImaginaryFloat()>": [
        {
            "<Catalano.Imaging.Tools.ImageStatistics: float Variance(Catalano.Imaging.FastBitmap,float)>": 0.3135392598020063
        }, 
        {
            "<boofcv.alg.interpolate.array.Interpolate1D_F32: float process(int,float)>": 0.30881885353145466
        }, 
        {
            "<Catalano.Math.Geometry.Line: float DistanceToPoint(Catalano.Core.IntPoint)>": 0.30273991679910894
        }, 
        {
            "<boofcv.alg.weights.WeightPixelUniform_F32: float weightIndex(int)>": 0.3018132254679891
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$GSingleToMB: float getF(int)>": 0.29532163742690054
        }
    ], 
    "<net.imglib2.view.IntervalView: net.imglib2.Cursor localizingCursor()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.013363062095621218
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.013363062095621218
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.013363062095621218
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.013363062095621218
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.013363062095621218
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: void setPosition(int,int)>": [
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayF32)>": 0.3131853721379493
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayF32,int,int,boofcv.struct.image.GrayF32)>": 0.2782039059958076
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegion pixelRegion(int,int,java.lang.Class)>": 0.2756345729584764
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegionNCC pixelRegionNCC(int,int,java.lang.Class)>": 0.2756345729584764
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.GIntegralImageFeatureIntensity: void hessian(boofcv.struct.image.ImageGray,int,int,boofcv.struct.image.GrayF32)>": 0.25933879105925634
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: void mul(double)>": [
        {
            "<boofcv.misc.DiscretizedCircle: int[] imageOffsets(double,int)>": 0.3186080441393907
        }, 
        {
            "<net.coobird.thumbnailator.geometry.RelativeSize: java.awt.Dimension calculate(int,int)>": 0.3140852515443524
        }, 
        {
            "<net.coobird.thumbnailator.makers.ScaledThumbnailMaker: java.awt.image.BufferedImage make(java.awt.image.BufferedImage)>": 0.3114671432696654
        }, 
        {
            "<net.coobird.thumbnailator.makers.FixedSizeThumbnailMaker: java.awt.image.BufferedImage make(java.awt.image.BufferedImage)>": 0.3022267113338102
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillGaussian(boofcv.struct.image.GrayS64,java.util.Random,double,double,long,long)>": 0.30046036982514135
        }
    ], 
    "<net.imglib2.view.TransformBuilder: boolean isSlicing(net.imglib2.transform.integer.Mixed)>": [
        {
            "<org.dyn4j.collision.manifold.IndexedManifoldPointId: boolean equals(java.lang.Object)>": 0.3597220928781188
        }, 
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.3400838567767598
        }, 
        {
            "<org.dyn4j.collision.narrowphase.SingleTypedFallbackCondition: boolean equals(java.lang.Object)>": 0.3345062186857951
        }, 
        {
            "<boofcv.io.wrapper.images.JpegByteImageSequence: boolean hasNext()>": 0.3206074180973063
        }, 
        {
            "<org.dyn4j.collision.narrowphase.AbstractFallbackCondition: boolean equals(java.lang.Object)>": 0.3199956365360286
        }
    ], 
    "<net.imglib2.img.planar.PlanarPlaneSubsetCursor: void reset()>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.12388923595807394
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.11695364528177193
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.11468292773139112
        }, 
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.11296201426438299
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.11267347735824967
        }
    ], 
    "<net.imglib2.display.awt.UnsignedIntDataBuffer: double getElemDouble(int,int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.5573063509924431
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.5573063509924431
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.5573063509924431
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int max(int[],int,int,int,int)>": 0.49914554537882483
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int min(int[],int,int,int,int)>": 0.49914554537882483
        }
    ], 
    "<net.imglib2.util.Util: float gLog(float,float)>": [
        {
            "<Catalano.Math.Tools: float Angle(float,float)>": 0.4905585993526485
        }, 
        {
            "<boofcv.alg.distort.LensDistortionOps: void roundInside(georegression.struct.shapes.RectangleLength2D_F32)>": 0.4482255267829148
        }, 
        {
            "<Catalano.Math.Special: double LogSum(float,float)>": 0.43569287231938
        }, 
        {
            "<org.jbox2d.common.MathUtils: float sin(float)>": 0.4342959151158207
        }, 
        {
            "<Catalano.Math.Geometry.Line: float GetAngleBetweenLines(Catalano.Math.Geometry.Line)>": 0.4338092057816424
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: void localize(float[])>": [
        {
            "<Catalano.Imaging.Filters.HistogramStretch: float[] getMaxRGB(Catalano.Imaging.FastBitmap)>": 0.2764641077065972
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: float[] getMinRGB(Catalano.Imaging.FastBitmap)>": 0.2756961162500957
        }, 
        {
            "<org.jbox2d.common.BufferUtils: void rotate(float[],int,int,int)>": 0.27555018593251873
        }, 
        {
            "<Catalano.Math.Matrix: float[] CreateMatrix1D(int,float)>": 0.27532440142445436
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void computeDepthForGroup(org.jbox2d.particle.ParticleGroup)>": 0.27353206465343294
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.IntervalView offset(net.imglib2.RandomAccessibleInterval,long[])>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.27142095500505636
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2705650585884413
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2705650585884413
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.25292669957456615
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.25063064182540784
        }
    ], 
    "<net.imglib2.type.numeric.integer.ShortType: void setInteger(long)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.18774033864527004
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.1827227244780058
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.18028718801183533
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$200(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.1791596479102247
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$100(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.1791596479102247
        }
    ], 
    "<net.imglib2.KDTree$ValueNode: void <init>(net.imglib2.KDTree$ValueNode)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.19350219400150317
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.16103438867118647
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.16103438867118647
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.15238095238095237
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.15238095238095237
        }
    ], 
    "<net.imglib2.AbstractWrappedRealInterval: double realMin(int)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.3782432325354622
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F64: double unsafe_getD(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double convolveSparse(boofcv.struct.image.GrayF64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: void div(net.imglib2.type.numeric.integer.GenericShortType)>": [
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMaximum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.19236550035850902
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMinimum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.19236550035850902
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void process(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.1888602470210904
        }, 
        {
            "<boofcv.struct.QueueCorner: void add(int,int)>": 0.1784094133416528
        }, 
        {
            "<boofcv.demonstrations.feature.detect.VideoDetectCorners: void updateGUI(java.awt.image.BufferedImage,boofcv.struct.image.ImageGray)>": 0.16856832278677877
        }
    ], 
    "<net.imglib2.img.sparse.IntNtree: void <init>(net.imglib2.img.sparse.Ntree,long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.242012144279314
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.242012144279314
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2237584400126592
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.17235608187218834
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.17235608187218834
        }
    ], 
    "<net.imglib2.view.composite.CompositeIntervalView: long max(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3508771929824561
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3142423944400126
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned4BitType: net.imglib2.type.numeric.integer.Unsigned4BitType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: void indexToPosition(int,int[],long[])>": [
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.4254276570042418
        }, 
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.41280988100649285
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.41280988100649285
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve11(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.4003457694873894
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve9(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.39993794129085786
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: int indexToPosition(int,int[],int)>": [
        {
            "<net.coobird.thumbnailator.geometry.Positions$7: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.6441548701302892
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$3: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.6441548701302892
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int max(int[],int,int,int,int)>": 0.6376763136949642
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int min(int[],int,int,int,int)>": 0.6376763136949642
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.6320953964921987
        }
    ], 
    "<net.imglib2.transform.integer.shear.ShearTransform: void <init>(int,int,int)>": [
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayF32)>": 0.41796124624699
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayF32,int,int,boofcv.struct.image.GrayF32)>": 0.3714219413891914
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegion pixelRegion(int,int,java.lang.Class)>": 0.3632276211999417
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegionNCC pixelRegionNCC(int,int,java.lang.Class)>": 0.3632276211999417
        }, 
        {
            "<boofcv.core.image.border.ImageBorder_S32: void set(int,int,int)>": 0.3428502824050388
        }
    ], 
    "<net.imglib2.converter.ChannelARGBConverter$Channel: void <init>(java.lang.String,int,int)>": [
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: void <init>(java.lang.String,int,int)>": 0.4838541666666666
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdType: void <init>(java.lang.String,int,int,int)>": 0.4793428135142319
        }, 
        {
            "<org.box2d.proto.Box2D$PbShapeType: void <init>(java.lang.String,int,int,int)>": 0.4793428135142319
        }, 
        {
            "<org.box2d.proto.Box2D$PbBodyType: void <init>(java.lang.String,int,int,int)>": 0.4793428135142319
        }, 
        {
            "<org.box2d.proto.Box2D$PbJointType: void <init>(java.lang.String,int,int,int)>": 0.4793428135142319
        }
    ], 
    "<net.imglib2.Point: void setPosition(int[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS64)>": 0.44889338435450676
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS32,boofcv.struct.image.InterleavedS64)>": 0.4132829780629394
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.3869177292274659
        }, 
        {
            "<boofcv.misc.BoofMiscOps: int countNotZero(int[],int)>": 0.38267047448121627
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.3679776442021223
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void getRow(int,double[][],double[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.586771290933976
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5753387335707808
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5715620909934264
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.5715620909934264
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5708811048808173
        }
    ], 
    "<net.imglib2.img.cell.CellRandomAccess: void move(int,int)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.35738517708995515
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.3515592524564791
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.34183286623016595
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2719753929716252
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2719753929716252
        }
    ], 
    "<net.imglib2.iterator.IntervalIterator: long dimension(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.6444652635187575
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.5168876727488003
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.5115679070521639
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4966616068166122
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.4924576911988799
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: void dec()>": [
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMaximum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.1987362190884991
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMinimum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.1987362190884991
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void process(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.19596329382281813
        }, 
        {
            "<boofcv.struct.QueueCorner: void add(int,int)>": 0.19429670518041633
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.18887672270022854
        }
    ], 
    "<net.imglib2.converter.Converters: net.imglib2.RandomAccessibleInterval argbChannels(net.imglib2.RandomAccessibleInterval)>": [
        {
            "<org.dyn4j.Version: int[] getVersionNumbers()>": 0.02816063585180762
        }, 
        {
            "<boofcv.alg.color.ColorHsv: void hsvToRgb(float,float,float,float[])>": 0.024330599926502123
        }, 
        {
            "<boofcv.alg.color.ColorHsv: void hsvToRgb(double,double,double,double[])>": 0.024330599926502123
        }, 
        {
            "<org.dyn4j.geometry.GeometryTest: void getWindingArrayNullPoint()>": 0.023931938620591276
        }, 
        {
            "<boofcv.abst.filter.convolve.GenericConvolve: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.ImageGray)>": 0.020230069025113272
        }
    ], 
    "<net.imglib2.img.list.ListRandomAccess: void setPosition(long,int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.3324711070696146
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMax(int,int)>": 0.32246588289991446
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMin(int,int)>": 0.32246588289991446
        }, 
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: void convolveBorder(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,boofcv.struct.image.GrayS64,int,int)>": 0.30997557012145005
        }, 
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.2855134620795564
        }
    ], 
    "<net.imglib2.type.numeric.integer.LongType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.10842661409823065
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.10132274924351498
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.10036934567095813
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.09785730607238811
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.09785730607238811
        }
    ], 
    "<net.imglib2.iterator.IntervalIterator: void <init>(net.imglib2.Interval)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2770509213599438
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.27624888291893
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.27624888291893
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2576337123267901
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set(int,int,long[])>": 0.25168449599957704
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.ExtendedRandomAccessibleInterval extendRandom(net.imglib2.RandomAccessibleInterval,double,double)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void access$000(boofcv.app.calib.AssistedCalibration,double,double,double,double)>": 0.38467417736855297
        }, 
        {
            "<boofcv.gui.fiducial.VisualizeFiducial: void drawLine(java.awt.Graphics2D,java.awt.geom.Line2D$Double,double,double,double,double)>": 0.3769411482490809
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceSe3SymmetricSq: void setIntrinsic(double,double,double,double,double,double)>": 0.372700684025409
        }, 
        {
            "<boofcv.alg.sfm.robust.DistancePlane2DToPixelSq: void setIntrinsic(double,double,double)>": 0.36276534358794943
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceHomographyPixelSq: void setIntrinsic(double,double,double)>": 0.36276534358794943
        }
    ], 
    "<net.imglib2.AbstractWrappedInterval: long max(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.35421796416552154
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.35421796416552154
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.34914275634306197
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3376600946233209
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.30328141972374945
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolator2D: void <init>(net.imglib2.RandomAccessible,net.imglib2.type.numeric.NumericType)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: void mul(float)>": [
        {
            "<boofcv.alg.tracker.klt.KltTracker: void setAllowedBounds(boofcv.alg.tracker.klt.KltFeature)>": 0.41370495787368416
        }, 
        {
            "<boofcv.alg.feature.detect.line.HoughTransformLineFootOfNorm: void _transform(boofcv.struct.image.GrayS16,boofcv.struct.image.GrayS16,boofcv.struct.image.GrayU8)>": 0.38826154976955085
        }, 
        {
            "<boofcv.alg.feature.detect.line.HoughTransformLineFootOfNorm: void _transform(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayU8)>": 0.38826154976955085
        }, 
        {
            "<boofcv.alg.feature.detect.line.HoughTransformLineFootOfNorm: void transform(boofcv.struct.image.ImageGray,boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.3853152969201117
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramShrink: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.3843131679878757
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: net.imglib2.type.numeric.real.FloatType copy()>": [
        {
            "<com.flowpowered.react.math.Matrix4x4: com.flowpowered.react.math.Matrix4x4 negate(com.flowpowered.react.math.Matrix4x4)>": 0.20412102833374085
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: com.flowpowered.react.math.Matrix4x4 set(com.flowpowered.react.math.Matrix4x4)>": 0.2016271281021032
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: com.flowpowered.react.math.Matrix3x3 negate(com.flowpowered.react.math.Matrix3x3)>": 0.19996583046545777
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: void <init>(com.flowpowered.react.math.Matrix4x4)>": 0.19928691920083955
        }, 
        {
            "<boofcv.alg.tracker.klt.KltTracker: boolean internalSetDescriptionBorder(boofcv.alg.tracker.klt.KltFeature)>": 0.19904033115799574
        }
    ], 
    "<net.imglib2.KDTreeNode: void localize(float[])>": [
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_F64: void getF(int,float[])>": 0.4494482389628714
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF32)>": 0.43403432413324206
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedF64,boofcv.struct.image.InterleavedF32)>": 0.3949959276042379
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchColor: void meanColor(float[],float[],float)>": 0.3832306753076067
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$PL: void getF(int,float[])>": 0.3805787737085878
        }
    ], 
    "<net.imglib2.view.TransformBuilder$1: net.imglib2.RandomAccess randomAccess()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05270462766947299
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.05103103630798288
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.050577568786757836
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05004004806408974
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04953712024382607
        }
    ], 
    "<net.imglib2.util.ValuePair: void <init>(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.44358974358974357
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.3573399169923356
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.3573399169923356
        }, 
        {
            "<boofcv.gui.image.SelectInputImageToolBar$2: void <init>(boofcv.gui.image.SelectInputImageToolBar,java.lang.Object)>": 0.3038135843272336
        }, 
        {
            "<org.dyn4j.dynamics.InteractionEdge: void <init>(org.dyn4j.dynamics.Body,java.lang.Object)>": 0.3038135843272336
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImgFactory: net.imglib2.img.sparse.NtreeImg createCharInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.18737514941608052
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18412209502692617
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18412209502692617
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.1822362181592632
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1791168235896834
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void bck(int)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMax(int,int)>": 0.4332365246336078
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMin(int,int)>": 0.4332365246336078
        }, 
        {
            "<boofcv.struct.learning.ClassificationHistogram: void increment(int,int)>": 0.37395599238059124
        }, 
        {
            "<boofcv.struct.image.GrayS32: void unsafe_set(int,int,int)>": 0.35664368989090917
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.35255826554979985
        }
    ], 
    "<net.imglib2.type.numeric.real.DoubleType: void <init>(net.imglib2.img.basictypeaccess.DoubleAccess)>": [
        {
            "<Catalano.Imaging.Filters.HistogramShrink: void <init>()>": 0.13404738190002652
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: void <init>()>": 0.13404738190002652
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.SobelEdgeDetector: void <init>()>": 0.12437183348566663
        }, 
        {
            "<boofcv.gui.tracker.TrackerObjectQuadPanel: void enterSelectMode()>": 0.12437183348566663
        }, 
        {
            "<org.jbox2d.dynamics.Filter: void <init>()>": 0.12317689748992192
        }
    ], 
    "<net.imglib2.view.RandomAccessibleIntervalCursor: void jumpFwd(long)>": [
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.34976917806549074
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3425428195396241
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.32782140055147696
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.31426245351870624
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.29118922041238715
        }
    ], 
    "<net.imglib2.type.label.BasePairBitType$Base: net.imglib2.type.label.BasePairBitType$Base valueOf(java.lang.String)>": [
        {
            "<net.smert.jreactphysics3d.collision.shapes.CollisionShapeType: net.smert.jreactphysics3d.collision.shapes.CollisionShapeType valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<net.smert.jreactphysics3d.configuration.ContactsPositionCorrectionTechnique: net.smert.jreactphysics3d.configuration.ContactsPositionCorrectionTechnique valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<net.smert.jreactphysics3d.configuration.JointsPositionCorrectionTechnique: net.smert.jreactphysics3d.configuration.JointsPositionCorrectionTechnique valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<net.smert.jreactphysics3d.constraint.JointType: net.smert.jreactphysics3d.constraint.JointType valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<Catalano.Statistics.Analysis.PrincipalComponentAnalysis$AnalysisMethod: Catalano.Statistics.Analysis.PrincipalComponentAnalysis$AnalysisMethod valueOf(java.lang.String)>": 0.260989010989011
        }
    ], 
    "<net.imglib2.img.cell.CellCursor: void moveToNextCell()>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.EndPoint: void setValues(int,boolean,long)>": 0.18956823210832718
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint: void setValues(int,boolean,long)>": 0.18956823210832718
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.17238320517678737
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void setPaused(boolean)>": 0.16540820937283213
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomPixelDepthPnP: int dropUnusedTracks()>": 0.16307130467533396
        }
    ], 
    "<net.imglib2.converter.ARGBARGBDoubleConverter: void convert(java.lang.Object,java.lang.Object)>": [
        {
            "<Catalano.Imaging.Filters.Grayscale: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.34030326021231955
        }, 
        {
            "<Catalano.Imaging.Filters.Grayscale: void Apply(Catalano.Imaging.FastBitmap,Catalano.Imaging.Filters.Grayscale$Algorithm)>": 0.3386384803674087
        }, 
        {
            "<Catalano.Imaging.Filters.ResizeBicubic: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.3056830413757414
        }, 
        {
            "<Catalano.Imaging.Filters.FastVariance: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.29099551697767784
        }, 
        {
            "<Catalano.Imaging.Filters.ResizeBilinear: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.29057719860006254
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedRandomAccessible: net.imglib2.converter.readwrite.WriteConvertedRandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04879500364742665
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04724555912615341
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04682572978040922
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04632808229131882
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04586246160658393
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: void setPosition(long[])>": [
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.3359820140198485
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.3359820140198485
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void boundRectangleInside(boofcv.struct.image.ImageBase,boofcv.struct.ImageRectangle)>": 0.33061554103274815
        }, 
        {
            "<Catalano.Imaging.Filters.HysteresisThreshold: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.3284200091198606
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.32773220037815587
        }
    ], 
    "<net.imglib2.util.Util: net.imglib2.img.ImgFactory getArrayOrCellImgFactory(net.imglib2.Dimensions,net.imglib2.type.NativeType)>": [
        {
            "<Catalano.Math.Matrix: double NormP(double[],int)>": 0.2989231858522993
        }, 
        {
            "<Catalano.Statistics.Distributions.BinomialDistribution: double Variance()>": 0.2988945465313531
        }, 
        {
            "<Catalano.Math.TaylorSeries: double Exp(double,int)>": 0.2946837104207565
        }, 
        {
            "<Catalano.Statistics.Distributions.BinomialDistribution: double ProbabilityMassFunction(int)>": 0.2922977878258578
        }, 
        {
            "<Catalano.Statistics.Distributions.BinomialDistribution: double LogProbabilityMassFunction(int)>": 0.2890644926574027
        }
    ], 
    "<net.imglib2.util.Partition: void partitionSubList(java.util.ListIterator,java.util.ListIterator,int[],java.util.Comparator)>": [
        {
            "<boofcv.struct.image.ImageInterleaved: void setTo(boofcv.struct.image.ImageInterleaved)>": 0.3254354395908577
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.31844932345391014
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.31844932345391014
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.31844932345391014
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.31754712134142205
        }
    ], 
    "<net.imglib2.util.Fraction: double getRatio()>": [
        {
            "<boofcv.alg.misc.ImageStatistics: double mean(boofcv.struct.image.GrayS64)>": 0.2834250763479449
        }, 
        {
            "<boofcv.misc.ProfileOperation: double profileOpsPerSec(boofcv.misc.Performer,long,boolean)>": 0.2798161973628467
        }, 
        {
            "<Catalano.Math.Special: double Binomial(int,int)>": 0.24926126824264724
        }, 
        {
            "<boofcv.gui.image.ProcessImageSequence: void printFPS(long,int,long)>": 0.2429040268779544
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void update()>": 0.23907666674661965
        }
    ], 
    "<net.imglib2.img.array.ArrayImgFactory: net.imglib2.img.array.ArrayImg createByteInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.16989915581702875
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.16989915581702875
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.DoubleArray: double getValue(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.6444652635187575
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.PyramidDiscreteSampleBlur: double getSigma(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.NoCacheScaleSpace: double getScale(int)>": 0.6383928571428571
        }
    ], 
    "<net.imglib2.transform.InverseTransform: int numSourceDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: net.imglib2.type.numeric.ARGBType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.converter.Converters: net.imglib2.converter.readwrite.WriteConvertedIterableRandomAccessibleInterval convertRandomAccessibleIterableInterval(net.imglib2.RandomAccessible,net.imglib2.converter.readwrite.SamplerConverter)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0584019459079829
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.05406205059012895
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.05346179598430837
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.05164589025080292
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void <init>(boofcv.demonstrations.tracker.CirculantVisualizationPanel$Listener)>": 0.05040273807667476
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowingFactory: int[] getFadeOutDistance()>": [
        {
            "<boofcv.struct.image.InterleavedS32: void _setData(java.lang.Object)>": 0.30077011056745767
        }, 
        {
            "<boofcv.struct.image.GrayS32: void _setData(java.lang.Object)>": 0.30077011056745767
        }, 
        {
            "<Catalano.Math.Dissimilarities.RogersTanimotoDissimilarity: double Compute(java.lang.Object,java.lang.Object)>": 0.2537442445740994
        }, 
        {
            "<Catalano.Math.Dissimilarities.SokalMichenerDissimilarity: double Compute(java.lang.Object,java.lang.Object)>": 0.2537442445740994
        }, 
        {
            "<Catalano.Math.Dissimilarities.MatchingDissimilarity: double Compute(java.lang.Object,java.lang.Object)>": 0.2537442445740994
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void sub(net.imglib2.type.numeric.integer.Unsigned128BitType)>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayI8)>": 0.23614791713289285
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2351449530630278
        }, 
        {
            "<boofcv.core.image.ConvertImage: boofcv.struct.image.GrayU8 convert(boofcv.struct.image.GrayS64,long,long,int,boofcv.struct.image.GrayU8)>": 0.22894787074994105
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedI8)>": 0.22462625618538337
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.22192002553328397
        }
    ], 
    "<net.imglib2.view.TransformBuilder: net.imglib2.RandomAccessible getEfficientRandomAccessible(net.imglib2.Interval,net.imglib2.RandomAccessible)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04249365736239222
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.03933591969186834
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.03889917031385744
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.037577904817609024
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void <init>(boofcv.demonstrations.tracker.CirculantVisualizationPanel$Listener)>": 0.03667337874890667
        }
    ], 
    "<net.imglib2.img.sparse.ShortNtree: short getValue(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.3447577893536421
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.33979763956490483
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3389953346808261
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.3292717657186516
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.3221928440420029
        }
    ], 
    "<net.imglib2.img.array.AbstractArrayLocalizingCursor: void <init>(net.imglib2.img.array.ArrayImg,int,int)>": [
        {
            "<boofcv.alg.filter.convolve.down.UtilDownConvolve: int computeOffset(int,int)>": 0.376378509924634
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void copy(int,int,int,int,int,int,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3574767469235882
        }, 
        {
            "<boofcv.alg.filter.misc.AverageDownSampleOps: int downSampleSize(int,int)>": 0.3564213663768896
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.UtilDisparityScore: void computeScoreRow(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayU8,int,int[],int,int,int,int[])>": 0.35187527435116606
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.UtilDisparityScore: void computeScoreRow(boofcv.struct.image.GrayS16,boofcv.struct.image.GrayS16,int,int[],int,int,int,int[])>": 0.35187527435116606
        }
    ], 
    "<net.imglib2.img.array.ArrayImgFactory: net.imglib2.img.NativeImg createDoubleInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1686333664237103
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1686333664237103
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1559201193509509
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.15386142866645397
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.15386142866645397
        }
    ], 
    "<net.imglib2.transform.integer.shear.AbstractShearTransform: void <init>(int,int,int,net.imglib2.transform.integer.shear.AbstractShearTransform)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.5039792073841995
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.5039792073841995
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.5039792073841995
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.5010921585343323
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.5010921585343323
        }
    ], 
    "<net.imglib2.PointSampleList: net.imglib2.Interval initInterval(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.4342796973411985
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.39804948976209903
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.37794591428797714
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.37419610685648363
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.36959781265348496
        }
    ], 
    "<net.imglib2.util.Util: long[] int2long(int[])>": [
        {
            "<Catalano.Math.Tools: int Sum(int[])>": 0.47931456641117376
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int sumCoefficients(int[])>": 0.47931456641117376
        }, 
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.4704023423067308
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.4704023423067308
        }, 
        {
            "<Catalano.Statistics.HistogramStatistics: int Mode(int[])>": 0.46458045343255083
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void setImaginary(float)>": [
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_F32: void <init>(int,float,float)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_I: void <init>(int,float,float)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide(boofcv.struct.image.GrayF32,float,float,float,boofcv.struct.image.GrayF32)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayF32,float,float,float,boofcv.struct.image.GrayF32)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply(boofcv.struct.image.GrayF32,float,float,float,boofcv.struct.image.GrayF32)>": 0.31943979135861733
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void add(double[][],double[][],double[][])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.41737260832989476
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.41717567632735547
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.4168940254209105
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void removeContactPoint(int)>": 0.41427736736244314
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void freeNode(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.41106572891711246
        }
    ], 
    "<net.imglib2.position.transform.Floor: void move(float,int)>": [
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.2557442059717358
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.25345708535141465
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float ArcTan2(float,float)>": 0.2525084164386312
        }, 
        {
            "<Catalano.Core.DoublePoint: void <init>(float,float)>": 0.25216655352277
        }, 
        {
            "<org.jbox2d.tests.math.SinCosTest: long speedTestMath(int,int)>": 0.2405579037562856
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: boolean isInLowerTail(int,java.lang.Object)>": [
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isInlier(int)>": 0.3014971516592012
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isInlier(int)>": 0.3014971516592012
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.ConvexMeshShape: net.smert.jreactphysics3d.mathematics.Vector3 getLocalSupportPointWithoutMargin(net.smert.jreactphysics3d.mathematics.Vector3,net.smert.jreactphysics3d.mathematics.Vector3)>": 0.28211785903500997
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: void downHeap(int,java.lang.Comparable)>": 0.28157231721012554
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerKltPyramid: boolean dropTrack(boofcv.abst.feature.tracker.PointTrack)>": 0.2801809060785198
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: net.imglib2.Cursor localizingCursor()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.024397501823713325
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: void <init>(long)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2474564114045397
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.22987797268950488
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.22333236594861083
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.21659749995847632
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.21659749995847632
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsPeriodic: void move(int[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.360530104534061
        }, 
        {
            "<boofcv.misc.BoofMiscOps: int countNotZero(int[],int)>": 0.3534005801733502
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int max(int[],int,int,int,int)>": 0.3532298597986646
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int min(int[],int,int,int,int)>": 0.3532298597986646
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.34674962081858385
        }
    ], 
    "<net.imglib2.img.array.ArrayImgFactory: net.imglib2.img.array.ArrayImg createIntInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.16989915581702875
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.16989915581702875
        }
    ], 
    "<net.imglib2.transform.integer.shear.ShearTransform: void apply(net.imglib2.Localizable,net.imglib2.Positionable)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.42816645411671167
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.42612029652874117
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.42202254810816164
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4198028028129276
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.40771615397455535
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void <init>(net.imglib2.histogram.BinMapper1d)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.26039663485605397
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.26039663485605397
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2548418144864243
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.1814111786799417
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(com.flowpowered.react.collision.shape.AABB)>": 0.1814111786799417
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: net.imglib2.type.numeric.integer.UnsignedByteType copy()>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void drawPadding()>": 0.20491341956575432
        }, 
        {
            "<org.jbox2d.collision.ContactID: int compareTo(java.lang.Object)>": 0.19666913112986376
        }, 
        {
            "<org.box2d.proto.Box2D$PbFilter: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.19638687087259443
        }, 
        {
            "<Catalano.Imaging.FastGraphics: void DrawLine(Catalano.Core.IntPoint,Catalano.Core.IntPoint)>": 0.19588026488654336
        }, 
        {
            "<org.jbox2d.collision.ContactID: int compareTo(org.jbox2d.collision.ContactID)>": 0.19441285969377037
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsRandomValueFactory: void <init>(net.imglib2.type.numeric.RealType,double,double)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillCircleFromTopLeft(com.jogamp.opengl.GL2,double,double,double,double)>": 0.3866127312957307
        }, 
        {
            "<org.dyn4j.geometry.Vector3: void <init>(double,double,double,double,double,double)>": 0.38232250381477245
        }, 
        {
            "<Catalano.Math.Distances.Distance: double SquaredEuclidean(double,double,double,double)>": 0.38011304067617435
        }, 
        {
            "<org.dyn4j.geometry.Vector2: void <init>(double,double,double,double)>": 0.3800810838255764
        }, 
        {
            "<Catalano.Math.Geometry.QuadrilateralTransformationCalc: double Det2(double,double,double,double)>": 0.3797147755229946
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: double getPowerDouble()>": [
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.3239158125380203
        }, 
        {
            "<boofcv.abst.geo.fitting.DistanceFromModelResidual: double computeDistance(java.lang.Object)>": 0.31287079776504223
        }, 
        {
            "<boofcv.io.SimpleStringNumberReader: double getDouble()>": 0.3125
        }, 
        {
            "<Catalano.Statistics.Distributions.LaplaceDistribution: double Entropy()>": 0.3109020581105081
        }, 
        {
            "<Catalano.Math.Approximation: double Lowprecision_Pow(double,double)>": 0.3084858451322381
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: long frequency(java.util.List)>": [
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: long getTrackId(int)>": 0.28623688602351527
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: long getTrackId(int)>": 0.28623688602351527
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void renderArrows()>": 0.2810843522559385
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void renderMagnets()>": 0.2810843522559385
        }, 
        {
            "<boofcv.demonstrations.calibration.CommonDetectCalibrationApp: boolean isInGrids(georegression.struct.shapes.Polygon2D_F64)>": 0.2701855448252179
        }
    ], 
    "<net.imglib2.AbstractCursorInt: void localize(long[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS64)>": 0.4199711370798867
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS32,boofcv.struct.image.InterleavedS64)>": 0.3854336973927375
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: int[] getPivot()>": 0.30980785337593986
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayU16,boofcv.struct.image.GrayS64)>": 0.3016293762912974
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: void unbufferMove(int)>": 0.2958283027261787
        }
    ], 
    "<net.imglib2.img.list.ListLocalizingCursor: void set(java.lang.Object)>": [
        {
            "<boofcv.gui.SelectAlgorithmAndInputPanel: void access$100(boofcv.gui.SelectAlgorithmAndInputPanel,int,java.lang.String,java.lang.Object)>": 0.25201157660526974
        }, 
        {
            "<org.dyn4j.sandbox.events.BodyActionEvent: void <init>(java.lang.Object,int,java.lang.String,org.dyn4j.sandbox.SandboxBody)>": 0.2279866140386201
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Rendering: void <init>(java.lang.String,int,java.lang.Object)>": 0.22590970842636068
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Antialiasing: void <init>(java.lang.String,int,java.lang.Object)>": 0.22590970842636068
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Dithering: void <init>(java.lang.String,int,java.lang.Object)>": 0.22590970842636068
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: void bck(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36016035441676975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.35455846459436624
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.35455846459436624
        }
    ], 
    "<net.imglib2.converter.ComplexPhaseFloatConverter: void convert(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.24305110926064444
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.201832294726364
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.201832294726364
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.18427430546639723
        }, 
        {
            "<boofcv.alg.sfm.robust.ModelManagerScaleTranslate2D: void copyModel(java.lang.Object,java.lang.Object)>": 0.1810950483542926
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: net.imglib2.type.numeric.integer.Unsigned128BitType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.AbstractLocalizableInt: void localize(double[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayF64)>": 0.44889338435450676
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: double[] getDoublePivot()>": 0.44250716370904836
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS32,boofcv.struct.image.InterleavedF64)>": 0.4132829780629394
        }, 
        {
            "<Catalano.Core.ArraysUtil: double[] toDouble(int[])>": 0.37146896831757575
        }, 
        {
            "<boofcv.misc.BoofMiscOps: double[] convertTo_F64(int[])>": 0.37146896831757575
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: void bck(int)>": [
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.4039700349013416
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.4039700349013416
        }, 
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.39308798274850476
        }, 
        {
            "<boofcv.alg.feature.detect.line.LineImageOps: void pruneClutteredGrids(boofcv.struct.feature.MatrixOfList,int)>": 0.3914825035614205
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: net.coobird.thumbnailator.util.exif.Orientation typeOf(int)>": 0.3885984925044633
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform: void apply(long[],long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5504460460138464
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5347826009207023
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5346234411658888
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5226917271381455
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateMetrics(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.519028476331614
        }
    ], 
    "<net.imglib2.view.SubsampleIntervalView: void realMax(double[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF64)>": 0.3342424514341068
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedF64)>": 0.30467568596440475
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.274377585661556
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.27357213650722734
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.27357213650722734
        }
    ], 
    "<net.imglib2.view.iteration.IterableTransformBuilder$Slice: java.lang.Object iterationOrder()>": [
        {
            "<org.dyn4j.Reference: boolean equals(java.lang.Object)>": 0.2095503564125057
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void addDecomposablePolygonAction()>": 0.18931963058596296
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.18249653912209302
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean removeJoint(int)>": 0.1817486418379376
        }, 
        {
            "<org.dyn4j.dynamics.World: void removeAllJoints(boolean)>": 0.17823687748048628
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: void move(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4435034276190505
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.42970165235333685
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4213525746546586
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.4129318427911
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.41097647168782137
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: void bck(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.38426913313519717
        }, 
        {
            "<Catalano.Imaging.Filters.HysteresisThreshold: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.3838710314704621
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3810792294336155
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3810792294336155
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void boundRectangleInside(boofcv.struct.image.ImageBase,boofcv.struct.ImageRectangle)>": 0.38035546652712293
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: void <init>(net.imglib2.view.composite.CompositeView)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.03849001794597505
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03726779962499649
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.03693663377103528
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.036544084137792886
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03617679758851913
        }
    ], 
    "<net.imglib2.img.planar.PlanarLocalizingCursor: void <init>(net.imglib2.img.planar.PlanarLocalizingCursor)>": [
        {
            "<com.flowpowered.react.collision.broadphase.PairManager: boolean removePair(int,int)>": 0.38337646508491796
        }, 
        {
            "<boofcv.alg.segmentation.ImageSegmentationOps: void regionPixelId_to_Compact(boofcv.struct.image.GrayS32,org.ddogleg.struct.GrowQueue_I32,boofcv.struct.image.GrayS32)>": 0.37518370684318203
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.PairManager: void removePairWithHashValue(int,int)>": 0.36875020900291444
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS32)>": 0.3686293686313988
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS32)>": 0.3686293686313988
        }
    ], 
    "<net.imglib2.view.composite.AbstractNumericComposite: void set(net.imglib2.view.composite.AbstractNumericComposite)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27248219267578194
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27248219267578194
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27248219267578194
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.2703166248952427
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.26962991041689405
        }
    ], 
    "<net.imglib2.type.numeric.integer.IntType: net.imglib2.type.numeric.integer.IntType createVariable()>": [
        {
            "<boofcv.demonstrations.fiducial.FiducialTrackerApp: void refreshAll(java.lang.Object[])>": 0.09512551571501338
        }, 
        {
            "<org.dyn4j.dynamics.CapacityTest: void createFailureListenerCount()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.dynamics.CapacityTest: void createFailureJointCount()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.dynamics.CapacityTest: void createFailureBodyCount()>": 0.09306821918192615
        }, 
        {
            "<boofcv.demonstrations.sfm.d3.VisualizeMonocularPlaneVisualOdometryApp: void process(boofcv.io.image.SimpleImageSequence)>": 0.09106841590512935
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: net.imglib2.RandomAccess randomAccess()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.024397501823713325
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolatorARGB: void printWeights()>": [
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void print()>": 0.33388423332517164
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomQuadPnP: java.lang.String toString(georegression.struct.se.Se3_F64)>": 0.28800023339415737
        }, 
        {
            "<boofcv.struct.calib.StereoParameters: void print()>": 0.27681980844157655
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void print()>": 0.26540460679072203
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: double computeSum()>": 0.24963240664120456
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: long frequency(java.lang.Object)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2740537505941603
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(org.jbox2d.particle.ParticleSystem$Proxy)>": 0.2514108267962385
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.24982908383444097
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(java.lang.Object)>": 0.24724082579795964
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.24416357655326434
        }
    ], 
    "<net.imglib2.type.numeric.integer.ShortType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.10842661409823065
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.10132274924351498
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.10036934567095813
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.09785730607238811
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.09785730607238811
        }
    ], 
    "<net.imglib2.converter.RealARGBConverter: void <init>(double,double)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void access$000(boofcv.app.calib.AssistedCalibration,double,double,double,double)>": 0.5336401877373447
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceSe3SymmetricSq: void setIntrinsic(double,double,double,double,double,double)>": 0.5196431965654592
        }, 
        {
            "<boofcv.gui.fiducial.VisualizeFiducial: void drawLine(java.awt.Graphics2D,java.awt.geom.Line2D$Double,double,double,double,double)>": 0.5171538033530269
        }, 
        {
            "<boofcv.alg.sfm.robust.DistancePlane2DToPixelSq: void setIntrinsic(double,double,double)>": 0.510318790333798
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceHomographyPixelSq: void setIntrinsic(double,double,double)>": 0.510318790333798
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: double getMaxValue()>": [
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double pixelScaleCurrentToInput()>": 0.45907644491955485
        }, 
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double Mean()>": 0.4329220383349367
        }, 
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double Entropy()>": 0.4230423012983131
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.40935897046494646
        }, 
        {
            "<Catalano.Statistics.Distributions.RayleighDistribution: double DistributionFunction(double)>": 0.4041258539065733
        }
    ], 
    "<net.imglib2.KDTree: void realMax(double[])>": [
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.41549793349128344
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumn(double[][],int)>": 0.3973144980183334
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRow(double[][],int)>": 0.39592283060630346
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int[])>": 0.39110786522669816
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRows(double[],int[])>": 0.39110786522669816
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: double getDoublePosition(int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.40574316459343585
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4013532893609331
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3902305962088393
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.3897447508128796
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.3844941731245039
        }
    ], 
    "<net.imglib2.view.SubsampleView: long[] getSteps()>": [
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.30077011056745767
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.30077011056745767
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.20270791389845788
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.20270791389845788
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.18799491128699966
        }
    ], 
    "<net.imglib2.position.transform.AbstractPositionableTransform: void setPosition(int,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void abs(double[],int,int,double[],int,int,int,int)>": 0.2989059286990625
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(double[],int,int,double[],int,int,int,int)>": 0.2984718049078696
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(double[],int,int,double,double[],int,int,int,int)>": 0.2976587528247977
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(double[],int,int,double,double[],int,int,int,int)>": 0.2976587528247977
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(double[],int,int,double,double[],int,int,int,int)>": 0.2976587528247977
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: long getLongPosition(int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4246160416904417
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.40709257630820805
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4070853161757623
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.406890116862927
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.406890116862927
        }
    ], 
    "<net.imglib2.img.list.ListCursor: void localize(int[])>": [
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.3446073833219036
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.3286805884833316
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int)>": 0.3110325004601745
        }, 
        {
            "<org.jbox2d.collision.Distance$SimplexCache: void set(org.jbox2d.collision.Distance$SimplexCache)>": 0.2946802396178765
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int)>": 0.29278471848396204
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: float getF(int)>": 0.5869727736761196
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_S64: float getF(int)>": 0.5869727736761196
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F32: void setOutside(int,int,float)>": 0.49163800764408094
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.49163800764408094
        }, 
        {
            "<boofcv.alg.weights.WeightPixelUniform_F32: float weight(int,int)>": 0.4868016044136483
        }
    ], 
    "<net.imglib2.Point: net.imglib2.Point wrap(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.16091774958338118
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.16091774958338118
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.14897796647374148
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.13674648593716815
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.13530550484613413
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: void getComponentMapping(int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.519673839972705
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5061517773825265
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.4906766313473351
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.48995602847974673
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int)>": 0.48275443737485824
        }
    ], 
    "<net.imglib2.type.numeric.real.AbstractRealType: void set(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<org.dyn4j.geometry.TransformTest: void rotate()>": 0.21423921295396725
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawMouseJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.PinJoint,double)>": 0.20719810043457354
        }, 
        {
            "<org.dyn4j.geometry.AABBTest: void expand()>": 0.20698191268127264
        }, 
        {
            "<org.dyn4j.dynamics.AngleJointTest: void setMinAndMax()>": 0.20399119126264792
        }, 
        {
            "<org.dyn4j.geometry.Vector2Test: void distanceBugInVersions_1_1_0_to_3_1_7()>": 0.20383213889706447
        }
    ], 
    "<net.imglib2.view.SlicingRandomAccess: void bck(int)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4677244719891344
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.4610420083573563
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.4486006127376103
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.4470640584702392
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4417621941718377
        }
    ], 
    "<net.imglib2.img.sparse.BooleanNtree: void setValue(int,boolean)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.38901104269312653
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3846723536618065
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.3832696151969503
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.37155075560642714
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.36358570700650333
        }
    ], 
    "<net.imglib2.position.transform.FloorOffset: long f(double,long)>": [
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.4027384440571764
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.29021809395762677
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.28468774293351584
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.2698105840148985
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void update()>": 0.26965278596834724
        }
    ], 
    "<net.imglib2.view.IterableRandomAccessibleInterval: net.imglib2.RandomAccess randomAccess()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.0236227795630767
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.0236227795630767
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.0236227795630767
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.0236227795630767
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.0236227795630767
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg unsignedShorts(short[],long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.14702947288269252
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.1361035951395862
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.13459242771327712
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.13002080499333155
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void <init>(boofcv.demonstrations.tracker.CirculantVisualizationPanel$Listener)>": 0.1268911146031685
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.ExtendedRandomAccessibleInterval extendValue(net.imglib2.RandomAccessibleInterval,net.imglib2.type.Type)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.09174634218511289
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.09072767633979884
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.08764598212022147
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void <init>(boofcv.demonstrations.tracker.CirculantVisualizationPanel$Listener)>": 0.0855362829225267
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: void localize(double[])>": [
        {
            "<Catalano.Math.Decompositions.LUDecomposition: double[] getDoublePivot()>": 0.29050125569318513
        }, 
        {
            "<Catalano.Imaging.Tools.FlusserSukMoments: double[] Convert(java.util.ArrayList)>": 0.288780625237689
        }, 
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.27532440142445436
        }, 
        {
            "<Catalano.Imaging.Filters.DisparityMap: double PearsonDistance(Catalano.Imaging.FastBitmap,Catalano.Imaging.FastBitmap)>": 0.2746341249457602
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF64)>": 0.2722657907104261
        }
    ], 
    "<net.imglib2.img.array.ArrayImgFactory: net.imglib2.img.NativeImg create(long[],net.imglib2.type.NativeType)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18468978709403533
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18468978709403533
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.17073302537381008
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.13283668434178905
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.13283668434178905
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: void apply(long[],long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5052663488122023
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.4870472592472791
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.48214873410186065
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4788323859332361
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.47387077905316966
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRealRandomAccessible: net.imglib2.converter.read.ConvertedRealRandomAccess realRandomAccess()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04879500364742665
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04724555912615341
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04682572978040922
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04632808229131882
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04586246160658393
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: int getIntPosition(int)>": [
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.4207464287138953
        }, 
        {
            "<boofcv.abst.fiducial.calib.CalibrationDetectorSquareFiducialGrid: int getPointIndex(int,int)>": 0.4093855492722243
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(long[],int,int,long[],int,int,int,int)>": 0.40534847444657185
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(long[],int,int,long[],int,int,int,int)>": 0.40410477685526464
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long[],int,int,int,int)>": 0.400703006030923
        }
    ], 
    "<net.imglib2.position.transform.FloorOffset: void setPosition(float[])>": [
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_S64: void setF(int,float[])>": 0.25053408632337193
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.24446111706564927
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2346778574857889
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_F32: void setOutside(int,int,float[])>": 0.22962830707485404
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_F64: void setF(int,float[])>": 0.2292137752801939
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: void set(net.imglib2.type.numeric.real.FloatType)>": [
        {
            "<com.flowpowered.react.math.Matrix4x4: com.flowpowered.react.math.Matrix4x4 negate(com.flowpowered.react.math.Matrix4x4)>": 0.221268891552592
        }, 
        {
            "<boofcv.gui.feature.VisualizeOpticalFlow: void magnitudeAbs(boofcv.struct.flow.ImageFlow,float,java.awt.image.BufferedImage)>": 0.21926211541711957
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: com.flowpowered.react.math.Matrix4x4 set(com.flowpowered.react.math.Matrix4x4)>": 0.2188010107221439
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: com.flowpowered.react.math.Matrix3x3 negate(com.flowpowered.react.math.Matrix3x3)>": 0.21688453483343317
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: void <init>(com.flowpowered.react.math.Matrix4x4)>": 0.2163557878964554
        }
    ], 
    "<net.imglib2.converter.Converters: net.imglib2.RandomAccessible convert(net.imglib2.RandomAccessible,net.imglib2.converter.Converter,net.imglib2.type.Type)>": [
        {
            "<boofcv.gui.DepthVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.14052767196315077
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.14052767196315077
        }, 
        {
            "<org.dyn4j.collision.narrowphase.PairwiseTypedFallbackCondition: boolean isMatch(java.lang.Class,java.lang.Class)>": 0.13990854174238493
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.1323301932270773
        }, 
        {
            "<boofcv.abst.feature.associate.EnforceUniqueByScore: void <init>(boofcv.abst.feature.associate.Associate,boolean,boolean)>": 0.13090996793955453
        }
    ], 
    "<net.imglib2.histogram.Integer1dBinMapper: void getCenterValue(long,net.imglib2.type.numeric.IntegerType)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.37347854917317913
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.3435624949921297
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.32946146686250805
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.3196233788043842
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.31008916921042246
        }
    ], 
    "<net.imglib2.view.composite.CompositeIntervalView: net.imglib2.RandomAccessibleInterval zeroMinN(net.imglib2.RandomAccessibleInterval)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2349000654084097
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.22659888493722447
        }, 
        {
            "<boofcv.core.image.impl.ConvertInterleavedToSingle: void average(boofcv.struct.image.InterleavedS64,boofcv.struct.image.GrayS64)>": 0.2256636546716302
        }, 
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.21964713194284768
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.21850970832794903
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void mul(net.imglib2.type.numeric.complex.ComplexFloatType)>": [
        {
            "<com.flowpowered.react.math.Matrix4x4: float determinant3x3(float,float,float,float,float,float,float,float,float)>": 0.3825796019216825
        }, 
        {
            "<org.jbox2d.dynamics.contacts.ContactSolver: boolean solvePositionConstraints()>": 0.3337593845220957
        }, 
        {
            "<org.jbox2d.dynamics.contacts.ContactSolver: boolean solveTOIPositionConstraints(int,int)>": 0.33322290017815176
        }, 
        {
            "<boofcv.alg.distort.radtan.AddRadialNtoN_F32: void compute(float,float,georegression.struct.point.Point2D_F32)>": 0.3315939760544254
        }, 
        {
            "<boofcv.alg.flow.HornSchunckPyramid: void process(boofcv.struct.pyramid.ImagePyramid,boofcv.struct.pyramid.ImagePyramid)>": 0.33114092685017293
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedIterableRandomAccessibleInterval: java.lang.Object firstElement()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: boolean includesUpperBounds(long[])>": [
        {
            "<org.dyn4j.dynamics.World: boolean isEmpty()>": 0.37106663236822124
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerTwoPassKltPyramid: void finishTracking()>": 0.34664191767371033
        }, 
        {
            "<org.dyn4j.collision.AbstractCollidable: boolean contains(org.dyn4j.geometry.Vector2)>": 0.34533510695395325
        }, 
        {
            "<boofcv.io.wrapper.images.LoadFileImageSequence: boolean hasNext()>": 0.33326026451734947
        }, 
        {
            "<boofcv.io.wrapper.images.JpegByteImageSequence: boolean hasNext()>": 0.33228722866412386
        }
    ], 
    "<net.imglib2.transform.integer.shear.ShearTransform: net.imglib2.transform.integer.BoundingBox transform(net.imglib2.transform.integer.BoundingBox)>": [
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.3416054823597941
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.3219220647003815
        }, 
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: void transform(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.28890534225850056
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.InterleavedS64,java.util.Random,long,long)>": 0.28861179861111325
        }, 
        {
            "<boofcv.core.image.ConvertImage: boofcv.struct.image.GrayU8 convert(boofcv.struct.image.GrayS64,long,long,int,boofcv.struct.image.GrayU8)>": 0.28642103086354215
        }
    ], 
    "<net.imglib2.type.logic.BitType: void and(net.imglib2.type.logic.BitType)>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.46708056725764807
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.4634901589244901
        }, 
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.4154969833228084
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean overlap(int,int)>": 0.4150195767707182
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean isSubset(int,int)>": 0.4150195767707182
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsBorder: void move(int[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.360530104534061
        }, 
        {
            "<boofcv.misc.BoofMiscOps: int countNotZero(int[],int)>": 0.3534005801733502
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int max(int[],int,int,int,int)>": 0.3532298597986646
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int min(int[],int,int,int,int)>": 0.3532298597986646
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.34674962081858385
        }
    ], 
    "<net.imglib2.iterator.LocalizingIntervalIterator: void <init>(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.3144670071202532
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.3144670071202532
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.3029897659271936
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.28346262662078586
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2773869261820244
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: long positionWithOffsetToIndex(long[],long[],long[])>": [
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.3420621028174403
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.3366765286289715
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.310083665810633
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.310083665810633
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.310083665810633
        }
    ], 
    "<net.imglib2.img.planar.PlanarPlaneSubsetLocalizingCursor: void <init>(net.imglib2.img.planar.PlanarImg,net.imglib2.Interval)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: int access$200(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.30974097860390337
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$100(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.30974097860390337
        }, 
        {
            "<boofcv.core.image.ConvertImage: boofcv.struct.image.GrayU8 convert(boofcv.struct.image.GrayS64,long,long,int,boofcv.struct.image.GrayU8)>": 0.3066132188828399
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.InterleavedS64,java.util.Random,long,long)>": 0.305478257776368
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillUniform(boofcv.struct.image.InterleavedS64,java.util.Random,long,long)>": 0.3041293260608017
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: void <init>(long[])>": [
        {
            "<com.flowpowered.react.constraint.ConstraintSolver: void solveVelocityConstraints(com.flowpowered.react.engine.Island)>": 0.23860118791243348
        }, 
        {
            "<com.flowpowered.react.constraint.ConstraintSolver: void solvePositionConstraints(com.flowpowered.react.engine.Island)>": 0.2292805739449878
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: int getReminder(int,int[])>": 0.21845231269058368
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F32_1D: int getReminder(int,int[])>": 0.21845231269058368
        }, 
        {
            "<com.flowpowered.react.constraint.ConstraintSolver: void initializeForIsland(float,com.flowpowered.react.engine.Island)>": 0.20231128506068355
        }
    ], 
    "<net.imglib2.view.iteration.SlicingCursor: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.type.label.BasePairCharType: net.imglib2.type.label.BasePairBitType$Base get()>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: int trans(int)>": 0.06235900151205884
        }, 
        {
            "<Catalano.Math.Tools: boolean isNumeric(java.lang.String)>": 0.052770382217398895
        }, 
        {
            "<org.jbox2d.testbed.tests.ApplyForce: void keyPressed(char,int)>": 0.052757945465271856
        }, 
        {
            "<Catalano.Math.Distances.Distance: int Hamming(java.lang.String,java.lang.String)>": 0.050368718168587914
        }, 
        {
            "<org.jbox2d.testbed.framework.QueueItem: void <init>(org.jbox2d.testbed.framework.QueueItemType,char,int)>": 0.04525876246543145
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void setPosition(int,int)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.4954196921097764
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.4893810727715689
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.4893810727715689
        }
    ], 
    "<net.imglib2.img.sparse.BooleanNtree: boolean getValue(int)>": [
        {
            "<net.coobird.thumbnailator.makers.ThumbnailMaker$ReadinessTracker: boolean isSet(java.lang.String)>": 0.35182282028742823
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.3447577893536421
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.33979763956490483
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3389953346808261
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.3292717657186516
        }
    ], 
    "<net.imglib2.view.IntervalView: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.021677749238102995
        }
    ], 
    "<net.imglib2.RealPoint: void move(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.402402829457273
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.402402829457273
        }, 
        {
            "<boofcv.alg.descriptor.UtilFeature: void normalizeL2(boofcv.struct.feature.TupleDesc_F64)>": 0.36697759733594204
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel2D_F64,double)>": 0.36356715611543783
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftx020(double[],int)>": 0.3499060569112929
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: void localize(long[])>": [
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.2389139710945486
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.23761969359661408
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(long[],int,int,long[],int,int,int,int)>": 0.22570900530033366
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.22515192403046907
        }, 
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.22507511457316093
        }
    ], 
    "<net.imglib2.type.logic.BitType: void <init>(boolean)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2505054200065413
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.EndPoint: void setValues(int,boolean,long)>": 0.23329814997652737
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint: void setValues(int,boolean,long)>": 0.23329814997652737
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.21949259041479605
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.2183654707173325
        }
    ], 
    "<net.imglib2.type.label.BasePairBitType: void <init>(net.imglib2.type.label.BasePairBitType$Base)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.25354227271269925
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.25354227271269925
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.25354227271269925
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.24954432952155303
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.24550017373855176
        }
    ], 
    "<net.imglib2.img.cell.CellIterationOrder: boolean equals(java.lang.Object)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void updateObjectIntegerAABB(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.broadphase.AABBInt)>": 0.3904635575166344
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void updateObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.3899870379246994
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.RegularClustersIntoGrids: int checkNumberOfConnections(java.util.List)>": 0.37299653517190223
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect2D(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.BoxAABB,int,int)>": 0.37276626737373936
        }, 
        {
            "<Catalano.Math.Dissimilarities.Dissimilarity: double SokalMichener(int[],int[])>": 0.3558770036933253
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: net.imglib2.transform.integer.MixedTransform concatenate(net.imglib2.transform.integer.Mixed)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.3372020708053243
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.3318655922825927
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.3278393766720897
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.32239067867255916
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void addObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.3208113934891665
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned12BitType: net.imglib2.type.numeric.integer.Unsigned12BitType createVariable()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05923488777590923
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.057353933467640436
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.05684427997196944
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05624015883323094
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.055674916760380555
        }
    ], 
    "<net.imglib2.neighborsearch.KNearestNeighborSearchOnIterableRealInterval: net.imglib2.RealLocalizable getPosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.507951431150968
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.500192321953524
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.4851771862988099
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.4748176736264324
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.4686374391227377
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,long[])>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.36609304571965384
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.36609304571965384
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36549264850998225
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.3595523916209714
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.3595523916209714
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListRandomAccess: void set(java.lang.Object)>": [
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<net.coobird.thumbnailator.resizers.ProgressiveBilinearResizer: void <init>(java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<net.coobird.thumbnailator.resizers.BicubicResizer: void <init>(java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<net.coobird.thumbnailator.resizers.BilinearResizer: void <init>(java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<boofcv.abst.geo.fitting.DistanceFromModelResidualN: void setModel(java.lang.Object)>": 0.21126595987653524
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: void set(int)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.4257675403110725
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.4257675403110725
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.4243808218415991
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.41962228699555393
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.41962228699555393
        }
    ], 
    "<net.imglib2.util.Intervals: net.imglib2.FinalInterval union(net.imglib2.Interval,net.imglib2.Interval)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.30448528353704607
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void addObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.2963843757309752
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2927526769720503
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.2828830695957953
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.27388333609104365
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: net.imglib2.type.numeric.complex.ComplexFloatType copy()>": [
        {
            "<com.flowpowered.react.math.Matrix4x4: com.flowpowered.react.math.Matrix4x4 negate(com.flowpowered.react.math.Matrix4x4)>": 0.255729773257785
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: com.flowpowered.react.math.Matrix4x4 set(com.flowpowered.react.math.Matrix4x4)>": 0.2508355607800231
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: com.flowpowered.react.math.Matrix3x3 negate(com.flowpowered.react.math.Matrix3x3)>": 0.2502415844814708
        }, 
        {
            "<boofcv.alg.tracker.klt.KltTracker: boolean internalSetDescriptionBorder(boofcv.alg.tracker.klt.KltFeature)>": 0.24962213119669263
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: void <init>(com.flowpowered.react.math.Matrix4x4)>": 0.2468090605864366
        }
    ], 
    "<net.imglib2.img.list.ListLocalizingCursor: boolean hasNext()>": [
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.6019403012881088
        }, 
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.592628377022738
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.5909704350306674
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.5909704350306674
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.5909704350306674
        }
    ], 
    "<net.imglib2.util.Partition: int partitionSubList(int,int,java.util.List)>": [
        {
            "<Catalano.Core.Structs.BinaryHeap: void downHeap(int,java.lang.Comparable)>": 0.34535714577575866
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: java.lang.Comparable remove()>": 0.33980497966119017
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: void upHeap(int,java.lang.Comparable)>": 0.3299780125585825
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: void <init>(java.lang.Comparable[])>": 0.3279481896947855
        }, 
        {
            "<Catalano.Imaging.Filters.BlobsFiltering: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.2927364244435114
        }
    ], 
    "<net.imglib2.AbstractRealInterval: void realMax(double[])>": [
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.41549793349128344
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumn(double[][],int)>": 0.3973144980183334
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRow(double[][],int)>": 0.39592283060630346
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int[])>": 0.39110786522669816
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRows(double[],int[])>": 0.39110786522669816
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess: void setPosition(long[])>": [
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: void convolveBorder(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,boofcv.struct.image.GrayS64,int,int)>": 0.32159438859016753
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.3094756152178278
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS32)>": 0.30496015123051073
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.2968157005380206
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedS32)>": 0.2932879603122133
        }
    ], 
    "<net.imglib2.transform.integer.permutation.PermutationTransform: void <init>(int[],int,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.5071445815864961
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.5071445815864961
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.5071445815864961
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(int[],int,int,int[],int,int,int,int)>": 0.5004643571503555
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int[],int,int,int,int)>": 0.4996097991290252
        }
    ], 
    "<net.imglib2.view.composite.NumericComposite$Factory: net.imglib2.view.composite.Composite create(net.imglib2.RandomAccess)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.16637681637811313
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.16637681637811313
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.16637681637811313
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.16412253848848146
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.16118054596459017
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05773502691896257
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.05590169943749474
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.055404950656552925
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05481612620668933
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.054265196382778706
        }
    ], 
    "<net.imglib2.KDTree$DimComparator: int compare(java.lang.Object,java.lang.Object)>": [
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(java.lang.Object)>": 0.29375067326063736
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(java.lang.Object)>": 0.2504390674151376
        }, 
        {
            "<boofcv.alg.tracker.klt.KltTracker: void computeSubImageBounds(boofcv.alg.tracker.klt.KltFeature,float,float)>": 0.24763605369443215
        }, 
        {
            "<boofcv.alg.tracker.klt.KltTracker: int computeGandE_border(boofcv.alg.tracker.klt.KltFeature,float,float)>": 0.24703743417481538
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Vector2: int getMinAxis()>": 0.24673542241586033
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void realMax(net.imglib2.RealPositionable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.iterator.LocalizingIntervalIterator: void localize(int[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS32)>": 0.44889338435450676
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedS32)>": 0.4132829780629394
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void fill(boofcv.struct.convolve.Kernel2D_I32,int)>": 0.36661737439650505
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.3605775583000914
        }, 
        {
            "<Catalano.Math.Matrix: void Fill(int[],int)>": 0.35163589953845803
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowing: net.imglib2.type.numeric.NumericType get()>": [
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean computeClosestPoint(com.flowpowered.react.math.Vector3)>": 0.25052880293309643
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS32)>": 0.2445565507498601
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayI8)>": 0.24289315306986992
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayI16)>": 0.2412278920303999
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF32)>": 0.2398857331990596
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: void setPosition(net.imglib2.Localizable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg unsignedInts(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: void set(net.imglib2.type.numeric.integer.GenericIntType)>": [
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.29772617643192967
        }, 
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.29443155358186823
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.29443155358186823
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.29443155358186823
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(int,boofcv.struct.image.InterleavedU8,int,int,boofcv.struct.image.InterleavedU8)>": 0.2861359894274673
        }
    ], 
    "<net.imglib2.iterator.IntervalIterator: void <init>(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.3048575700444983
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.3048575700444983
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2984297492374436
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.28252177591199007
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.27168472433404733
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: long getTranslation(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.5640460575948852
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.4986765220219389
        }, 
        {
            "<org.jbox2d.collision.Distance$DistanceProxy: org.jbox2d.common.Vec2 getVertex(int)>": 0.4986765220219389
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: org.jbox2d.collision.AABB getFatAABB(int)>": 0.4986765220219389
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: java.lang.Object getUserData(int)>": 0.4986765220219389
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void updateContainer(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.3187477037083238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.22574829559349857
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.22057752193984925
        }
    ], 
    "<net.imglib2.transform.integer.permutation.AbstractPermutationTransform: void <init>(int[])>": [
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int[])>": 0.42231630312283314
        }, 
        {
            "<Catalano.Math.Matrix: int[] getRows(int[],int[])>": 0.42231630312283314
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void <init>(int[])>": 0.37391250950183436
        }, 
        {
            "<Catalano.Core.ArraysUtil: int[] asArray(java.lang.Number[])>": 0.35320355796485536
        }, 
        {
            "<Catalano.Math.Matrix: int[] Subtract(int[],int[])>": 0.35285805690630756
        }
    ], 
    "<net.imglib2.transform.integer.SequentializeTransform: void apply(int[],int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.562683195017078
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.546875216034365
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5405043157541766
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5402644500841758
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void removeContactPoint(int)>": 0.536902622991196
        }
    ], 
    "<net.imglib2.view.TransformRandomAccess: void setPosition(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.468536325802491
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.45644740722555815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4549590327161815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4514297284100339
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.44882531202406517
        }
    ], 
    "<net.imglib2.view.IntervalView: void <init>(net.imglib2.RandomAccessible,long[],long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4044651271920876
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.39698847125824943
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.391265592250218
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.38627007334840946
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateStructure(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.3858669459181104
        }
    ], 
    "<net.imglib2.view.IterableRandomAccessibleInterval: void <init>(net.imglib2.RandomAccessibleInterval)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.27829752455383167
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.26859416121053026
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.2591471603622697
        }, 
        {
            "<org.box2d.proto.Box2D$PbShape$Builder: org.box2d.proto.Box2D$PbShape$Builder setTag(long)>": 0.24479801715709246
        }, 
        {
            "<org.box2d.proto.Box2D$PbFixture$Builder: org.box2d.proto.Box2D$PbFixture$Builder setTag(long)>": 0.24479801715709246
        }
    ], 
    "<net.imglib2.KDTree$SamplerNode: void <init>(net.imglib2.KDTree$SamplerNode)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.049690399499995326
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.048112522432468816
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04768498915339404
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.047178209756024825
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.046704044859817086
        }
    ], 
    "<net.imglib2.view.MixedRandomAccess: void <init>(net.imglib2.view.MixedRandomAccess)>": [
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.24312253998901648
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.24312253998901648
        }, 
        {
            "<Catalano.Math.Geometry.GrahamConvexHull: java.util.ArrayList FindFull(java.util.ArrayList)>": 0.1672438320503864
        }, 
        {
            "<org.dyn4j.Reference: int hashCode()>": 0.1620171180860325
        }, 
        {
            "<boofcv.struct.image.ImageGray: void setTo(boofcv.struct.image.ImageGray)>": 0.15834023614750495
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void bckDim0()>": [
        {
            "<org.dyn4j.sandbox.ContactCounter: void sensed(org.dyn4j.dynamics.contact.ContactPoint)>": 0.3755119868588148
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.EPAAlgorithm: void addFaceCandidate(net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA,java.util.Queue,int[],float)>": 0.27982282191581026
        }, 
        {
            "<Catalano.Math.Matrix: int[] SubMatrix(int[],int)>": 0.2742958095801854
        }, 
        {
            "<org.dyn4j.sandbox.ContactCounter: void end(org.dyn4j.dynamics.contact.ContactPoint)>": 0.27076758930340716
        }, 
        {
            "<Catalano.Imaging.Filters.EnsembleThreshold: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.26605689943914873
        }
    ], 
    "<net.imglib2.AbstractRealInterval: void <init>(net.imglib2.RealInterval)>": [
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int)>": 0.38294380155431906
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void <init>(int)>": 0.3791100551795674
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.3640045162759716
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void <init>(boofcv.struct.image.InterleavedF64)>": 0.36109355099724477
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.35387234203639406
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsRandomValueFactory: void setMinMax(double,double)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillCircleFromTopLeft(com.jogamp.opengl.GL2,double,double,double,double)>": 0.49788340011681376
        }, 
        {
            "<Catalano.Math.Distances.Distance: double SquaredEuclidean(double,double,double,double)>": 0.4955217999059087
        }, 
        {
            "<Catalano.Math.Geometry.QuadrilateralTransformationCalc: double Det2(double,double,double,double)>": 0.49500034841702034
        }, 
        {
            "<org.dyn4j.geometry.Vector3: void <init>(double,double,double,double,double,double)>": 0.49387937158340267
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Manhattan(double,double,double,double)>": 0.4911740232657572
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned4BitType: void <init>(long)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.39533919159998665
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.35645271449831517
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.3329839463683894
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3152555341407059
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.29043717175584594
        }
    ], 
    "<net.imglib2.img.cell.AbstractCellImg: void getCellPosition(long[],long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3431550589783322
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.32034399038977096
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.31795025855023495
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long[],int,int,int,int)>": 0.31780717064814734
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long[],int,int,int,int)>": 0.31780717064814734
        }
    ], 
    "<net.imglib2.img.sparse.BooleanNtree: void <init>(long[],long[],boolean)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2540752051198477
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2540752051198477
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2349754431075122
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.1713429686593547
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.1713429686593547
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: void move(net.imglib2.Localizable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: float get()>": [
        {
            "<Catalano.Imaging.Tools.ImageStatistics: float Variance(Catalano.Imaging.FastBitmap,float)>": 0.3135392598020063
        }, 
        {
            "<boofcv.alg.interpolate.array.Interpolate1D_F32: float process(int,float)>": 0.30881885353145466
        }, 
        {
            "<Catalano.Math.Geometry.Line: float DistanceToPoint(Catalano.Core.IntPoint)>": 0.30273991679910894
        }, 
        {
            "<boofcv.alg.weights.WeightPixelUniform_F32: float weightIndex(int)>": 0.3018132254679891
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$GSingleToMB: float getF(int)>": 0.29532163742690054
        }
    ], 
    "<net.imglib2.transform.integer.ComponentMappingTransform: void setComponentMapping(int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5016452850811526
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.49358880469178634
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.4816319390020964
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.4777494390974596
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.47397489626157424
        }
    ], 
    "<net.imglib2.view.RandomAccessibleIntervalCursor: void localize(float[])>": [
        {
            "<boofcv.struct.feature.TupleDesc_F32: void set(float[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: void <init>(int,float[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void <init>(float[],int,int)>": 0.2540764877039817
        }, 
        {
            "<boofcv.alg.interpolate.array.PolynomialNeville_F32: void <init>(int,float[],float[],int)>": 0.25147436847440663
        }, 
        {
            "<Catalano.Imaging.Filters.ImagePyramids: void <init>()>": 0.22423504135338396
        }
    ], 
    "<net.imglib2.display.awt.UnsignedIntDataBuffer: int getElem(int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.49105803598952413
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.49105803598952413
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.49105803598952413
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.4749546618449792
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: double getDouble(int,int)>": 0.4745108734967476
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: java.util.Iterator iterator()>": [
        {
            "<Catalano.Math.SparseArray: java.util.Iterator iterator()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$BufferedImageImageSourceIterator$1: void <init>(net.coobird.thumbnailator.Thumbnails$Builder$BufferedImageImageSourceIterator)>": 0.14138610242640864
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$InputStreamImageSourceIterator$1: void <init>(net.coobird.thumbnailator.Thumbnails$Builder$InputStreamImageSourceIterator)>": 0.14138610242640864
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$URLImageSourceIterator$1: void <init>(net.coobird.thumbnailator.Thumbnails$Builder$URLImageSourceIterator)>": 0.14138610242640864
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$StringImageSourceIterator$1: void <init>(net.coobird.thumbnailator.Thumbnails$Builder$StringImageSourceIterator)>": 0.14138610242640864
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: void setPosition(net.imglib2.Localizable)>": [
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.2508604268025686
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.2497918447174252
        }, 
        {
            "<boofcv.struct.image.GrayS64: void set(int,int,long)>": 0.24862883500898048
        }, 
        {
            "<boofcv.core.image.impl.ConvertInterleavedToSingle: void average(boofcv.struct.image.InterleavedS64,boofcv.struct.image.GrayS64)>": 0.24710209205979614
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.24679523850211024
        }
    ], 
    "<net.imglib2.img.ImgView: void <init>(net.imglib2.RandomAccessibleInterval,net.imglib2.img.ImgFactory)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.051639777949432225
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.05
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04955569438322958
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04902903378454601
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04853626716970755
        }
    ], 
    "<net.imglib2.util.ConstantUtils$1$ConstantRandomAccess: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: void <init>(net.imglib2.outofbounds.AbstractOutOfBoundsMirror)>": [
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.31128420715712046
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set(int,int,long[])>": 0.29176133887861383
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.28930667317348124
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.28930667317348124
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.2892625103354195
        }
    ], 
    "<net.imglib2.img.AbstractImg: void max(net.imglib2.Positionable)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.15211182259029543
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.15211182259029543
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.14107119965671933
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.13623731522826651
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.13623731522826651
        }
    ], 
    "<net.imglib2.iterator.OffsetableLocalizingIntervalIterator: void <init>(long[],long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2714880268656277
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2714880268656277
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.25136798088455087
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2271525380463154
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2166580267769197
        }
    ], 
    "<net.imglib2.img.cell.CellLocalizingCursor: void moveToNextCell()>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.25807344083660677
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2518934729237221
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2518934729237221
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2303594644558457
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.22365285244833386
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair: net.imglib2.view.RandomAccessiblePair$RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06454972243679027
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0625
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06194461797903697
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.061286292230682514
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06067033396213444
        }
    ], 
    "<net.imglib2.position.transform.Floor: void floor(double[],long[])>": [
        {
            "<Catalano.Statistics.Tools: double Sum(double[])>": 0.47541841068846447
        }, 
        {
            "<Catalano.Math.Tools: double Sum(double[])>": 0.47541841068846447
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.46598236503508195
        }, 
        {
            "<Catalano.Math.Matrix: double[] Log(double[])>": 0.46517302643496944
        }, 
        {
            "<Catalano.Statistics.DescriptiveStatistics: double Minimum(double[])>": 0.45852261978464537
        }
    ], 
    "<net.imglib2.type.logic.BoolType: void set(net.imglib2.type.logic.BoolType)>": [
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.2272843225242474
        }, 
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.22455960210876322
        }, 
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.2232906137604548
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.2232906137604548
        }, 
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: boolean process(boofcv.struct.image.ImageBase)>": 0.2077476929823621
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: boolean isInUpperTail(java.util.List)>": [
        {
            "<boofcv.io.SimpleStringNumberReader: boolean next()>": 0.3230701555635679
        }, 
        {
            "<boofcv.demonstrations.calibration.CommonDetectCalibrationApp: boolean isInGrids(georegression.struct.shapes.Polygon2D_F64)>": 0.32275890047349665
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerTwoPassKltPyramid: void finishTracking()>": 0.30817455594384174
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.ConvexMeshShape: net.smert.jreactphysics3d.mathematics.Vector3 getLocalSupportPointWithoutMargin(net.smert.jreactphysics3d.mathematics.Vector3,net.smert.jreactphysics3d.mathematics.Vector3)>": 0.30344073496031126
        }, 
        {
            "<org.dyn4j.dynamics.World: void getListeners(java.lang.Class,java.util.List)>": 0.3017545454903122
        }
    ], 
    "<net.imglib2.AbstractLocalizableInt: void localize(float[])>": [
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_IL_S16: void get_fast(float,float,float[])>": 0.48030266829275253
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_IL_U16: void get_fast(float,float,float[])>": 0.48030266829275253
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_IL_S32: void get_fast(float,float,float[])>": 0.48030266829275253
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_IL_U8: void get_fast(float,float,float[])>": 0.48030266829275253
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_S32: void getF(int,float[])>": 0.460275557651996
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorSingleBoundary: void <init>(net.imglib2.Interval)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.25947726595702586
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2571070906649094
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2292775015951243
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2292775015951243
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.22790282334925122
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: int compareTo(net.imglib2.type.numeric.integer.GenericIntType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.27143901582835495
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.23875131874632927
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.22922981152000166
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.22554886991647033
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.22148801744043484
        }
    ], 
    "<net.imglib2.img.array.AbstractArrayCursor: boolean hasNext()>": [
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.6023849455289535
        }, 
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.5934959054221014
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.5928412662400641
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.5928412662400641
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.5928412662400641
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: void updateContainer(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.3187477037083238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.22574829559349857
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.22057752193984925
        }
    ], 
    "<net.imglib2.view.SubsampleIntervalView: void <init>(net.imglib2.RandomAccessibleInterval,long[])>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.3215835772395368
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.32068957680486304
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.32068957680486304
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.24805226481662357
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2393443761696528
        }
    ], 
    "<net.imglib2.transform.integer.permutation.AbstractPermutationTransform: int applyInverse(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.7971082718892609
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.7875797356576464
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.7666734068198182
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.7611977688432564
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: int get(int)>": 0.759469696969697
        }
    ], 
    "<net.imglib2.display.screenimage.awt.AWTScreenImageUtil: net.imglib2.display.screenimage.awt.ArrayImgAWTScreenImage emptyScreenImage(net.imglib2.type.NativeType,long[])>": [
        {
            "<boofcv.alg.misc.GImageMiscOps: void flipHorizontal(boofcv.struct.image.ImageBase)>": 0.35185328736937177
        }, 
        {
            "<boofcv.alg.misc.GImageMiscOps: void rotateCW(boofcv.struct.image.ImageBase)>": 0.35185328736937177
        }, 
        {
            "<boofcv.alg.misc.GImageMiscOps: void flipVertical(boofcv.struct.image.ImageBase)>": 0.35185328736937177
        }, 
        {
            "<boofcv.alg.misc.GImageMiscOps: void rotateCCW(boofcv.struct.image.ImageBase)>": 0.35185328736937177
        }, 
        {
            "<boofcv.alg.misc.GImageMiscOps: void rotateCCW(boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase)>": 0.3407367653368195
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListCursor: boolean hasNext()>": [
        {
            "<Catalano.Core.Stopwatch: boolean isRunning()>": 0.4945485634967093
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.4739643758646771
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.4739643758646771
        }, 
        {
            "<boofcv.io.javacv.JavaCVVideoImageSequence: boolean hasNext()>": 0.4739643758646771
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.4575697875022087
        }
    ], 
    "<net.imglib2.type.numeric.real.AbstractRealType: int compareTo(java.lang.Object)>": [
        {
            "<boofcv.struct.feature.MatchScoreType$1: int compareTo(double,double)>": 0.35922633544924737
        }, 
        {
            "<boofcv.struct.feature.MatchScoreType$2: int compareTo(double,double)>": 0.35922633544924737
        }, 
        {
            "<org.dyn4j.collision.narrowphase.ExpandingSimplexEdge: int compareTo(java.lang.Object)>": 0.34574466051589003
        }, 
        {
            "<boofcv.alg.tracker.meanshift.TrackerMeanShiftComaniciu2003: int selectBest(double,double,double)>": 0.3372983466769872
        }, 
        {
            "<boofcv.examples.recognition.ExampleColorHistogramLookup$1: int compare(java.lang.Object,java.lang.Object)>": 0.3270952263038854
        }
    ], 
    "<net.imglib2.img.cell.CellCursor: void <init>(net.imglib2.img.cell.AbstractCellImg)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.20557033024101645
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.20557033024101645
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.20557033024101645
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.2043369540878266
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.20016568231382
        }
    ], 
    "<net.imglib2.type.label.BasePairBitType: net.imglib2.type.label.BasePairBitType copy()>": [
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.09488401440957371
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.08890008890013333
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.08861469461982081
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.08758113121817132
        }, 
        {
            "<org.box2d.proto.Box2D$PbShape$Builder: org.box2d.proto.Box2D$PbShape$Builder setTag(long)>": 0.08696263565463043
        }
    ], 
    "<net.imglib2.display.awt.UnsignedIntDataBuffer: int[] getData(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.6444652635187575
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.543770193028446
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: int get(int)>": 0.5168876727488003
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getLength(int)>": 0.5168876727488003
        }, 
        {
            "<boofcv.misc.BoofMiscOps: int countNotZero(int[],int)>": 0.5161416082884006
        }
    ], 
    "<net.imglib2.view.composite.CompositeView: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.042447635997800895
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04109974682633932
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04073452985908362
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04030161751369757
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03989656585141091
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: void move(int[])>": [
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.39963057263522894
        }, 
        {
            "<boofcv.misc.BoofMiscOps: int countNotZero(int[],int)>": 0.3982401473528133
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3966715264969011
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayI8,boofcv.struct.image.GrayI8)>": 0.39030329510524875
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.39030329510524875
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg doubles(double[],long[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.1788699239292651
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.14702947288269252
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.14456567617355504
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.1420743506677539
        }, 
        {
            "<boofcv.factory.transform.pyramid.FactoryPyramid: boofcv.struct.pyramid.PyramidFloat floatGaussian(double[],double[],java.lang.Class)>": 0.14101224066931212
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform: void apply(int[],int[])>": [
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5959081176624421
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5914750255444985
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5908695571924593
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5753730831954832
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.568901118584658
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.10842661409823065
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.10132274924351498
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.10036934567095813
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.09785730607238811
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.09785730607238811
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRandomAccessible: net.imglib2.converter.AbstractConvertedRandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04032389192727559
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03904344047215152
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.038696496074155144
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.03828524323948056
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03790045715961838
        }
    ], 
    "<net.imglib2.view.MixedRandomAccess: void <init>(net.imglib2.RandomAccess,net.imglib2.transform.integer.Mixed)>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.36462107715478087
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.3481068843190026
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.3481068843190026
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.3458274978010321
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(org.jbox2d.collision.broadphase.Pair)>": 0.34405478362558295
        }
    ], 
    "<net.imglib2.img.planar.PlanarPlaneSubsetCursor: void <init>(net.imglib2.img.planar.PlanarImg,net.imglib2.Interval)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.3121451371667452
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.InterleavedS64,java.util.Random,long,long)>": 0.29689183371939604
        }, 
        {
            "<boofcv.core.image.ConvertImage: boofcv.struct.image.GrayU8 convert(boofcv.struct.image.GrayS64,long,long,int,boofcv.struct.image.GrayU8)>": 0.29337311946606276
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillUniform(boofcv.struct.image.InterleavedS64,java.util.Random,long,long)>": 0.29283287099275535
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.2922062761721145
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void mul(double)>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayI8)>": 0.2351010551945012
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2341704589986655
        }, 
        {
            "<boofcv.core.image.ConvertImage: boofcv.struct.image.GrayU8 convert(boofcv.struct.image.GrayS64,long,long,int,boofcv.struct.image.GrayU8)>": 0.22891542372449075
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedI8)>": 0.22363469869943195
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.22102263707294625
        }
    ], 
    "<net.imglib2.img.planar.PlanarPlaneSubsetCursor: java.lang.String toString()>": [
        {
            "<org.dyn4j.sandbox.resources.Messages: java.lang.String getString(java.lang.String)>": 0.3100041420236116
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$2: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$3: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$5: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$4: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: void add(net.imglib2.type.numeric.real.FloatType)>": [
        {
            "<boofcv.gui.feature.VisualizeOpticalFlow: void magnitudeAbs(boofcv.struct.flow.ImageFlow,float,java.awt.image.BufferedImage)>": 0.309791041113351
        }, 
        {
            "<org.jbox2d.testbed.perf.MathPerf: void runSinLUTTest(float)>": 0.3070660559641686
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$JoinParticleGroupsCallback: void callback(int,int,int)>": 0.30605768330171645
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$CreateParticleGroupCallback: void callback(int,int,int)>": 0.30455710497624167
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void raycast(org.jbox2d.callbacks.ParticleRaycastCallback,org.jbox2d.common.Vec2,org.jbox2d.common.Vec2)>": 0.30433357265682204
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: void setPosition(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.380038012067467
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.36813120591315474
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.3644588217277848
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3639690056625653
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.35743327819742526
        }
    ], 
    "<net.imglib2.transform.integer.permutation.SingleDimensionPermutationTransform: net.imglib2.transform.integer.permutation.SingleDimensionPermutationTransform inverse()>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(int,boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayS32)>": 0.3371812355600179
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS32,int,int,int,boofcv.struct.image.GrayS32)>": 0.3371812355600179
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS32,int,int,int,boofcv.struct.image.GrayS32)>": 0.3371812355600179
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.33540287154494497
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(int,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3334904079840575
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: double getDoublePosition(int)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.3782432325354622
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F64: double unsafe_getD(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double convolveSparse(boofcv.struct.image.GrayF64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.histogram.Integer1dBinMapper: long map(net.imglib2.type.numeric.IntegerType)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: boolean equals(java.lang.Object)>": 0.30226886231503775
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3018899133858012
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(org.jbox2d.particle.ParticleSystem$Proxy)>": 0.2979180823279048
        }, 
        {
            "<org.jbox2d.testbed.tests.ConveyorBelt: void processFixture(org.jbox2d.dynamics.Fixture,java.lang.Long)>": 0.2717608160531659
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(java.lang.Object)>": 0.2712856620670905
        }
    ], 
    "<net.imglib2.neighborsearch.RadiusNeighborSearchOnKDTree: double getSquareDistance(int)>": [
        {
            "<boofcv.io.SimpleStringNumberReader: double getDouble()>": 0.4690850761776948
        }, 
        {
            "<boofcv.alg.feature.detdesc.DetectDescribeSurfPlanar: double getRadius(int)>": 0.2963713140588462
        }, 
        {
            "<boofcv.abst.feature.detect.interest.WrapFLPtoInterestPoint: double getRadius(int)>": 0.2963713140588462
        }, 
        {
            "<boofcv.abst.feature.detect.interest.WrapFPtoInterestPoint: double getRadius(int)>": 0.2963713140588462
        }, 
        {
            "<boofcv.abst.feature.detdesc.DetectDescribe_CompleteSift: double getRadius(int)>": 0.27438651955168314
        }
    ], 
    "<net.imglib2.converter.RealLUTConverter: void convert(java.lang.Object,java.lang.Object)>": [
        {
            "<org.dyn4j.geometry.hull.MinXYPointComparator: int compare(java.lang.Object,java.lang.Object)>": 0.25257117525516387
        }, 
        {
            "<org.dyn4j.geometry.hull.MinXPointComparator: int compare(java.lang.Object,java.lang.Object)>": 0.24240637917558977
        }, 
        {
            "<org.dyn4j.geometry.decompose.SweepLineVertex: int compareTo(java.lang.Object)>": 0.22953992414202773
        }, 
        {
            "<Catalano.Core.IntPoint: void <init>(double,double)>": 0.22785324995105602
        }, 
        {
            "<boofcv.struct.sparse.GradientValue_I32: void set(double,double)>": 0.2269745209584606
        }
    ], 
    "<net.imglib2.converter.read.ConvertedIterableInterval: net.imglib2.converter.read.ConvertedCursor localizingCursor()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04794633014853841
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.046423834544262965
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04601130713546223
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04552231504557686
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04506479272965292
        }
    ], 
    "<net.imglib2.type.logic.BitType: int compareTo(net.imglib2.type.logic.BitType)>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.4734483399408956
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.46886676044243647
        }, 
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.42794376392706746
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean overlap(int,int)>": 0.42672875218028816
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean isSubset(int,int)>": 0.42672875218028816
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void cross(double[],double[],double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[],double[],double[],double[])>": 0.7958856235563405
        }, 
        {
            "<Catalano.Math.Transforms.FourierTransform: void transformBluestein(double[],double[])>": 0.7891200909746181
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void complexInverse(double[],boolean)>": 0.7436737835821199
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverse(double[],boolean)>": 0.7115653732354259
        }, 
        {
            "<Catalano.Imaging.Tools.MaitraMoments: double[] Compute(Catalano.Imaging.FastBitmap)>": 0.6697137546619718
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: void resetCounters()>": [
        {
            "<boofcv.app.calib.AssistedCalibration: boolean checkMagnetCapturePicture()>": 0.17147409638602196
        }, 
        {
            "<com.flowpowered.react.engine.DynamicsWorld: void updateRigidBodiesAABB()>": 0.16531886849182464
        }, 
        {
            "<net.smert.jreactphysics3d.engine.DynamicsWorld: void updateRigidBodiesAABB()>": 0.16474748713969212
        }, 
        {
            "<net.smert.jreactphysics3d.engine.DynamicsWorld: void setIsSleepingEnabled(boolean)>": 0.16244113482216838
        }, 
        {
            "<com.flowpowered.react.engine.DynamicsWorld: void enableSleeping(boolean)>": 0.16244113482216838
        }
    ], 
    "<net.imglib2.img.array.ArrayImgFactory: net.imglib2.img.NativeImg createCharInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1686333664237103
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1686333664237103
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1559201193509509
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.15386142866645397
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.15386142866645397
        }
    ], 
    "<net.imglib2.util.Partition: int partitionSubList(int,int,double[])>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void bitrv216neg(double[],int)>": 0.36158892818460003
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void bitrv216(double[],int)>": 0.3608794463176528
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void bitrv208neg(double[],int)>": 0.3581564233287133
        }, 
        {
            "<Catalano.Statistics.Tools: double Mode(double[])>": 0.35428816665504204
        }, 
        {
            "<Catalano.Statistics.DescriptiveStatistics: double Mode(double[])>": 0.35428816665504204
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: void indexToPositionWithOffset(int,int[],int[],int[])>": [
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.5312789737462904
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.5014075502935155
        }, 
        {
            "<Catalano.Math.Matrix: int[] Multiply(int[],int[][])>": 0.48171011883962406
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(int,int[])>": 0.4795358447967473
        }, 
        {
            "<Catalano.Math.Matrix: int[] Subtract(int[],int[])>": 0.47851198010132173
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void switchRealComplex()>": [
        {
            "<com.flowpowered.react.math.Matrix4x4: void <init>(com.flowpowered.react.math.Matrix4x4)>": 0.2795924143748609
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: void <init>(com.flowpowered.react.math.Matrix3x3)>": 0.2681760506748268
        }, 
        {
            "<boofcv.gui.feature.VisualizeOpticalFlow: void magnitudeAbs(boofcv.struct.flow.ImageFlow,float,java.awt.image.BufferedImage)>": 0.2644299805341415
        }, 
        {
            "<Catalano.Math.Vector4: Catalano.Math.Vector4 Abs()>": 0.2634855656835188
        }, 
        {
            "<com.flowpowered.react.math.Vector4: com.flowpowered.react.math.Vector4 getAbsoluteVector()>": 0.2634855656835188
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: void setReal(float)>": [
        {
            "<com.flowpowered.react.math.Matrix4x4: void setAllValues(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)>": 0.32921128423317975
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: void setAllValues(float,float,float,float,float,float,float,float,float)>": 0.3224149197105202
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.DebugDrawJ2D$1: java.awt.Color newColor(float,float,float,float)>": 0.3210716905727387
        }, 
        {
            "<org.jbox2d.callbacks.DebugDraw: void setCamera(float,float,float)>": 0.3199511092812435
        }, 
        {
            "<org.jbox2d.common.Mat33: void <init>(float,float,float,float,float,float,float,float,float)>": 0.3121973203170267
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: net.imglib2.concatenate.PreConcatenable preConcatenate(java.lang.Object)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.3502094058335103
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.3357472074397841
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.33276880042632434
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void addObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.3313219327764207
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3301393739811002
        }
    ], 
    "<net.imglib2.position.transform.Floor: void floor(float[],long[])>": [
        {
            "<Catalano.Math.Tools: float Sum(float[])>": 0.47541841068846447
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchColor: void meanColor(float[],float[],float)>": 0.45272994374190334
        }, 
        {
            "<Catalano.Math.Matrix: float Max(float[])>": 0.4501330894282636
        }, 
        {
            "<Catalano.Math.Matrix: float Min(float[])>": 0.4501330894282636
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: double sumCoefficients(float[])>": 0.43468605505350555
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorSingleBoundary: void fwd(int)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.23220291763206566
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.2033139025825331
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.20162614291135597
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.19403802213399263
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.19290193690155474
        }
    ], 
    "<net.imglib2.type.label.BasePairCharType: void setChar(char)>": [
        {
            "<org.jbox2d.testbed.tests.ApplyForce: void keyPressed(char,int)>": 0.32061289371012314
        }, 
        {
            "<org.jbox2d.testbed.tests.Car: void keyReleased(char,int)>": 0.2633997229096716
        }, 
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2193376805259411
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2193376805259411
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2193376805259411
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsValue: void setPosition(long,int)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.27118165566666214
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.25629633580711364
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.2522656290314903
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2379925563112192
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void addObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.23158198991945447
        }
    ], 
    "<net.imglib2.PointSampleList$PointSampleListCursor: net.imglib2.Cursor copy()>": [
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.15034988313170589
        }, 
        {
            "<org.box2d.proto.Box2D$PbBody: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.14958843829505516
        }, 
        {
            "<Catalano.Math.Geometry.GrahamConvexHull: java.util.ArrayList FindFull(java.util.ArrayList)>": 0.14890982424563157
        }, 
        {
            "<org.box2d.proto.Box2D$PbWorld: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.14748544458497612
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: void setTo(boofcv.struct.image.ImageInterleaved)>": 0.1469016400551394
        }
    ], 
    "<net.imglib2.view.MixedRandomAccess: void setPosition(long,int)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.35959266294820325
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.35848042252550194
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.34494738038661904
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.3444512363752352
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3404947467531005
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: void <init>(net.imglib2.view.StackView$DefaultRA)>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void process(int,java.lang.Object)>": 0.2663570657613477
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.26425087529640456
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.PairManager: void shrinkMemory()>": 0.26358240286907064
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectBasicWta_S32_U8: void process(int,java.lang.Object)>": 0.2634286058439562
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void process(int,int[])>": 0.2619175305437722
        }
    ], 
    "<net.imglib2.FinalRealInterval: net.imglib2.FinalRealInterval createMinMax(double[])>": [
        {
            "<Catalano.Math.Matrix: double[] Log(double[])>": 0.3779751863673408
        }, 
        {
            "<Catalano.Core.ArraysUtil: double[] Concatenate(double[],double[])>": 0.333733521018162
        }, 
        {
            "<Catalano.Statistics.Correlations: double VectorInnerProduct(double[],double[])>": 0.33247765134896706
        }, 
        {
            "<Catalano.Math.Matrix: double InnerProduct(double[],double[])>": 0.33247765134896706
        }, 
        {
            "<Catalano.Statistics.Tools: double Sum(double[])>": 0.3297774516197594
        }
    ], 
    "<net.imglib2.histogram.Real1dBinMapper: boolean includesUpperBound(long)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.3410002075309187
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.32339821790759143
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean equals(java.lang.Object)>": 0.30281440254448877
        }, 
        {
            "<net.coobird.thumbnailator.util.ThumbnailatorUtils: boolean isSupportedOutputFormat(java.lang.String)>": 0.29535137073404166
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2817496095126942
        }
    ], 
    "<net.imglib2.display.projector.specialized.PlanarImgXYShortProjector: void map()>": [
        {
            "<boofcv.alg.misc.PixelMath: void multiplyU_A(short[],int,int,double,short[],int,int,int,int)>": 0.27235482396201466
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divideU_A(short[],int,int,double,short[],int,int,int,int)>": 0.27235482396201466
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double variance(boofcv.struct.image.GrayU16,double)>": 0.25647691966985087
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayI16)>": 0.2516810156713094
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiplyU_A(short[],int,int,double,int,int,short[],int,int,int,int)>": 0.2474155381139179
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListCursor: void localize(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.23908290909159907
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.23908290909159907
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.23539179478674194
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.220703590637611
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.17263507599631497
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImg: void <init>(net.imglib2.img.sparse.NtreeImg)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.10274555793622213
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.10274555793622213
        }, 
        {
            "<boofcv.abst.fiducial.calib.ConfigSquareGridBinary: void checkValidity()>": 0.09907424048765213
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09718671256528
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.09528805105768647
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: void setComplexNumber(double,double)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void access$000(boofcv.app.calib.AssistedCalibration,double,double,double,double)>": 0.47378506058455894
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceSe3SymmetricSq: void setIntrinsic(double,double,double,double,double,double)>": 0.46137529282158307
        }, 
        {
            "<boofcv.gui.fiducial.VisualizeFiducial: void drawLine(java.awt.Graphics2D,java.awt.geom.Line2D$Double,double,double,double,double)>": 0.459157475818346
        }, 
        {
            "<boofcv.alg.sfm.robust.DistancePlane2DToPixelSq: void setIntrinsic(double,double,double)>": 0.45311135772743316
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceHomographyPixelSq: void setIntrinsic(double,double,double)>": 0.45311135772743316
        }
    ], 
    "<net.imglib2.view.SubsampleView: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.view.composite.CompositeIntervalView: void dimensions(long[])>": [
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.25716074819424317
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.25578120976932645
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(long[],int,int,long[],int,int,int,int)>": 0.24294655643824986
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.2423779382945161
        }, 
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.24220393902453785
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsValue: void checkOutOfBounds()>": [
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: int getNumUnknownViews()>": 0.36879164106163287
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: int[] makeFateTable()>": 0.33384527625637067
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: double get(boofcv.struct.image.ImageInterleaved,int,int,int)>": 0.30225625822251256
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: void setB(boofcv.struct.image.ImageBase,int,int,int,double)>": 0.29969584447599995
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: void setM(boofcv.struct.image.ImageBase,int,int,double[])>": 0.2937107956694517
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: void <init>(net.imglib2.view.TranslationRandomAccess)>": [
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.21560048833949624
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.21560048833949624
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.2098674067917468
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.20543170776687342
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.20543170776687342
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: void mul(net.imglib2.type.numeric.integer.GenericIntType)>": [
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(Catalano.Core.IntPoint,int,int,int,int)>": 0.36427286377853174
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.3612222498762714
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getBlue(Catalano.Core.IntPoint)>": 0.35704550172706123
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getGreen(Catalano.Core.IntPoint)>": 0.3550260770030453
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getRed(Catalano.Core.IntPoint)>": 0.3550260770030453
        }
    ], 
    "<net.imglib2.view.composite.NumericComposite: net.imglib2.view.composite.NumericComposite copy()>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.15107376265673905
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.15107376265673905
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.15107376265673905
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.14922097981268295
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.1463980463756409
        }
    ], 
    "<net.imglib2.view.composite.RealComposite$Factory: net.imglib2.view.composite.Composite create(net.imglib2.RandomAccess)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.16637681637811313
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.16637681637811313
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.16637681637811313
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.16412253848848146
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.16118054596459017
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned2BitType: net.imglib2.type.numeric.integer.Unsigned2BitType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: void mul(float)>": [
        {
            "<com.flowpowered.react.math.Matrix4x4: void setAllValues(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)>": 0.32921128423317975
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: void setAllValues(float,float,float,float,float,float,float,float,float)>": 0.3224149197105202
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.DebugDrawJ2D$1: java.awt.Color newColor(float,float,float,float)>": 0.3210716905727387
        }, 
        {
            "<org.jbox2d.callbacks.DebugDraw: void setCamera(float,float,float)>": 0.3199511092812435
        }, 
        {
            "<org.jbox2d.common.Mat33: void <init>(float,float,float,float,float,float,float,float,float)>": 0.3121973203170267
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void decIndex(int)>": [
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.6241711271514602
        }, 
        {
            "<boofcv.abst.fiducial.calib.CalibrationDetectorSquareFiducialGrid: int getPointIndex(int,int)>": 0.5747801203619927
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$9: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5631673913280111
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: int getIndex(int,int,int)>": 0.5573780954063181
        }, 
        {
            "<boofcv.struct.image.ImageBase: int getIndex(int,int)>": 0.5485724542486418
        }
    ], 
    "<net.imglib2.KDTree: double realMin(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.6444652635187575
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.PyramidDiscreteSampleBlur: double getSigma(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.NoCacheScaleSpace: double getScale(int)>": 0.6383928571428571
        }
    ], 
    "<net.imglib2.img.cell.CellRandomAccess: void setPosition(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.3698722211134237
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.31620069364066583
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.30766133406420837
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.24432127909152565
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void updateObjectIntegerAABB(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.broadphase.AABBInt)>": 0.24308647773416026
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: double getB()>": [
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double DistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double OneSideDistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double ComplementaryDistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.32533950937620415
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double pixelScaleCurrentToInput()>": 0.3144161822359606
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: boolean valueEquals(java.lang.Object)>": [
        {
            "<org.dyn4j.geometry.Vector2: boolean isZero()>": 0.4203914718757492
        }, 
        {
            "<org.dyn4j.geometry.Vector3: boolean isZero()>": 0.413059623562494
        }, 
        {
            "<org.dyn4j.geometry.Interval: boolean isDegenerate(double)>": 0.3868905115353573
        }, 
        {
            "<org.dyn4j.geometry.Vector2: boolean equals(double,double)>": 0.3853211284187243
        }, 
        {
            "<org.dyn4j.geometry.Vector3: boolean equals(double,double,double)>": 0.3761545774766947
        }
    ], 
    "<net.imglib2.img.list.ListImg: net.imglib2.img.list.ListImg copyWithType(net.imglib2.img.list.ListImg)>": [
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void addDecomposablePolygonAction()>": 0.1365352756237064
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.13606182606749223
        }, 
        {
            "<org.dyn4j.Reference: boolean equals(java.lang.Object)>": 0.1352330055682556
        }, 
        {
            "<org.dyn4j.dynamics.World: void removeAllJoints(boolean)>": 0.12734297803467565
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.12717341279951924
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void quaternionApply(double[],double[],double[])>": [
        {
            "<boofcv.alg.geo.pose.UtilLepetitEPnP: void residuals_Control4(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F,double[],double[])>": 0.5613811578815988
        }, 
        {
            "<Catalano.Statistics.Correlations: double Tanimoto(double[],double[])>": 0.5563203736059795
        }, 
        {
            "<boofcv.alg.geo.pose.UtilLepetitEPnP: void jacobian_Control4(org.ejml.data.DenseMatrix64F,double[],org.ejml.data.DenseMatrix64F)>": 0.5557363979227368
        }, 
        {
            "<Catalano.Statistics.Kernels.Spline: double Function(double[],double[])>": 0.5508166097269281
        }, 
        {
            "<boofcv.alg.geo.pose.UtilLepetitEPnP: void residuals_Control3(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F,double[],double[])>": 0.5498668534106367
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: long lowerTailCount(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.EndPoint: void setValues(int,boolean,long)>": 0.25324780846014966
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint: void setValues(int,boolean,long)>": 0.25324780846014966
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.24133634478184035
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.24133634478184035
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.24133634478184035
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: boolean includesLowerBound(long)>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void setPaused(boolean)>": 0.26412123551590977
        }, 
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: boolean process(boofcv.struct.image.ImageBase)>": 0.24661491994777693
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: boolean isEmpty()>": 0.24257833769207987
        }, 
        {
            "<Catalano.Math.SparseArray: boolean isEmpty()>": 0.24257833769207987
        }, 
        {
            "<Catalano.Math.Geometry.Line: boolean isVertical()>": 0.24257833769207987
        }
    ], 
    "<net.imglib2.position.transform.FloorOffset: long f(float,long)>": [
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.4027384440571764
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeTag(float,float)>": 0.31429616530663484
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.29021809395762677
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2761671471935342
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.Utils: long encodeFloatIntoInteger(float)>": 0.26505985986534597
        }
    ], 
    "<net.imglib2.position.transform.Round: void move(float[])>": [
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.24772299471592568
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.24704551657456825
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.230984471168653
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.22088531544818718
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_F64: void setF(int,float[])>": 0.21918597301750148
        }
    ], 
    "<net.imglib2.view.StackView: void <init>(java.util.List)>": [
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillBorder(boofcv.struct.image.GrayS64,long,int)>": 0.31089969696642744
        }, 
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: void transform(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.3035204798723592
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS64)>": 0.3001390016652615
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS64)>": 0.3001390016652615
        }, 
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.29883995094182725
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: void sub(net.imglib2.type.numeric.integer.UnsignedByteType)>": [
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(Catalano.Core.IntPoint,int,int,int,int)>": 0.34279574994035583
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getBlue(Catalano.Core.IntPoint)>": 0.336430021688703
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: boofcv.struct.image.ImageBase subimage(int,int,int,int,boofcv.struct.image.ImageBase)>": 0.3361673280624054
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getGreen(Catalano.Core.IntPoint)>": 0.33418363988614425
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getRed(Catalano.Core.IntPoint)>": 0.33418363988614425
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: int compareTo(net.imglib2.type.numeric.integer.AbstractIntegerType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.41390690378820216
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3678944452106656
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3678944452106656
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3678944452106656
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.3666442059548595
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: net.imglib2.img.ImgFactory factory()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.024397501823713325
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgs: net.imglib2.img.planar.PlanarImg doubles(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: long max(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3508771929824561
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3142423944400126
        }
    ], 
    "<net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolatorFactory: net.imglib2.RealRandomAccess create(java.lang.Object)>": [
        {
            "<org.dyn4j.geometry.TransformTest: void rotate()>": 0.13202910843954632
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawMouseJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.PinJoint,double)>": 0.12767798552729048
        }, 
        {
            "<org.dyn4j.geometry.AABBTest: void expand()>": 0.12747050963209544
        }, 
        {
            "<boofcv.gui.d3.PointCloudViewer: void addPoint(double,double,double,int)>": 0.1270687375805621
        }, 
        {
            "<org.dyn4j.dynamics.AngleJointTest: void setMinAndMax()>": 0.12565917929278636
        }
    ], 
    "<net.imglib2.transform.integer.permutation.PermutationTransform: void apply(long[],long[])>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3726938610693688
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.36045436712099854
        }, 
        {
            "<org.jbox2d.dynamics.Island: void add(org.jbox2d.dynamics.joints.Joint)>": 0.3564071832127774
        }, 
        {
            "<org.jbox2d.dynamics.Island: void add(org.jbox2d.dynamics.contacts.Contact)>": 0.3564071832127774
        }, 
        {
            "<org.jbox2d.particle.StackQueue: java.lang.Object pop()>": 0.3564071832127774
        }
    ], 
    "<net.imglib2.position.transform.AbstractPositionableTransform: void setPosition(long,int)>": [
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.2128916830187691
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.2112517418666592
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void setD(int,double)>": 0.2094122907524922
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMinimum(int,double)>": 0.2094122907524922
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMaximum(int,double)>": 0.2094122907524922
        }
    ], 
    "<net.imglib2.img.sparse.CharNtree: char getValue(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.3447577893536421
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.33979763956490483
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3389953346808261
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.3292717657186516
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.3221928440420029
        }
    ], 
    "<net.imglib2.transform.integer.SequentializeTransform$1: void applyInverse(net.imglib2.Positionable,net.imglib2.Localizable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06666666666666665
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.06454972243679029
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06397612635199752
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.06329621044272916
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06266005147845038
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: void move(int,int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.6565280049537809
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5827029549451893
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5712610050910024
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int)>": 0.5684849414724982
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.5419832307393084
        }
    ], 
    "<net.imglib2.util.Util: double averageDouble(java.util.List)>": [
        {
            "<boofcv.alg.geo.LowLevelMultiViewOps: void computeNormalization(java.util.List,org.ejml.data.DenseMatrix64F)>": 0.4627167980747403
        }, 
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double FeretDiameter(java.util.List)>": 0.4619998982895539
        }, 
        {
            "<boofcv.alg.geo.LowLevelMultiViewOps: void computeNormalization(java.util.List,org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F)>": 0.4105475296448117
        }, 
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double MinimumCircumscribedCircle(Catalano.Core.IntPoint,java.util.List)>": 0.39837949363642156
        }, 
        {
            "<boofcv.alg.geo.LowLevelMultiViewOps: void computeNormalization(java.util.List,org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F)>": 0.3931314551575893
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRandomAccessible: net.imglib2.converter.read.ConvertedRandomAccess randomAccess()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04879500364742665
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04724555912615341
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04682572978040922
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04632808229131882
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04586246160658393
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: double realMax(int)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.3782432325354622
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F64: double unsafe_getD(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double convolveSparse(boofcv.struct.image.GrayF64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: boolean valueEquals(java.lang.Object)>": [
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.4306175703094666
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.4306175703094666
        }, 
        {
            "<boofcv.io.javacv.JavaCVVideoImageSequence: boolean hasNext()>": 0.4306175703094666
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.40224804019849786
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldTrackerApp: void togglePause()>": 0.39923656732210056
        }
    ], 
    "<net.imglib2.iterator.LocalizingIntervalIterator: void <init>(net.imglib2.Interval)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.28865245178633003
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.28865245178633003
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.28079977248544635
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.27444463180125833
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.25993819673406193
        }
    ], 
    "<net.imglib2.KDTreeNode: double squDistanceTo(double[])>": [
        {
            "<Catalano.Math.Distances.Distance: double Chessboard(double[],double[])>": 0.7008011687145825
        }, 
        {
            "<Catalano.Math.Distances.Distance: double KumarJohnsonDivergence(double[],double[])>": 0.6970139001217204
        }, 
        {
            "<Catalano.Math.Distances.Distance: double SymmetricChiSquareDivergence(double[],double[])>": 0.6926224665317895
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal11(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.6906131395665679
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve11(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.6834221459958632
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: void indexToPosition(long,long[],double[])>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.30216783629693594
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.28185119756140387
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2713222188573243
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.2669039909623142
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.26034191779535526
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: void add(net.imglib2.type.numeric.integer.UnsignedLongType)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2679887933858064
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2579115331531891
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.25069894227480943
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.23626500399272526
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.23595832499639566
        }
    ], 
    "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: void search(net.imglib2.RealLocalizable)>": [
        {
            "<Catalano.Statistics.Kernels.Gaussian: double Function(double[],double[])>": 0.33514200997386756
        }, 
        {
            "<Catalano.Statistics.Kernels.Multiquadric: double Function(double[],double[])>": 0.33490138926917506
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Minkowski(double[],double[],double)>": 0.3340765717436043
        }, 
        {
            "<Catalano.Statistics.Kernels.Log: double Function(double[],double[])>": 0.32942904678502705
        }, 
        {
            "<Catalano.Statistics.Kernels.InverseMultiquadric: double Function(double[],double[])>": 0.32771618226917504
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedCursor: void jumpFwd(long)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.21777659600227028
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue: boofcv.core.image.border.ImageBorder_S64 wrap(boofcv.struct.image.GrayS64,long)>": 0.20095083622033166
        }, 
        {
            "<Catalano.Math.Random: void <init>(long)>": 0.20061197896268804
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.200120241954261
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint: void access$400(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint,int,boolean,long)>": 0.18590017126819813
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: boolean isOutOfBounds()>": [
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: boolean process(boofcv.struct.image.ImageBase)>": 0.2782949759634314
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: boolean isEmpty()>": 0.2738095238095238
        }, 
        {
            "<Catalano.Math.SparseArray: boolean isEmpty()>": 0.2738095238095238
        }, 
        {
            "<Catalano.Math.Geometry.Line: boolean isVertical()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$BufferedImageIterable$1: boolean hasNext()>": 0.2738095238095238
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: void createAllocationSteps(long[],long[])>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.28586616953926536
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2793634795752318
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2793634795752318
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2793634795752318
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long[],int,int,int,int)>": 0.2766517218168886
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void move(double,int)>": [
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationAverageGradientIntegral: void <init>(double,int,double,int,double,java.lang.Class)>": 0.4043042024541294
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.SelectRectSubpixel$F32_F32: void <init>(int,int,double)>": 0.3964462393048189
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_F32_U8: void <init>(int,int,double)>": 0.3964462393048189
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.SelectRectSubpixel$S32_F32: void <init>(int,int,double)>": 0.3964462393048189
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_S32_U8: void <init>(int,int,double)>": 0.3964462393048189
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible: void <init>(net.imglib2.RealRandomAccessible)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.21943989681367793
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.21943989681367793
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.21943989681367793
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.2163123949343606
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.21255250817658958
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void setPosition(int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.2540764877039817
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.21777659600227028
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg bits(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: void div(net.imglib2.type.numeric.ARGBType)>": [
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(Catalano.Core.IntPoint,int,int,int,int)>": 0.4968357592415232
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getBlue(Catalano.Core.IntPoint)>": 0.4937155737581609
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getGreen(Catalano.Core.IntPoint)>": 0.48989095931473775
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getRed(Catalano.Core.IntPoint)>": 0.48989095931473775
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: boofcv.struct.image.ImageBase subimage(int,int,int,int,boofcv.struct.image.ImageBase)>": 0.48026633267533025
        }
    ], 
    "<net.imglib2.display.screenimage.awt.AWTScreenImageUtil: int numElements(long[])>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.32938057568092083
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.32938057568092083
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.32938057568092083
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.3268124081128758
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.3225988076621939
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: int compareTo(java.lang.Object)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.25386662062038023
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.24229378392565326
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(java.lang.Object)>": 0.2204296881856732
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.21570092879932012
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomPixelDepthPnP: int dropUnusedTracks()>": 0.21211321593782964
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,java.util.List,java.util.Comparator)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.3550911450509681
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.3550911450509681
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.3535025739309254
        }, 
        {
            "<boofcv.struct.PointIndex_I32: void <init>(int,int,int)>": 0.34865048369094964
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.3485688760433644
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: void mul(double)>": [
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(byte[],int,int,double,byte[],int,int,int,int)>": 0.24954580999036186
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply_A(byte[],int,int,double,byte[],int,int,int,int)>": 0.24954580999036186
        }, 
        {
            "<boofcv.misc.DiscretizedCircle: int[] imageOffsets(double,int)>": 0.2409174364532969
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillGaussian(boofcv.struct.image.GrayS64,java.util.Random,double,double,long,long)>": 0.23971256106779262
        }, 
        {
            "<net.coobird.thumbnailator.makers.FixedSizeThumbnailMaker: java.awt.image.BufferedImage make(java.awt.image.BufferedImage)>": 0.23307475657217464
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: boolean hasTails()>": [
        {
            "<org.dyn4j.dynamics.World: boolean isEmpty()>": 0.37559100066685464
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomQuadPnP: boolean isInlier(int)>": 0.3733012114658314
        }, 
        {
            "<org.dyn4j.collision.AbstractCollidable: boolean contains(org.dyn4j.geometry.Vector2)>": 0.35722559254400454
        }, 
        {
            "<boofcv.io.SimpleStringNumberReader: boolean next()>": 0.35264672987053997
        }, 
        {
            "<boofcv.io.wrapper.images.JpegByteImageSequence: boolean hasNext()>": 0.34413158345623474
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: boolean valueEquals(java.lang.Object)>": [
        {
            "<net.smert.jreactphysics3d.collision.shapes.CylinderShape: boolean isEqualTo(net.smert.jreactphysics3d.collision.shapes.CollisionShape)>": 0.36664741957963237
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.CapsuleShape: boolean isEqualTo(net.smert.jreactphysics3d.collision.shapes.CollisionShape)>": 0.36664741957963237
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.ConeShape: boolean isEqualTo(net.smert.jreactphysics3d.collision.shapes.CollisionShape)>": 0.36664741957963237
        }, 
        {
            "<com.flowpowered.react.collision.shape.CylinderShape: boolean isEqualTo(com.flowpowered.react.collision.shape.CollisionShape)>": 0.36664741957963237
        }, 
        {
            "<com.flowpowered.react.collision.shape.ConeShape: boolean isEqualTo(com.flowpowered.react.collision.shape.CollisionShape)>": 0.36664741957963237
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: boolean includesLowerBound(int,long)>": [
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: long getTrackId(int)>": 0.3182506592968145
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: long getTrackId(int)>": 0.3182506592968145
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isInlier(int)>": 0.3138124222159318
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isInlier(int)>": 0.3138124222159318
        }, 
        {
            "<boofcv.abst.sfm.d3.MonoPlaneInfinity_to_MonocularPlaneVisualOdometry: boolean isInlier(int)>": 0.2970142650775524
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowing: void <init>(net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowing)>": [
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.18159522587736182
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.18159522587736182
        }, 
        {
            "<boofcv.struct.image.InterleavedS32: void _setData(java.lang.Object)>": 0.13847074240096052
        }, 
        {
            "<boofcv.struct.image.GrayS32: void _setData(java.lang.Object)>": 0.13847074240096052
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.12811768579763458
        }
    ], 
    "<net.imglib2.util.Util: java.lang.Object getTypeFromRealInterval(net.imglib2.RealInterval)>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2376551899218568
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.22776961574810256
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.22776961574810256
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.22426820488056018
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.2196844671691046
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsBorder: void setPosition(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: int getNumUnknownViews()>": 0.234838165707288
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.23038341355073927
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.21756603341973824
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF64)>": 0.21497446810837995
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF32)>": 0.21497446810837995
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListRandomAccess: void bck(int)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2886946772882095
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2754641542367446
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.2687819740240789
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.268086409792313
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.2660630549725637
        }
    ], 
    "<net.imglib2.display.screenimage.awt.ArrayImgAWTScreenImage: java.awt.image.ColorModel createColorModel(net.imglib2.type.NativeType,java.awt.image.DataBuffer)>": [
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder: net.coobird.thumbnailator.Thumbnails$Builder size(int,int)>": 0.33183291543737287
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder: net.coobird.thumbnailator.Thumbnails$Builder forceSize(int,int)>": 0.3305653380970589
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder: net.coobird.thumbnailator.Thumbnails$Builder outputFormat(java.lang.String)>": 0.32651328388791495
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder: net.coobird.thumbnailator.Thumbnails$Builder imageType(int)>": 0.32541345624188556
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder: net.coobird.thumbnailator.Thumbnails$Builder outputFormatType(java.lang.String)>": 0.3245715671823513
        }
    ], 
    "<net.imglib2.type.logic.BoolType: void not()>": [
        {
            "<boofcv.demonstrations.tracker.VisualizeTldTrackerApp: void togglePause()>": 0.5499999999999999
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeCirculantTrackerApp: void togglePause()>": 0.5499999999999999
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.5459702045934076
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.5459702045934076
        }, 
        {
            "<boofcv.io.javacv.JavaCVVideoImageSequence: boolean hasNext()>": 0.5459702045934076
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: boolean isInMiddle(java.lang.Object)>": [
        {
            "<Catalano.Core.Stopwatch: boolean isRunning()>": 0.34735479383811657
        }, 
        {
            "<boofcv.io.wrapper.images.BufferedFileImageSequence: boolean hasNext()>": 0.3467212581051356
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.34257935932340605
        }, 
        {
            "<boofcv.io.wrapper.images.LoadFileImageSequence: boolean hasNext()>": 0.33482468281988315
        }, 
        {
            "<org.box2d.proto.Box2D$PbFilter: boolean isInitialized()>": 0.32462071439882667
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void <init>(net.imglib2.histogram.Histogram1d)>": [
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.14443252855308714
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.14443252855308714
        }, 
        {
            "<org.dyn4j.dynamics.WorldTest: void getUserData()>": 0.0925088113064153
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void getUserData()>": 0.0925088113064153
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.09227582860613621
        }
    ], 
    "<net.imglib2.type.numeric.real.AbstractRealType: void add(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawPrismaticJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.PrismaticJoint)>": 0.342783015976373
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawRopeJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.RopeJoint)>": 0.3425471189570898
        }, 
        {
            "<Catalano.Math.ComplexNumber: Catalano.Math.ComplexNumber Pow(Catalano.Math.ComplexNumber,double)>": 0.3405267680946604
        }, 
        {
            "<Catalano.Math.ComplexNumber: void Pow(double)>": 0.3352156507986024
        }, 
        {
            "<Catalano.Statistics.Distributions.GammaDistribution: double Entropy()>": 0.33215170322091153
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.DoubleArray: net.imglib2.img.basictypeaccess.array.DoubleArray createArray(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.29781790326307295
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.29649405014104924
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.29649405014104924
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.2930792985571642
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.2930792985571642
        }
    ], 
    "<net.imglib2.KDTree$KDTreeCursor: void reset()>": [
        {
            "<org.dyn4j.sandbox.help.HelpReader: void <init>()>": 0.17836794233657327
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09202261427092447
        }, 
        {
            "<org.dyn4j.BinarySearchTreeIterator: void <init>(org.dyn4j.BinarySearchTreeNode,boolean)>": 0.08861430541354037
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.08687098684655042
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.08518434019286031
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void move(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve9(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.373953800910488
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve7(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.3739033001044992
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.37382400653336767
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve11(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.3736508310840042
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.37312838118109243
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void getCol(int,double[][],double[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.586771290933976
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5753387335707808
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5715620909934264
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.5715620909934264
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5708811048808173
        }
    ], 
    "<net.imglib2.util.ConstantUtils$2$ConstantRealRandomAccess: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.display.awt.UnsignedIntDataBuffer: void setElemFloat(int,int,float)>": [
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5410831769143688
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$7: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5399682881889801
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$3: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5399682881889801
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5379763801073878
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$2: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5379763801073878
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: boolean hasFullSourceMapping()>": [
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: int getNumUnknownViews()>": 0.4098710701914879
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: int[] makeFateTable()>": 0.3926233529791366
        }, 
        {
            "<org.dyn4j.collision.manifold.IndexedManifoldPointId: boolean equals(java.lang.Object)>": 0.35758109456307735
        }, 
        {
            "<org.dyn4j.dynamics.Capacity: boolean equals(java.lang.Object)>": 0.35555568934672116
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: double get(boofcv.struct.image.ImageInterleaved,int,int,int)>": 0.3486279164130395
        }
    ], 
    "<net.imglib2.type.label.BasePairCharType: void complement()>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2335426497849643
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2335426497849643
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2335426497849643
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.23347063713477234
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.22590383908959946
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,java.util.List)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.3817230292026781
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.3817230292026781
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.3799668748746546
        }, 
        {
            "<boofcv.struct.PointIndex_I32: void <init>(int,int,int)>": 0.37469176364187234
        }, 
        {
            "<boofcv.factory.feature.disparity.FactoryStereoDisparityAlgs: boofcv.alg.feature.disparity.DisparitySparseScoreSadRect scoreDisparitySparseSadRect_F32(int,int,int,int)>": 0.3746846607826013
        }
    ], 
    "<net.imglib2.display.projector.composite.CompositeXYRandomAccessibleProjector: void <init>(net.imglib2.RandomAccessibleInterval,net.imglib2.RandomAccessibleInterval,java.util.ArrayList,int)>": [
        {
            "<boofcv.alg.InputSanityCheck: void checkSameShapeB(boofcv.struct.image.ImageMultiBand,boofcv.struct.image.ImageMultiBand)>": 0.3011901475567851
        }, 
        {
            "<org.imgscalr.Scalr: java.awt.image.BufferedImage crop(java.awt.image.BufferedImage,int,int,int,int,java.awt.image.BufferedImageOp[])>": 0.2959037321482447
        }, 
        {
            "<boofcv.alg.InputSanityCheck: void checkSameShape(boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase)>": 0.29044440917236286
        }, 
        {
            "<boofcv.struct.convolve.KernelBase: void <init>(int)>": 0.28408402099379715
        }, 
        {
            "<boofcv.app.CreateFiducialSquareBinary: void addPattern(java.lang.String)>": 0.2812360903706086
        }
    ], 
    "<net.imglib2.AbstractLocalizableInt: void localize(int[])>": [
        {
            "<Catalano.Math.Decompositions.LUDecomposition: int[] getPivot()>": 0.4329924519975518
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.406754657569875
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int[])>": 0.4045579620769534
        }, 
        {
            "<Catalano.Math.Matrix: int[] getRows(int[],int[])>": 0.4045579620769534
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumn(int[][],int)>": 0.40212575026158026
        }
    ], 
    "<net.imglib2.util.Util: float median(float[])>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F32_1D: void realInverse(float[],boolean)>": 0.4227253078465167
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F32_F32: void convolve9(boofcv.struct.convolve.Kernel2D_F32,boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32)>": 0.40642759322796496
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F32_F32: void convolve11(boofcv.struct.convolve.Kernel2D_F32,boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32)>": 0.4061444367309344
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F32_F32: void convolve7(boofcv.struct.convolve.Kernel2D_F32,boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32)>": 0.40482121838539453
        }, 
        {
            "<boofcv.alg.filter.convolve.down.ConvolveDownNoBorderUnrolled_F32_F32: void convolve11(boofcv.struct.convolve.Kernel2D_F32,boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32,int)>": 0.40472946684344624
        }
    ], 
    "<net.imglib2.img.AbstractImg: double realMax(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.49163800764408094
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.49163800764408094
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: double getOutside(int,int)>": 0.4868016044136483
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.47153771681976947
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.46449118080111146
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: net.imglib2.img.basictypeaccess.array.ArrayDataAccess getPlane(int)>": [
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: java.lang.Object getUserData(int)>": 0.22775991087407513
        }, 
        {
            "<Catalano.Math.Geometry.ConvexHullDefects: Catalano.Math.Geometry.ConvexityDefect ExtractDefect(java.util.ArrayList,int,int)>": 0.21913320940090864
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: int getJoints(int)>": 0.21577923243534317
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint$Builder: int getJoints(int)>": 0.21577923243534317
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: int getBodies(int)>": 0.21577923243534317
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: net.imglib2.img.basictypeaccess.array.ArrayDataAccess update(java.lang.Object)>": [
        {
            "<boofcv.alg.segmentation.watershed.WatershedVincentSoille1991: int getTotalRegions()>": 0.37695094823768677
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.36155573621223996
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.36155573621223996
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.36155573621223996
        }, 
        {
            "<org.jbox2d.pooling.normal.CircleStack: java.lang.Object pop()>": 0.3424063395174367
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: int getBitsPerPixel()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3479867948029706
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3479867948029706
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3479867948029706
        }, 
        {
            "<org.dyn4j.collision.narrowphase.AbstractFallbackCondition: int compareTo(java.lang.Object)>": 0.3057733660203716
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3042062743186536
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: void setPosition(net.imglib2.Localizable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.img.sparse.Ntree: net.imglib2.img.sparse.Ntree$NtreeNode getNode(long[])>": [
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.32762126271603736
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.32672259596333303
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.3173400838518369
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(long[],int,int,int,int)>": 0.3146192701374452
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long min(long[],int,int,int,int)>": 0.3146192701374452
        }
    ], 
    "<net.imglib2.neighborsearch.RadiusNeighborSearchOnKDTree$1: int compare(net.imglib2.util.ValuePair,net.imglib2.util.ValuePair)>": [
        {
            "<boofcv.io.SimpleStringNumberReader: double getDouble()>": 0.3044896348786091
        }, 
        {
            "<org.dyn4j.geometry.hull.MinXPointComparator: int compare(java.lang.Object,java.lang.Object)>": 0.20935043201661546
        }, 
        {
            "<boofcv.struct.sparse.GradientValue_I32: void set(double,double)>": 0.20918475087755678
        }, 
        {
            "<Catalano.Statistics.Distributions.FisherDistribution: double Variance()>": 0.2085171622939719
        }, 
        {
            "<Catalano.Core.IntPoint: void <init>(double,double)>": 0.2056461982307463
        }
    ], 
    "<net.imglib2.FinalDimensions: void <init>(int[])>": [
        {
            "<Catalano.Math.Matrix: int[][] OuterProduct(int[],int[])>": 0.4561094487357175
        }, 
        {
            "<Catalano.Imaging.Texture.LawsTextureEnergy: int[][] CreateMask(int[],int[])>": 0.41874301483766924
        }, 
        {
            "<Catalano.Math.Matrix: int[][] Submatrix(int[][],int[])>": 0.4074699075836642
        }, 
        {
            "<Catalano.Math.Matrix: double[][] Submatrix(double[][],int[])>": 0.39017492641250745
        }, 
        {
            "<Catalano.Core.ArraysUtil: int[] Concatenate(int[],int[])>": 0.3685238331199879
        }
    ], 
    "<net.imglib2.type.AbstractBit64Type: void setBits(long)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3430854158421718
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.3130502521369767
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.30843303630739793
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.30274952291009305
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.2984472623990918
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: void setPosition(int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.2540764877039817
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.21777659600227028
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: void setPosition(net.imglib2.Localizable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.391468170099587
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.38846481284211687
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.38087236220921245
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.37470391382969187
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.3738965083915581
        }
    ], 
    "<net.imglib2.util.RealSum: void expand(double)>": [
        {
            "<Catalano.Core.Structs.DoubleArrayList: void <init>(double[])>": 0.30525949929725815
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F64: void set(double[],double,double)>": 0.30376495380467333
        }, 
        {
            "<Catalano.Statistics.Regression.PolynomialRegression: void <init>(double[],double[])>": 0.29881579655751705
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: void add(double[])>": 0.29250550700598177
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F64: void <init>(double[],double,double)>": 0.28252614659358777
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void set(java.math.BigInteger)>": [
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.29228613023591293
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int indexOfPreviousCounterClockwiseEdge(int)>": 0.287113513411012
        }, 
        {
            "<boofcv.struct.convolve.KernelBase: int getRadius()>": 0.28280425827972017
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: int getBorderX()>": 0.28280425827972017
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: int getBorderY()>": 0.28280425827972017
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolatorARGBFactory: net.imglib2.RealRandomAccess create(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.15166887845560387
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.1263514767671512
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.1263514767671512
        }, 
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.11959585451399861
        }, 
        {
            "<net.coobird.thumbnailator.resizers.ProgressiveBilinearResizer: void <init>(java.util.Map)>": 0.11959585451399861
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: int compareTo(net.imglib2.type.numeric.integer.GenericShortType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(Catalano.Imaging.Corners.FeaturePoint)>": 0.24217160381226985
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.24054141466165557
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(boofcv.alg.geo.calibration.CalibrationObservation$Point,boofcv.alg.geo.calibration.CalibrationObservation$Point)>": 0.2204835082360055
        }, 
        {
            "<boofcv.struct.feature.MatchScoreType$1: int compareTo(double,double)>": 0.20888053151023706
        }, 
        {
            "<boofcv.struct.feature.MatchScoreType$2: int compareTo(double,double)>": 0.20888053151023706
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListRandomAccess: void move(long,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.3679950211112609
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.3679950211112609
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.3679950211112609
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36016035441676975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.35742259995382736
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: void indexToPosition(long,net.imglib2.Dimensions,net.imglib2.Positionable)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3168120105048443
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.29155399115803926
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2873172837908512
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2860664120764941
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2822802353242998
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: long getLongPosition(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3508771929824561
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3142423944400126
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: void setReal(float)>": [
        {
            "<boofcv.alg.filter.binary.impl.ThresholdSquareBlockMinMax_F32: void <init>(float,int,float,boolean)>": 0.29331742158524204
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float ArcTan2(float,float)>": 0.25726046131262154
        }, 
        {
            "<Catalano.Core.DoublePoint: void <init>(float,float)>": 0.2567234320939922
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_S16: float get_border(float,float)>": 0.25570612929884684
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_U8: float get_border(float,float)>": 0.25570612929884684
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowing: void <init>(net.imglib2.Interval,int[],float)>": [
        {
            "<Catalano.Math.Matrix: float[][] CreateMatrix2D(int,int,float)>": 0.17248664733243957
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.17244720895368434
        }, 
        {
            "<Catalano.Imaging.Tools.GradientImage: float getOrientation(int,int)>": 0.17128678979091025
        }, 
        {
            "<Catalano.Imaging.Tools.GradientImage: float getMagnitude(int,int)>": 0.17128678979091025
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.16613573193765796
        }
    ], 
    "<net.imglib2.img.AbstractImg: long numElements(long[])>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.39700050837843953
        }, 
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.34096301274957896
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.34096301274957896
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: net.coobird.thumbnailator.util.exif.Orientation typeOf(int)>": 0.31436517856363144
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdType: net.coobird.thumbnailator.util.exif.IfdType typeOf(int)>": 0.31436517856363144
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void setPosition(net.imglib2.RealLocalizable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.position.transform.Round: long round(double)>": [
        {
            "<boofcv.abst.feature.associate.AssociateNearestNeighbor: void setThreshold(double)>": 0.3639650366324152
        }, 
        {
            "<org.dyn4j.dynamics.Settings: void setMaximumTranslation(double)>": 0.29397277811484945
        }, 
        {
            "<org.dyn4j.dynamics.Settings: void setAngularTolerance(double)>": 0.29397277811484945
        }, 
        {
            "<org.dyn4j.dynamics.Settings: void setSleepLinearVelocity(double)>": 0.29397277811484945
        }, 
        {
            "<org.dyn4j.dynamics.Settings: void setSleepAngularVelocity(double)>": 0.29397277811484945
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: void incIndex(int)>": [
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.6241711271514602
        }, 
        {
            "<boofcv.abst.fiducial.calib.CalibrationDetectorSquareFiducialGrid: int getPointIndex(int,int)>": 0.5747801203619927
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$9: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5631673913280111
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: int getIndex(int,int,int)>": 0.5573780954063181
        }, 
        {
            "<boofcv.struct.image.ImageBase: int getIndex(int,int)>": 0.5485724542486418
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedIterableInterval: java.lang.Object firstElement()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: int getIntPosition(int)>": [
        {
            "<net.coobird.thumbnailator.makers.ScaledThumbnailMaker: java.awt.image.BufferedImage make(java.awt.image.BufferedImage)>": 0.40277412841924765
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3400331642747886
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3400331642747886
        }, 
        {
            "<boofcv.alg.color.ColorRgb: int rgbToGray_Weighted(int,int,int)>": 0.3133559813475435
        }, 
        {
            "<net.coobird.thumbnailator.geometry.RelativeSize: java.awt.Dimension calculate(int,int)>": 0.3050787890690576
        }
    ], 
    "<net.imglib2.util.Intervals: net.imglib2.Interval smallestContainingInterval(net.imglib2.RealInterval)>": [
        {
            "<Catalano.Statistics.Distributions.BernoulliDistribution: double LogProbabilityMassFunction(int)>": 0.3372774027840606
        }, 
        {
            "<boofcv.alg.geo.pose.PnPLepetitEPnP: void estimateCase3(double[])>": 0.3344542509092299
        }, 
        {
            "<org.dyn4j.sandbox.panels.PreviewPanel: void paintComponent(java.awt.Graphics)>": 0.3343791936356848
        }, 
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder1: double compute(double,int)>": 0.33322857668042904
        }, 
        {
            "<boofcv.alg.geo.PerspectiveOps: boofcv.struct.calib.IntrinsicParameters createIntrinsic(int,int,double,double)>": 0.33288805134455224
        }
    ], 
    "<net.imglib2.type.numeric.integer.LongType: int compareTo(java.lang.Object)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.28302336416052903
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.26787069148812087
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomPixelDepthPnP: int dropUnusedTracks()>": 0.22610204106522286
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomMonoPlaneInfinity: int dropUnusedTracks()>": 0.22460327383361134
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2193386105675623
        }
    ], 
    "<net.imglib2.view.TransformBuilder$4: net.imglib2.RandomAccess randomAccess()>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void renderBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.11062540762110826
        }, 
        {
            "<boofcv.gui.DepthVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.10826038615175794
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.10826038615175794
        }, 
        {
            "<org.dyn4j.sandbox.dialogs.AddNonConvexFixtureDialog: void actionPerformed(java.awt.event.ActionEvent)>": 0.10160473048770866
        }, 
        {
            "<org.dyn4j.sandbox.dialogs.AddConvexHullFixtureDialog: void actionPerformed(java.awt.event.ActionEvent)>": 0.10160473048770866
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: boolean isOutside(java.lang.Object)>": [
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.4618872873248212
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.4618872873248212
        }, 
        {
            "<boofcv.io.javacv.JavaCVVideoImageSequence: boolean hasNext()>": 0.4618872873248212
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.44552403834901644
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.4338515838561259
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: java.lang.String toString()>": [
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String getPatternName(int)>": 0.6490327689223424
        }, 
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String selectDocumentName()>": 0.5105636233483862
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: java.lang.String toString()>": 0.4091857429014163
        }, 
        {
            "<boofcv.misc.AutoTypeImage: java.lang.String getInterleavedName()>": 0.409137925881331
        }, 
        {
            "<net.coobird.thumbnailator.geometry.RelativeSize: java.lang.String toString()>": 0.3958913494273325
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: long positionToIndex(long[],long[])>": [
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.3235553571541749
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.31928052002870894
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.29767752271416975
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.29767752271416975
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.29767752271416975
        }
    ], 
    "<net.imglib2.type.AbstractBit64Type: void <init>(net.imglib2.img.NativeImg,int)>": [
        {
            "<boofcv.factory.feature.detect.template.FactoryTemplateMatching: boofcv.alg.feature.detect.template.TemplateMatchingIntensity createIntensity(boofcv.factory.feature.detect.template.TemplateScoreType,java.lang.Class)>": 0.4205453310874042
        }, 
        {
            "<boofcv.struct.convolve.KernelBase: void <init>(int)>": 0.4007626160246615
        }, 
        {
            "<boofcv.alg.InputSanityCheck: void checkSameShapeB(boofcv.struct.image.ImageMultiBand,boofcv.struct.image.ImageMultiBand)>": 0.39856710206262413
        }, 
        {
            "<boofcv.struct.convolve.KernelBase: void <init>(int,int)>": 0.39812827205403234
        }, 
        {
            "<boofcv.alg.InputSanityCheck: void checkSameShape(boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase)>": 0.3860217222024434
        }
    ], 
    "<net.imglib2.converter.ComplexPowerFloatConverter: void convert(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.24305110926064444
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.201832294726364
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.201832294726364
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.18427430546639723
        }, 
        {
            "<boofcv.alg.sfm.robust.ModelManagerScaleTranslate2D: void copyModel(java.lang.Object,java.lang.Object)>": 0.1810950483542926
        }
    ], 
    "<net.imglib2.img.cell.CellImgFactory: net.imglib2.img.NativeImg createIntInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.20557172820160094
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.20557172820160094
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.19009418367404002
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.15968814578412494
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.15968814578412494
        }
    ], 
    "<net.imglib2.type.label.BasePairBitType: void set(net.imglib2.type.label.BasePairBitType)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.14314937676563882
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.14314937676563882
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(boofcv.struct.image.GrayS64)>": 0.13952382775866076
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(boofcv.struct.image.GrayS64)>": 0.13952382775866076
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long min(boofcv.struct.image.GrayS64)>": 0.13952382775866076
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: void setPosition(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: void getTranslation(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.468536325802491
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.45644740722555815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4549590327161815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4514297284100339
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.44882531202406517
        }
    ], 
    "<net.imglib2.AbstractLocalizable: long getLongPosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.6444652635187575
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.5168876727488003
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.5115679070521639
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4966616068166122
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.4924576911988799
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess1D: void fwd(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5042294228042216
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.49710692444961135
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.49583004082014753
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.4857787542816115
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.48025427171273927
        }
    ], 
    "<net.imglib2.img.cell.CellRandomAccess: void move(int[])>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.36865354585395693
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.33496373570098326
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.325819169015884
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void updateObjectIntegerAABB(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.broadphase.AABBInt)>": 0.2946882962540483
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void updateObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.29449741024727616
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.LanczosInterpolator: void <init>(net.imglib2.interpolation.randomaccess.LanczosInterpolator)>": [
        {
            "<boofcv.struct.calib.IntrinsicParameters: boofcv.struct.calib.IntrinsicParameters fsetRadial(double[])>": 0.25705251975243587
        }, 
        {
            "<Catalano.Math.Distances.ChebyshevDistance: double Compute(java.lang.Object,java.lang.Object)>": 0.23935353132236653
        }, 
        {
            "<Catalano.Math.Distances.CanberraDistance: double Compute(java.lang.Object,java.lang.Object)>": 0.23935353132236653
        }, 
        {
            "<Catalano.Math.Distances.CorrelationDistance: double Compute(java.lang.Object,java.lang.Object)>": 0.23935353132236653
        }, 
        {
            "<Catalano.Math.Distances.ManhattanDistance: double Compute(java.lang.Object,java.lang.Object)>": 0.23935353132236653
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void decIndex()>": [
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.4274195384558474
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.4147280985068987
        }, 
        {
            "<Catalano.Imaging.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.4147280985068987
        }, 
        {
            "<Catalano.Imaging.Filters.AlphaTrimmedMean: void setT(int)>": 0.40168653618935546
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.AlphaTrimmedMean: void setT(int)>": 0.40168653618935546
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NearestNeighborInterpolator: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.27356677703754323
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.26159727180913483
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.26159727180913483
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2424492206781365
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.2366492548000964
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedIterableRandomAccessibleInterval: void <init>(net.imglib2.RandomAccessible,net.imglib2.converter.readwrite.SamplerConverter)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06454972243679027
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0625
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06194461797903697
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.061286292230682514
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06067033396213444
        }
    ], 
    "<net.imglib2.display.projector.specialized.PlanarImgXYByteProjector: void <init>(net.imglib2.img.planar.PlanarImg,net.imglib2.img.array.ArrayImg,double,double)>": [
        {
            "<org.dyn4j.geometry.Vector2: boolean isOrthogonal(double,double)>": 0.33208361671103814
        }, 
        {
            "<org.dyn4j.sandbox.panels.UnitCirclePolygonPanel: boolean isValidInput()>": 0.3187260375874544
        }, 
        {
            "<org.dyn4j.geometry.Vector3: boolean isOrthogonal(double,double,double)>": 0.3177548824498717
        }, 
        {
            "<org.dyn4j.geometry.Interval: boolean isDegenerate(double)>": 0.3111495420676095
        }, 
        {
            "<boofcv.alg.shapes.edge.PolygonEdgeIntensity: boolean checkIntensity(boolean,double)>": 0.3107988818414307
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: void move(int[])>": [
        {
            "<boofcv.misc.BoofMiscOps: int countNotZero(int[],int)>": 0.457298861477251
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.43235531752224504
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.4149750089724237
        }, 
        {
            "<boofcv.struct.image.InterleavedS32: void set_unsafe(int,int,int[])>": 0.40311531510843646
        }, 
        {
            "<boofcv.struct.image.InterleavedI16: void set_unsafe(int,int,int[])>": 0.39853877304591834
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowing: float[][] preComputeWeights(int,int[],float)>": [
        {
            "<Catalano.Math.Matrix: float[][] CreateMatrix2D(int,int,float)>": 0.3532957169884725
        }, 
        {
            "<Catalano.Imaging.Tools.GradientImage: float getOrientation(int,int)>": 0.351270422281916
        }, 
        {
            "<Catalano.Imaging.Tools.GradientImage: float getMagnitude(int,int)>": 0.351270422281916
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F32: void setOutside(int,int,float)>": 0.34722963927661255
        }, 
        {
            "<boofcv.alg.weights.WeightPixelUniform_F32: float weight(int,int)>": 0.3454802108134516
        }
    ], 
    "<net.imglib2.type.volatiles.VolatileNumericType: net.imglib2.type.volatiles.VolatileNumericType copy()>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.10065952899503389
        }, 
        {
            "<org.dyn4j.dynamics.WorldTest: void getUserData()>": 0.09395411519917388
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void getUserData()>": 0.09395411519917388
        }, 
        {
            "<org.dyn4j.Reference: boolean equals(java.lang.Object)>": 0.09211554424898176
        }, 
        {
            "<org.dyn4j.collision.FixtureTest: void setUserData()>": 0.09093228851361994
        }
    ], 
    "<net.imglib2.view.composite.CompositeIntervalView: long dimension(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3508771929824561
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3142423944400126
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: void localize(int[])>": [
        {
            "<Sort10: void swapKeys(int[],int,int)>": 0.36644418536491824
        }, 
        {
            "<Sort09: void swapKeys(int[],int,int)>": 0.36644418536491824
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.33712078847747784
        }, 
        {
            "<Catalano.Math.Matrix: void Fill(int[],int)>": 0.33382367296440163
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: void bufferMove(int)>": 0.329486255993858
        }
    ], 
    "<net.imglib2.PointSampleList$PointSampleListCursor: long getLongPosition(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3508771929824561
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3142423944400126
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: void move(net.imglib2.Localizable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsValue: void <init>(net.imglib2.Interval)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.28083936723649194
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.2737725071110128
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.27211742475213774
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.27211742475213774
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2576113536011571
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileNumericType: boolean valueEquals(net.imglib2.type.volatiles.AbstractVolatileNumericType)>": [
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.5635384385982035
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.5635384385982035
        }, 
        {
            "<boofcv.io.javacv.JavaCVVideoImageSequence: boolean hasNext()>": 0.5635384385982035
        }, 
        {
            "<boofcv.struct.flow.ImageFlow$D: boolean isValid()>": 0.5193782080336427
        }, 
        {
            "<org.dyn4j.BinarySearchTreeIterator: boolean hasNext()>": 0.5193782080336427
        }
    ], 
    "<net.imglib2.img.sparse.ShortNtree: void <init>(long[],long[],short)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2540752051198477
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2540752051198477
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2349754431075122
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.1713429686593547
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.1713429686593547
        }
    ], 
    "<net.imglib2.type.AbstractBitType: void updateContainer(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.3187477037083238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.22574829559349857
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.22057752193984925
        }
    ], 
    "<net.imglib2.KDTree$SamplerNode: void <init>(net.imglib2.Sampler,net.imglib2.RealLocalizable,int,net.imglib2.KDTree$SamplerNode,net.imglib2.KDTree$SamplerNode)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.203440189153836
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.20240267616036203
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.20240267616036203
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.2002183086489908
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.2002183086489908
        }
    ], 
    "<net.imglib2.histogram.Integer1dBinMapper: void getLowerBound(long,net.imglib2.type.numeric.IntegerType)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3608430345604141
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.3369913936753923
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.3303077450757248
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.32288570423730323
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(org.jbox2d.particle.ParticleSystem$Proxy)>": 0.30138082697612034
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: java.util.Iterator iterator()>": [
        {
            "<Catalano.Math.SparseArray: java.util.Iterator iterator()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$BufferedImageImageSourceIterator$1: void <init>(net.coobird.thumbnailator.Thumbnails$Builder$BufferedImageImageSourceIterator)>": 0.14138610242640864
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$InputStreamImageSourceIterator$1: void <init>(net.coobird.thumbnailator.Thumbnails$Builder$InputStreamImageSourceIterator)>": 0.14138610242640864
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$URLImageSourceIterator$1: void <init>(net.coobird.thumbnailator.Thumbnails$Builder$URLImageSourceIterator)>": 0.14138610242640864
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$StringImageSourceIterator$1: void <init>(net.coobird.thumbnailator.Thumbnails$Builder$StringImageSourceIterator)>": 0.14138610242640864
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg floats(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: void move(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.3721801937196485
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void process(int,java.lang.Object)>": 0.36695776564254834
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void process(int,int[])>": 0.3664089453555566
        }, 
        {
            "<boofcv.alg.flow.DenseOpticalFlowBlockPyramid: float findFlow(int,int,boofcv.struct.image.ImageGray,boofcv.struct.flow.ImageFlow$D)>": 0.3641974980483875
        }, 
        {
            "<boofcv.alg.transform.wavelet.impl.ImplWaveletTransformInner: void vertical(boofcv.struct.wavelet.WlCoef_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3579922503332893
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: boolean supportsOptimizedCursor(net.imglib2.Interval)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.4324716192132129
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.4215205068438692
        }, 
        {
            "<Catalano.Core.Stopwatch: boolean isRunning()>": 0.3694592847935961
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.3661089905276412
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.36392468776192033
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: net.imglib2.Cursor localizingCursor()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.024397501823713325
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: void localize(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.view.TransformBuilder$3: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.view.StackView: java.util.List getSourceSlices()>": [
        {
            "<org.jbox2d.testbed.framework.TestbedSettings: java.util.List getSettings()>": 0.33930436738645886
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint$Builder: java.util.List getJointsList()>": 0.33930436738645886
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint$Builder: java.util.List getBodiesList()>": 0.33930436738645886
        }, 
        {
            "<org.dyn4j.dynamics.World: java.util.List getJoints()>": 0.33930436738645886
        }, 
        {
            "<org.dyn4j.dynamics.World: java.util.List getBodies()>": 0.33930436738645886
        }
    ], 
    "<net.imglib2.KDTree$KDTreeCursor: void jumpFwd(long)>": [
        {
            "<org.jbox2d.testbed.tests.ConveyorBelt: void processFixture(org.jbox2d.dynamics.Fixture,java.lang.Long)>": 0.11222409229895393
        }, 
        {
            "<boofcv.misc.ProfileOperation: double profileOpsPerSec(boofcv.misc.Performer,long,boolean)>": 0.09953834271519552
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean equals(java.lang.Object)>": 0.09604022140861698
        }, 
        {
            "<org.jbox2d.testbed.framework.TestbedController: void run()>": 0.0958335737875778
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.09425394563436595
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccessible: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.view.TransformBuilder: boolean isIdentity(net.imglib2.transform.integer.Mixed)>": [
        {
            "<org.dyn4j.collision.manifold.IndexedManifoldPointId: boolean equals(java.lang.Object)>": 0.39184340439916254
        }, 
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.35461616428046394
        }, 
        {
            "<Catalano.Core.IntRange: boolean isInside(int)>": 0.34875996559685984
        }, 
        {
            "<boofcv.struct.image.ImageBase: boolean isInBounds(int,int)>": 0.3459809347213133
        }, 
        {
            "<boofcv.struct.flow.ImageFlow: boolean isInBounds(int,int)>": 0.3459809347213133
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: void setComplexNumber(float,float)>": [
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_F32: float get_fast(float,float)>": 0.37786721160343767
        }, 
        {
            "<org.jbox2d.common.Mat33: void set(float,float,float,float,float,float,float,float,float)>": 0.36029375164456834
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>(int,float)>": 0.35579465766491625
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>(int,float)>": 0.35579465766491625
        }, 
        {
            "<Catalano.Imaging.Filters.HSLFiltering: void setFillColor(int,float,float)>": 0.35358571894067403
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.SubsampleIntervalView subsample(net.imglib2.RandomAccessibleInterval,long[])>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.33480541582704604
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.31339654079857593
        }, 
        {
            "<org.jbox2d.pooling.normal.OrderedStack: void push(int)>": 0.3121519675228611
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.31047544308566216
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.30881555305436087
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: long getLongPosition(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3508771929824561
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3142423944400126
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: java.lang.Object getB()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolator: net.imglib2.type.numeric.RealType get()>": [
        {
            "<Catalano.Statistics.Distributions.GammaDistribution: double Entropy()>": 0.3996403002050682
        }, 
        {
            "<Catalano.Statistics.Distributions.ParetoDistribution: double LogProbabilityDensityFunction(double)>": 0.3967619843324804
        }, 
        {
            "<Catalano.Math.Functions.Gabor: double[][] Kernel2D(int,double,double,double,double,double)>": 0.3966528224348377
        }, 
        {
            "<Catalano.Statistics.Distributions.WeibullDistribution: double Variance()>": 0.3949643030835728
        }, 
        {
            "<boofcv.alg.distort.LensDistortionOps: void roundInside(georegression.struct.shapes.RectangleLength2D_F64)>": 0.3932226457125498
        }
    ], 
    "<net.imglib2.RealPointSampleList: void realMax(net.imglib2.RealPositionable)>": [
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.21487335015826062
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.21487335015826062
        }, 
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.214027382399185
        }, 
        {
            "<boofcv.abst.geo.optimization.ModelCodecSwapData: void encode(org.ejml.data.DenseMatrix64F,double[])>": 0.19295834780215798
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.19121854800574056
        }
    ], 
    "<net.imglib2.display.projector.volatiles.Volatile2DRandomAccessibleProjector: void <init>(int,int,net.imglib2.RandomAccessible,net.imglib2.RandomAccessibleInterval,net.imglib2.converter.Converter)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.3920318639895909
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.3920318639895909
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.3901504665873366
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.38539760539582757
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.38539760539582757
        }
    ], 
    "<net.imglib2.display.projector.composite.CompositeXYRandomAccessibleProjector: boolean isComposite()>": [
        {
            "<Catalano.Math.Matrix: boolean isZero(int[])>": 0.4742411757776223
        }, 
        {
            "<Catalano.Math.Matrix: boolean isZero(float[])>": 0.4298765316020722
        }, 
        {
            "<Catalano.Math.Matrix: boolean isZero(double[])>": 0.4298765316020722
        }, 
        {
            "<Catalano.Math.Decompositions.QRDecomposition: boolean isFullRank()>": 0.420855395410265
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: boolean isNonsingular()>": 0.4085430777647874
        }
    ], 
    "<net.imglib2.type.numeric.real.AbstractRealType: java.lang.String toString()>": [
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String getPatternName(int)>": 0.5664559430612135
        }, 
        {
            "<Catalano.Core.DoublePoint: java.lang.String toString()>": 0.5342364659505847
        }, 
        {
            "<Catalano.Core.DoubleRange: java.lang.String toString()>": 0.5342364659505847
        }, 
        {
            "<net.coobird.thumbnailator.geometry.RelativeSize: java.lang.String toString()>": 0.5041836854457751
        }, 
        {
            "<Catalano.Statistics.Regression.LogarithmicRegression: java.lang.String toString()>": 0.4795922045932036
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListCursor: long getLongPosition(int)>": [
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.27387001477714795
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.2672763448585964
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.2541182600444044
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.2541182600444044
        }, 
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: long getTrackId(int)>": 0.24081601051592713
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsBorder: void move(net.imglib2.Localizable)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2405956612950266
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.23603172982817666
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.22518472295752806
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.216117840150713
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.20500543054301607
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess1D: void setPosition(int,int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5197184294495419
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.5124292156602955
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5109781691308262
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.5004981434332876
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.49481048218025186
        }
    ], 
    "<net.imglib2.img.array.AbstractArrayLocalizingCursor: void fwd()>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect2D(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.BoxAABB,int,int)>": 0.48311968126909205
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.RegularClustersIntoGrids: int checkNumberOfConnections(java.util.List)>": 0.4665273972515215
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: int getMaxBalance()>": 0.4605544279355634
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect2D(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,int,int)>": 0.4454971692707721
        }, 
        {
            "<Catalano.Math.Dissimilarities.Dissimilarity: double SokalMichener(int[],int[])>": 0.4372346444735736
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: void setSlice(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.3735680156289425
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3697013583509165
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3697013583509165
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3697013583509165
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void boundRectangleInside(boofcv.struct.image.ImageBase,boofcv.struct.ImageRectangle)>": 0.36498662925869607
        }
    ], 
    "<net.imglib2.util.Util: java.lang.String printCoordinates(long[])>": [
        {
            "<boofcv.demonstrations.feature.disparity.VisualizeStereoDisparity: void main(java.lang.String[])>": 0.5749226309250428
        }, 
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareFiducial: void main(java.lang.String[])>": 0.5540984795836118
        }, 
        {
            "<boofcv.demonstrations.denoise.DenoiseAccuracyStudyApp: void main(java.lang.String[])>": 0.5317027664268188
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.5211559422345466
        }, 
        {
            "<org.jbox2d.common.Transform: java.lang.String toString()>": 0.5153780769810774
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: void <init>(int)>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_F32_U8: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.3708950316781872
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_S32_U8: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.3708950316781872
        }, 
        {
            "<boofcv.alg.distort.impl.ImplImageDistort_PL: void apply(boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase,int,int,int,int)>": 0.3392648042647487
        }, 
        {
            "<boofcv.struct.image.InterleavedS32: boofcv.struct.image.ImageBase _createNew(int,int)>": 0.31857139025715203
        }, 
        {
            "<boofcv.struct.image.InterleavedU8: boofcv.struct.image.ImageBase _createNew(int,int)>": 0.31857139025715203
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: void localize(double[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5282528971256722
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5212330770750911
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.5110284331856345
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5057620661146874
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5057546978502829
        }
    ], 
    "<net.imglib2.img.cell.CellImgFactory: net.imglib2.img.cell.CellImg createLongInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.19270150385571458
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.19270150385571458
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.17820800197681597
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.14336948875748118
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.14336948875748118
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform$InverseTranslationTransform: void apply(long[],long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.24729034217626794
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.24729034217626794
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.22895986090025797
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.20773877534405594
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.19764098730509247
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: void move(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType createVariable()>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.19907823696948326
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.19907823696948326
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.19907823696948326
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.19665395176259184
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.1929205687532842
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: float getFloatPosition(int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.40574316459343585
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4013532893609331
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3902305962088393
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.3897447508128796
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.3844941731245039
        }
    ], 
    "<net.imglib2.type.numeric.integer.ShortType: net.imglib2.type.numeric.integer.ShortType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.histogram.Real1dBinMapper: void getLowerBound(long,net.imglib2.type.numeric.RealType)>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.4773196164783695
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.47657405506777456
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.47470651608831793
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Vector3 solve33(org.dyn4j.geometry.Vector3)>": 0.44378618614210724
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Matrix33 invert()>": 0.43877206505965544
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListRandomAccess: void setPosition(int[])>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.281776631976369
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.2814881568263037
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.27138453156016196
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.26435645407407105
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.25194855288827306
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform: void getTranslation(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.468536325802491
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.45644740722555815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4549590327161815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4514297284100339
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.44882531202406517
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: void localize(float[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5893979327979786
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5833282853181612
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5703647788499532
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5693853170929909
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.5583900047785767
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void getCenterValue(long,java.lang.Object)>": [
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<net.coobird.thumbnailator.resizers.ProgressiveBilinearResizer: void <init>(java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<net.coobird.thumbnailator.resizers.BicubicResizer: void <init>(java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<net.coobird.thumbnailator.resizers.BilinearResizer: void <init>(java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<boofcv.abst.geo.fitting.DistanceFromModelResidualN: void setModel(java.lang.Object)>": 0.21126595987653524
        }
    ], 
    "<net.imglib2.img.sparse.Ntree$NtreeNode: void <init>(net.imglib2.img.sparse.Ntree$NtreeNode,java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.283182832713922
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.22793124642321272
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.22793124642321272
        }, 
        {
            "<boofcv.gui.image.SelectInputImageToolBar$2: void <init>(boofcv.gui.image.SelectInputImageToolBar,java.lang.Object)>": 0.19882247786393054
        }, 
        {
            "<org.dyn4j.dynamics.InteractionEdge: void <init>(org.dyn4j.dynamics.Body,java.lang.Object)>": 0.19882247786393054
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: void setPosition(int,int)>": [
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.41962171610212357
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(long[],int,int,long[],int,int,int,int)>": 0.4177308866889704
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(long[],int,int,long[],int,int,int,int)>": 0.4164042102307133
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long[],int,int,int,int)>": 0.4094559167796321
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long[],int,int,int,int)>": 0.4094559167796321
        }
    ], 
    "<net.imglib2.KDTreeNode: void <init>(net.imglib2.KDTreeNode)>": [
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.2051090680650749
        }, 
        {
            "<org.box2d.proto.Box2D$PbBody: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.2030443494454766
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: int getSerializedSize()>": 0.2022151298396438
        }, 
        {
            "<org.box2d.proto.Box2D$PbBody: int getSerializedSize()>": 0.2005281926034806
        }, 
        {
            "<Catalano.Imaging.Filters.Add: void <init>(int,int,int)>": 0.20031292256337466
        }
    ], 
    "<net.imglib2.img.planar.PlanarCursor1D: int getIntPosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5404445437210531
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5378698512791679
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5367363589166139
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.5327985437910203
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5223229084085435
        }
    ], 
    "<net.imglib2.neighborsearch.KNearestNeighborSearchOnIterableRealInterval: net.imglib2.neighborsearch.KNearestNeighborSearchOnIterableRealInterval copy()>": [
        {
            "<Catalano.Core.Structs.DoubleArrayList: void ensureCapacity(int)>": 0.28762612882497574
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void cdft2d_sub(int,double[][],boolean)>": 0.284195279174971
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: void add(double)>": 0.266712794485307
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void complexInverse(double[],boolean)>": 0.2598851604030645
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void complexForward(double[])>": 0.25947890189509387
        }
    ], 
    "<net.imglib2.view.TransformBuilder$2: void <init>(net.imglib2.view.TransformBuilder,net.imglib2.transform.integer.MixedTransform,boolean,net.imglib2.RandomAccessible)>": [
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.22820512820512817
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.22820512820512817
        }, 
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.22812290775026625
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.22689686309955928
        }, 
        {
            "<boofcv.abst.feature.detect.extract.WrapperNonMaxCandidate: void <init>(boofcv.alg.feature.detect.extract.NonMaxCandidate,boolean,boolean)>": 0.2068496337977838
        }
    ], 
    "<net.imglib2.display.AbstractLinearRange: void <init>()>": [
        {
            "<Catalano.Imaging.Filters.Artistic.FakeHDR: void <init>(double)>": 0.24688749297099175
        }, 
        {
            "<org.dyn4j.geometry.Transform: void <init>()>": 0.24537695286150452
        }, 
        {
            "<Catalano.Statistics.Kernels.HistogramIntersection: void <init>(double,double)>": 0.24161722724228799
        }, 
        {
            "<Catalano.Statistics.Distributions.TStudentDistribution: double Mean()>": 0.23984347706293355
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BernsenThreshold: void setContrastThreshold(double)>": 0.23965741571734478
        }
    ], 
    "<net.imglib2.view.MixedRandomAccess: void move(int,int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.4351431343251547
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.4262612624693863
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.42562952549820426
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.42305898139133036
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4213989704311901
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: net.imglib2.RandomAccess randomAccess()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.024397501823713325
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: java.lang.String toString()>": [
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.5080197820774149
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendPrefix(java.lang.String,java.lang.String)>": 0.4836345702584153
        }, 
        {
            "<org.jbox2d.common.Transform: java.lang.String toString()>": 0.48265451817954086
        }, 
        {
            "<org.jbox2d.serialization.UnsupportedObjectException: java.lang.String getLocalizedMessage()>": 0.4816929085523147
        }, 
        {
            "<org.jbox2d.common.Sweep: java.lang.String toString()>": 0.4565742610425534
        }
    ], 
    "<net.imglib2.neighborsearch.KNearestNeighborSearchOnIterableRealInterval: void <init>(net.imglib2.IterableRealInterval,int)>": [
        {
            "<boofcv.alg.feature.disparity.impl.StereoDisparityWtoNaiveFive: void <init>(int,int,int,int)>": 0.3932645324431943
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.StereoDisparityWtoNaive: void <init>(int,int,int,int)>": 0.3510909768766793
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void <init>(boofcv.struct.image.InterleavedF64)>": 0.34484289607123075
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int)>": 0.3400348828271032
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void <init>(int)>": 0.3386633017344739
        }
    ], 
    "<net.imglib2.img.cell.CellCursor: boolean hasNext()>": [
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.6025896240805467
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.5900648394141961
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.5900648394141961
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.5900648394141961
        }, 
        {
            "<net.coobird.thumbnailator.ThumbnailParameter: boolean useOriginalImageType()>": 0.5900648394141961
        }
    ], 
    "<net.imglib2.transform.integer.AbstractMixedTransform: void getComponentZero(boolean[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5121700990831821
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.5038568742780369
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.49764933371708214
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4953337551774494
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.49521737027234347
        }
    ], 
    "<net.imglib2.img.cell.AbstractCellImg: void copyDataTo(net.imglib2.img.cell.AbstractCellImg)>": [
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void addDecomposablePolygonAction()>": 0.14260388623975603
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean removeBody(int,boolean)>": 0.13925018898677868
        }, 
        {
            "<org.dyn4j.dynamics.World: void removeAllJoints(boolean)>": 0.1380215879273886
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean removeBody(org.dyn4j.dynamics.Body,boolean)>": 0.1367874237872115
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean removeBody(org.dyn4j.dynamics.Body)>": 0.1355467727914064
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void fwd(int)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMax(int,int)>": 0.4332365246336078
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMin(int,int)>": 0.4332365246336078
        }, 
        {
            "<boofcv.struct.learning.ClassificationHistogram: void increment(int,int)>": 0.37395599238059124
        }, 
        {
            "<boofcv.struct.image.GrayS32: void unsafe_set(int,int,int)>": 0.35664368989090917
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.35255826554979985
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg bytes(byte[],long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.14702947288269252
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_I8: void set(byte[])>": 0.13975451658136614
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.1361035951395862
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.13459242771327712
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.13002080499333155
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: void div(net.imglib2.type.numeric.integer.UnsignedLongType)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.29047902492238786
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.28827642057928204
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.27002746626003526
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.26112615128130534
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.2549982375162229
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void move(int,int)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMax(int,int)>": 0.4710032398924948
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMin(int,int)>": 0.4710032398924948
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(int,int[])>": 0.43087226064197226
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setRGB(int,int[])>": 0.42594307846064744
        }, 
        {
            "<boofcv.struct.image.GrayS32: void unsafe_set(int,int,int)>": 0.4152719265845018
        }
    ], 
    "<net.imglib2.util.ConstantUtils$1: void <init>(int,java.lang.Object)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.3407558170541846
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.3407558170541846
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.3407558170541846
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.3388339168158685
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.3388339168158685
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: boolean valueEquals(net.imglib2.type.numeric.complex.ComplexFloatType)>": [
        {
            "<net.smert.jreactphysics3d.collision.shapes.CylinderShape: boolean isEqualTo(net.smert.jreactphysics3d.collision.shapes.CollisionShape)>": 0.4061781284906001
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.CapsuleShape: boolean isEqualTo(net.smert.jreactphysics3d.collision.shapes.CollisionShape)>": 0.4061781284906001
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.ConeShape: boolean isEqualTo(net.smert.jreactphysics3d.collision.shapes.CollisionShape)>": 0.4061781284906001
        }, 
        {
            "<com.flowpowered.react.collision.shape.CylinderShape: boolean isEqualTo(com.flowpowered.react.collision.shape.CollisionShape)>": 0.4061781284906001
        }, 
        {
            "<com.flowpowered.react.collision.shape.ConeShape: boolean isEqualTo(com.flowpowered.react.collision.shape.CollisionShape)>": 0.4061781284906001
        }
    ], 
    "<net.imglib2.histogram.Real1dBinMapper: void getUpperBound(long,net.imglib2.type.numeric.RealType)>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.4773196164783695
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.47657405506777456
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.47470651608831793
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Vector3 solve33(org.dyn4j.geometry.Vector3)>": 0.44378618614210724
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Matrix33 invert()>": 0.43877206505965544
        }
    ], 
    "<net.imglib2.FinalInterval: net.imglib2.FinalInterval createMinSize(long[])>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2676706354727479
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.26375814701462796
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.26375814701462796
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2627855954033673
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2529642173671967
        }
    ], 
    "<net.imglib2.img.cell.CellImgFactory: net.imglib2.img.cell.CellImg createByteInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.19270150385571458
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.19270150385571458
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.17820800197681597
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.14336948875748118
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.14336948875748118
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedRandomAccessible: void <init>(net.imglib2.RandomAccessible,net.imglib2.converter.readwrite.SamplerConverter)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06454972243679027
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0625
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06194461797903697
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.061286292230682514
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06067033396213444
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: byte getValue()>": [
        {
            "<org.jbox2d.particle.ParticleColor: void <init>(byte,byte,byte,byte)>": 0.2402902209727673
        }, 
        {
            "<org.jbox2d.collision.ContactID: void flip()>": 0.2336607246490357
        }, 
        {
            "<org.jbox2d.particle.ParticleColor: void set(byte,byte,byte,byte)>": 0.22276632844671548
        }, 
        {
            "<org.jbox2d.particle.ParticleColor: void set(org.jbox2d.particle.ParticleColor)>": 0.22223703901263836
        }, 
        {
            "<org.jbox2d.collision.ContactID: void set(org.jbox2d.collision.ContactID)>": 0.22223703901263836
        }
    ], 
    "<net.imglib2.img.list.ListRandomAccess: void setPosition(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.5565367561000918
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.5544468926753877
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.5528325206032068
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void horizontal9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.5505894953717076
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve11(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.5503346431178904
        }
    ], 
    "<net.imglib2.display.ColorTable8: int get(int,int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.6793869824302963
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.6793869824302963
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.6793869824302963
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int max(int[],int,int,int,int)>": 0.5594765897638286
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int min(int[],int,int,int,int)>": 0.5594765897638286
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedCursor: void localize(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: int getIntPosition(int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.47744590691347155
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.47744590691347155
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.47744590691347155
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.SquaresIntoRegularClusters: int add(int,int)>": 0.4232724454236355
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.4221220417811163
        }
    ], 
    "<net.imglib2.util.Util: double distance(net.imglib2.RealLocalizable,net.imglib2.RealLocalizable)>": [
        {
            "<Catalano.Math.Matrix: double NormF(double[][])>": 0.4755579204974233
        }, 
        {
            "<Catalano.Math.Approximation: double Lowprecision_Pow(double,double)>": 0.4709046898474037
        }, 
        {
            "<Catalano.Math.Approximation: double Highprecision_Pow(double,double)>": 0.4709046898474037
        }, 
        {
            "<Catalano.Statistics.Kernels.HistogramIntersection: double Function(java.lang.Object,java.lang.Object)>": 0.46617173577610616
        }, 
        {
            "<Catalano.Math.Functions.Beta: double Function(double,double)>": 0.46359013750606365
        }
    ], 
    "<net.imglib2.transform.integer.permutation.PermutationTransform: void applyInverse(long[],long[])>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3726938610693688
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.36045436712099854
        }, 
        {
            "<org.jbox2d.dynamics.Island: void add(org.jbox2d.dynamics.joints.Joint)>": 0.3564071832127774
        }, 
        {
            "<org.jbox2d.dynamics.Island: void add(org.jbox2d.dynamics.contacts.Contact)>": 0.3564071832127774
        }, 
        {
            "<org.jbox2d.particle.StackQueue: java.lang.Object pop()>": 0.3564071832127774
        }
    ], 
    "<net.imglib2.converter.RealUnsignedByteConverter: void <init>(double,double)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void access$000(boofcv.app.calib.AssistedCalibration,double,double,double,double)>": 0.5336401877373447
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceSe3SymmetricSq: void setIntrinsic(double,double,double,double,double,double)>": 0.5196431965654592
        }, 
        {
            "<boofcv.gui.fiducial.VisualizeFiducial: void drawLine(java.awt.Graphics2D,java.awt.geom.Line2D$Double,double,double,double,double)>": 0.5171538033530269
        }, 
        {
            "<boofcv.alg.sfm.robust.DistancePlane2DToPixelSq: void setIntrinsic(double,double,double)>": 0.510318790333798
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceHomographyPixelSq: void setIntrinsic(double,double,double)>": 0.510318790333798
        }
    ], 
    "<net.imglib2.FinalInterval: void <init>(long[],long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2714880268656277
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2714880268656277
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.25136798088455087
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2271525380463154
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2166580267769197
        }
    ], 
    "<net.imglib2.AbstractLocalizable: void localize(float[])>": [
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_S64: void getF(int,float[])>": 0.4494482389628714
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF32)>": 0.43403432413324206
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedF32)>": 0.3949959276042379
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchColor: void meanColor(float[],float[],float)>": 0.3832306753076067
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$PL: void getF(int,float[])>": 0.3805787737085878
        }
    ], 
    "<net.imglib2.img.sparse.ShortNtree: net.imglib2.img.sparse.ShortNtree createInstance(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.12458962570367609
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.12458962570367609
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.11785109527680923
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11532909002102744
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.0989858659890338
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform$InverseTranslationTransform: void apply(net.imglib2.Localizable,net.imglib2.Positionable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06666666666666665
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.06454972243679029
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06397612635199752
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.06329621044272916
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06266005147845038
        }
    ], 
    "<net.imglib2.transform.integer.shear.InverseShearTransform: void <init>(int,int,int)>": [
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayF32)>": 0.41796124624699
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayF32,int,int,boofcv.struct.image.GrayF32)>": 0.3714219413891914
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegion pixelRegion(int,int,java.lang.Class)>": 0.3632276211999417
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegionNCC pixelRegionNCC(int,int,java.lang.Class)>": 0.3632276211999417
        }, 
        {
            "<boofcv.core.image.border.ImageBorder_S32: void set(int,int,int)>": 0.3428502824050388
        }
    ], 
    "<net.imglib2.type.numeric.integer.ByteType: net.imglib2.type.numeric.integer.ByteType createVariable()>": [
        {
            "<boofcv.demonstrations.fiducial.FiducialTrackerApp: void refreshAll(java.lang.Object[])>": 0.09512551571501338
        }, 
        {
            "<org.dyn4j.dynamics.CapacityTest: void createFailureListenerCount()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.dynamics.CapacityTest: void createFailureJointCount()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.dynamics.CapacityTest: void createFailureBodyCount()>": 0.09306821918192615
        }, 
        {
            "<boofcv.demonstrations.sfm.d3.VisualizeMonocularPlaneVisualOdometryApp: void process(boofcv.io.image.SimpleImageSequence)>": 0.09106841590512935
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned2BitType: void <init>(long)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3962735768209029
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.35645271449831517
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.3329839463683894
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3168575059075992
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.29043717175584594
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: void dec()>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void solveColorMixing(org.jbox2d.dynamics.TimeStep)>": 0.24737253396823114
        }, 
        {
            "<org.jbox2d.collision.ContactID: int getKey()>": 0.22696139123022654
        }, 
        {
            "<org.jbox2d.collision.ContactID: int compareTo(org.jbox2d.collision.ContactID)>": 0.21532812618357883
        }, 
        {
            "<org.jbox2d.collision.ContactID: boolean isEqual(org.jbox2d.collision.ContactID)>": 0.21138449936218628
        }, 
        {
            "<org.jbox2d.collision.ContactID: int compareTo(java.lang.Object)>": 0.20812374726173258
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: java.math.BigInteger getMaxBigIntegerValue()>": [
        {
            "<boofcv.struct.feature.TupleDesc_I8: void set(byte[])>": 0.2747656060327768
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_I8: void setTo(boofcv.struct.feature.TupleDesc_I8)>": 0.24172796488955706
        }, 
        {
            "<boofcv.alg.fiducial.square.DetectFiducialSquareImage: void binaryToDef(boofcv.struct.image.GrayU8,short[])>": 0.2354527490809234
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: int sad(boofcv.struct.feature.TupleDesc_S8,boofcv.struct.feature.TupleDesc_S8)>": 0.22564908709092482
        }, 
        {
            "<boofcv.alg.descriptor.DescriptorDistance: int sad(boofcv.struct.feature.TupleDesc_U8,boofcv.struct.feature.TupleDesc_U8)>": 0.21564718742964742
        }
    ], 
    "<net.imglib2.histogram.Real1dBinMapper: void getLowerBound(long,java.lang.Object)>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.4654306950481808
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.46470096652320103
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.4628720056819189
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Vector3 solve33(org.dyn4j.geometry.Vector3)>": 0.43261363621427523
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Matrix33 invert()>": 0.42770751171242727
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.ByteArray: void setValue(int,byte)>": [
        {
            "<Catalano.Imaging.FastBitmap: void setGray(int,int)>": 0.403968035541881
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_F32_U8: void setDisparity(int,int)>": 0.3604412748178206
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_S32_U8: void setDisparity(int,int)>": 0.3604412748178206
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_U8: void set(int,float)>": 0.32080690859671385
        }, 
        {
            "<boofcv.alg.distort.impl.ImplImageDistort_I8: void assign(int,float)>": 0.32080690859671385
        }
    ], 
    "<net.imglib2.iterator.LocalizingIntervalIterator: void reset()>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2721234154891731
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.25083921950203747
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2495452780765398
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2495452780765398
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.24873373212002511
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: boolean correspondsToPlane(net.imglib2.Interval)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.3651642242236771
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.31048360053834795
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.3046298629459725
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean equals(java.lang.Object)>": 0.2729263049786519
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int upperBound(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.26400767065858544
        }
    ], 
    "<net.imglib2.transform.InverseTransform: int numTargetDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.transform.integer.ComponentMappingTransform: void <init>(int[])>": [
        {
            "<boofcv.struct.image.InterleavedS32: void _setData(java.lang.Object)>": 0.27644934451490594
        }, 
        {
            "<boofcv.struct.image.GrayS32: void _setData(java.lang.Object)>": 0.27644934451490594
        }, 
        {
            "<boofcv.struct.pyramid.PyramidDiscrete: void setScaleFactors(int[])>": 0.2671073304977036
        }, 
        {
            "<Catalano.Imaging.Shapes.IntPolygon: void <init>(int[],int[])>": 0.26236622972912643
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int[])>": 0.25403284129424764
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: float getRealFloat()>": [
        {
            "<org.jbox2d.dynamics.contacts.Contact: float mixFriction(float,float)>": 0.3072378133345426
        }, 
        {
            "<org.jbox2d.common.Settings: float mixFriction(float,float)>": 0.3072378133345426
        }, 
        {
            "<Catalano.Math.Geometry.PointsCloud: void setQuadrilateralRelativeDistortionLimit(float)>": 0.3045366364956434
        }, 
        {
            "<org.jbox2d.common.Rot: float getAngle()>": 0.3028023210173788
        }, 
        {
            "<org.jbox2d.common.MathUtils: float fastAbs(float)>": 0.3022179620091295
        }
    ], 
    "<net.imglib2.type.logic.BoolType: void <init>(net.imglib2.type.BooleanType)>": [
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.2786597444819245
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.2786597444819245
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.27599066341097656
        }, 
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.2753697667489759
        }, 
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: boolean process(boofcv.struct.image.ImageBase)>": 0.25332608915331273
        }
    ], 
    "<net.imglib2.view.ExtendedRandomAccessibleInterval: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.RealPoint: void setPosition(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.21487335015826062
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.21487335015826062
        }, 
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.214027382399185
        }, 
        {
            "<boofcv.abst.geo.optimization.ModelCodecSwapData: void encode(org.ejml.data.DenseMatrix64F,double[])>": 0.19295834780215798
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.19121854800574056
        }
    ], 
    "<net.imglib2.type.label.BasePairCharType: void <init>(net.imglib2.type.label.BasePairBitType$Base)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2586498144554399
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2586498144554399
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2586498144554399
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.2569728983969629
        }, 
        {
            "<Catalano.Imaging.Filters.Resize: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.2525721614872325
        }
    ], 
    "<net.imglib2.type.numeric.complex.AbstractComplexType: void add(net.imglib2.type.numeric.complex.AbstractComplexType)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawPrismaticJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.PrismaticJoint)>": 0.3858213558043328
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawRopeJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.RopeJoint)>": 0.38558496278404886
        }, 
        {
            "<Catalano.Math.ComplexNumber: Catalano.Math.ComplexNumber Pow(Catalano.Math.ComplexNumber,double)>": 0.3832886280322012
        }, 
        {
            "<Catalano.Math.ComplexNumber: void Pow(double)>": 0.3766547249682445
        }, 
        {
            "<Catalano.Math.Approximation: double Lowprecision_Pow(double,double)>": 0.37371908445519414
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: int compareTo(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.41390690378820216
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3678944452106656
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3678944452106656
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3678944452106656
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.3666442059548595
        }
    ], 
    "<net.imglib2.util.ConstantUtils$1$ConstantRandomAccess: net.imglib2.util.ConstantUtils$1$ConstantRandomAccess copy()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.transform.integer.BoundingBox: void orderMinMax()>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.3253902179819382
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.27247888187115477
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.2612102511936146
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.2612102511936146
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void flipHorizontal(boofcv.struct.image.GrayS64)>": 0.25909137300746454
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: void setPosition(long[])>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.27071451118766676
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2662296535154992
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2662296535154992
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2575491969443224
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.25225208071682204
        }
    ], 
    "<net.imglib2.transform.integer.AbstractMixedTransform: void getTranslation(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.504926012584785
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4941883424443113
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4911869936413902
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.48717831688967395
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4858028328317364
        }
    ], 
    "<net.imglib2.display.projector.specialized.PlanarImgContainerSamplerImpl: void <init>(int)>": [
        {
            "<boofcv.abst.feature.detect.interest.ConfigFastHessian: void <init>(float,int,int,int,int,int,int)>": 0.4099009042716981
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.4085236154468869
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.4085236154468869
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.4085236154468869
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.4062525092895452
        }
    ], 
    "<net.imglib2.PointSampleList: void add(net.imglib2.Point,java.lang.Object)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2820568493851585
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2569713717996182
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.25544066657706865
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.25544066657706865
        }, 
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: void transform(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.24973381812730197
        }
    ], 
    "<net.imglib2.img.array.AbstractArrayCursor: void localize(int[])>": [
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.32110211499523084
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.30628904859204165
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int)>": 0.2900491459375537
        }, 
        {
            "<org.jbox2d.collision.Distance$SimplexCache: void set(org.jbox2d.collision.Distance$SimplexCache)>": 0.27480732476567626
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int)>": 0.27281205855743323
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void reset()>": [
        {
            "<boofcv.abst.feature.tracker.PointTrack: void reset()>": 0.1256297269074015
        }, 
        {
            "<org.jbox2d.testbed.framework.TestbedController: void run()>": 0.1167494249048648
        }, 
        {
            "<org.jbox2d.testbed.framework.TestbedController: void stepAndRender()>": 0.11249426064331437
        }, 
        {
            "<org.dyn4j.dynamics.WorldTest: void getUserData()>": 0.10514994558491723
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void getUserData()>": 0.10514994558491723
        }
    ], 
    "<net.imglib2.img.array.ArrayImgFactory: int numEntitiesRangeCheck(long[],net.imglib2.util.Fraction)>": [
        {
            "<boofcv.app.FiducialDetection: void parse(java.lang.String[])>": 0.449174935130667
        }, 
        {
            "<boofcv.app.CreateFiducialSquareBinary: void printPatternDefinitions()>": 0.40636243658135884
        }, 
        {
            "<boofcv.app.CameraCalibration: void parse(java.lang.String[])>": 0.40334846778327704
        }, 
        {
            "<boofcv.factory.interpolate.FactoryInterpolation: boofcv.alg.interpolate.InterpolateRectangle nearestNeighborRectangle(java.lang.Class)>": 0.4023960858089989
        }, 
        {
            "<boofcv.testing.BoofTesting: void assertEquals(double[],int[])>": 0.40126214740856175
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: void realMin(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.type.numeric.ARGBDoubleType: void set(net.imglib2.type.numeric.NativeARGBDoubleType)>": [
        {
            "<Catalano.Math.ComplexNumber: void Pow(double)>": 0.43355739393717196
        }, 
        {
            "<Catalano.Math.ComplexNumber: Catalano.Math.ComplexNumber Pow(Catalano.Math.ComplexNumber,double)>": 0.43040047052698027
        }, 
        {
            "<Catalano.Math.Approximation: double Lowprecision_Pow(double,double)>": 0.42996313287710275
        }, 
        {
            "<Catalano.Math.Approximation: double Highprecision_Pow(double,double)>": 0.42996313287710275
        }, 
        {
            "<Catalano.Math.Tools: double Log(double,double)>": 0.42996313287710275
        }
    ], 
    "<net.imglib2.util.ValuePair: boolean equals(java.lang.Object)>": [
        {
            "<org.dyn4j.Reference: boolean equals(java.lang.Object)>": 0.4684090581610601
        }, 
        {
            "<org.jbox2d.common.Mat22: boolean equals(java.lang.Object)>": 0.44761951790896054
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean equals(java.lang.Object)>": 0.41191773201245807
        }, 
        {
            "<org.dyn4j.sandbox.panels.PulleyJointPanel: boolean isValidInput()>": 0.2801992378413125
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.27987748646411037
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: void bck(int)>": [
        {
            "<boofcv.struct.convolve.Kernel1D_I32: int get(int)>": 0.4992938521966533
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.4992938521966533
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getLength(int)>": 0.4992938521966533
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4904986609350741
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.4832660422121031
        }
    ], 
    "<net.imglib2.view.IntervalView: net.imglib2.RandomAccess randomAccess()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.0157485197087178
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.0157485197087178
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.0157485197087178
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.0157485197087178
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.0157485197087178
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: void setBigInteger(java.math.BigInteger)>": [
        {
            "<Catalano.Math.RationalNumber: void <init>(java.math.BigInteger)>": 0.21438489046722106
        }, 
        {
            "<Catalano.Math.RationalNumber: void <init>(java.math.BigInteger,java.math.BigInteger)>": 0.20003594022154034
        }, 
        {
            "<Catalano.Math.RationalNumber: void <init>(int)>": 0.19693735398350215
        }, 
        {
            "<Catalano.Math.RationalNumber: void <init>(int,int)>": 0.19480844476259207
        }, 
        {
            "<Catalano.Math.RationalNumber: void Multiply(java.math.BigInteger,java.math.BigInteger)>": 0.182193490568016
        }
    ], 
    "<net.imglib2.img.cell.CellRandomAccess: net.imglib2.img.cell.AbstractCell getCell()>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.13908716006604668
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.12971863041569273
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.12971863041569273
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.1244838243607278
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.12215681871998943
        }
    ], 
    "<net.imglib2.AbstractLocalizable: void <init>(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.31871009265509614
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.3167249163010024
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.3167249163010024
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.31370340328680457
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.31370340328680457
        }
    ], 
    "<net.imglib2.view.IntervalView: java.util.Iterator iterator()>": [
        {
            "<Catalano.Math.SparseArray: java.util.Iterator iterator()>": 0.16907195642463727
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$BufferedImageImageSourceIterator$1: void <init>(net.coobird.thumbnailator.Thumbnails$Builder$BufferedImageImageSourceIterator)>": 0.08178791874526148
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$InputStreamImageSourceIterator$1: void <init>(net.coobird.thumbnailator.Thumbnails$Builder$InputStreamImageSourceIterator)>": 0.08178791874526148
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$URLImageSourceIterator$1: void <init>(net.coobird.thumbnailator.Thumbnails$Builder$URLImageSourceIterator)>": 0.08178791874526148
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$StringImageSourceIterator$1: void <init>(net.coobird.thumbnailator.Thumbnails$Builder$StringImageSourceIterator)>": 0.08178791874526148
        }
    ], 
    "<net.imglib2.util.Util: float average(float[])>": [
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: double sumCoefficients(float[])>": 0.4936449453123715
        }, 
        {
            "<boofcv.alg.tracker.meanshift.TrackerMeanShiftComaniciu2003: double distanceHistogram(float[],float[])>": 0.46161333300093693
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: double computeEnergy(float[])>": 0.43526698954266924
        }, 
        {
            "<Catalano.Math.Tools: float Sum(float[])>": 0.4021829528602241
        }, 
        {
            "<Catalano.Statistics.DescriptiveStatistics: double Mean(int[])>": 0.39367717209911623
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: void inc()>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.3082907442430296
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.28240681262577627
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.27535950287699673
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.2706374724324635
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.2684679872899037
        }
    ], 
    "<net.imglib2.util.Fraction: void mul(net.imglib2.util.Fraction)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3645242450470086
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.32411830422815274
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3042066573609582
        }, 
        {
            "<org.jbox2d.common.Timer: float getMilliseconds()>": 0.29977765344685564
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2987837495584856
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: void set(float)>": [
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_F32: void <init>(int,float,float)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_I: void <init>(int,float,float)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide(boofcv.struct.image.GrayF32,float,float,float,boofcv.struct.image.GrayF32)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayF32,float,float,float,boofcv.struct.image.GrayF32)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply(boofcv.struct.image.GrayF32,float,float,float,boofcv.struct.image.GrayF32)>": 0.31943979135861733
        }
    ], 
    "<net.imglib2.converter.ChannelARGBConverter: void <init>(net.imglib2.converter.ChannelARGBConverter$Channel)>": [
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.2720414082872495
        }, 
        {
            "<Catalano.Imaging.Filters.Add: void <init>(int,int,int)>": 0.2710650193604439
        }, 
        {
            "<Catalano.Imaging.Filters.Subtract: void <init>(int,int,int)>": 0.2710650193604439
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.2702345642544438
        }, 
        {
            "<org.box2d.proto.Box2D$PbBody: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.2699506662809773
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void scale(double[][],double,double[][])>": [
        {
            "<Catalano.Math.Matrix: void Subtract(double[][],double)>": 0.42470251719732555
        }, 
        {
            "<Catalano.Math.Matrix: void Divide(double[][],double)>": 0.42470251719732555
        }, 
        {
            "<Catalano.Math.Matrix: void Add(double[][],double)>": 0.42470251719732555
        }, 
        {
            "<Catalano.Math.Matrix: double[][] CreateMatrix2D(int,int,double)>": 0.4173814926219318
        }, 
        {
            "<Catalano.Math.Matrix: double[][] SubMatrix(double[][],int,int)>": 0.3982818247900254
        }
    ], 
    "<net.imglib2.position.transform.Round: void setPosition(net.imglib2.RealLocalizable)>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayF64,boofcv.struct.image.GrayS64)>": 0.27109781482023637
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2561369201994019
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedF64,boofcv.struct.image.InterleavedS64)>": 0.24240842807339438
        }, 
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.2263213043075249
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS8,boofcv.struct.image.GrayS64)>": 0.22200850854656345
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: void setA(double)>": [
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitSegment: void <init>(double,double,int)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitLoop: void <init>(double,double,int)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationAverageGradientIntegral: void <init>(double,int,double,int,double,java.lang.Class)>": 0.34537863735525043
        }, 
        {
            "<boofcv.factory.feature.orientation.FactoryOrientationAlgs: boofcv.abst.feature.orientation.OrientationIntegral image_ii(double,int,double,int,double,java.lang.Class)>": 0.3341995859152048
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_S32: void <init>(double,int,double,boolean)>": 0.324532417269161
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: double getG()>": [
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double DistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double OneSideDistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double ComplementaryDistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.32533950937620415
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double pixelScaleCurrentToInput()>": 0.3144161822359606
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg unsignedBytes(byte[],long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.14702947288269252
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_I8: void set(byte[])>": 0.13975451658136614
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.1361035951395862
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.13459242771327712
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.13002080499333155
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: void localize(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5217265860160636
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5183212598139953
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5027138908661062
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5026778304047806
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.4967329544180712
        }
    ], 
    "<net.imglib2.position.transform.AbstractPositionableTransform: void <init>(net.imglib2.Localizable)>": [
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,int)>": 0.2963364513032868
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int)>": 0.2868491021720964
        }, 
        {
            "<boofcv.struct.FastQueueArray_F64: double[] createInstance()>": 0.2824664021462128
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: void trimToSize()>": 0.28089234902385085
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void <init>(int)>": 0.2783658521033276
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: void move(int,int)>": [
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayF32)>": 0.3131853721379493
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayF32,int,int,boofcv.struct.image.GrayF32)>": 0.2782039059958076
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegion pixelRegion(int,int,java.lang.Class)>": 0.2756345729584764
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegionNCC pixelRegionNCC(int,int,java.lang.Class)>": 0.2756345729584764
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.GIntegralImageFeatureIntensity: void hessian(boofcv.struct.image.ImageGray,int,int,boofcv.struct.image.GrayF32)>": 0.25933879105925634
        }
    ], 
    "<net.imglib2.position.transform.AbstractPositionableTransform: void fwd(int)>": [
        {
            "<boofcv.alg.scene.FeatureToWordHistogram_F64: void addFeature(boofcv.struct.feature.TupleDesc_F64)>": 0.30548800519691655
        }, 
        {
            "<boofcv.alg.feature.color.GHistogramFeatureOps: void histogram(double[],int,boofcv.alg.feature.color.Histogram_F64)>": 0.27160054991503085
        }, 
        {
            "<Catalano.Imaging.Texture.GrayLevelRunLengthMatrix: double[][] Compute(Catalano.Imaging.FastBitmap)>": 0.265703932312517
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setRange(int,double,double)>": 0.2633696945370123
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void setD(int,double)>": 0.26308739982075546
        }
    ], 
    "<net.imglib2.display.awt.SignedShortDataBuffer: void <init>(int,int)>": [
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayF32)>": 0.35453827619526523
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayF32,int,int,boofcv.struct.image.GrayF32)>": 0.3150190110596816
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegion pixelRegion(int,int,java.lang.Class)>": 0.3119334808317221
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegionNCC pixelRegionNCC(int,int,java.lang.Class)>": 0.3119334808317221
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.GIntegralImageFeatureIntensity: void hessian(boofcv.struct.image.ImageGray,int,int,boofcv.struct.image.GrayF32)>": 0.29342845877090157
        }
    ], 
    "<net.imglib2.type.numeric.real.DoubleType: net.imglib2.type.numeric.real.DoubleType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: void setReal(float)>": [
        {
            "<Catalano.Core.IntPoint: void <init>(float,float)>": 0.42552333518807844
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_F32: float get_fast(float,float)>": 0.41051999452983723
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_S32: float get_fast(float,float)>": 0.4008370768294799
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_S16: float get_fast(float,float)>": 0.3994520227988777
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_U16: float get_fast(float,float)>": 0.3929803130279143
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: void move(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListRandomAccess: void move(long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.35217016984124927
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.34143053830440195
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(long[],int,int,int,int)>": 0.33301714259629456
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long min(long[],int,int,int,int)>": 0.33301714259629456
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.3298106985203754
        }
    ], 
    "<net.imglib2.position.transform.Round: void setPosition(double,int)>": [
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setRange(int,double,double)>": 0.2485466599481866
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void setD(int,double)>": 0.2481703745059739
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMinimum(int,double)>": 0.2481703745059739
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMaximum(int,double)>": 0.2481703745059739
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void complexInverse(double[],boolean)>": 0.23269353826992173
        }
    ], 
    "<net.imglib2.type.label.BasePairBitType: java.lang.String toString()>": [
        {
            "<org.dyn4j.sandbox.resources.Messages: java.lang.String getString(java.lang.String)>": 0.22955871230092595
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$2: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.21805727164753774
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$3: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.21805727164753774
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$5: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.21805727164753774
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$4: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.21805727164753774
        }
    ], 
    "<net.imglib2.converter.readwrite.ARGBChannelSamplerConverter: void <init>(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.6623522206090009
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.6140318305670562
        }, 
        {
            "<boofcv.misc.BoofMiscOps: int countNotZero(int[],int)>": 0.5657923324789038
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: int get(int)>": 0.5074965494797773
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getLength(int)>": 0.5074965494797773
        }
    ], 
    "<net.imglib2.converter.VolatileRealTypeARGBConverter: void convert(net.imglib2.type.numeric.RealType,net.imglib2.type.numeric.ARGBType)>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void renderBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.1316251072604963
        }, 
        {
            "<boofcv.gui.DepthVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.130586392596309
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.130586392596309
        }, 
        {
            "<org.dyn4j.sandbox.dialogs.AddNonConvexFixtureDialog: void actionPerformed(java.awt.event.ActionEvent)>": 0.12222317456892015
        }, 
        {
            "<org.dyn4j.sandbox.dialogs.AddConvexHullFixtureDialog: void actionPerformed(java.awt.event.ActionEvent)>": 0.12222317456892015
        }
    ], 
    "<net.imglib2.position.transform.FloorOffset: void <init>(net.imglib2.Localizable,long[])>": [
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.23716510988461328
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.23370828780183017
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.22744841411451228
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.22744841411451228
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.22487564694290302
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: java.lang.String toString()>": [
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String getPatternName(int)>": 0.6490327689223424
        }, 
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String selectDocumentName()>": 0.5105636233483862
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: java.lang.String toString()>": 0.4091857429014163
        }, 
        {
            "<boofcv.misc.AutoTypeImage: java.lang.String getInterleavedName()>": 0.409137925881331
        }, 
        {
            "<net.coobird.thumbnailator.geometry.RelativeSize: java.lang.String toString()>": 0.3958913494273325
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.FloatArray: java.lang.Object createArray(int)>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_F32_U8: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.33562632983523094
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_S32_U8: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.33562632983523094
        }, 
        {
            "<boofcv.alg.distort.impl.ImplImageDistort_PL: void apply(boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase,int,int,int,int)>": 0.3042974058213425
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2838082849127157
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2838082849127157
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: net.imglib2.type.numeric.integer.UnsignedShortType copy()>": [
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void process(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.20930159341374643
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMaximum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.20754735865584684
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMinimum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.20754735865584684
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void drawPadding()>": 0.20491341956575432
        }, 
        {
            "<org.box2d.proto.Box2D$PbFilter: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.19638687087259443
        }
    ], 
    "<net.imglib2.iterator.IntervalIterator: void <init>(int[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.30205709619797805
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.30205709619797805
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2948505903944204
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set(int,int,long[])>": 0.2570451536867299
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2543507808035705
        }
    ], 
    "<net.imglib2.img.cell.CellLocalizingCursor: boolean hasNext()>": [
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.6025896240805467
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.5900648394141961
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.5900648394141961
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.5900648394141961
        }, 
        {
            "<net.coobird.thumbnailator.ThumbnailParameter: boolean useOriginalImageType()>": 0.5900648394141961
        }
    ], 
    "<net.imglib2.img.cell.CellImgFactory: net.imglib2.img.cell.CellImg createShortInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.19270150385571458
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.19270150385571458
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.17820800197681597
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.14336948875748118
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.14336948875748118
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowingFactory: void <init>(float)>": [
        {
            "<org.jbox2d.common.MathUtils: float clamp(float,float,float)>": 0.30654631340715716
        }, 
        {
            "<org.jbox2d.dynamics.contacts.Contact: float mixFriction(float,float)>": 0.30501689696231915
        }, 
        {
            "<org.jbox2d.common.Settings: float mixFriction(float,float)>": 0.30501689696231915
        }, 
        {
            "<Catalano.Imaging.Filters.HSLFiltering: void setFillColor(int,float,float)>": 0.30458652487636373
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.HSLFiltering: void setFillColor(int,float,float)>": 0.30458652487636373
        }
    ], 
    "<net.imglib2.util.ConstantUtils$2$ConstantRealRandomAccess: net.imglib2.util.ConstantUtils$2$ConstantRealRandomAccess copy()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: void setComponentZero(boolean[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.47302461677289603
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.460597729177852
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4591713053184648
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.45330664298380163
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.45133604702775554
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: void move(long,int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.38352396920261955
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.380147292461195
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.380147292461195
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void boundRectangleInside(boofcv.struct.image.ImageBase,boofcv.struct.ImageRectangle)>": 0.37975390772235046
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3795606337884384
        }
    ], 
    "<net.imglib2.RealPointSampleList$RealPointSampleListCursor: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F32: float unsafe_getF(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.segmentation.slic.SegmentSlic_F32: float getIntensity(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_zero(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_unsafe(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float convolveSparse(boofcv.struct.image.GrayF32,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.AbstractInterval: long max(int)>": [
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.6942075542430779
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.6942075542430779
        }, 
        {
            "<org.jbox2d.common.BufferUtils: java.lang.Object[] reallocateBuffer(java.lang.Class,java.lang.Object[],int,int,int,boolean)>": 0.6768465759886374
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.6681210053873723
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.6583948812821963
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: boolean valueEquals(java.lang.Object)>": [
        {
            "<Catalano.Core.FloatRange: boolean IsOverlapping(Catalano.Core.FloatRange)>": 0.3873173095512064
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.SphereShape: boolean isEqualTo(net.smert.jreactphysics3d.collision.shapes.CollisionShape)>": 0.35537422014153225
        }, 
        {
            "<com.flowpowered.react.collision.shape.SphereShape: boolean isEqualTo(com.flowpowered.react.collision.shape.CollisionShape)>": 0.35537422014153225
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.CylinderShape: boolean isEqualTo(net.smert.jreactphysics3d.collision.shapes.CollisionShape)>": 0.3549040249259931
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.CapsuleShape: boolean isEqualTo(net.smert.jreactphysics3d.collision.shapes.CollisionShape)>": 0.3549040249259931
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: void mul(net.imglib2.type.numeric.integer.GenericLongType)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2679887933858064
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2579115331531891
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.25069894227480943
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.23626500399272526
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.23595832499639566
        }
    ], 
    "<net.imglib2.view.TransformRandomAccess: void <init>(net.imglib2.RandomAccess,net.imglib2.transform.Transform)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.2317807376782882
        }, 
        {
            "<boofcv.core.image.impl.ConvertInterleavedToSingle: void average(boofcv.struct.image.InterleavedS64,boofcv.struct.image.GrayS64)>": 0.2168682411933645
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set(int,int,long[])>": 0.2166131724670031
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.21611248852662293
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.21589485261051353
        }
    ], 
    "<net.imglib2.img.array.AbstractArrayCursor: void <init>(net.imglib2.img.array.AbstractArrayCursor)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void drawPadding()>": 0.3101058547712617
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.3088269179834751
        }, 
        {
            "<org.box2d.proto.Box2D$PbFilter: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.30836324578308977
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.3076228928735112
        }, 
        {
            "<org.box2d.proto.Box2D$PbBody: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.3035898572034459
        }
    ], 
    "<net.imglib2.Point: void <init>(long[],boolean)>": [
        {
            "<boofcv.alg.fiducial.calib.chess.ChessboardPolygonHelper: boolean filterContour(java.util.List,boolean,boolean)>": 0.3353037891055827
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void renderBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.3128097625934187
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void display(com.jogamp.opengl.GLAutoDrawable)>": 0.2699718565513012
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void render(com.jogamp.opengl.GL2)>": 0.2613384348289255
        }, 
        {
            "<org.dyn4j.geometry.Circle: void <init>(boolean,double)>": 0.25797969266730586
        }
    ], 
    "<net.imglib2.type.numeric.integer.IntType: net.imglib2.type.numeric.integer.IntType copy()>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.19907823696948326
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.19907823696948326
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.19907823696948326
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.19665395176259184
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.1929205687532842
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.IterableInterval iterable(net.imglib2.RandomAccessibleInterval)>": [
        {
            "<Catalano.Core.Concurrent.MulticoreExecutor: java.util.List run(java.util.Collection)>": 0.3336572919094273
        }, 
        {
            "<com.flowpowered.react.engine.DynamicsWorld: void updateRigidBodiesAABB()>": 0.3133238185470813
        }, 
        {
            "<net.smert.jreactphysics3d.engine.DynamicsWorld: void setIsSleepingEnabled(boolean)>": 0.3024798410822282
        }, 
        {
            "<com.flowpowered.react.engine.DynamicsWorld: void enableSleeping(boolean)>": 0.3024798410822282
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean removeBody(int,boolean)>": 0.2994855708794786
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: long indexToPosition(long,long[],int)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.537431928165944
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.4634675214200707
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.4189122818144417
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.40973699601717134
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.38542749316794767
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void decrement(java.lang.Object)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.22893798292191825
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.21049592858180857
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.196595031896449
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.19554831474908085
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(java.lang.Object)>": 0.189112676881158
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: void <init>(net.imglib2.img.NativeImg)>": [
        {
            "<Catalano.Imaging.Filters.HistogramShrink: void <init>()>": 0.14476650603589652
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: void <init>()>": 0.14476650603589652
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.SobelEdgeDetector: void <init>()>": 0.13442290969427412
        }, 
        {
            "<boofcv.gui.tracker.TrackerObjectQuadPanel: void enterSelectMode()>": 0.13442290969427412
        }, 
        {
            "<org.jbox2d.dynamics.Filter: void <init>()>": 0.1329726164507926
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.IntervalView permuteCoordinatesInverse(net.imglib2.RandomAccessibleInterval,int[])>": [
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.38169604760589504
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.35955621232577417
        }, 
        {
            "<org.jbox2d.common.BufferUtils: java.lang.Object[] reallocateBuffer(java.lang.Class,java.lang.Object[],int,int,int,boolean)>": 0.3510803138279854
        }, 
        {
            "<org.dyn4j.collision.broadphase.DynamicAABBTree: void validate(org.dyn4j.collision.broadphase.DynamicAABBTreeNode)>": 0.32482877971404217
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ConstraintSolver: void solvePositionConstraints(net.smert.jreactphysics3d.engine.Island)>": 0.3236548046304854
        }
    ], 
    "<net.imglib2.util.Util: long round(double)>": [
        {
            "<Catalano.Math.Functions.Normal: double Function(double)>": 0.4649711726994275
        }, 
        {
            "<Catalano.Math.Functions.Beta: double Log(double,double)>": 0.4637546758514141
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Canberra(double,double,double,double)>": 0.46072036945539796
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Cosine(double,double,double,double)>": 0.4547796707396937
        }, 
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 create(double,double)>": 0.4543262017923804
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: float unsafe_getF(int,int)>": 0.36766640919741556
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.33327184503964336
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.33327184503964336
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long[],int,int,int,int)>": 0.3297100964089577
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long[],int,int,int,int)>": 0.3297100964089577
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsValue: void move(int,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.308000559535905
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.308000559535905
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.308000559535905
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.2996355235070759
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(long[],int,int,double,long,long,long[],int,int,int,int)>": 0.29532347562787076
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: float getImaginaryFloat()>": [
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float Sqrt(float)>": 0.3442758736770201
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float ArcSin(float)>": 0.3442758736770201
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float Cos(float)>": 0.3442758736770201
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float ArcCos(float)>": 0.3442758736770201
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float Tan(float)>": 0.3442758736770201
        }
    ], 
    "<net.imglib2.view.SlicingRandomAccess: void move(int,int)>": [
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.4671848682964722
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.461325486844786
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.45910089535591636
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.45349048131875336
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4418073409895242
        }
    ], 
    "<net.imglib2.converter.readwrite.RealFloatSamplerConverter$RealConvertingFloatAccess: float getValue(int)>": [
        {
            "<boofcv.alg.weights.WeightPixelUniform_F32: float weight(int,int)>": 0.4770169836811753
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F32: float getOutside(int,int)>": 0.4770169836811753
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F32: void setOutside(int,int,float)>": 0.4340311357918001
        }, 
        {
            "<boofcv.alg.weights.WeightPixelUniform_F32: float weightIndex(int)>": 0.4299613233586469
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.3980920049770911
        }
    ], 
    "<net.imglib2.KDTree: net.imglib2.KDTree$ValueNode makeNode(java.util.List,int,int,int)>": [
        {
            "<org.dyn4j.collision.narrowphase.ExpandingSimplex: void <init>(java.util.List)>": 0.2763849676580384
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.27498827277576615
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$2: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.27498827277576615
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$5: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.27368713726505506
        }, 
        {
            "<org.jbox2d.common.BufferUtils: void rotate(java.lang.Object[],int,int,int)>": 0.27163575989934174
        }
    ], 
    "<net.imglib2.util.Util: double gLog(double,double)>": [
        {
            "<Catalano.Math.Distances.Distance: double Chessboard(double,double,double,double)>": 0.5553595810001859
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Chebyshev(double,double,double,double)>": 0.5553595810001859
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Manhattan(double,double,double,double)>": 0.548412121169324
        }, 
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double ProbabilityDensityFunction(double)>": 0.5447007638380781
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Euclidean(double,double,double,double)>": 0.541633497652826
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsPeriodic: void move(long[])>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3143210621659872
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.28716531397743233
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.2701804211703365
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.26142701398634405
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.256414546148724
        }
    ], 
    "<net.imglib2.converter.VolatileRealTypeARGBConverter: void <init>(double,double,net.imglib2.type.numeric.ARGBType)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void access$000(boofcv.app.calib.AssistedCalibration,double,double,double,double)>": 0.4587463698888075
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceSe3SymmetricSq: void setIntrinsic(double,double,double,double,double,double)>": 0.44639098228747903
        }, 
        {
            "<boofcv.gui.fiducial.VisualizeFiducial: void drawLine(java.awt.Graphics2D,java.awt.geom.Line2D$Double,double,double,double,double)>": 0.44439385938111153
        }, 
        {
            "<boofcv.alg.sfm.robust.DistancePlane2DToPixelSq: void setIntrinsic(double,double,double)>": 0.43810208141278517
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceHomographyPixelSq: void setIntrinsic(double,double,double)>": 0.43810208141278517
        }
    ], 
    "<net.imglib2.img.cell.CellLocalizingCursor: void <init>(net.imglib2.img.cell.CellLocalizingCursor)>": [
        {
            "<boofcv.alg.misc.ImageMiscOps: void flipHorizontal(boofcv.struct.image.GrayS64)>": 0.269075813595067
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.2690060453015344
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS32,boofcv.struct.image.InterleavedS64)>": 0.2662876515949309
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedF32,boofcv.struct.image.InterleavedS64)>": 0.26623663827337574
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedF64,boofcv.struct.image.InterleavedS64)>": 0.26623663827337574
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.SubsampleView subsample(net.imglib2.RandomAccessible,long)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue: boofcv.core.image.border.ImageBorder_S64 wrap(boofcv.struct.image.GrayS64,long)>": 0.172492598543589
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.16830689182442837
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.1658638159064975
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.16058209780293067
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.16058209780293067
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void multABT(double[][],double[][],double[][])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4367016367274704
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4365951060357773
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.4355184779112239
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void removeContactPoint(int)>": 0.4339569990545226
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void freeNode(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.42742307409523345
        }
    ], 
    "<net.imglib2.position.transform.FloorOffset: void <init>(net.imglib2.Localizable,net.imglib2.Localizable)>": [
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2500967279999354
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.24655148925536036
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.2438343332925317
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.24171089960248068
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.24171089960248068
        }
    ], 
    "<net.imglib2.position.transform.Round: void move(double,int)>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void complexInverse(double[],boolean)>": 0.2928189797340928
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverse(double[],boolean)>": 0.28528971739962194
        }, 
        {
            "<Catalano.Imaging.Tools.ImageUtils: void Normalize(double[][],double,double)>": 0.2848028389799339
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverseFull(double[],boolean)>": 0.28249120334628036
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindowIntegral: double compute(double,double)>": 0.2774782167544935
        }
    ], 
    "<net.imglib2.img.AbstractImg: long max(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.6444652635187575
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.5168876727488003
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.5115679070521639
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4966616068166122
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.4924576911988799
        }
    ], 
    "<net.imglib2.util.Util: java.lang.String printCoordinates(double[])>": [
        {
            "<boofcv.demonstrations.feature.disparity.VisualizeStereoDisparity: void main(java.lang.String[])>": 0.5749226309250428
        }, 
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareFiducial: void main(java.lang.String[])>": 0.5540984795836118
        }, 
        {
            "<boofcv.demonstrations.denoise.DenoiseAccuracyStudyApp: void main(java.lang.String[])>": 0.5317027664268188
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.5211559422345466
        }, 
        {
            "<org.jbox2d.common.Transform: java.lang.String toString()>": 0.5153780769810774
        }
    ], 
    "<net.imglib2.type.AbstractBitType: net.imglib2.util.Fraction getEntitiesPerPixel()>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.17957616046168884
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.17957616046168884
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(boofcv.struct.image.GrayS64)>": 0.1750353835629278
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(boofcv.struct.image.GrayS64)>": 0.1750353835629278
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long min(boofcv.struct.image.GrayS64)>": 0.1750353835629278
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: net.imglib2.img.ImgFactory factory()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.024397501823713325
        }
    ], 
    "<net.imglib2.view.composite.AbstractNumericComposite: void setZero()>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2584534649874901
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2584534649874901
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2584534649874901
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.2563148129876702
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.2546620474446557
        }
    ], 
    "<net.imglib2.view.iteration.IterableTransformBuilder$SubInterval: java.lang.Object iterationOrder()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.23004916533628858
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.22006590785926985
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.22006590785926985
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2035446818816797
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.19925782326516753
        }
    ], 
    "<net.imglib2.FinalDimensions: void <init>(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.5315774075852734
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.4891331417118402
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.48756114143768725
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.480546430335053
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.4690702513207908
        }
    ], 
    "<net.imglib2.display.projector.specialized.ArrayImgXYShortProjector: void map()>": [
        {
            "<boofcv.alg.misc.PixelMath: void multiplyU_A(short[],int,int,double,short[],int,int,int,int)>": 0.24727567171366285
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divideU_A(short[],int,int,double,short[],int,int,int,int)>": 0.24727567171366285
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double variance(boofcv.struct.image.GrayU16,double)>": 0.23980075784588084
        }, 
        {
            "<net.coobird.thumbnailator.makers.FixedSizeThumbnailMaker: java.awt.image.BufferedImage make(java.awt.image.BufferedImage)>": 0.23211861098851305
        }, 
        {
            "<net.coobird.thumbnailator.geometry.RelativeSize: java.awt.Dimension calculate(int,int)>": 0.22356520470137034
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: void set(int)>": [
        {
            "<boofcv.alg.background.BackgroundModel: void setUnknownValue(int)>": 0.3677288817612613
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setGray(int,int)>": 0.28985849046419526
        }, 
        {
            "<boofcv.struct.image.GrayI8: void unsafe_set(int,int,int)>": 0.2753644357140094
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_F32_U8: void setDisparity(int,int)>": 0.25973446975291703
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_S32_U8: void setDisparity(int,int)>": 0.25973446975291703
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform$InverseTranslationTransform: void applyInverse(net.imglib2.Positionable,net.imglib2.Localizable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06666666666666665
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.06454972243679029
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06397612635199752
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.06329621044272916
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06266005147845038
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: void indexToPosition(int,int[],double[])>": [
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.4254276570042418
        }, 
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.41280988100649285
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.41280988100649285
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve11(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.4003457694873894
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve9(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.39993794129085786
        }
    ], 
    "<net.imglib2.transform.integer.ComponentMappingTransform: net.imglib2.transform.integer.ComponentMappingTransform concatenate(net.imglib2.transform.integer.ComponentMapping)>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.47031530957121515
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.45930097115093615
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4588190654879134
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4448892912593508
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.4433542530843945
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: void updateContainer(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.3187477037083238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.22574829559349857
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.22057752193984925
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: double getMaxValue()>": [
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double pixelScaleCurrentToInput()>": 0.45907644491955485
        }, 
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double Mean()>": 0.4329220383349367
        }, 
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double Entropy()>": 0.4230423012983131
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.40935897046494646
        }, 
        {
            "<Catalano.Statistics.Distributions.RayleighDistribution: double DistributionFunction(double)>": 0.4041258539065733
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: double det3x3(double,double,double,double,double,double,double,double,double)>": [
        {
            "<boofcv.abst.tracker.Sfot_to_TrackObjectQuad: void setPoint(georegression.struct.point.Point2D_F64,double,double,double,double)>": 0.7969850677701389
        }, 
        {
            "<Catalano.Math.Distances.Distance: double BrayCurtis(double,double,double,double)>": 0.6337650099719594
        }, 
        {
            "<Catalano.Math.Tools: double Scale(double,double,double,double,double)>": 0.6132109621017238
        }, 
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 rotate(double,double,double)>": 0.5927492981156167
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillCircleFromCenter(com.jogamp.opengl.GL2,double,double,double)>": 0.5704055466839173
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.ByteArray: byte getValue(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4966616068166122
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.4893146606557609
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.47437111780712504
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.46420451256364215
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.4578204272586427
        }
    ], 
    "<net.imglib2.display.projector.composite.CompositeXYProjector: void mapSingle(net.imglib2.RandomAccess,net.imglib2.converter.Converter)>": [
        {
            "<org.dyn4j.dynamics.WorldTest: void getUserData()>": 0.20253634242636517
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void getUserData()>": 0.20253634242636517
        }, 
        {
            "<org.dyn4j.collision.FixtureTest: void setUserData()>": 0.19545799577157696
        }, 
        {
            "<org.jbox2d.testbed.framework.TestbedController: void run()>": 0.18278109633096357
        }, 
        {
            "<org.dyn4j.geometry.AbstractShapeTest: void setUserData()>": 0.18201196133016267
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: double getR()>": [
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double DistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double OneSideDistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double ComplementaryDistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.32533950937620415
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double pixelScaleCurrentToInput()>": 0.3144161822359606
        }
    ], 
    "<net.imglib2.type.volatiles.VolatileRealType: net.imglib2.type.volatiles.VolatileRealType copy()>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.10065952899503389
        }, 
        {
            "<org.dyn4j.dynamics.WorldTest: void getUserData()>": 0.09395411519917388
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void getUserData()>": 0.09395411519917388
        }, 
        {
            "<org.dyn4j.Reference: boolean equals(java.lang.Object)>": 0.09211554424898176
        }, 
        {
            "<org.dyn4j.collision.FixtureTest: void setUserData()>": 0.09093228851361994
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: void setPosition(long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2972712297822128
        }, 
        {
            "<boofcv.core.image.impl.ConvertInterleavedToSingle: void average(boofcv.struct.image.InterleavedS64,boofcv.struct.image.GrayS64)>": 0.2943630238817873
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,boofcv.struct.image.GrayS64)>": 0.27477331261200244
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,boofcv.struct.image.GrayS64)>": 0.27477331261200244
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.27477331261200244
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: long getIntegerLong()>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.27441324945339457
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.27193140563956314
        }, 
        {
            "<Catalano.Imaging.Texture.LawsTextureEnergy: long getTextureEnergyMap(Catalano.Core.IntPoint,int,int)>": 0.26613055450503903
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.2589104232408903
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.2575588864871534
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void setPosition(net.imglib2.Localizable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: long dimension(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3508771929824561
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3142423944400126
        }
    ], 
    "<net.imglib2.display.screenimage.awt.IntAWTScreenImage: void <init>(net.imglib2.type.numeric.integer.IntType,net.imglib2.img.basictypeaccess.array.IntArray,long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.15729768613092662
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.15729768613092662
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1456513577327886
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.13908532168678328
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.12126492036826719
        }
    ], 
    "<net.imglib2.view.Views: boolean isZeroMin(net.imglib2.Interval)>": [
        {
            "<Catalano.Math.Matrix: boolean isZero(int[])>": 0.3211902516912143
        }, 
        {
            "<Catalano.Math.Decompositions.QRDecomposition: boolean isFullRank()>": 0.31154917951776545
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: boolean isNonsingular()>": 0.30322297480788657
        }, 
        {
            "<Catalano.Math.Matrix: boolean isZero(float[])>": 0.2933186038365366
        }, 
        {
            "<Catalano.Math.Matrix: boolean isZero(double[])>": 0.2933186038365366
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImg: net.imglib2.img.sparse.NtreeImg copy()>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void renderBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.10433081631093612
        }, 
        {
            "<org.dyn4j.dynamics.World: void step(int)>": 0.09685597656026015
        }, 
        {
            "<boofcv.factory.feature.detect.extract.FactoryFeatureExtractor: boofcv.abst.feature.detect.extract.NonMaxSuppression nonmax(boofcv.abst.feature.detect.extract.ConfigExtract)>": 0.09634124421384839
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: void renderExternal(java.util.List,boolean,boolean,double,java.awt.Graphics2D)>": 0.09449777153937151
        }, 
        {
            "<boofcv.gui.DemonstrationBase$WaitingThread: void run()>": 0.09362849822700084
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: boolean valueEquals(net.imglib2.type.numeric.integer.GenericByteType)>": [
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.4254694532761816
        }, 
        {
            "<org.box2d.proto.Box2D$PbVec2: boolean isInitialized()>": 0.4103113409489485
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.406317917966039
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.406317917966039
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.406317917966039
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.FloorInterpolator: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.27356677703754323
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.26159727180913483
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.26159727180913483
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2424492206781365
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.2366492548000964
        }
    ], 
    "<net.imglib2.view.TransformBuilder: net.imglib2.RandomAccessible wrapTranslationTransform(net.imglib2.RandomAccessible,net.imglib2.transform.integer.TranslationTransform)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05773502691896257
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.05590169943749474
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.055404950656552925
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05481612620668933
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.054265196382778706
        }
    ], 
    "<net.imglib2.img.array.ArrayCursor: void <init>(net.imglib2.img.array.ArrayImg)>": [
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.1664375714839207
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.16216232622474322
        }, 
        {
            "<net.coobird.thumbnailator.geometry.RelativeSize: java.awt.Dimension calculate(int,int)>": 0.15799084923013598
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.15594107177393954
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.15544045708951465
        }
    ], 
    "<net.imglib2.position.transform.Round: void setPosition(float[])>": [
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_S64: void setF(int,float[])>": 0.26733684424316645
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_F64: void setF(int,float[])>": 0.263870403767031
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_F32: void setOutside(int,int,float[])>": 0.26290622615828363
        }, 
        {
            "<Catalano.Math.Matrix: float[] getColumns(float[],int[])>": 0.26119605467981727
        }, 
        {
            "<Catalano.Math.Matrix: float[] getRows(float[],int[])>": 0.26119605467981727
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,java.util.List,int[])>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparitySparseScoreSadRect_S16: void <init>(int,int,int,int)>": 0.3768314337969503
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparitySparseScoreSadRect_U8: void <init>(int,int,int,int)>": 0.3768314337969503
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.3611002002548638
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.3550911450509681
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.3550911450509681
        }
    ], 
    "<net.imglib2.transform.integer.permutation.PermutationTransform: boolean checkInterval(net.imglib2.Interval,int[])>": [
        {
            "<Catalano.Math.Matrix: boolean isZero(int[])>": 0.28674214609387144
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int upperBound(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.2642948401023007
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int lowerBound(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.2642948401023007
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.2596182898292736
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(java.lang.Object)>": 0.2583325926174427
        }
    ], 
    "<net.imglib2.AbstractRealInterval: void realMin(double[])>": [
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.41549793349128344
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumn(double[][],int)>": 0.3973144980183334
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRow(double[][],int)>": 0.39592283060630346
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int[])>": 0.39110786522669816
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRows(double[],int[])>": 0.39110786522669816
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: long upperTailCount()>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void renderArrows()>": 0.33918265517362806
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void renderMagnets()>": 0.33918265517362806
        }, 
        {
            "<org.dyn4j.dynamics.World: void getListeners(java.lang.Class,java.util.List)>": 0.3238404874021395
        }, 
        {
            "<boofcv.demonstrations.fiducial.FiducialTrackerApp: boofcv.demonstrations.fiducial.FiducialTrackerApp$FiducialInfo findFiducial(long)>": 0.3210033016535125
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean detect(org.dyn4j.geometry.AABB,java.util.List)>": 0.3160049439712507
        }
    ], 
    "<net.imglib2.converter.read.ConvertedIterableInterval: void <init>(net.imglib2.IterableInterval,net.imglib2.converter.Converter,net.imglib2.type.Type)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04032389192727559
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03904344047215152
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.038696496074155144
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.03828524323948056
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03790045715961838
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: byte getCodedSignedByteChecked(int)>": [
        {
            "<org.jbox2d.particle.ParticleColor: void <init>(byte,byte,byte,byte)>": 0.26701186276865435
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void solveColorMixing(org.jbox2d.dynamics.TimeStep)>": 0.26313955606914524
        }, 
        {
            "<org.jbox2d.collision.ContactID: void flip()>": 0.2555128902043349
        }, 
        {
            "<org.jbox2d.particle.ParticleColor: void set(byte,byte,byte,byte)>": 0.24577047780929456
        }, 
        {
            "<org.jbox2d.particle.ParticleColor: boolean isZero()>": 0.24442584274703635
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: void fwd(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36016035441676975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.35455846459436624
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.35455846459436624
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.CharArray: net.imglib2.img.basictypeaccess.array.CharArray createArray(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.29781790326307295
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.29649405014104924
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.29649405014104924
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.2930792985571642
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.2930792985571642
        }
    ], 
    "<net.imglib2.transform.integer.permutation.SingleDimensionPermutationTransform: void apply(net.imglib2.Localizable,net.imglib2.Positionable)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void drawPadding()>": 0.3560699098466614
        }, 
        {
            "<org.box2d.proto.Box2D$PbFilter: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.3423876559732745
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.3390095376905524
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void computeMinMax(boofcv.struct.image.ImageGray,int,int)>": 0.3370224823130172
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.335537423159051
        }
    ], 
    "<net.imglib2.img.planar.PlanarPlaneSubsetCursor: void localize(int[])>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(int,boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayS32)>": 0.3140359687202252
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS32,int,int,int,boofcv.struct.image.GrayS32)>": 0.3140359687202252
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS32,int,int,int,boofcv.struct.image.GrayS32)>": 0.3140359687202252
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(int,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3137422181300695
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS32,int,boofcv.struct.image.GrayS32)>": 0.3137422181300695
        }
    ], 
    "<net.imglib2.view.MixedTransformView: java.lang.String toString()>": [
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.5163547614487499
        }, 
        {
            "<boofcv.misc.AutoTypeImage: java.lang.String getTypeCastFromSum()>": 0.5082809825578686
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendPrefix(java.lang.String,java.lang.String)>": 0.491855143880004
        }, 
        {
            "<org.jbox2d.serialization.UnsupportedObjectException: java.lang.String getLocalizedMessage()>": 0.4709518436761933
        }, 
        {
            "<org.jbox2d.common.Transform: java.lang.String toString()>": 0.46608587140087754
        }
    ], 
    "<net.imglib2.iterator.LocalizingIntervalIterator: void <init>(long[],long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.32379831077242127
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.32379831077242127
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.3100849198612386
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.28976150477800827
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2796288699851179
        }
    ], 
    "<net.imglib2.view.composite.CompositeIntervalView: void max(net.imglib2.Positionable)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.24581221372766712
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.24080371889280833
        }, 
        {
            "<Catalano.Imaging.Filters.GammaCorrection: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.23531127632841747
        }, 
        {
            "<Catalano.Imaging.Tools.Granulometry: float[] ProcessImage(Catalano.Imaging.FastBitmap)>": 0.23478763124039614
        }, 
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.23405848696614512
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: boolean isInLowerTail(java.util.List)>": [
        {
            "<boofcv.io.SimpleStringNumberReader: boolean next()>": 0.3617899479588577
        }, 
        {
            "<boofcv.demonstrations.calibration.CommonDetectCalibrationApp: boolean isInGrids(georegression.struct.shapes.Polygon2D_F64)>": 0.337806289896215
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerTwoPassKltPyramid: void finishTracking()>": 0.33227738269861257
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.ConvexMeshShape: net.smert.jreactphysics3d.mathematics.Vector3 getLocalSupportPointWithoutMargin(net.smert.jreactphysics3d.mathematics.Vector3,net.smert.jreactphysics3d.mathematics.Vector3)>": 0.32608067964492393
        }, 
        {
            "<org.dyn4j.dynamics.World: void getListeners(java.lang.Class,java.util.List)>": 0.3214812653341282
        }
    ], 
    "<net.imglib2.util.Intervals: boolean contains(net.imglib2.RealInterval,net.imglib2.RealLocalizable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3908473682064824
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3841183395048613
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.3796235044163066
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.37844517838376435
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.37510473607646344
        }
    ], 
    "<net.imglib2.view.RandomAccessibleIntervalCursor: void reset()>": [
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.223755598310707
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2093059506066225
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.20389210357912543
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.20389210357912543
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.18429824581806772
        }
    ], 
    "<net.imglib2.img.cell.CellLocalizingCursor: void reset()>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.23289818357866235
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.23169490950798982
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2275748486123449
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2275748486123449
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2264992186104504
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.DoubleArray: void <init>(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_F64: void setOutside(int,int,double[])>": 0.5315774075852734
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void <init>(int)>": 0.515625
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void <init>(int)>": 0.515625
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F64: void <init>(int)>": 0.515625
        }, 
        {
            "<boofcv.abst.geo.calibration.ImageResults: void <init>(int)>": 0.515625
        }
    ], 
    "<net.imglib2.img.array.AbstractArrayCursor: void reset()>": [
        {
            "<Catalano.Imaging.Concurrent.Filters.Maximum: void <init>(int)>": 0.247079958696387
        }, 
        {
            "<Catalano.Imaging.Filters.ConservativeSmoothing: void <init>(int)>": 0.247079958696387
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Minimum: void <init>(int)>": 0.247079958696387
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.ConservativeSmoothing: void <init>(int)>": 0.247079958696387
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Median: void <init>(int)>": 0.247079958696387
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: void localize(float[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.41890531890176924
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4087054016314014
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4070034317351934
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4066071240185358
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.4060478282803305
        }
    ], 
    "<net.imglib2.view.composite.AbstractNumericComposite$1: boolean hasNext()>": [
        {
            "<org.box2d.proto.Box2D$PbFixture: boolean hasTag()>": 0.5077917254630677
        }, 
        {
            "<org.box2d.proto.Box2D$PbBody: boolean hasTag()>": 0.5077917254630677
        }, 
        {
            "<org.box2d.proto.Box2D$PbWorld$Builder: boolean hasTag()>": 0.5077917254630677
        }, 
        {
            "<org.box2d.proto.Box2D$PbVec2: boolean hasX()>": 0.5077917254630677
        }, 
        {
            "<org.box2d.proto.Box2D$PbVec2$Builder: boolean hasX()>": 0.5077917254630677
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: void div(net.imglib2.type.numeric.integer.UnsignedIntType)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.31376158296399126
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.29001144867368306
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.27879041970933305
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.2784751582084055
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.27376256708444696
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRealRandomAccessible: net.imglib2.type.Type getDestinationType()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.018184824186332698
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsPeriodic: void checkOutOfBounds()>": [
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: int getNumUnknownViews()>": 0.36879164106163287
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: int[] makeFateTable()>": 0.33384527625637067
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: double get(boofcv.struct.image.ImageInterleaved,int,int,int)>": 0.30225625822251256
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: void setB(boofcv.struct.image.ImageBase,int,int,int,double)>": 0.29969584447599995
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: void setM(boofcv.struct.image.ImageBase,int,int,double[])>": 0.2937107956694517
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: void getTranslation(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4357179468323668
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.42751245640697355
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4247802495570485
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.42088530746949326
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4194009359519525
        }
    ], 
    "<net.imglib2.display.awt.SignedByteDataBuffer: void <init>(byte[][],int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.30436228763412315
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.30236784240854425
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.30236784240854425
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.2995921542186023
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.2995921542186023
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: void fwd(int)>": [
        {
            "<boofcv.struct.convolve.Kernel1D_I32: int get(int)>": 0.4992938521966533
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.4992938521966533
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getLength(int)>": 0.4992938521966533
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4904986609350741
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.4832660422121031
        }
    ], 
    "<net.imglib2.display.projector.specialized.PlanarImgXYShortProjector: void <init>(net.imglib2.img.planar.PlanarImg,net.imglib2.img.array.ArrayImg,double,double)>": [
        {
            "<org.dyn4j.geometry.Vector2: boolean isOrthogonal(double,double)>": 0.33208361671103814
        }, 
        {
            "<org.dyn4j.sandbox.panels.UnitCirclePolygonPanel: boolean isValidInput()>": 0.3187260375874544
        }, 
        {
            "<org.dyn4j.geometry.Vector3: boolean isOrthogonal(double,double,double)>": 0.3177548824498717
        }, 
        {
            "<org.dyn4j.geometry.Interval: boolean isDegenerate(double)>": 0.3111495420676095
        }, 
        {
            "<boofcv.alg.shapes.edge.PolygonEdgeIntensity: boolean checkIntensity(boolean,double)>": 0.3107988818414307
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,double[])>": [
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(int,int)>": 0.3697130601479975
        }, 
        {
            "<Catalano.Math.Transforms.DiscreteSineTransform: void Backward(double[])>": 0.3663663861549358
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.36609304571965384
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.36609304571965384
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36549264850998225
        }
    ], 
    "<net.imglib2.AbstractWrappedInterval: void min(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.174312949091992
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.174312949091992
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16141770450978618
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.15179865302147907
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.13349163706577288
        }
    ], 
    "<net.imglib2.img.cell.CellRandomAccess: void updatePosition(boolean)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2808816960422592
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2672277241611926
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2672277241611926
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.25741594019265623
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.24609060958738982
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: boolean valueEquals(java.lang.Object)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: boolean equals(java.lang.Object)>": 0.3919481937724674
        }, 
        {
            "<Catalano.Core.Stopwatch: boolean isRunning()>": 0.34161481760674134
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isInlier(int)>": 0.33893767318207446
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isInlier(int)>": 0.33893767318207446
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldTrackerApp: void togglePause()>": 0.3282062247797737
        }
    ], 
    "<net.imglib2.position.transform.AbstractPositionableTransform: double getDoublePosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.6444652635187575
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.PyramidDiscreteSampleBlur: double getSigma(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.NoCacheScaleSpace: double getScale(int)>": 0.6383928571428571
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,float[])>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparitySparseScoreSadRect_F32: void <init>(int,int,int,int)>": 0.3950142737868755
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void <init>(int,int)>": 0.3697130601479975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.36609304571965384
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.36609304571965384
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36549264850998225
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess1D: void move(int,int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5458697603284257
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5426432125499588
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.5385779373235315
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5261836365846325
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5248400141958772
        }
    ], 
    "<net.imglib2.RealPoint: void setPosition(net.imglib2.RealLocalizable)>": [
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.21487335015826062
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.21487335015826062
        }, 
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.214027382399185
        }, 
        {
            "<boofcv.abst.geo.optimization.ModelCodecSwapData: void encode(org.ejml.data.DenseMatrix64F,double[])>": 0.19295834780215798
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.19121854800574056
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgFactory: net.imglib2.img.ImgFactory imgFactory(java.lang.Object)>": [
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareFiducial: void main(java.lang.String[])>": 0.4215982327505652
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.4110876076876874
        }, 
        {
            "<boofcv.demonstrations.feature.disparity.VisualizeStereoDisparity: void main(java.lang.String[])>": 0.40593088532578125
        }, 
        {
            "<boofcv.demonstrations.distort.RemoveLensDistortionApp: void main(java.lang.String[])>": 0.39342786807928365
        }, 
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareBinaryFiducial: void main(java.lang.String[])>": 0.3872018256073534
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListRandomAccess: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2535623089962512
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.24257833769207987
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.24257833769207987
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.22426820488056018
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.2196844671691046
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: long lowerTailCount()>": [
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomQuadPnP: boolean isInlier(int)>": 0.343939948662674
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean isEmpty()>": 0.3434453310931907
        }, 
        {
            "<boofcv.io.wrapper.images.JpegByteImageSequence: boolean hasNext()>": 0.3249377474877325
        }, 
        {
            "<boofcv.io.SimpleStringNumberReader: boolean next()>": 0.3212150034532247
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.ConvexMeshShape: boolean isEqualTo(net.smert.jreactphysics3d.collision.shapes.CollisionShape)>": 0.3188967740670826
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedIterableInterval: java.lang.Object iterationOrder()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.27356677703754323
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.26159727180913483
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.26159727180913483
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2424492206781365
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.2366492548000964
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: net.imglib2.type.numeric.integer.UnsignedByteType createVariable()>": [
        {
            "<boofcv.demonstrations.fiducial.FiducialTrackerApp: void refreshAll(java.lang.Object[])>": 0.09512551571501338
        }, 
        {
            "<org.dyn4j.dynamics.CapacityTest: void createFailureListenerCount()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.dynamics.CapacityTest: void createFailureJointCount()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.dynamics.CapacityTest: void createFailureBodyCount()>": 0.09306821918192615
        }, 
        {
            "<boofcv.demonstrations.sfm.d3.VisualizeMonocularPlaneVisualOdometryApp: void process(boofcv.io.image.SimpleImageSequence)>": 0.09106841590512935
        }
    ], 
    "<net.imglib2.type.logic.BitType: void <init>(net.imglib2.img.basictypeaccess.LongAccess)>": [
        {
            "<Catalano.Imaging.Filters.HistogramShrink: void <init>()>": 0.10639465830549598
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: void <init>()>": 0.10639465830549598
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.SobelEdgeDetector: void <init>()>": 0.09894641766337875
        }, 
        {
            "<boofcv.gui.tracker.TrackerObjectQuadPanel: void enterSelectMode()>": 0.09894641766337875
        }, 
        {
            "<org.jbox2d.dynamics.Filter: void <init>()>": 0.09764810742604421
        }
    ], 
    "<net.imglib2.view.ExtendedRealRandomAccessibleRealInterval: net.imglib2.RealRandomAccess realRandomAccess(net.imglib2.RealInterval)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3799950208047613
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3721807305503215
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.37031496925615354
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.3652496273820612
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateMetrics(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.36176867879291075
        }
    ], 
    "<net.imglib2.img.cell.CellLocalizingCursor: void <init>(net.imglib2.img.cell.AbstractCellImg)>": [
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.22534462290512836
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.22172704323240766
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2200629815276731
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.21746823273107552
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.21746823273107552
        }
    ], 
    "<net.imglib2.iterator.IntervalIterator: int getIntPosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.26156521777798586
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.25080242242807377
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.25080242242807377
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(boofcv.struct.image.GrayS64)>": 0.2464472036077859
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(boofcv.struct.image.GrayS64)>": 0.2464472036077859
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRandomAccessibleInterval: net.imglib2.converter.read.ConvertedRandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.044946657497549475
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04351941398892446
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04313269558744773
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04267429637493243
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04224539808871092
        }
    ], 
    "<net.imglib2.util.BenchmarkHelper: java.util.ArrayList benchmark(int,java.lang.Runnable)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.4291789224907146
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: java.util.List createList3_F64(int)>": 0.33223859202331923
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.31381095830808814
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.2925995543039159
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.2780689327405961
        }
    ], 
    "<net.imglib2.util.ImgUtil: void copy(net.imglib2.img.Img,boolean[],int,int[])>": [
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.4268238069015945
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.4268238069015945
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.39937481438538674
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(int[],int,int,int[],int,int,int,int)>": 0.38981455216182614
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(int[],int,int,int[],int,int,int,int)>": 0.38888939452497623
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void move(long,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.31325484913065393
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.31097891796791843
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: void bck(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.5462930505750294
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.49034478304381485
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.48353756135700293
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4780924305036752
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int)>": 0.46676991896235726
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: int getIntPosition(int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.5078285150911725
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.5078285150911725
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.5078285150911725
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.SquaresIntoRegularClusters: int add(int,int)>": 0.46401913722402865
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.46236799717354615
        }
    ], 
    "<net.imglib2.type.label.BasePairCharType: void set(net.imglib2.type.label.BasePairBitType$Base)>": [
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.26555103941380803
        }, 
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2654152396366406
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2654152396366406
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2654152396366406
        }, 
        {
            "<boofcv.factory.feature.dense.FactoryDescribeImageDense: boofcv.abst.feature.dense.DescribeImageDense hog(boofcv.factory.feature.dense.ConfigDenseHoG,boofcv.struct.image.ImageType)>": 0.2568957262436336
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsConstantValue: net.imglib2.type.Type get()>": [
        {
            "<boofcv.app.calib.AssistedCalibration: boolean checkMagnetCapturePicture()>": 0.1497862727616493
        }, 
        {
            "<net.coobird.thumbnailator.makers.ThumbnailMaker$ReadinessTracker: boolean isReady()>": 0.14299985180005528
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean detect(org.dyn4j.geometry.Convex,org.dyn4j.dynamics.Body,org.dyn4j.collision.Filter,boolean,boolean,java.util.List)>": 0.14184507843140043
        }, 
        {
            "<com.flowpowered.react.engine.DynamicsWorld: void updateRigidBodiesAABB()>": 0.14097769078413583
        }, 
        {
            "<org.dyn4j.dynamics.World: void solveTOI(org.dyn4j.dynamics.ContinuousDetectionMode)>": 0.14086954670487378
        }
    ], 
    "<net.imglib2.converter.RealUnsignedByteConverter: void convert(net.imglib2.type.numeric.RealType,net.imglib2.type.numeric.integer.UnsignedByteType)>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.40435709780834334
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.40409475064784167
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.4035958452628556
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void <init>(Catalano.Imaging.FastBitmap,Catalano.Core.IntPoint,Catalano.Core.IntPoint,Catalano.Core.IntPoint)>": 0.3957078080123178
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void <init>(Catalano.Imaging.FastBitmap,double,double,double,double,double,double)>": 0.3939881109407228
        }
    ], 
    "<net.imglib2.type.numeric.integer.LongType: net.imglib2.type.numeric.integer.LongType copy()>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.17606705730911557
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.16559357149530046
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.16328849168049064
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.16229811763672608
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.16229811763672608
        }
    ], 
    "<net.imglib2.iterator.OffsetableLocalizingIntervalIterator: void setMin(long[])>": [
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.2797341435574188
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2787264225147654
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.2780808033415065
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.27502649419240466
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.27248866196871957
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListRandomAccess: void move(net.imglib2.Localizable)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.2593595146326656
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.2590586963826601
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.2590586963826601
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.2590586963826601
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.25429383181488263
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: net.imglib2.type.numeric.integer.LongType firstElement()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.024397501823713325
        }
    ], 
    "<net.imglib2.transform.integer.permutation.AbstractPermutationTransform: boolean checkBijectivity(int[])>": [
        {
            "<boofcv.alg.enhance.EnhanceImageOps: void equalize(int[],int[])>": 0.4428314190048637
        }, 
        {
            "<Catalano.Math.Matrix: boolean isZero(int[])>": 0.44161631578314614
        }, 
        {
            "<Catalano.Math.Matrix: void Clear(int[])>": 0.4210972089689949
        }, 
        {
            "<Catalano.Core.ArraysUtil: float[] toFloat(int[])>": 0.4146126592597653
        }, 
        {
            "<Catalano.Core.ArraysUtil: double[] toDouble(int[])>": 0.4146126592597653
        }
    ], 
    "<net.imglib2.view.TransformBuilder: boolean isComponentMapping(net.imglib2.transform.integer.Mixed)>": [
        {
            "<Catalano.Core.Stopwatch: boolean isRunning()>": 0.31490283547083037
        }, 
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.30215250132599847
        }, 
        {
            "<boofcv.alg.tracker.klt.KltTracker: boolean isDescriptionComplete(boofcv.alg.tracker.klt.KltFeature)>": 0.29660116828241406
        }, 
        {
            "<boofcv.io.wrapper.images.JpegByteImageSequence: boolean hasNext()>": 0.291691213159369
        }, 
        {
            "<boofcv.io.wrapper.images.LoadFileImageSequence: boolean hasNext()>": 0.28120507905560094
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void move(double,int)>": [
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationAverageGradientIntegral: void <init>(double,int,double,int,double,java.lang.Class)>": 0.4043042024541294
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.SelectRectSubpixel$F32_F32: void <init>(int,int,double)>": 0.3964462393048189
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_F32_U8: void <init>(int,int,double)>": 0.3964462393048189
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.SelectRectSubpixel$S32_F32: void <init>(int,int,double)>": 0.3964462393048189
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_S32_U8: void <init>(int,int,double)>": 0.3964462393048189
        }
    ], 
    "<net.imglib2.img.list.ListCursor: boolean hasNext()>": [
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.6019403012881088
        }, 
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.592628377022738
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.5909704350306674
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.5909704350306674
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.5909704350306674
        }
    ], 
    "<net.imglib2.display.projector.composite.CompositeXYRandomAccessibleProjector: void mapSingle(net.imglib2.RandomAccess,net.imglib2.converter.Converter)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2712459814670192
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.2056669131705175
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.20168223326618717
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean equals(java.lang.Object)>": 0.17927565292892803
        }, 
        {
            "<org.jbox2d.testbed.tests.ConveyorBelt: void processFixture(org.jbox2d.dynamics.Fixture,java.lang.Long)>": 0.17374180537344036
        }
    ], 
    "<net.imglib2.transform.integer.SequentializeTransform: void apply(net.imglib2.Localizable,net.imglib2.Positionable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5221744621572145
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5207851120035731
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5118607189836664
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void removeContactPoint(int)>": 0.5049163351242214
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void freeNode(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.5033111388498522
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.IntervalView rotate(net.imglib2.RandomAccessibleInterval,int,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.29911888272650183
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.29911888272650183
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.29911888272650183
        }, 
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.29532189478979776
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2926316015714614
        }
    ], 
    "<net.imglib2.RealPoint: void fwd(int)>": [
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void setD(int,double)>": 0.4305107846323415
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMinimum(int,double)>": 0.4305107846323415
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMaximum(int,double)>": 0.4305107846323415
        }, 
        {
            "<boofcv.alg.scene.FeatureToWordHistogram_F64: void addFeature(boofcv.struct.feature.TupleDesc_F64)>": 0.37132772835963374
        }, 
        {
            "<Catalano.Imaging.Tools.ColorConverter: double[] RGBtoHunterLAB(int,int,int)>": 0.3359964662145292
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: void setImaginary(double)>": [
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitSegment: void <init>(double,double,int)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitLoop: void <init>(double,double,int)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationAverageGradientIntegral: void <init>(double,int,double,int,double,java.lang.Class)>": 0.34537863735525043
        }, 
        {
            "<boofcv.factory.feature.orientation.FactoryOrientationAlgs: boofcv.abst.feature.orientation.OrientationIntegral image_ii(double,int,double,int,double,java.lang.Class)>": 0.3341995859152048
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_S32: void <init>(double,int,double,boolean)>": 0.324532417269161
        }
    ], 
    "<net.imglib2.position.transform.AbstractPositionableTransform: void move(int[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.40723971333311026
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.40723971333311026
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel2D_F64,double)>": 0.3784311711046098
        }, 
        {
            "<boofcv.alg.scene.FeatureToWordHistogram_F64: void process()>": 0.3483380330915263
        }, 
        {
            "<Catalano.Statistics.Histogram: double[] Normalize()>": 0.3471450941610376
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerType: void setReal(float)>": [
        {
            "<Catalano.Core.IntPoint: void <init>(float,float)>": 0.4894742270041675
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_F32: float get_fast(float,float)>": 0.4294786010871553
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_S16: float get_fast(float,float)>": 0.41496459915595474
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_S32: float get_fast(float,float)>": 0.4143914499522914
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_U8: float get_fast(float,float)>": 0.406546929544376
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: void set(net.imglib2.transform.integer.Mixed)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5478322233708834
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5416206547780241
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.53066543502472
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.5242694230992175
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateMetrics(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.5220598304109926
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.LanczosInterpolator: double lanczos(double,double)>": [
        {
            "<Catalano.Math.Distances.Distance: double BrayCurtis(double,double,double,double)>": 0.5955346259462087
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Canberra(double,double,double,double)>": 0.5678579384188485
        }, 
        {
            "<Catalano.Math.Functions.Gabor: Catalano.Math.ComplexNumber Function2D(int,int,double,double,double,double,double)>": 0.551963173580985
        }, 
        {
            "<Catalano.Math.Functions.Gabor: double Function1D(double,double,double,double,double,double,double)>": 0.5467326521155298
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: double rotatedWidth(double,double,double)>": 0.5438636621502652
        }
    ], 
    "<net.imglib2.histogram.Real1dBinMapper: net.imglib2.histogram.HistogramNd histogramNd(double[],double[],long[],boolean[])>": [
        {
            "<Catalano.Statistics.Normalizations: double[] UnitVectorNormalization(double[])>": 0.48905509534783226
        }, 
        {
            "<Catalano.Statistics.Normalizations: double[] DecimalScaling(double[])>": 0.4872114237161965
        }, 
        {
            "<Catalano.Math.Matrix: double[] RemoveColumn(double[],int)>": 0.40634914563724084
        }, 
        {
            "<Catalano.Math.Matrix: double[] RemoveColumns(double[],int[])>": 0.3549172099328835
        }, 
        {
            "<Catalano.Statistics.Tools: double Sum(double[])>": 0.3478556827472756
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: void move(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.util.Util: void quicksort(long[],int,int)>": [
        {
            "<Catalano.Imaging.Filters.MedianCut: void quickSort(int[],int,int)>": 0.369671580095446
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.3220443028451204
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.3220443028451204
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.3220443028451204
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(long[],int,int,double,long,long,long[],int,int,int,int)>": 0.31906662879051856
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess: void setPosition(int,int)>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.5072299321530125
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.5067713478573699
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve9(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.5046448966777394
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal7(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.5045877758668285
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve7(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.5043822317121928
        }
    ], 
    "<net.imglib2.converter.ComplexImaginaryFloatConverter: void convert(net.imglib2.type.numeric.ComplexType,net.imglib2.type.numeric.real.FloatType)>": [
        {
            "<com.flowpowered.react.collision.shape.SphereShape: void getLocalBounds(com.flowpowered.react.math.Vector3,com.flowpowered.react.math.Vector3)>": 0.19435863798650005
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: void setAllValues(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)>": 0.19108644636634647
        }, 
        {
            "<org.jbox2d.callbacks.DebugDraw: void setCamera(float,float,float)>": 0.18994096893194629
        }, 
        {
            "<boofcv.factory.background.FactoryBackgroundModel: boofcv.alg.background.stationary.BackgroundStationaryGaussian stationaryGaussian(boofcv.factory.background.ConfigBackgroundGaussian,boofcv.struct.image.ImageType)>": 0.1897591722051496
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: void setAllValues(float,float,float,float,float,float,float,float,float)>": 0.1892278869165811
        }
    ], 
    "<net.imglib2.iterator.LocalizingIntervalIterator: long getLongPosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.6444652635187575
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.5168876727488003
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.5115679070521639
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4966616068166122
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.4924576911988799
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void incIndex()>": [
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.4274195384558474
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.4147280985068987
        }, 
        {
            "<Catalano.Imaging.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.4147280985068987
        }, 
        {
            "<Catalano.Imaging.Filters.AlphaTrimmedMean: void setT(int)>": 0.40168653618935546
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.AlphaTrimmedMean: void setT(int)>": 0.40168653618935546
        }
    ], 
    "<net.imglib2.img.cell.CellRandomAccess: void <init>(net.imglib2.img.cell.AbstractCellImg)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2970770983257962
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2970770983257962
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2813646112128251
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2694540437860529
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2692049060591993
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolator: void printCode()>": [
        {
            "<boofcv.struct.image.GrayI: void printNotZero()>": 0.328120056397652
        }, 
        {
            "<boofcv.alg.fiducial.square.DetectFiducialSquareBinary: void printClassified()>": 0.3127070958022792
        }, 
        {
            "<org.imgscalr.Scalr: void log(int,java.lang.String,java.lang.Object[])>": 0.28256875659939185
        }, 
        {
            "<net.smert.jreactphysics3d.engine.Profiler: void PrintRecursiveNodeReport(net.smert.jreactphysics3d.engine.ProfileNodeIterator,int,int)>": 0.2804299159196359
        }, 
        {
            "<boofcv.app.CameraCalibration: void process()>": 0.2687270406023639
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsPeriodic: void bck(int)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.3343431182394596
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.27224101612677404
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.2668171570642611
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.2250233768733313
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.22348660622074534
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRealRandomAccessible: void <init>(net.imglib2.RealRandomAccessible,net.imglib2.converter.Converter,net.imglib2.type.Type)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04032389192727559
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03904344047215152
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.038696496074155144
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.03828524323948056
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03790045715961838
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void setPosition(net.imglib2.RealLocalizable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: void localize(int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.6104918353905384
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.6069635688162914
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.6031969885532117
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5893997689122148
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5856277226225717
        }
    ], 
    "<net.imglib2.display.projector.sampler.SelectiveSampler: java.lang.Object get()>": [
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.28120892392405406
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.28053636016770206
        }, 
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27921783072750345
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27921783072750345
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27921783072750345
        }
    ], 
    "<net.imglib2.img.cell.CellImgFactory: net.imglib2.img.NativeImg createShortInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.20557172820160094
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.20557172820160094
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.19009418367404002
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.15968814578412494
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.15968814578412494
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRandomAccess: net.imglib2.type.Type get()>": [
        {
            "<org.dyn4j.dynamics.WorldTest: void getUserData()>": 0.13072589053758338
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void getUserData()>": 0.13072589053758338
        }, 
        {
            "<org.dyn4j.collision.FixtureTest: void setUserData()>": 0.1260928308340071
        }, 
        {
            "<org.dyn4j.geometry.AbstractShapeTest: void setUserData()>": 0.1172913120753782
        }, 
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.10743667507913031
        }
    ], 
    "<net.imglib2.type.volatiles.VolatileRealType: void <init>(net.imglib2.type.numeric.RealType,boolean)>": [
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlockRelaxed: void <init>(boolean,boolean)>": 0.3438694806559756
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlockStrict: void <init>(boolean,boolean)>": 0.3438694806559756
        }, 
        {
            "<boofcv.abst.feature.associate.EnforceUniqueByScore$Describe2D: void <init>(boofcv.abst.feature.associate.AssociateDescription2D,boolean,boolean)>": 0.3144163788737706
        }, 
        {
            "<boofcv.abst.feature.associate.EnforceUniqueByScore$Describe: void <init>(boofcv.abst.feature.associate.AssociateDescription,boolean,boolean)>": 0.3144163788737706
        }, 
        {
            "<boofcv.alg.geo.calibration.Zhang99ParamAll: void <init>(boolean,int,boolean)>": 0.3144163788737706
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: void setPosition(int,int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.34203956542274816
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.34203956542274816
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.3259723981431945
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.3259723981431945
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.3248772538059615
        }
    ], 
    "<net.imglib2.view.composite.CompositeIntervalView: void realMax(double[])>": [
        {
            "<org.jbox2d.tests.math.SinCosTest: double[][] doSpeedTest(boolean)>": 0.26304696768695873
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: double[] getDoublePivot()>": 0.25215147735078375
        }, 
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.2520300949771551
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF64)>": 0.2511248355608418
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int,int)>": 0.24620857915431477
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: void getComponentMapping(int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.519673839972705
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5061517773825265
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.4906766313473351
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.48995602847974673
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int)>": 0.48275443737485824
        }
    ], 
    "<net.imglib2.RealPoint: void <init>(double[],boolean)>": [
        {
            "<boofcv.alg.fiducial.calib.chess.ChessboardPolygonHelper: boolean filterContour(java.util.List,boolean,boolean)>": 0.3353037891055827
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void renderBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.3128097625934187
        }, 
        {
            "<boofcv.struct.calib.IntrinsicParameters: boofcv.struct.calib.IntrinsicParameters fsetRadial(double[])>": 0.2774504303608099
        }, 
        {
            "<Catalano.Imaging.Filters.SeparableConvolution: void <init>(double[],double[],boolean)>": 0.2718215444812416
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void display(com.jogamp.opengl.GLAutoDrawable)>": 0.2699718565513012
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccessible: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.028490144114909487
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.028490144114909487
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.028490144114909487
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.028490144114909487
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.028490144114909487
        }
    ], 
    "<net.imglib2.view.TransformRandomAccess: void bck(int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.515050663840322
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.49687649454939165
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.49687649454939165
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4965452888056134
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4963742906040283
        }
    ], 
    "<net.imglib2.view.MixedRandomAccess: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.util.Intervals: net.imglib2.FinalInterval expand(net.imglib2.Interval,long)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2696276994276468
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.2466596029927543
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.24501113606685504
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.24204142480778232
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.23498471606941482
        }
    ], 
    "<net.imglib2.converter.TypeIdentity: void convert(net.imglib2.type.Type,net.imglib2.type.Type)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05923488777590923
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.057353933467640436
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.05684427997196944
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05624015883323094
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.055674916760380555
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void fwd(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36016035441676975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.35455846459436624
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.35455846459436624
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: void setPosition(int[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.1500387911598941
        }, 
        {
            "<Catalano.Imaging.Texture.LawsTextureEnergy: void <init>(int[],int[])>": 0.1500387911598941
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void <init>()>": 0.1500387911598941
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.14895594547948113
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.14895594547948113
        }
    ], 
    "<net.imglib2.view.RandomAccessibleIntervalCursor: long getLongPosition(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3508771929824561
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3142423944400126
        }
    ], 
    "<net.imglib2.type.numeric.integer.LongType: void set(long)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.InterleavedS64,long,long,boofcv.struct.image.InterleavedS64)>": 0.3076250912475072
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.InterleavedS64,long,long,long,boofcv.struct.image.InterleavedS64)>": 0.3076250912475072
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: double relativeFrequency(long[],boolean)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.33589581315120887
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2991313136455749
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.29482768566678613
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.28384821008437455
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.28006076606445407
        }
    ], 
    "<net.imglib2.img.array.ArrayImg: boolean supportsOptimizedCursor(net.imglib2.Interval)>": [
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.4304007197147387
        }, 
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.4191196705906429
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.4073579301712793
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.4073579301712793
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.4073579301712793
        }
    ], 
    "<net.imglib2.RealPointSampleList: java.lang.Object firstElement()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.27356677703754323
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.26159727180913483
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.26159727180913483
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2424492206781365
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.2366492548000964
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowingFactory: void setFadeOutDistance(int[])>": [
        {
            "<boofcv.struct.image.InterleavedS32: void _setData(java.lang.Object)>": 0.30077011056745767
        }, 
        {
            "<boofcv.struct.image.GrayS32: void _setData(java.lang.Object)>": 0.30077011056745767
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.2647906235459138
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.2647906235459138
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_U8: void <init>(int)>": 0.2611021390234889
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRandomAccessibleInterval: net.imglib2.type.Type getDestinationType()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.018184824186332698
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.018184824186332698
        }
    ], 
    "<net.imglib2.histogram.HistogramNd$Incrementer: void <init>(net.imglib2.histogram.HistogramNd,net.imglib2.histogram.HistogramNd$1)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05063696835418333
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04902903378454601
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04859335628264
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04807692307692309
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04759372565678686
        }
    ], 
    "<net.imglib2.view.composite.CompositeIntervalView: void realMin(double[])>": [
        {
            "<org.jbox2d.tests.math.SinCosTest: double[][] doSpeedTest(boolean)>": 0.26304696768695873
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: double[] getDoublePivot()>": 0.25215147735078375
        }, 
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.2520300949771551
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF64)>": 0.2511248355608418
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int,int)>": 0.24620857915431477
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: void setTranslation(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.468536325802491
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.45644740722555815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4549590327161815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4514297284100339
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.44882531202406517
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: int compareTo(net.imglib2.type.numeric.integer.GenericLongType)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3208770324203471
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3208770324203471
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3208770324203471
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$200(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.30231370138082325
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$100(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.30231370138082325
        }
    ], 
    "<net.imglib2.util.Intervals: net.imglib2.Interval largestContainedInterval(net.imglib2.RealInterval)>": [
        {
            "<Catalano.Statistics.Distributions.BernoulliDistribution: double LogProbabilityMassFunction(int)>": 0.3372774027840606
        }, 
        {
            "<boofcv.alg.geo.pose.PnPLepetitEPnP: void estimateCase3(double[])>": 0.3344542509092299
        }, 
        {
            "<org.dyn4j.sandbox.panels.PreviewPanel: void paintComponent(java.awt.Graphics)>": 0.3343791936356848
        }, 
        {
            "<boofcv.factory.filter.kernel.FactorySteerCoefficients$PolyOrder1: double compute(double,int)>": 0.33322857668042904
        }, 
        {
            "<boofcv.alg.geo.PerspectiveOps: boofcv.struct.calib.IntrinsicParameters createIntrinsic(int,int,double,double)>": 0.33288805134455224
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: double relativeFrequency(java.lang.Object,boolean)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.36778269300946886
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.3099192112696848
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.3048415038861093
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2897915419031742
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.28940139880959975
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.LanczosInterpolatorFactory: void <init>(int,double,double)>": [
        {
            "<boofcv.abst.feature.orientation.ConfigSlidingIntegral: void <init>(double,double,int,double,int)>": 0.4524240413759493
        }, 
        {
            "<boofcv.struct.calib.IntrinsicParameters: boofcv.struct.calib.IntrinsicParameters fsetK(double,double,double,double,double,int,int)>": 0.4484195010512869
        }, 
        {
            "<boofcv.struct.calib.IntrinsicParameters: void <init>(double,double,double,double,double,int,int)>": 0.448245357819141
        }, 
        {
            "<Catalano.Math.Functions.PerlinNoise: void <init>(int,double,double,double)>": 0.4468491917793973
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: void <init>(double,double,int,double)>": 0.4426575347520989
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileNumericType: void set(net.imglib2.type.volatiles.AbstractVolatileNumericType)>": [
        {
            "<org.dyn4j.Reference: boolean equals(java.lang.Object)>": 0.1645913150908774
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.16317848796612636
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.16317848796612636
        }, 
        {
            "<boofcv.demonstrations.calibration.SquareGridPanel: void itemStateChanged(java.awt.event.ItemEvent)>": 0.1631115614133926
        }, 
        {
            "<boofcv.demonstrations.calibration.ChessboardPanel: void itemStateChanged(java.awt.event.ItemEvent)>": 0.1631115614133926
        }
    ], 
    "<net.imglib2.display.awt.UnsignedIntDataBuffer: void setElemDouble(int,double)>": [
        {
            "<boofcv.struct.convolve.Kernel2D_F64: double getDouble(int,int)>": 0.42848348024645877
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: double get(int,int,int)>": 0.4280628220153324
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: double getDouble(int,int)>": 0.4255274643142326
        }, 
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.42399081561431073
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(int[],int,int,double,int,int,int[],int,int,int,int)>": 0.4234491756688421
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsValue: void fwd(int)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.268053447393493
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.24504711817724306
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.24142045314976607
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.23741434016756435
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.23741434016756435
        }
    ], 
    "<net.imglib2.type.AbstractBit64Type: void <init>(net.imglib2.img.basictypeaccess.LongAccess,int)>": [
        {
            "<boofcv.struct.convolve.KernelBase: void <init>(int,int)>": 0.39130575068064327
        }, 
        {
            "<boofcv.factory.feature.detect.template.FactoryTemplateMatching: boofcv.alg.feature.detect.template.TemplateMatchingIntensity createIntensity(boofcv.factory.feature.detect.template.TemplateScoreType,java.lang.Class)>": 0.3881548579888807
        }, 
        {
            "<boofcv.struct.convolve.KernelBase: void <init>(int)>": 0.3780990167221465
        }, 
        {
            "<boofcv.app.CreateFiducialSquareBinary: void addPattern(java.lang.String)>": 0.3739463232995851
        }, 
        {
            "<boofcv.alg.InputSanityCheck: void checkSameShapeB(boofcv.struct.image.ImageMultiBand,boofcv.struct.image.ImageMultiBand)>": 0.3711048419958318
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsValue: void move(long,int)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.29265542912768616
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.28758738906052456
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.28758738906052456
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.28758738906052456
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.2695075961641224
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsValue: void setPosition(int,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.29087504114424373
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.29087504114424373
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.29087504114424373
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(long[],int,int,double,long,long,long[],int,int,int,int)>": 0.2895136932888127
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply_A(long[],int,int,double,long,long,long[],int,int,int,int)>": 0.2895136932888127
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: void min(net.imglib2.Positionable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.display.projector.composite.CompositeXYRandomAccessibleProjector: void setComposite(boolean)>": [
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: void setViewKnown(int,boolean)>": 0.3667691897857698
        }, 
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: boolean isViewKnown(int)>": 0.23919159901581258
        }, 
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void setSelectRectangle(boolean)>": 0.1966882834627384
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void setSelectRectangle(boolean)>": 0.1966882834627384
        }, 
        {
            "<Catalano.Imaging.Texture.GrayLevelCooccurrenceMatrix: void <init>(int,Catalano.Imaging.Texture.GrayLevelCooccurrenceMatrix$Degree,boolean,boolean)>": 0.1950925396350841
        }
    ], 
    "<net.imglib2.display.screenimage.awt.FloatAWTScreenImage: void <init>(net.imglib2.type.numeric.real.FloatType,net.imglib2.img.basictypeaccess.array.FloatArray,long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.15729768613092662
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.15729768613092662
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1456513577327886
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.13908532168678328
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.12126492036826719
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void <init>(net.imglib2.img.array.ArrayRandomAccess)>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.359642258432744
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.35870015588153137
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal7(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.356326729018811
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.35548001116240735
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve11(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.35546247274165843
        }
    ], 
    "<net.imglib2.AbstractWrappedInterval: long min(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.35421796416552154
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.35421796416552154
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.34914275634306197
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3376600946233209
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.30328141972374945
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListLocalizingCursor: void fwd()>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.32022721966405165
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.271256655200971
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.23862534587294382
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.23613008661743234
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.23613008661743234
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: int getIntPosition(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.5813670294666404
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5499133134871351
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.5022381686453914
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.499365607201952
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.49709610328169906
        }
    ], 
    "<net.imglib2.util.ConstantUtils$2: net.imglib2.RealRandomAccess realRandomAccess(net.imglib2.RealInterval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.042447635997800895
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04109974682633932
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04073452985908362
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04030161751369757
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03989656585141091
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: void mul(float)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: float unsafe_getF(int,int)>": 0.25363826947895907
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.Utils: long encodeFloatIntoInteger(float)>": 0.2423455992391906
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: long encodeFloatIntoInteger(float)>": 0.2423455992391906
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.24139167082379503
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.24139167082379503
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: void setPosition(long,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.31325484913065393
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.31097891796791843
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: int compareTo(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.42020104153392573
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.37183342002070013
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(org.jbox2d.collision.broadphase.Pair)>": 0.338196041930255
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(java.lang.Object)>": 0.33140772433646115
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.32943893241394046
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: short getCodedSignedShortChecked(int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void invert(short[],int,int,short[],int,int,int,int)>": 0.24248093264381687
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int max(short[],int,int,int,int)>": 0.2368854224131084
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int min(short[],int,int,int,int)>": 0.2368854224131084
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minusU_B(short[],int,int,int,short[],int,int,int,int)>": 0.2312844092146963
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plusU_A(short[],int,int,int,short[],int,int,int,int)>": 0.2312844092146963
        }
    ], 
    "<net.imglib2.type.numeric.AbstractARGBDoubleType: void set(double,double,double,double)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void access$000(boofcv.app.calib.AssistedCalibration,double,double,double,double)>": 0.5128595552996785
        }, 
        {
            "<boofcv.gui.fiducial.VisualizeFiducial: void drawLine(java.awt.Graphics2D,java.awt.geom.Line2D$Double,double,double,double,double)>": 0.503311447016837
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceSe3SymmetricSq: void setIntrinsic(double,double,double,double,double,double)>": 0.4994900800197433
        }, 
        {
            "<boofcv.alg.sfm.robust.DistancePlane2DToPixelSq: void setIntrinsic(double,double,double)>": 0.4885341315391344
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceHomographyPixelSq: void setIntrinsic(double,double,double)>": 0.4885341315391344
        }
    ], 
    "<net.imglib2.display.awt.SignedByteDataBuffer: void setElem(int,int)>": [
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.5154288494251629
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.5096150421681399
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.5096150421681399
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.5096150421681399
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.5054123269347529
        }
    ], 
    "<net.imglib2.util.ImgUtil: void copy(net.imglib2.img.Img,int[],int,int[])>": [
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.44606928941996604
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.44606928941996604
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.42879601649229143
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(int[],int,int,int[],int,int,int,int)>": 0.41635879096272077
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(int[],int,int,int[],int,int,int,int)>": 0.413297645070478
        }
    ], 
    "<net.imglib2.img.cell.AbstractCells: void <init>(net.imglib2.util.Fraction,long[],int[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.26202568324147624
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.26201203017502567
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2530491429539923
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2523956728046872
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.246568833085752
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: int compareTo(java.lang.Object)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.28302336416052903
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.26787069148812087
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomPixelDepthPnP: int dropUnusedTracks()>": 0.22610204106522286
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomMonoPlaneInfinity: int dropUnusedTracks()>": 0.22460327383361134
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2193386105675623
        }
    ], 
    "<net.imglib2.display.AbstractArrayColorTable: int argb(int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.434280497457257
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.434280497457257
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.434280497457257
        }, 
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.4307494509029033
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: int getSerializedSize()>": 0.42979040820496106
        }
    ], 
    "<net.imglib2.Point: void move(net.imglib2.Localizable)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2983384326215455
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.2670678598170253
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2598687447405681
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.2532435341288323
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long[],int,int,int,int)>": 0.253118325755805
        }
    ], 
    "<net.imglib2.view.RandomAccessibleIntervalCursor: boolean hasNext()>": [
        {
            "<Catalano.Core.Stopwatch: boolean isRunning()>": 0.4945485634967093
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.4739643758646771
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.4739643758646771
        }, 
        {
            "<boofcv.io.javacv.JavaCVVideoImageSequence: boolean hasNext()>": 0.4739643758646771
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.4575697875022087
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedIterableRandomAccessibleInterval: net.imglib2.converter.readwrite.WriteConvertedRandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04794633014853841
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.046423834544262965
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04601130713546223
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04552231504557686
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04506479272965292
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.display.ColorTable16: int getResampled(int,int,int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.5494459070857387
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.5494459070857387
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.5494459070857387
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.44648609346605195
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(short[],int,int,int,int)>": 0.43364833722413226
        }
    ], 
    "<net.imglib2.view.StackView: void <init>(java.util.List,net.imglib2.view.StackView$StackAccessMode)>": [
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillBorder(boofcv.struct.image.GrayS64,long,int)>": 0.31819697752760645
        }, 
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: void transform(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.3105110431021882
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS64)>": 0.3070606876392731
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS64)>": 0.3070606876392731
        }, 
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.30568300309754315
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void increment(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.util.Util: boolean equalIterationOrder(net.imglib2.IterableInterval[])>": [
        {
            "<boofcv.abst.feature.tracker.PointTrackerCombined: boolean dropTrack(boofcv.abst.feature.tracker.PointTrack)>": 0.29631019869402003
        }, 
        {
            "<org.dyn4j.Reference: boolean equals(java.lang.Object)>": 0.29289900521959195
        }, 
        {
            "<com.flowpowered.react.Utilities: int indexOf(java.lang.Object[],java.lang.Object)>": 0.28032614819622714
        }, 
        {
            "<boofcv.io.SimpleStringNumberReader: boolean next()>": 0.2627864482924913
        }, 
        {
            "<Catalano.Core.Concurrent.MulticoreExecutor: java.util.List run(java.util.Collection)>": 0.23286265961432812
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: java.lang.Object getPlane(int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2820729771438355
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2820729771438355
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2820729771438355
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.2804798883454391
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.2804798883454391
        }
    ], 
    "<net.imglib2.view.composite.GenericComposite$Factory: net.imglib2.view.composite.Composite create(net.imglib2.RandomAccess)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.051639777949432225
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.05
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04955569438322958
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04902903378454601
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04853626716970755
        }
    ], 
    "<net.imglib2.util.Partition: int partitionSubList(int,int,java.util.List,int[])>": [
        {
            "<Catalano.Core.Structs.BinaryHeap: void downHeap(int,java.lang.Comparable)>": 0.3407844512801129
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: java.lang.Comparable remove()>": 0.3354244488740702
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: void <init>(java.lang.Comparable[])>": 0.3262707081852394
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: void upHeap(int,java.lang.Comparable)>": 0.32489915261981994
        }, 
        {
            "<Catalano.Imaging.Filters.BlobsFiltering: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.30412069810739517
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.FloorInterpolatorFactory: net.imglib2.RealRandomAccess create(java.lang.Object,net.imglib2.RealInterval)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.10968842336263093
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.09091241745773311
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.09091241745773311
        }, 
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.08623198506605181
        }, 
        {
            "<net.coobird.thumbnailator.resizers.ProgressiveBilinearResizer: void <init>(java.util.Map)>": 0.08623198506605181
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void move(net.imglib2.RealLocalizable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorDoubleBoundary: void setPosition(long,int)>": [
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.2425273105561276
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase$WorkThread: void run()>": 0.22468637817302917
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.2239595540656365
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.22261275111306766
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.22177507016989131
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: void move(int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.2540764877039817
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.21777659600227028
        }
    ], 
    "<net.imglib2.transform.integer.permutation.AbstractPermutationTransform: int[] getInverseLutCopy()>": [
        {
            "<boofcv.struct.image.InterleavedS32: void _setData(java.lang.Object)>": 0.30077011056745767
        }, 
        {
            "<boofcv.struct.image.GrayS32: void _setData(java.lang.Object)>": 0.30077011056745767
        }, 
        {
            "<Catalano.Math.Dissimilarities.RogersTanimotoDissimilarity: double Compute(java.lang.Object,java.lang.Object)>": 0.2537442445740994
        }, 
        {
            "<Catalano.Math.Dissimilarities.SokalMichenerDissimilarity: double Compute(java.lang.Object,java.lang.Object)>": 0.2537442445740994
        }, 
        {
            "<Catalano.Math.Dissimilarities.MatchingDissimilarity: double Compute(java.lang.Object,java.lang.Object)>": 0.2537442445740994
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: void move(net.imglib2.Localizable)>": [
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.22019811708607023
        }, 
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.21724893431081813
        }, 
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(Catalano.Imaging.Corners.FeaturePoint)>": 0.21193063937629153
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.21189319830918563
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: int getMinGray(Catalano.Imaging.FastBitmap)>": 0.20939942646294316
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: int positionToIndex(long[],int[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.38523652277769127
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getIndex(int[])>": 0.38473038642649177
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.37332377245520354
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(long[],int,int,int,int)>": 0.37256578367745696
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long min(long[],int,int,int,int)>": 0.37256578367745696
        }
    ], 
    "<net.imglib2.display.screenimage.awt.UnsignedShortAWTScreenImage: java.awt.image.DataBufferUShort createDataBuffer(net.imglib2.img.basictypeaccess.array.ShortArray)>": [
        {
            "<boofcv.struct.image.InterleavedI16: short[] get(int,int,short[])>": 0.1041001694231636
        }, 
        {
            "<boofcv.struct.image.GrayI16: void _setData(java.lang.Object)>": 0.09633432944855654
        }, 
        {
            "<boofcv.struct.image.InterleavedI16: void _setData(java.lang.Object)>": 0.09633432944855654
        }, 
        {
            "<boofcv.struct.image.InterleavedI16: void set(int,int,short[])>": 0.0956914769780139
        }, 
        {
            "<boofcv.alg.fiducial.square.DetectFiducialSquareImage: int hamming(short[],short[])>": 0.09274901039623944
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void moveDim0(int)>": [
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(int,int[])>": 0.3324277975509629
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int)>": 0.3318952896775199
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setRGB(int,int[])>": 0.32549418533325075
        }, 
        {
            "<Catalano.Math.Matrix: void Subtract(int[],int)>": 0.32335739799488505
        }, 
        {
            "<Catalano.Math.Matrix: void Add(int[],int)>": 0.32335739799488505
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: void <init>(long)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.29771537450173013
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.29771537450173013
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.29771537450173013
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.InterleavedS64,long,long,boofcv.struct.image.InterleavedS64)>": 0.28497908702911023
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.InterleavedS64,long,long,long,boofcv.struct.image.InterleavedS64)>": 0.28497908702911023
        }
    ], 
    "<net.imglib2.type.logic.BoolType: void or(net.imglib2.type.logic.BoolType)>": [
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.2956572448217507
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.29421560826684073
        }, 
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.28831399045930317
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.28831399045930317
        }, 
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: boolean process(boofcv.struct.image.ImageBase)>": 0.2712573740901436
        }
    ], 
    "<net.imglib2.util.Util: boolean isApproxEqual(float,float,float)>": [
        {
            "<boofcv.alg.tracker.klt.KltTracker: boolean isFullyOutside(float,float)>": 0.463922571122031
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: int getMaxArea(float,float,float,float)>": 0.4110231615457697
        }, 
        {
            "<com.flowpowered.react.engine.ContactManifold: int getMaxArea(float,float,float,float)>": 0.4110231615457697
        }, 
        {
            "<boofcv.misc.BoofMiscOps: boolean checkInside(boofcv.struct.image.ImageBase,float,float,float)>": 0.4101731859122383
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: boolean ApproxEqual(float,float,float)>": 0.4021511009380215
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: int hashCode()>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.34802166786938954
        }, 
        {
            "<org.dyn4j.geometry.Matrix22: int hashCode()>": 0.34030389867598976
        }, 
        {
            "<org.dyn4j.geometry.Vector3: int hashCode()>": 0.33996996633425836
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: int hashCode()>": 0.3375360571543924
        }, 
        {
            "<org.dyn4j.geometry.Vector2: int hashCode()>": 0.33551248288552227
        }
    ], 
    "<net.imglib2.AbstractRealInterval: void <init>(double[],double[])>": [
        {
            "<boofcv.struct.calib.IntrinsicParameters: boofcv.struct.calib.IntrinsicParameters fsetRadial(double[])>": 0.5081267649776416
        }, 
        {
            "<boofcv.struct.pyramid.PyramidFloat: void setScaleFactors(double[])>": 0.3481211654363229
        }, 
        {
            "<boofcv.struct.image.GrayF64: void _setData(java.lang.Object)>": 0.3037855106099524
        }, 
        {
            "<boofcv.struct.image.InterleavedF64: void _setData(java.lang.Object)>": 0.3037855106099524
        }, 
        {
            "<boofcv.struct.pyramid.PyramidFloat: void <init>(java.lang.Class,double[])>": 0.29224179383205073
        }
    ], 
    "<net.imglib2.transform.InverseTransform: void apply(int[],int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.34381608450188594
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.3400885355425245
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.3018412667314224
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.3018412667314224
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.2886401704745511
        }
    ], 
    "<net.imglib2.transform.integer.ComponentMappingTransform: int getComponentMapping(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.8028812106614286
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.6927569254918229
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.68467237202013
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.6728382027998716
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.6662651344050108
        }
    ], 
    "<net.imglib2.view.SlicingRandomAccess: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: net.imglib2.type.numeric.integer.UnsignedIntType copy()>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.18590829116640784
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.18499529252895558
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.17507086620172085
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.17287909948217056
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.17193955757147605
        }
    ], 
    "<net.imglib2.view.composite.AbstractNumericComposite: void mul(net.imglib2.view.composite.AbstractNumericComposite)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27369975151850634
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27369975151850634
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27369975151850634
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.2715165016949687
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.27085028831903113
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: void <init>(net.imglib2.img.NativeImg,int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36016035441676975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.35455846459436624
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.35455846459436624
        }
    ], 
    "<net.imglib2.converter.Converters: net.imglib2.converter.readwrite.WriteConvertedIterableInterval convert(net.imglib2.IterableInterval,net.imglib2.converter.readwrite.SamplerConverter)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0584019459079829
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.05406205059012895
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.05346179598430837
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.05164589025080292
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void <init>(boofcv.demonstrations.tracker.CirculantVisualizationPanel$Listener)>": 0.05040273807667476
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform$InverseTranslationTransform: double[][] getMatrix()>": [
        {
            "<Catalano.Math.Matrix: double[][] Identity(int)>": 0.39382305144084107
        }, 
        {
            "<Catalano.Math.Matrix: double[][] CreateMatrix2D(int,int,double)>": 0.37259926618392863
        }, 
        {
            "<Catalano.Math.Matrix: double[][] Identity(int,int)>": 0.37248689936341933
        }, 
        {
            "<Catalano.Math.Decompositions.SingularValueDecomposition: double[][] getS()>": 0.3705407654714405
        }, 
        {
            "<Catalano.Math.Matrix: double[][] Reshape(double[],int,int)>": 0.3698581382313157
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: java.lang.String toString()>": [
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String getPatternName(int)>": 0.6803537547714282
        }, 
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String selectDocumentName()>": 0.5483002005372489
        }, 
        {
            "<boofcv.misc.AutoTypeImage: java.lang.String getInterleavedName()>": 0.44525762972335015
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: java.lang.String toString()>": 0.4306190175176854
        }, 
        {
            "<net.coobird.thumbnailator.geometry.RelativeSize: java.lang.String toString()>": 0.4306190175176854
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: void move(int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.2540764877039817
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.21777659600227028
        }
    ], 
    "<net.imglib2.histogram.HistogramNd$Incrementer: void count(long[],boolean)>": [
        {
            "<boofcv.alg.fiducial.calib.chess.ChessboardPolygonHelper: boolean filterContour(java.util.List,boolean,boolean)>": 0.31960197741148066
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void renderBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.29980087157898166
        }, 
        {
            "<org.dyn4j.geometry.Circle: void <init>(boolean,double)>": 0.24769612888161685
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void renderSelectedBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.2447738535794578
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void display(com.jogamp.opengl.GLAutoDrawable)>": 0.24387409533976404
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,char[])>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.36609304571965384
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.36609304571965384
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36549264850998225
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.3595523916209714
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.3595523916209714
        }
    ], 
    "<net.imglib2.display.awt.UnsignedIntDataBuffer: void setElem(int,int,int)>": [
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5796509577015102
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$7: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5791595297703808
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$3: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5791595297703808
        }, 
        {
            "<Catalano.Math.Matrix: int[][] CreateMatrix2D(int,int,int)>": 0.5772672732141203
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5766767579151271
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: void dec()>": [
        {
            "<Catalano.Imaging.Concurrent.Filters.Maximum: void <init>(int)>": 0.3314392192486343
        }, 
        {
            "<Catalano.Imaging.Filters.ConservativeSmoothing: void <init>(int)>": 0.3314392192486343
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Minimum: void <init>(int)>": 0.3314392192486343
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.ConservativeSmoothing: void <init>(int)>": 0.3314392192486343
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Median: void <init>(int)>": 0.3314392192486343
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void sub(net.imglib2.type.numeric.complex.ComplexFloatType)>": [
        {
            "<boofcv.gui.feature.VisualizeOpticalFlow: void magnitudeAbs(boofcv.struct.flow.ImageFlow,float,java.awt.image.BufferedImage)>": 0.32878592173218757
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$JoinParticleGroupsCallback: void callback(int,int,int)>": 0.32442510258396856
        }, 
        {
            "<org.jbox2d.testbed.perf.MathPerf: void runSinLUTTest(float)>": 0.3238183909344913
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$CreateParticleGroupCallback: void callback(int,int,int)>": 0.3228005823153547
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void raycast(org.jbox2d.callbacks.ParticleRaycastCallback,org.jbox2d.common.Vec2,org.jbox2d.common.Vec2)>": 0.3224221661073682
        }
    ], 
    "<net.imglib2.view.StackView$StackAccessMode: net.imglib2.view.StackView$StackAccessMode valueOf(java.lang.String)>": [
        {
            "<net.smert.jreactphysics3d.collision.shapes.CollisionShapeType: net.smert.jreactphysics3d.collision.shapes.CollisionShapeType valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<net.smert.jreactphysics3d.configuration.ContactsPositionCorrectionTechnique: net.smert.jreactphysics3d.configuration.ContactsPositionCorrectionTechnique valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<net.smert.jreactphysics3d.configuration.JointsPositionCorrectionTechnique: net.smert.jreactphysics3d.configuration.JointsPositionCorrectionTechnique valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<net.smert.jreactphysics3d.constraint.JointType: net.smert.jreactphysics3d.constraint.JointType valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<Catalano.Statistics.Analysis.PrincipalComponentAnalysis$AnalysisMethod: Catalano.Statistics.Analysis.PrincipalComponentAnalysis$AnalysisMethod valueOf(java.lang.String)>": 0.260989010989011
        }
    ], 
    "<net.imglib2.KDTree: void <init>(java.util.List,java.util.List)>": [
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void removeContactPoint(int)>": 0.3353655522274403
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.CrossClustersIntoGrids: boofcv.alg.fiducial.calib.squares.SquareGrid assembleGrid(java.util.List)>": 0.3225376639548064
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.PairManager: boolean removePair(int,int)>": 0.32214458065088186
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.PairManager: void shrinkMemory()>": 0.3198208827182795
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitLoop: int selectFarthest(java.util.List)>": 0.31821163752294956
        }
    ], 
    "<net.imglib2.iterator.ZeroMinIntervalIterator: void localize(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3029811129536988
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.23358513863768443
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.23358513863768443
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.2213851494399855
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.22031074191333022
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: void <init>(byte)>": [
        {
            "<org.jbox2d.particle.ParticleColor: void <init>(byte,byte,byte,byte)>": 0.2252512193044154
        }, 
        {
            "<org.jbox2d.particle.ParticleColor: void set(byte,byte,byte,byte)>": 0.2199166304720646
        }, 
        {
            "<boofcv.io.video.CreateMJpeg: byte[] readUntilMarker(java.io.DataInputStream,byte,byte)>": 0.18854897109488133
        }, 
        {
            "<org.dyn4j.dynamics.WorldTest: void listeners()>": 0.17578656062036685
        }, 
        {
            "<boofcv.io.video.VideoMjpegCodec: byte[] readJpegData(java.io.DataInputStream,byte)>": 0.16985917057860334
        }
    ], 
    "<net.imglib2.neighborsearch.KNearestNeighborSearchOnKDTree: void <init>(net.imglib2.KDTree,int)>": [
        {
            "<boofcv.alg.feature.disparity.impl.StereoDisparityWtoNaiveFive: void <init>(int,int,int,int)>": 0.3888190922593017
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.StereoDisparityWtoNaive: void <init>(int,int,int,int)>": 0.34676227705983637
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: void <init>(int)>": 0.3442749380032295
        }, 
        {
            "<boofcv.core.image.border.ImageBorder_IL_F64: void getGeneral(int,int,double[])>": 0.3437173553461676
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void <init>(boofcv.struct.image.InterleavedF64)>": 0.34201036720253314
        }
    ], 
    "<net.imglib2.view.composite.AbstractNumericComposite: void mul(double)>": [
        {
            "<boofcv.alg.misc.PixelMath: void multiply(boofcv.struct.image.GrayF64,double,double,double,boofcv.struct.image.GrayF64)>": 0.2696080727655931
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(double,boofcv.struct.image.GrayF64,double,double,boofcv.struct.image.GrayF64)>": 0.2696080727655931
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayF64,double,double,double,boofcv.struct.image.GrayF64)>": 0.2696080727655931
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide(boofcv.struct.image.GrayF64,double,double,double,boofcv.struct.image.GrayF64)>": 0.2696080727655931
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayF64,double,double,double,boofcv.struct.image.GrayF64)>": 0.2696080727655931
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolator1D: net.imglib2.type.numeric.NumericType get()>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawRectangleFromStartToEnd(com.jogamp.opengl.GL2,double,double,double,double,boolean)>": 0.13242781890351607
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawLineSegment(com.jogamp.opengl.GL2,double,double,double,double,boolean)>": 0.1301168906340473
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillRectangleFromStartToEnd(com.jogamp.opengl.GL2,double,double,double,double)>": 0.12537959001348786
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawRectangleFromTopLeft(com.jogamp.opengl.GL2,double,double,double,double,boolean)>": 0.1219098972642922
        }, 
        {
            "<org.dyn4j.geometry.TransformTest: void transform()>": 0.12137201805214613
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListRandomAccess: void <init>(net.imglib2.img.list.AbstractLongListImg,net.imglib2.img.list.AbstractLongListImg$LongListRandomAccess)>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS64)>": 0.2665779025260437
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS8,boofcv.struct.image.GrayS64)>": 0.2659744166850556
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayS64)>": 0.2659744166850556
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayF64,boofcv.struct.image.GrayS64)>": 0.2659744166850556
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS16,boofcv.struct.image.GrayS64)>": 0.2659744166850556
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: void move(net.imglib2.Localizable)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.33874985086752446
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.29432490317360793
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.29414627089588274
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.29338396855451104
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.2844875588578598
        }
    ], 
    "<net.imglib2.img.sparse.NtreeIntAccess: int getValue(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4758229559360494
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.47462351795956437
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.46920997671701414
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.46663436232689903
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.463400960269543
        }
    ], 
    "<net.imglib2.histogram.Integer1dBinMapper: net.imglib2.histogram.HistogramNd histogramNd(long[],long[],boolean[])>": [
        {
            "<boofcv.alg.geo.GeoTestingOps: java.util.List createList3_F64(int)>": 0.28669539086407536
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: int getReminder(int,int[])>": 0.27915034031236596
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F32_1D: int getReminder(int,int[])>": 0.27915034031236596
        }, 
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.2560772615459397
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.2560772615459397
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: void bck(int)>": [
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayF32)>": 0.20493739749916517
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegion pixelRegion(int,int,java.lang.Class)>": 0.1865077146355485
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegionNCC pixelRegionNCC(int,int,java.lang.Class)>": 0.1865077146355485
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayF32,int,int,boofcv.struct.image.GrayF32)>": 0.18191061672533412
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.GIntegralImageFeatureIntensity: void hessian(boofcv.struct.image.ImageGray,int,int,boofcv.struct.image.GrayF32)>": 0.17562079494962646
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsBorder: void setPosition(long[])>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.26014391033451845
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.21891288427874345
        }, 
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: int getNumUnknownViews()>": 0.21332559425536865
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.20877819490524388
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set(int,int,long[])>": 0.20373918826535287
        }
    ], 
    "<net.imglib2.AbstractInterval: void realMin(net.imglib2.RealPositionable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5256091910568305
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.5090303794676198
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5085281685018156
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5018647418701996
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateMetrics(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.4949266645788068
        }
    ], 
    "<net.imglib2.img.list.ListImgFactory: net.imglib2.img.ImgFactory imgFactory(java.lang.Object)>": [
        {
            "<net.coobird.thumbnailator.Thumbnails: void checkForNull(java.lang.Object,java.lang.String)>": 0.2871178370945103
        }, 
        {
            "<boofcv.testing.CompareIdenticalFunctions: void compareResults(java.lang.Object,java.lang.Object[],java.lang.Object,java.lang.Object[])>": 0.2783471882912777
        }, 
        {
            "<boofcv.gui.SelectInputPanel: void setActiveAlgorithm(int,java.lang.String,java.lang.Object)>": 0.2710191380976326
        }, 
        {
            "<boofcv.struct.WrapArrayIntoList: java.lang.Object get(int)>": 0.2710191380976326
        }, 
        {
            "<boofcv.demonstrations.calibration.ShowRectifyCalibratedApp: void setActiveAlgorithm(int,java.lang.String,java.lang.Object)>": 0.2710191380976326
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: void mul(double)>": [
        {
            "<Catalano.Math.Geometry.QuadrilateralTransformationCalc: double Det2(double,double,double,double)>": 0.37813162389516874
        }, 
        {
            "<Catalano.Math.Distances.Distance: double SquaredEuclidean(double,double,double,double)>": 0.3776046417497811
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Manhattan(double,double,double,double)>": 0.37345282965243043
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Chessboard(double,double,double,double)>": 0.36931071411042604
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Chebyshev(double,double,double,double)>": 0.36931071411042604
        }
    ], 
    "<net.imglib2.position.transform.Round: void setPosition(float,int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_F64: void set(int,float)>": 0.2310603576749783
        }, 
        {
            "<Catalano.Imaging.Tools.ColorConverter: double[] RGBtoO1O2(int,int,int)>": 0.2164422157239353
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F32_1D: void rftbsub(int,float[],int,int,float[],int)>": 0.20024699301472063
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_F32: void <init>(int,float,float)>": 0.19966870539290982
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_I: void <init>(int,float,float)>": 0.19966870539290982
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: net.imglib2.img.planar.PlanarLocalizingCursor localizingCursor()>": [
        {
            "<boofcv.alg.filter.convolve.ConvolveNormalized: void convolve(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayU8,boofcv.struct.image.GrayI8)>": 0.23552103569126814
        }, 
        {
            "<boofcv.alg.filter.convolve.ConvolveNormalized: void convolve(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS16,boofcv.struct.image.GrayI16)>": 0.23552103569126814
        }, 
        {
            "<Catalano.Imaging.Filters.ReplaceColor: void ApplyInPlace(Catalano.Imaging.FastBitmap,int,int,int)>": 0.2281146151073195
        }, 
        {
            "<boofcv.alg.distort.ImageDistortCache_SB: void init(boofcv.struct.image.ImageGray,boofcv.struct.image.ImageGray)>": 0.2269690736721599
        }, 
        {
            "<boofcv.alg.InputSanityCheck: void checkSameShape(boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase)>": 0.2248956206892972
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void set(byte[])>": [
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.3052431138709415
        }, 
        {
            "<boofcv.alg.misc.ImageInterleavedTestingOps: void fill(boofcv.struct.image.InterleavedI8,byte[])>": 0.3026778372659021
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int indexOfPreviousCounterClockwiseEdge(int)>": 0.299884178702009
        }, 
        {
            "<boofcv.struct.convolve.KernelBase: int getRadius()>": 0.2954132706992676
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: int getBorderX()>": 0.2954132706992676
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: void incIndex(int)>": [
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int checkInverseUpper(boofcv.struct.wavelet.WlCoef,int,boofcv.core.image.border.BorderIndex1D,int)>": 0.44051341934100985
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int checkInverseLower(boofcv.struct.wavelet.WlCoef,int,boofcv.core.image.border.BorderIndex1D,int)>": 0.4400380907456539
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: boofcv.struct.image.ImageInterleaved subimage(int,int,int,int,boofcv.struct.image.ImageInterleaved)>": 0.4351555027507932
        }, 
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: int block_zero(boofcv.struct.image.GrayS32,int,int,int,int)>": 0.4338775344945867
        }, 
        {
            "<boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder: void vertical(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayU16,boofcv.struct.image.GrayI8)>": 0.4322058016648451
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: void setBigInteger(java.math.BigInteger)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.22187986087078743
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.22187986087078743
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.22187986087078743
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.21524699743979925
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.InterleavedS64,long,long,boofcv.struct.image.InterleavedS64)>": 0.20916243127372558
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: net.imglib2.concatenate.PreConcatenable preConcatenate(java.lang.Object)>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.391379806912878
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.38531633353507366
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.3838057137838082
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.38035168473917513
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void shrinkArrays()>": 0.37892347232919
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: void move(int,int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.34203956542274816
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.34203956542274816
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.3259723981431945
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.3259723981431945
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.3248772538059615
        }
    ], 
    "<net.imglib2.util.Partition: void partitionSubList(java.util.ListIterator,java.util.ListIterator,int[])>": [
        {
            "<boofcv.struct.image.ImageInterleaved: void setTo(boofcv.struct.image.ImageInterleaved)>": 0.3187140546896313
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3167257362073989
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3167257362073989
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3167257362073989
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.31580821687579785
        }
    ], 
    "<net.imglib2.type.label.BasePairCharType: boolean valueEquals(net.imglib2.type.label.BasePairCharType)>": [
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.17463367450065445
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.16697008338728134
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.16697008338728134
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.16697008338728134
        }, 
        {
            "<net.coobird.thumbnailator.ThumbnailParameter: boolean useOriginalImageType()>": 0.16697008338728134
        }
    ], 
    "<net.imglib2.img.sparse.IntNtree: net.imglib2.img.sparse.NtreeAccess createInstance(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1826418206216855
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1826418206216855
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16881288427264435
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.12701685073623692
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.12701685073623692
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: void decIndex(int)>": [
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.6241711271514602
        }, 
        {
            "<boofcv.abst.fiducial.calib.CalibrationDetectorSquareFiducialGrid: int getPointIndex(int,int)>": 0.5747801203619927
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$9: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5631673913280111
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: int getIndex(int,int,int)>": 0.5573780954063181
        }, 
        {
            "<boofcv.struct.image.ImageBase: int getIndex(int,int)>": 0.5485724542486418
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: int indexToPositionWithOffset(int,int[],int[],int)>": [
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(int[],int,int,int[],int,int,int,int)>": 0.6132737212446345
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(int[],int,int,int[],int,int,int,int)>": 0.612641770421888
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(int[],int,int,int[],int,int,int,int)>": 0.5987298602868769
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int[],int,int,int,int)>": 0.5956320345375639
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int[],int,int,int,int)>": 0.5956320345375639
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerType: void inc()>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.28593561871521345
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.27085279948959046
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>()>": 0.24372685929874666
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.2379802920342033
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2300246167861285
        }
    ], 
    "<net.imglib2.img.cell.CellImg: void <init>(net.imglib2.img.cell.CellImgFactory,net.imglib2.img.cell.Cells)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.type.label.BasePairBitType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.09995775050169178
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.09995775050169178
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.09254044686795883
        }, 
        {
            "<boofcv.abst.fiducial.calib.ConfigSquareGridBinary: void checkValidity()>": 0.07795119555779044
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.07646609653029945
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsConstantValueFactory: net.imglib2.outofbounds.OutOfBoundsConstantValue create(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04564354645876383
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.044194173824159216
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04380145943098717
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04333595283009603
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04290040456147775
        }
    ], 
    "<net.imglib2.img.sparse.ShortNtree: net.imglib2.img.sparse.NtreeAccess createInstance(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1826418206216855
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1826418206216855
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16881288427264435
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.12701685073623692
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.12701685073623692
        }
    ], 
    "<net.imglib2.converter.ComplexImaginaryFloatConverter: void convert(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.24305110926064444
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.201832294726364
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.201832294726364
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.18427430546639723
        }, 
        {
            "<boofcv.alg.sfm.robust.ModelManagerScaleTranslate2D: void copyModel(java.lang.Object,java.lang.Object)>": 0.1810950483542926
        }
    ], 
    "<net.imglib2.type.logic.BoolType: long getIntegerLong()>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void setPaused(boolean)>": 0.23907654740693132
        }, 
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: boolean process(boofcv.struct.image.ImageBase)>": 0.21786521298529132
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: boolean isEmpty()>": 0.21456987721830903
        }, 
        {
            "<Catalano.Math.SparseArray: boolean isEmpty()>": 0.21456987721830903
        }, 
        {
            "<Catalano.Math.Geometry.Line: boolean isVertical()>": 0.21456987721830903
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: void localize(double[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF64)>": 0.43403432413324206
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedF64)>": 0.3949959276042379
        }, 
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.355658579433933
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.3530837074107076
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.3530837074107076
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void multATB(double[][],double[][],double[][])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4367016367274704
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4365951060357773
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.4355184779112239
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void removeContactPoint(int)>": 0.4339569990545226
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void freeNode(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.42742307409523345
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void localize(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.position.transform.Round: long round(float)>": [
        {
            "<org.jbox2d.common.MathUtils: float fastAbs(float)>": 0.38328561415201834
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.SphereShape: void <init>(float,float)>": 0.2949695360358456
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeTag(float,float)>": 0.28513271672085894
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.CapsuleShape: void <init>(float,float,float)>": 0.25491765912997516
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.ConeShape: void <init>(float,float,float)>": 0.2507012371838754
        }
    ], 
    "<net.imglib2.util.Partition: int partitionSubList(int,int,byte[])>": [
        {
            "<Catalano.Imaging.Filters.ZhangSuenThinning: int thin(int,int[],Catalano.Imaging.FastBitmap)>": 0.41130542519011587
        }, 
        {
            "<Catalano.Imaging.Filters.ZhangSuenThinning: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.4020252507981457
        }, 
        {
            "<boofcv.io.image.ConvertBufferedImage: void orderBandsBufferedFromRGB(sun.awt.image.ByteInterleavedRaster,int)>": 0.3328942777327697
        }, 
        {
            "<Catalano.Imaging.Color: int Count(Catalano.Imaging.FastBitmap)>": 0.32142090175306576
        }, 
        {
            "<boofcv.alg.filter.misc.AverageDownSampleOps: int downSampleSize(int,int)>": 0.31173990305945715
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedIterableRandomAccessibleInterval: net.imglib2.converter.readwrite.WriteConvertedCursor localizingCursor()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05063696835418333
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04902903378454601
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04859335628264
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04807692307692309
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04759372565678686
        }
    ], 
    "<net.imglib2.view.SubsampleIntervalView: void min(net.imglib2.Positionable)>": [
        {
            "<org.jbox2d.dynamics.Filter: void <init>()>": 0.17620141607878056
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void clear()>": 0.1743643376331371
        }, 
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.17246789974140625
        }, 
        {
            "<Catalano.Imaging.Filters.Erosion: void <init>(int)>": 0.17144935235251066
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Erosion: void <init>(int)>": 0.17144935235251066
        }
    ], 
    "<net.imglib2.view.TransformRandomAccess: void setPosition(int,int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.5476298043702246
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5276467688577171
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.5276467688577171
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.5204993816176963
        }, 
        {
            "<org.jbox2d.common.BufferUtils: java.lang.Object[] reallocateBuffer(java.lang.Class,java.lang.Object[],int,int,int,boolean)>": 0.5149755099485496
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: void setBigInteger(java.math.BigInteger)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.25583814493742324
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.2259449810998025
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.22496586251109565
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.2185076413386286
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.21455154797260068
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F32: float unsafe_getF(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.segmentation.slic.SegmentSlic_F32: float getIntensity(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_zero(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_unsafe(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float convolveSparse(boofcv.struct.image.GrayF32,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess1D: void setPosition(net.imglib2.Localizable)>": [
        {
            "<Catalano.Math.Matrix: void Clear(int[])>": 0.1789722053337285
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: void <init>(int)>": 0.17647164468919743
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.1746667529218746
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int)>": 0.17078251276599332
        }, 
        {
            "<boofcv.alg.segmentation.fh04.impl.FhEdgeWeights8_PLU8: void <init>(int)>": 0.17078251276599332
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsBorder: java.lang.String toString()>": [
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.5080197820774149
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendPrefix(java.lang.String,java.lang.String)>": 0.4836345702584153
        }, 
        {
            "<org.jbox2d.common.Transform: java.lang.String toString()>": 0.48265451817954086
        }, 
        {
            "<org.jbox2d.serialization.UnsupportedObjectException: java.lang.String getLocalizedMessage()>": 0.4816929085523147
        }, 
        {
            "<org.jbox2d.common.Sweep: java.lang.String toString()>": 0.4565742610425534
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.RandomAccessibleInterval stack(net.imglib2.view.StackView$StackAccessMode,net.imglib2.RandomAccessibleInterval[])>": [
        {
            "<boofcv.gui.feature.FancyInterestPointRender: void reset()>": 0.17486616112383419
        }, 
        {
            "<org.dyn4j.dynamics.Island: void clear()>": 0.17296917224595193
        }, 
        {
            "<boofcv.abst.feature.tracker.DetectDescribeAssociate: void dropAllTracks()>": 0.17174081208098513
        }, 
        {
            "<boofcv.alg.tracker.combined.CombinedTrackerScalePoint: void dropAllTracks()>": 0.16240367565638608
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerKltPyramid: void dropAllTracks()>": 0.16134349672906978
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void min(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: void set(int)>": [
        {
            "<boofcv.struct.QueueCorner: void add(int,int)>": 0.3330616297605786
        }, 
        {
            "<boofcv.struct.image.GrayI16: void unsafe_set(int,int,int)>": 0.2753644357140094
        }, 
        {
            "<boofcv.struct.image.GrayI16: void set(int,int,int)>": 0.25994835944451034
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void boundImage(boofcv.struct.image.GrayS16,int,int)>": 0.25779068574293657
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void boundImage(boofcv.struct.image.GrayU16,int,int)>": 0.2547108001232964
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess: void move(long[])>": [
        {
            "<boofcv.alg.transform.wavelet.impl.ImplWaveletTransformInner: void horizontalInverse(boofcv.struct.wavelet.WlCoef_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.46427794495170127
        }, 
        {
            "<boofcv.alg.transform.wavelet.impl.ImplWaveletTransformInner: void verticalInverse(boofcv.struct.wavelet.WlCoef_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.46393063265560397
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve5(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.445854968350898
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve7(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.44408837084481245
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve3(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.44371483763663866
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: void move(long,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.31325484913065393
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.31097891796791843
        }
    ], 
    "<net.imglib2.img.cell.AbstractCells: void dimensions(long[])>": [
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.38166187337735
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.3360932364854249
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.32399332742693354
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.304729691515267
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS8,boofcv.struct.image.GrayS64)>": 0.29599130104844756
        }
    ], 
    "<net.imglib2.img.cell.CellImgFactory: net.imglib2.img.NativeImg createDoubleInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.20557172820160094
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.20557172820160094
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.19009418367404002
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.15968814578412494
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.15968814578412494
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NearestNeighborInterpolatorFactory: net.imglib2.RealRandomAccess create(java.lang.Object,net.imglib2.RealInterval)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.10968842336263093
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.09091241745773311
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.09091241745773311
        }, 
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.08623198506605181
        }, 
        {
            "<net.coobird.thumbnailator.resizers.ProgressiveBilinearResizer: void <init>(java.util.Map)>": 0.08623198506605181
        }
    ], 
    "<net.imglib2.img.list.ListRandomAccess: void set(java.lang.Object)>": [
        {
            "<boofcv.gui.SelectAlgorithmAndInputPanel: void access$100(boofcv.gui.SelectAlgorithmAndInputPanel,int,java.lang.String,java.lang.Object)>": 0.25201157660526974
        }, 
        {
            "<org.dyn4j.sandbox.events.BodyActionEvent: void <init>(java.lang.Object,int,java.lang.String,org.dyn4j.sandbox.SandboxBody)>": 0.2279866140386201
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Rendering: void <init>(java.lang.String,int,java.lang.Object)>": 0.22590970842636068
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Antialiasing: void <init>(java.lang.String,int,java.lang.Object)>": 0.22590970842636068
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Dithering: void <init>(java.lang.String,int,java.lang.Object)>": 0.22590970842636068
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsRandomValue: void <init>(net.imglib2.Interval,net.imglib2.type.numeric.RealType,java.util.Random,double,double)>": [
        {
            "<boofcv.alg.geo.pose.Relinearlize: void multiplyQuadratic2(double,double,double,double,double[])>": 0.38217269785946356
        }, 
        {
            "<boofcv.abst.tracker.Sfot_to_TrackObjectQuad: void setPoint(georegression.struct.point.Point2D_F64,double,double,double,double)>": 0.38161160752112405
        }, 
        {
            "<Catalano.Math.Tools: double Scale(double,double,double,double,double)>": 0.3570779403261367
        }, 
        {
            "<boofcv.alg.color.ColorYuv: void rgbToYuv(double,double,double,double[])>": 0.349975256335927
        }, 
        {
            "<Catalano.Math.Distances.Distance: double BrayCurtis(double,double,double,double)>": 0.3435001546154157
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void move(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.AbstractLocalizableInt: long getLongPosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.5206056907299677
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: int get(int)>": 0.5206056907299677
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.5206056907299677
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getLength(int)>": 0.5206056907299677
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5121868919216053
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: void <init>(int)>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_F32_U8: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.36435516239367616
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_S32_U8: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.36435516239367616
        }, 
        {
            "<boofcv.alg.distort.impl.ImplImageDistort_PL: void apply(boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase,int,int,int,int)>": 0.3405205911153061
        }, 
        {
            "<boofcv.struct.image.InterleavedS32: boofcv.struct.image.ImageBase _createNew(int,int)>": 0.31288687019811334
        }, 
        {
            "<boofcv.struct.image.InterleavedU8: boofcv.struct.image.ImageBase _createNew(int,int)>": 0.31288687019811334
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImg: java.lang.Object update(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.2360959278577467
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.1964519677494742
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.1964519677494742
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.16455522393493122
        }, 
        {
            "<boofcv.gui.image.SelectInputImageToolBar$2: void <init>(boofcv.gui.image.SelectInputImageToolBar,java.lang.Object)>": 0.16124818216304182
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void bck(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36016035441676975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.35455846459436624
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.35455846459436624
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: void <init>(net.imglib2.view.RandomAccessiblePair)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.03227486121839514
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03125
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.030972308989518485
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.030643146115341257
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03033516698106722
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImgFactory: net.imglib2.img.NativeImg create(long[],net.imglib2.type.NativeType)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18468978709403533
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18468978709403533
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.17073302537381008
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.13283668434178905
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.13283668434178905
        }
    ], 
    "<net.imglib2.view.composite.NumericComposite: net.imglib2.view.composite.NumericComposite createVariable()>": [
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.17325100696748919
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(boofcv.struct.image.GrayS64)>": 0.1691792403461894
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(boofcv.struct.image.GrayS64)>": 0.1691792403461894
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long min(boofcv.struct.image.GrayS64)>": 0.1691792403461894
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.16678204796064638
        }
    ], 
    "<net.imglib2.KDTree$DimComparator: int compare(net.imglib2.RealLocalizable,net.imglib2.RealLocalizable)>": [
        {
            "<net.smert.jreactphysics3d.mathematics.Vector2: int getMinAxis()>": 0.2876893061757331
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Vector2: int getMaxAxis()>": 0.2876893061757331
        }, 
        {
            "<com.flowpowered.react.math.Vector2: int getMaxAxis()>": 0.2876893061757331
        }, 
        {
            "<com.flowpowered.react.math.Vector2: int getMinAxis()>": 0.2876893061757331
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(org.jbox2d.particle.ParticleSystem$Proxy)>": 0.27948879961212203
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg doubles(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.RealPoint: void <init>(net.imglib2.RealLocalizable)>": [
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.24354129567949398
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.23941398324951169
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.23941398324951169
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply(boofcv.struct.image.GrayF64,double,boofcv.struct.image.GrayF64)>": 0.23562353183050327
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide(boofcv.struct.image.GrayF64,double,boofcv.struct.image.GrayF64)>": 0.23562353183050327
        }
    ], 
    "<net.imglib2.KDTreeNode: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_F64: float getF(int)>": 0.5869727736761196
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_F64: float getF(int)>": 0.5869727736761196
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F32: void setOutside(int,int,float)>": 0.49163800764408094
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_F64: void setOutside(int,int,double[])>": 0.49163800764408094
        }, 
        {
            "<boofcv.alg.weights.WeightPixelUniform_F32: float weight(int,int)>": 0.4868016044136483
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRandomAccessible: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.03849001794597505
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03726779962499649
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.03693663377103528
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.036544084137792886
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03617679758851913
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListCursor: net.imglib2.img.list.AbstractLongListImg$LongListCursor copy()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: double getMinValue()>": [
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.3239158125380203
        }, 
        {
            "<boofcv.abst.geo.fitting.DistanceFromModelResidual: double computeDistance(java.lang.Object)>": 0.31287079776504223
        }, 
        {
            "<boofcv.io.SimpleStringNumberReader: double getDouble()>": 0.3125
        }, 
        {
            "<Catalano.Statistics.Distributions.LaplaceDistribution: double Entropy()>": 0.3109020581105081
        }, 
        {
            "<Catalano.Math.Approximation: double Lowprecision_Pow(double,double)>": 0.3084858451322381
        }
    ], 
    "<net.imglib2.img.cell.CellCursor: void reset()>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.EndPoint: void setValues(int,boolean,long)>": 0.1652296527615508
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint: void setValues(int,boolean,long)>": 0.1652296527615508
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.16489328519867963
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void paintComponent(java.awt.Graphics)>": 0.1623201008706257
        }, 
        {
            "<org.dyn4j.dynamics.WorldTest: void listeners()>": 0.16059248605607612
        }
    ], 
    "<net.imglib2.view.iteration.SlicingCursor: void jumpFwd(long)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.21777659600227028
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue: boofcv.core.image.border.ImageBorder_S64 wrap(boofcv.struct.image.GrayS64,long)>": 0.20095083622033166
        }, 
        {
            "<Catalano.Math.Random: void <init>(long)>": 0.20061197896268804
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.200120241954261
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint: void access$400(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint,int,boolean,long)>": 0.18590017126819813
        }
    ], 
    "<net.imglib2.Point: void setPosition(long,int)>": [
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.40575276384648046
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: void set(int,float)>": 0.31743704270742773
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void setBand(int,int,int,long)>": 0.3139084167639316
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(long[],int,int,long[],int,int,int,int)>": 0.30357504550717707
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2933254752318818
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void subtract(java.lang.Iterable)>": [
        {
            "<boofcv.alg.sfm.d3.VisOdomPixelDepthPnP: int dropUnusedTracks()>": 0.22798850527386538
        }, 
        {
            "<boofcv.alg.sfm.d2.ImageMotionPointTrackerKey: void pruneUnusedTracks()>": 0.21477482469665596
        }, 
        {
            "<Catalano.Core.Concurrent.MulticoreExecutor: java.util.List run(java.util.Collection)>": 0.2087108305797553
        }, 
        {
            "<boofcv.alg.sfm.d2.ImageMotionPointTrackerKey: boolean process(boofcv.struct.image.ImageBase)>": 0.20345989766008615
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails: void checkForEmpty(java.lang.Iterable,java.lang.String)>": 0.2026661000781975
        }
    ], 
    "<net.imglib2.view.SlicingRandomAccess: void move(long,int)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.44298888073046505
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.4364963122242296
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.42406999071041357
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.42335511140415827
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.41862574556051585
        }
    ], 
    "<net.imglib2.transform.integer.permutation.SingleDimensionPermutationTransform: void applyInverse(long[],long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.3233086568453456
        }, 
        {
            "<boofcv.core.image.impl.ConvertInterleavedToSingle: void average(boofcv.struct.image.InterleavedS64,boofcv.struct.image.GrayS64)>": 0.3057208641061365
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.2975042678913357
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2878217250186183
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,boofcv.struct.image.GrayS64)>": 0.28468612263445975
        }
    ], 
    "<net.imglib2.view.composite.AbstractNumericComposite: void add(net.imglib2.view.composite.AbstractNumericComposite)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27369975151850634
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27369975151850634
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27369975151850634
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.2715165016949687
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.27085028831903113
        }
    ], 
    "<net.imglib2.iterator.OffsetableIntervalIterator: void <init>(int[],int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.376249835445469
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.37212013194273585
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.3307701856388421
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.3307701856388421
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.3166333608866119
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: boolean valueEquals(java.lang.Object)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: boolean equals(java.lang.Object)>": 0.3919481937724674
        }, 
        {
            "<Catalano.Core.Stopwatch: boolean isRunning()>": 0.34161481760674134
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isInlier(int)>": 0.33893767318207446
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isInlier(int)>": 0.33893767318207446
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldTrackerApp: void togglePause()>": 0.3282062247797737
        }
    ], 
    "<net.imglib2.type.logic.BitType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.1061907736783491
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.09923339599665497
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.0982996523411924
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.095314860705753
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.095314860705753
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: void dec()>": [
        {
            "<Catalano.Math.Geometry.Line: float DistanceToPoint(Catalano.Core.IntPoint)>": 0.2725360425127187
        }, 
        {
            "<boofcv.gui.feature.VisualizeOpticalFlow: void magnitudeAbs(boofcv.struct.flow.ImageFlow,float,java.awt.image.BufferedImage)>": 0.2701881642456757
        }, 
        {
            "<boofcv.alg.tracker.klt.KltTracker: boofcv.alg.tracker.klt.KltTrackFault track(boofcv.alg.tracker.klt.KltFeature)>": 0.2699478458133539
        }, 
        {
            "<boofcv.alg.interpolate.array.Interpolate1D_F32: float process(int,float)>": 0.26850751368310377
        }, 
        {
            "<boofcv.alg.tracker.klt.KltTracker: boolean internalSetDescriptionBorder(boofcv.alg.tracker.klt.KltFeature)>": 0.2675423496560587
        }
    ], 
    "<net.imglib2.type.logic.BoolType: java.math.BigInteger getBigInteger()>": [
        {
            "<Catalano.Math.RationalNumber: void <init>(java.math.BigInteger,java.math.BigInteger)>": 0.31227476009832994
        }, 
        {
            "<Catalano.Math.RationalNumber: void <init>(java.math.BigInteger)>": 0.3020833009469936
        }, 
        {
            "<Catalano.Math.RationalNumber: void Multiply(java.math.BigInteger,java.math.BigInteger)>": 0.2947146300300719
        }, 
        {
            "<Catalano.Math.RationalNumber: void <init>(int,int)>": 0.2902471913087226
        }, 
        {
            "<Catalano.Math.RationalNumber: void Multiply(java.math.BigInteger)>": 0.28926993870603435
        }
    ], 
    "<net.imglib2.RealPointSampleList$RealPointSampleListCursor: void <init>(net.imglib2.RealPointSampleList)>": [
        {
            "<boofcv.abst.feature.detect.interest.ConfigGeneralDetector: void <init>(int,boofcv.abst.feature.detect.extract.ConfigExtract)>": 0.11874364002680188
        }, 
        {
            "<boofcv.abst.feature.describe.ConfigSiftScaleSpace: void <init>()>": 0.11096256684491979
        }, 
        {
            "<boofcv.abst.feature.detect.interest.ConfigGeneralDetector: void <init>(int,int,float)>": 0.10534611643432709
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.10230031515147768
        }, 
        {
            "<org.jbox2d.callbacks.DebugDraw: void clearFlags(int)>": 0.10040083646533446
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: void <init>(net.imglib2.img.NativeImg)>": [
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int indexOfPreviousCounterClockwiseEdge(int)>": 0.24871059265158282
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int indexOfNextCounterClockwiseEdge(int)>": 0.24871059265158282
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.EdgeEPA: int indexOfPreviousCounterClockwiseEdge(int)>": 0.24342778087073172
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.EdgeEPA: int indexOfNextCounterClockwiseEdge(int)>": 0.24342778087073172
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Median$Run: int CalcLines(int)>": 0.24342778087073172
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: void add(net.imglib2.type.numeric.ARGBType)>": [
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(Catalano.Core.IntPoint,int,int,int,int)>": 0.4968357592415232
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getBlue(Catalano.Core.IntPoint)>": 0.4937155737581609
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getGreen(Catalano.Core.IntPoint)>": 0.48989095931473775
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getRed(Catalano.Core.IntPoint)>": 0.48989095931473775
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: boofcv.struct.image.ImageBase subimage(int,int,int,int,boofcv.struct.image.ImageBase)>": 0.48026633267533025
        }
    ], 
    "<net.imglib2.img.sparse.ByteNtree: void <init>(long[],long[],java.lang.Byte)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2668001056849969
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2668001056849969
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2467353604592215
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.1793225683953813
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.1793225683953813
        }
    ], 
    "<net.imglib2.type.logic.BitType: void setBigInteger(java.math.BigInteger)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.28042547372716614
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.24213186117504737
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.23220416436240227
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.2321540156062455
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.23208097039326223
        }
    ], 
    "<net.imglib2.img.cell.CellRandomAccess: void setPosition(long[])>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.3729435403345755
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.31549080414356034
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.3069345696004703
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.24331293460136877
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2407130527404202
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: void set(net.imglib2.type.numeric.integer.GenericByteType)>": [
        {
            "<org.jbox2d.particle.ParticleColor: void <init>(byte,byte,byte,byte)>": 0.18600453019912172
        }, 
        {
            "<org.jbox2d.collision.ContactID: void flip()>": 0.17760427106802423
        }, 
        {
            "<org.jbox2d.particle.ParticleColor: void set(org.jbox2d.particle.ParticleColor)>": 0.16903399946020545
        }, 
        {
            "<org.jbox2d.collision.ContactID: void set(org.jbox2d.collision.ContactID)>": 0.16903399946020545
        }, 
        {
            "<org.jbox2d.particle.ParticleColor: void set(byte,byte,byte,byte)>": 0.16862233505591
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: void set(long)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.29771537450173013
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.29771537450173013
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.29771537450173013
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.InterleavedS64,long,long,boofcv.struct.image.InterleavedS64)>": 0.28497908702911023
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.InterleavedS64,long,long,long,boofcv.struct.image.InterleavedS64)>": 0.28497908702911023
        }
    ], 
    "<net.imglib2.interpolation.neighborsearch.NearestNeighborSearchInterpolator: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.22414548140103577
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.21456987721830903
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.21456987721830903
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.20260323633769525
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.19905310101316329
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: void decIndex(int)>": [
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.6241711271514602
        }, 
        {
            "<boofcv.abst.fiducial.calib.CalibrationDetectorSquareFiducialGrid: int getPointIndex(int,int)>": 0.5747801203619927
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$9: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5631673913280111
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: int getIndex(int,int,int)>": 0.5573780954063181
        }, 
        {
            "<boofcv.struct.image.ImageBase: int getIndex(int,int)>": 0.5485724542486418
        }
    ], 
    "<net.imglib2.view.TransformBuilder$3: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04032389192727559
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03904344047215152
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.038696496074155144
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.03828524323948056
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03790045715961838
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedRandomAccessible: net.imglib2.converter.AbstractConvertedRandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.042447635997800895
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04109974682633932
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04073452985908362
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04030161751369757
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03989656585141091
        }
    ], 
    "<net.imglib2.AbstractRealLocalizable: double getDoublePosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.6444652635187575
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.PyramidDiscreteSampleBlur: double getSigma(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.NoCacheScaleSpace: double getScale(int)>": 0.6383928571428571
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: int compareTo(net.imglib2.type.numeric.integer.AbstractIntegerType)>": [
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.33303839254483486
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.3321895127820626
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: int getSerializedSize()>": 0.32826243499358454
        }, 
        {
            "<org.box2d.proto.Box2D$PbBody: int getSerializedSize()>": 0.32813413709879463
        }, 
        {
            "<Catalano.Imaging.Texture.LawsTextureEnergy: long getTextureEnergyMap(Catalano.Core.IntPoint,int,int)>": 0.32681409478085477
        }
    ], 
    "<net.imglib2.img.cell.AbstractCells: net.imglib2.RandomAccess randomAccess()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.024397501823713325
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolatorARGBFactory: net.imglib2.RealRandomAccess create(java.lang.Object,net.imglib2.RealInterval)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.10968842336263093
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.09091241745773311
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.09091241745773311
        }, 
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.08623198506605181
        }, 
        {
            "<net.coobird.thumbnailator.resizers.ProgressiveBilinearResizer: void <init>(java.util.Map)>": 0.08623198506605181
        }
    ], 
    "<net.imglib2.util.Util: java.lang.String printCoordinates(float[])>": [
        {
            "<boofcv.demonstrations.feature.disparity.VisualizeStereoDisparity: void main(java.lang.String[])>": 0.5749226309250428
        }, 
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareFiducial: void main(java.lang.String[])>": 0.5540984795836118
        }, 
        {
            "<com.flowpowered.react.math.Vector2: java.lang.String toString()>": 0.5354567651140751
        }, 
        {
            "<boofcv.demonstrations.denoise.DenoiseAccuracyStudyApp: void main(java.lang.String[])>": 0.5317027664268188
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.5211559422345466
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: net.imglib2.img.planar.PlanarRandomAccess randomAccess()>": [
        {
            "<boofcv.alg.filter.convolve.ConvolveNormalized: void convolve(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayU8,boofcv.struct.image.GrayI8)>": 0.18078310045414198
        }, 
        {
            "<boofcv.alg.filter.convolve.ConvolveNormalized: void convolve(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS16,boofcv.struct.image.GrayI16)>": 0.18078310045414198
        }, 
        {
            "<boofcv.alg.enhance.EnhanceImageOps: void equalizeLocal(boofcv.struct.image.GrayU16,int,boofcv.struct.image.GrayU16,int[],int[])>": 0.1749297442434004
        }, 
        {
            "<boofcv.alg.enhance.EnhanceImageOps: void equalizeLocal(boofcv.struct.image.GrayU8,int,boofcv.struct.image.GrayU8,int[],int[])>": 0.1749297442434004
        }, 
        {
            "<Catalano.Imaging.Filters.ReplaceColor: void ApplyInPlace(Catalano.Imaging.FastBitmap,int,int,int)>": 0.17292857267789635
        }
    ], 
    "<net.imglib2.converter.ComplexRealFloatConverter: void convert(net.imglib2.type.numeric.ComplexType,net.imglib2.type.numeric.real.FloatType)>": [
        {
            "<com.flowpowered.react.collision.shape.SphereShape: void getLocalBounds(com.flowpowered.react.math.Vector3,com.flowpowered.react.math.Vector3)>": 0.19435863798650005
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: void setAllValues(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)>": 0.19108644636634647
        }, 
        {
            "<org.jbox2d.callbacks.DebugDraw: void setCamera(float,float,float)>": 0.18994096893194629
        }, 
        {
            "<boofcv.factory.background.FactoryBackgroundModel: boofcv.alg.background.stationary.BackgroundStationaryGaussian stationaryGaussian(boofcv.factory.background.ConfigBackgroundGaussian,boofcv.struct.image.ImageType)>": 0.1897591722051496
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: void setAllValues(float,float,float,float,float,float,float,float,float)>": 0.1892278869165811
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: double getDoublePosition(int)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double Compactness(int,double)>": 0.3513250672498251
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double computeSigmaScale(int,int)>": 0.3429270131576994
        }, 
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.3340247715228994
        }, 
        {
            "<org.dyn4j.BalancedBinarySearchTreeTest: double getHeightLimit(int)>": 0.3227134968134888
        }, 
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double Circularity(int,int)>": 0.3176810185257094
        }
    ], 
    "<net.imglib2.AbstractCursorInt: void localize(double[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayF64)>": 0.4199711370798867
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: double[] getDoublePivot()>": 0.419859955327455
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS32,boofcv.struct.image.InterleavedF64)>": 0.3854336973927375
        }, 
        {
            "<Catalano.Core.ArraysUtil: double[] toDouble(int[])>": 0.3552621551811583
        }, 
        {
            "<boofcv.misc.BoofMiscOps: double[] convertTo_F64(int[])>": 0.3552621551811583
        }
    ], 
    "<net.imglib2.concatenate.ConcatenateUtils: void join(java.util.List)>": [
        {
            "<org.dyn4j.dynamics.World: boolean raycast(org.dyn4j.geometry.Ray,org.dyn4j.dynamics.Body,double,org.dyn4j.collision.Filter,boolean,org.dyn4j.dynamics.RaycastResult)>": 0.28410125069864817
        }, 
        {
            "<org.dyn4j.dynamics.World: void step()>": 0.2807897632799341
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean detect(org.dyn4j.geometry.Convex,org.dyn4j.geometry.Transform,org.dyn4j.dynamics.Body,org.dyn4j.collision.Filter,boolean,boolean,java.util.List)>": 0.28062161200116903
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean detect(org.dyn4j.geometry.AABB,org.dyn4j.dynamics.Body,org.dyn4j.collision.Filter,boolean,java.util.List)>": 0.28041654182441245
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean detect(org.dyn4j.geometry.Convex,org.dyn4j.dynamics.Body,org.dyn4j.collision.Filter,boolean,boolean,java.util.List)>": 0.28016908093757625
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: long getLongPosition(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.6188643624249502
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5517168169858438
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5382297579524616
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.5137724358016377
        }, 
        {
            "<org.jbox2d.collision.Distance$DistanceProxy: org.jbox2d.common.Vec2 getVertex(int)>": 0.5137724358016377
        }
    ], 
    "<net.imglib2.type.label.BasePairCharType: java.lang.String toString()>": [
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String getPatternName(int)>": 0.22139518619831938
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: java.lang.String toString()>": 0.18382195673634993
        }, 
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String selectDocumentName()>": 0.18308613838854043
        }, 
        {
            "<boofcv.misc.AutoTypeImage: java.lang.String getInterleavedName()>": 0.1830661080788579
        }, 
        {
            "<net.coobird.thumbnailator.geometry.RelativeSize: java.lang.String toString()>": 0.17743553668745965
        }
    ], 
    "<net.imglib2.img.planar.PlanarCursor2D: boolean hasNext()>": [
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.6023849455289535
        }, 
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.5934959054221014
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.5928412662400641
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.5928412662400641
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.5928412662400641
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,int,int,char[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5811787841893516
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5795957554113238
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.574959397921157
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5628405374594679
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5608701810597032
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: void <init>(net.imglib2.view.SubsampleView,net.imglib2.Interval)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.1368759817840875
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.13565650704271756
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.13565650704271756
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.12882815058200564
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.12539164467960007
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3233702015976873
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3233702015976873
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3233702015976873
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.2821462130832749
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.2806431722273853
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: void move(int,int)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.4954196921097764
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.4893810727715689
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.4893810727715689
        }
    ], 
    "<net.imglib2.img.array.AbstractArrayLocalizingCursor: void reset()>": [
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.28983769518112223
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int)>": 0.2699586769205906
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int,int)>": 0.2692404414520117
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparitySparseScoreSadRect_S16: void <init>(int,int,int,int)>": 0.2684301219316955
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparitySparseScoreSadRect_U8: void <init>(int,int,int,int)>": 0.2684301219316955
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg longs(long[],long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.14697955653624695
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1469235045171909
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1469235045171909
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.1393862804313983
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.13599468447585472
        }
    ], 
    "<net.imglib2.img.sparse.CharNtree: void setValue(int,char)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.38901104269312653
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3846723536618065
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.3832696151969503
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.37155075560642714
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.36358570700650333
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: void apply(int[],int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5058886059082546
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.48989197635820286
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.4864492046514891
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.4803832188839475
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.4770865933762403
        }
    ], 
    "<net.imglib2.img.cell.AbstractCell: int localPositionToIndex(long[])>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3233702015976873
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3233702015976873
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3233702015976873
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.PairManager: void shrinkMemory()>": 0.2905907769850133
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.PairManager: com.flowpowered.react.collision.broadphase.PairManager$BodyPair findPairWithHashValue(int,int,int)>": 0.29040642041294507
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform: net.imglib2.concatenate.PreConcatenable preConcatenate(java.lang.Object)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.36309668598492645
        }, 
        {
            "<org.jbox2d.particle.StackQueue: java.lang.Object pop()>": 0.3526291475025091
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: java.lang.Object getUserData(int)>": 0.3524375071712284
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.35065491762782064
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.35035781735611077
        }
    ], 
    "<net.imglib2.neighborsearch.RadiusNeighborSearchOnKDTree: double getDistance(int)>": [
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.43099388869235106
        }, 
        {
            "<Catalano.Statistics.DescriptiveStatistics: double StandartDeviation(double[])>": 0.41858614746160133
        }, 
        {
            "<Catalano.Statistics.Tools: double StandartDeviation(double[])>": 0.41858614746160133
        }, 
        {
            "<Catalano.Statistics.Tools: double StandartDeviation(double[],double)>": 0.4140309704922662
        }, 
        {
            "<Catalano.Statistics.DescriptiveStatistics: double StandartDeviation(double[],double)>": 0.4140309704922662
        }
    ], 
    "<net.imglib2.AbstractRealLocalizable: void localize(double[])>": [
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.41549793349128344
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumn(double[][],int)>": 0.3973144980183334
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRow(double[][],int)>": 0.39592283060630346
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int[])>": 0.39110786522669816
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRows(double[],int[])>": 0.39110786522669816
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,int,int,int[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5811787841893516
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5795957554113238
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.574959397921157
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5628405374594679
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5608701810597032
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: net.imglib2.type.numeric.integer.UnsignedLongType createVariable()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05923488777590923
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.057353933467640436
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.05684427997196944
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05624015883323094
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.055674916760380555
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: void updateContainer(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.3187477037083238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.22574829559349857
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.22057752193984925
        }
    ], 
    "<net.imglib2.display.awt.SignedByteDataBuffer: int getElem(int)>": [
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.47292275449365184
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: double getDouble(int,int)>": 0.4683321606348394
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.46203917021268975
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.454305053996756
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.454305053996756
        }
    ], 
    "<net.imglib2.view.iteration.IterableTransformBuilder$Slice: net.imglib2.Cursor cursor()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04879500364742665
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04724555912615341
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04682572978040922
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04632808229131882
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04586246160658393
        }
    ], 
    "<net.imglib2.converter.readwrite.ARGBChannelSamplerConverter$ARGBChannelConvertingAccess: void <init>(net.imglib2.converter.readwrite.ARGBChannelSamplerConverter,net.imglib2.Sampler,net.imglib2.converter.readwrite.ARGBChannelSamplerConverter$1)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.03984095364447979
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03857583749052298
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.03823304826514973
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.037826720791800154
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03744654309470488
        }
    ], 
    "<net.imglib2.view.iteration.SlicingCursor: void localize(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5893979327979786
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5833282853181612
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5703647788499532
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5678098459882039
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.5583900047785767
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsBorderFactory: net.imglib2.outofbounds.OutOfBoundsBorder create(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06454972243679027
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0625
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06194461797903697
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.061286292230682514
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06067033396213444
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: void localize(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.img.sparse.LongNtree: void setValue(int,long)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.4046883728874424
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.38901104269312653
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.3853810874166696
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3846723536618065
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.3832696151969503
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsPeriodicFactory: net.imglib2.outofbounds.OutOfBounds create(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.15166887845560387
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.1263514767671512
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.1263514767671512
        }, 
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.11959585451399861
        }, 
        {
            "<net.coobird.thumbnailator.resizers.ProgressiveBilinearResizer: void <init>(java.util.Map)>": 0.11959585451399861
        }
    ], 
    "<net.imglib2.type.numeric.real.DoubleType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.10842661409823065
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.10132274924351498
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.10036934567095813
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.09785730607238811
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.09785730607238811
        }
    ], 
    "<net.imglib2.iterator.ZeroMinIntervalIterator: long getLongPosition(int)>": [
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.30333111363801984
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.29663093132344726
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.28238613180940136
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.28238613180940136
        }, 
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: long getTrackId(int)>": 0.2666631079611189
        }
    ], 
    "<net.imglib2.util.Util: double median(double[])>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverse(double[],boolean)>": 0.4227253078465167
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve9(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.40642759322796496
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve11(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.4061444367309344
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve7(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.40482121838539453
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal9(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.4037397391679789
        }
    ], 
    "<net.imglib2.display.screenimage.awt.ARGBScreenImage: void <init>(int,int,net.imglib2.img.basictypeaccess.array.IntArray)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2642280847363682
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2642280847363682
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2642280847363682
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(int[],int,int,int[],int,int,int,int)>": 0.2605717835292639
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int[],int,int,int,int)>": 0.26022357917519723
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsBorder: void move(long,int)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.275204665997666
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2315201420116309
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.23047939372028572
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.23002174687951416
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.23002174687951416
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(java.util.ListIterator,java.util.ListIterator,int,int[],java.util.Comparator)>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: int selectRightToLeft(int,int[])>": 0.3783226337070809
        }, 
        {
            "<boofcv.alg.shapes.polyline.FitLinesToContour: boolean sanityCheckCornerOrder(int,org.ddogleg.struct.GrowQueue_I32)>": 0.37304878421309823
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.3705710721637082
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void process(int,java.lang.Object)>": 0.3661472437283225
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.3658396711411675
        }
    ], 
    "<net.imglib2.util.Util: int round(float)>": [
        {
            "<boofcv.struct.feature.CachedSineCosine_F32: int computeIndex(float)>": 0.4798121198584135
        }, 
        {
            "<org.jbox2d.common.Rot: org.jbox2d.common.Rot set(float)>": 0.4370029172028487
        }, 
        {
            "<Catalano.Imaging.Filters.Clahe: int roundPositive(float)>": 0.41386310253101855
        }, 
        {
            "<com.flowpowered.react.collision.shape.CylinderShape: void computeLocalInertiaTensor(com.flowpowered.react.math.Matrix3x3,float)>": 0.40975927324150935
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.CylinderShape: void computeLocalInertiaTensor(net.smert.jreactphysics3d.mathematics.Matrix3x3,float)>": 0.4085226519045919
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void realMax(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.display.ColorTable16: short[][] gray()>": [
        {
            "<Catalano.Math.Matrix: int Min(int[][])>": 0.2985245665206666
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[][])>": 0.2985245665206666
        }, 
        {
            "<Catalano.Math.Matrix: void Fill(int[][],int)>": 0.28041867716377517
        }, 
        {
            "<Catalano.Math.Matrix: void Divide(int[][],int)>": 0.2724965581201581
        }, 
        {
            "<Catalano.Math.Matrix: void Add(int[][],int)>": 0.2724965581201581
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgs: net.imglib2.img.planar.PlanarImg bytes(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,int,int,float[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5811787841893516
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5795957554113238
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.574959397921157
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5628405374594679
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5608701810597032
        }
    ], 
    "<net.imglib2.transform.integer.BoundingBox: void <init>(long[],long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.30591174878872385
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3058541525455209
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void shrinkArrays()>": 0.303852728948685
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3030617667847031
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: java.lang.Object getUserData(int)>": 0.30061598227008907
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsConstantValueFactory: net.imglib2.outofbounds.OutOfBounds create(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.11904372559233004
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.09901434684873375
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.09901434684873375
        }, 
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.09378146435278811
        }, 
        {
            "<net.coobird.thumbnailator.resizers.ProgressiveBilinearResizer: void <init>(java.util.Map)>": 0.09378146435278811
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform: net.imglib2.transform.integer.TranslationTransform preConcatenate(net.imglib2.transform.integer.Translation)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3868241811556471
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3732812764247153
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.37315138952965987
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.37252154410088334
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.3699465384336596
        }
    ], 
    "<net.imglib2.util.ImgUtil: void copy(net.imglib2.img.Img,long[],int,int[])>": [
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.43194937076981743
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.43194937076981743
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.4045285667184208
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(int[],int,int,int[],int,int,int,int)>": 0.39492240746903456
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(int[],int,int,int[],int,int,int,int)>": 0.3940970615945107
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: int positionToIndex(int[],int[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.5167217177919416
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.4884509615797082
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getIndex(int[])>": 0.4791098922909667
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int,int)>": 0.46045123639593727
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.4575636780202649
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void incIndex(int)>": [
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.6241711271514602
        }, 
        {
            "<boofcv.abst.fiducial.calib.CalibrationDetectorSquareFiducialGrid: int getPointIndex(int,int)>": 0.5747801203619927
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$9: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5631673913280111
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: int getIndex(int,int,int)>": 0.5573780954063181
        }, 
        {
            "<boofcv.struct.image.ImageBase: int getIndex(int,int)>": 0.5485724542486418
        }
    ], 
    "<net.imglib2.img.list.AbstractListImg: void <init>(long[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.37830429376810737
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_U8: void <init>(int)>": 0.37678302874938696
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_S32: void <init>(int)>": 0.37678302874938696
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_S16: void <init>(int)>": 0.37678302874938696
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_S32: void <init>(boofcv.struct.image.InterleavedS32)>": 0.3760211305403331
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolator: void <init>(net.imglib2.interpolation.randomaccess.NLinearInterpolator)>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void cdft2d_sub(int,double[][],boolean)>": 0.2301852034725942
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void complexInverse(double[],boolean)>": 0.2189347039077182
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void complexForward(double[])>": 0.2186109743059542
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void cdft2d_sub(int,double[],boolean)>": 0.2177573381967809
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void realForward(double[])>": 0.21242499717980937
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void getLowerBound(long,java.lang.Object)>": [
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<net.coobird.thumbnailator.resizers.ProgressiveBilinearResizer: void <init>(java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<net.coobird.thumbnailator.resizers.BicubicResizer: void <init>(java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<net.coobird.thumbnailator.resizers.BilinearResizer: void <init>(java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<boofcv.abst.geo.fitting.DistanceFromModelResidualN: void setModel(java.lang.Object)>": 0.21126595987653524
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsBorder: void setPosition(long,int)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2186751483545668
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.21190739692876498
        }, 
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: int getNumUnknownViews()>": 0.20955428550044014
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2057586664531721
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2057586664531721
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: net.imglib2.type.numeric.integer.LongType firstElement()>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.13908716006604668
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.12971863041569273
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.12971863041569273
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.1244838243607278
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.12215681871998943
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: net.imglib2.util.Fraction getEntitiesPerPixel()>": [
        {
            "<org.dyn4j.dynamics.WorldTest: void testNewDetectMethod()>": 0.07571036279605228
        }, 
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06900655593423542
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0668153104781061
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>()>": 0.0668153104781061
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06622158212347246
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: java.math.BigInteger getBigInteger()>": [
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void process(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.23481561908230697
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMaximum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.23328163856945855
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMinimum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.23328163856945855
        }, 
        {
            "<Catalano.Math.RationalNumber: void Multiply(int,int)>": 0.22374078832646838
        }, 
        {
            "<Catalano.Math.RationalNumber: void pow(int)>": 0.2225695983583853
        }
    ], 
    "<net.imglib2.transform.integer.permutation.SingleDimensionPermutationTransform: void apply(long[],long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.3233086568453456
        }, 
        {
            "<boofcv.core.image.impl.ConvertInterleavedToSingle: void average(boofcv.struct.image.InterleavedS64,boofcv.struct.image.GrayS64)>": 0.3057208641061365
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.2975042678913357
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2878217250186183
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,boofcv.struct.image.GrayS64)>": 0.28468612263445975
        }
    ], 
    "<net.imglib2.img.sparse.BooleanNtree: net.imglib2.img.sparse.BooleanNtree createInstance(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.12458962570367609
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.12458962570367609
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.11785109527680923
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11532909002102744
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.0989858659890338
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: void indexToPosition(int,int[],int[])>": [
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.4763432498590366
        }, 
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.4452183740841759
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.4452183740841759
        }, 
        {
            "<org.jbox2d.common.BufferUtils: void rotate(int[],int,int,int)>": 0.4335890438893841
        }, 
        {
            "<boofcv.alg.enhance.EnhanceImageOps: void equalize(int[],int[])>": 0.43341253528093504
        }
    ], 
    "<net.imglib2.view.TransformView: void <init>(net.imglib2.RandomAccessible,net.imglib2.transform.Transform)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.46475968780287497
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.456989798149864
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4533926374099148
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.44595680255008685
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4384925285548398
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: void move(int,int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.4009560796038202
        }, 
        {
            "<Catalano.Math.Tools: int Mod(int,int)>": 0.3933659693426574
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.39000348078695896
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.38888027789443036
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.38888027789443036
        }
    ], 
    "<net.imglib2.view.TransformBuilder: void simplifyTransforms()>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void renderBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.2778228432644134
        }, 
        {
            "<boofcv.factory.feature.detect.extract.FactoryFeatureExtractor: boofcv.abst.feature.detect.extract.NonMaxSuppression nonmax(boofcv.abst.feature.detect.extract.ConfigExtract)>": 0.2704587283010499
        }, 
        {
            "<boofcv.alg.feature.detect.interest.GeneralFeatureDetector: void <init>(boofcv.abst.feature.detect.intensity.GeneralFeatureIntensity,boofcv.abst.feature.detect.extract.NonMaxSuppression)>": 0.2627626064912497
        }, 
        {
            "<boofcv.app.CameraCalibration: void handleWebcam()>": 0.25997652619488454
        }, 
        {
            "<net.smert.jreactphysics3d.engine.DynamicsWorld: void computeIslands()>": 0.25981797448877963
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: net.imglib2.Cursor cursor()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.024397501823713325
        }
    ], 
    "<net.imglib2.RealPointSampleList: long size()>": [
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.24153791645299358
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.24016962278000953
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.24016962278000953
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(boofcv.struct.image.GrayS64)>": 0.23409362913607434
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(boofcv.struct.image.GrayS64)>": 0.23409362913607434
        }
    ], 
    "<net.imglib2.transform.InverseTransform: void applyInverse(long[],long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.24729034217626794
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.24729034217626794
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.22895986090025797
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.20773877534405594
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.19764098730509247
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: void setComplexNumber(double,double)>": [
        {
            "<org.dyn4j.geometry.Transform$1: void rotate(double,double,double)>": 0.4492442599278129
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerTwoPassCombined: void setHint(double,double,boofcv.abst.feature.tracker.PointTrack)>": 0.4387875057980553
        }, 
        {
            "<boofcv.abst.feature.describe.WrapDescribeBrief: boolean process(double,double,double,double,boofcv.struct.feature.TupleDesc_B)>": 0.4016831999920884
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerToTwoPass: void setHint(double,double,boofcv.abst.feature.tracker.PointTrack)>": 0.39044457941172084
        }, 
        {
            "<org.dyn4j.geometry.Transform$1: void setTranslation(double,double)>": 0.39044457941172084
        }
    ], 
    "<net.imglib2.converter.readwrite.RealDoubleSamplerConverter$RealConvertingDoubleAccess: double getValue(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: double getOutside(int,int)>": 0.4770169836811753
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.4340311357918001
        }, 
        {
            "<boofcv.abst.fiducial.CalibrationFiducialDetector: double getWidth(int)>": 0.4299613233586469
        }, 
        {
            "<boofcv.abst.fiducial.SquareBinary_to_FiducialDetector: double getWidth(int)>": 0.4299613233586469
        }, 
        {
            "<boofcv.abst.feature.detect.interest.GeneralToInterestPoint: double getRadius(int)>": 0.4299613233586469
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void increment(long)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.24792126681905285
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.24792126681905285
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.24521941746849626
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.18027032187139533
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(com.flowpowered.react.collision.shape.AABB)>": 0.18027032187139533
        }
    ], 
    "<net.imglib2.display.screenimage.awt.UnsignedIntAWTScreenImage: java.awt.image.DataBuffer createDataBuffer(java.lang.Object)>": [
        {
            "<boofcv.struct.image.InterleavedS32: void _setData(java.lang.Object)>": 0.1532590227806104
        }, 
        {
            "<boofcv.struct.image.GrayS32: void _setData(java.lang.Object)>": 0.1532590227806104
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.1345982968042152
        }, 
        {
            "<Catalano.Math.Dissimilarities.RogersTanimotoDissimilarity: double Compute(java.lang.Object,java.lang.Object)>": 0.13158359579729784
        }, 
        {
            "<Catalano.Math.Dissimilarities.SokalMichenerDissimilarity: double Compute(java.lang.Object,java.lang.Object)>": 0.13158359579729784
        }
    ], 
    "<net.imglib2.converter.Converters: net.imglib2.RandomAccessibleInterval convert(net.imglib2.RandomAccessibleInterval,net.imglib2.converter.Converter,net.imglib2.type.Type)>": [
        {
            "<boofcv.gui.DepthVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.14052767196315077
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.14052767196315077
        }, 
        {
            "<org.dyn4j.collision.narrowphase.PairwiseTypedFallbackCondition: boolean isMatch(java.lang.Class,java.lang.Class)>": 0.13990854174238493
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.1323301932270773
        }, 
        {
            "<boofcv.abst.feature.associate.EnforceUniqueByScore: void <init>(boofcv.abst.feature.associate.Associate,boolean,boolean)>": 0.13090996793955453
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: void setInverseTranslation(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.45759431744180307
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4456787663209611
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4442916297872168
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4408545126456387
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4382428301541623
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: void setComplexNumber(float,float)>": [
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_F32: float get_fast(float,float)>": 0.37786721160343767
        }, 
        {
            "<org.jbox2d.common.Mat33: void set(float,float,float,float,float,float,float,float,float)>": 0.36029375164456834
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>(int,float)>": 0.35579465766491625
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>(int,float)>": 0.35579465766491625
        }, 
        {
            "<Catalano.Imaging.Filters.HSLFiltering: void setFillColor(int,float,float)>": 0.35358571894067403
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void max(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: void inc()>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.24835261320161472
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.23841676862237873
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.22861720296895982
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.22253502979609519
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.22085483808094833
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned4BitType: long get()>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3221008751628851
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.30241285211772934
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2984858509226221
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2920882697993411
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.2695144457392018
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: void div(net.imglib2.type.numeric.real.FloatType)>": [
        {
            "<boofcv.gui.feature.VisualizeOpticalFlow: void magnitudeAbs(boofcv.struct.flow.ImageFlow,float,java.awt.image.BufferedImage)>": 0.309791041113351
        }, 
        {
            "<org.jbox2d.testbed.perf.MathPerf: void runSinLUTTest(float)>": 0.3070660559641686
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$JoinParticleGroupsCallback: void callback(int,int,int)>": 0.30605768330171645
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$CreateParticleGroupCallback: void callback(int,int,int)>": 0.30455710497624167
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void raycast(org.jbox2d.callbacks.ParticleRaycastCallback,org.jbox2d.common.Vec2,org.jbox2d.common.Vec2)>": 0.30433357265682204
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: void mul(float)>": [
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.23917353743900072
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.23853275235868443
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeTag(float,float)>": 0.23641126591983927
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.23510618824688492
        }, 
        {
            "<org.jbox2d.tests.math.SinCosTest: long speedTest(org.jbox2d.tests.math.SinCosTable,int,int)>": 0.23370249803831344
        }
    ], 
    "<net.imglib2.img.sparse.CharNtree: net.imglib2.img.sparse.CharNtree createInstance(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.12458962570367609
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.12458962570367609
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.11785109527680923
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11532909002102744
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.0989858659890338
        }
    ], 
    "<net.imglib2.img.planar.PlanarCursor2D: void localize(int[])>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve7(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.3517609794109011
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve5(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.35175605195454007
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve9(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.35083173729089306
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve11(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.3498431136921588
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.34866468693989006
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.LanczosInterpolator: net.imglib2.type.numeric.RealType get()>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal11(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5698977868638642
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve11(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5607585522759314
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal9(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5600859762535776
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve9(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5538005187200197
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal7(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5412474314376249
        }
    ], 
    "<net.imglib2.type.logic.BoolType: int compareTo(net.imglib2.type.numeric.integer.AbstractIntegerType)>": [
        {
            "<boofcv.abst.fiducial.CalibrationFiducialDetector: int totalFound()>": 0.3611053428245955
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(org.jbox2d.particle.ParticleSystem$Proxy)>": 0.250096332041624
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(java.lang.Object)>": 0.2436965970577186
        }, 
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.22908272093382842
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(org.jbox2d.collision.broadphase.Pair)>": 0.22874192332332477
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: void add(net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3072686627225503
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.28110449005613686
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2563707359043695
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.25482774013930604
        }, 
        {
            "<org.jbox2d.common.Timer: float getMilliseconds()>": 0.24996726247857678
        }
    ], 
    "<net.imglib2.util.ConstantUtils$1$ConstantRandomAccess: void <init>(net.imglib2.util.ConstantUtils$1)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.21943989681367793
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.21943989681367793
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.21943989681367793
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.2163123949343606
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.21255250817658958
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: void bck(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36016035441676975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.35455846459436624
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.35455846459436624
        }
    ], 
    "<net.imglib2.PointSampleList$PointSampleListCursor: void localize(int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.2540764877039817
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.21777659600227028
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: void <init>(net.imglib2.img.basictypeaccess.ByteAccess)>": [
        {
            "<Catalano.Imaging.Filters.HistogramShrink: void <init>()>": 0.13404738190002652
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: void <init>()>": 0.13404738190002652
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.SobelEdgeDetector: void <init>()>": 0.12437183348566663
        }, 
        {
            "<boofcv.gui.tracker.TrackerObjectQuadPanel: void enterSelectMode()>": 0.12437183348566663
        }, 
        {
            "<org.jbox2d.dynamics.Filter: void <init>()>": 0.12317689748992192
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: void localize(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5893979327979786
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5833282853181612
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5703647788499532
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5678098459882039
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.5583900047785767
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImgFactory: net.imglib2.img.sparse.NtreeImg createFloatInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.18526894788514375
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18185105632878742
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18185105632878742
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1791168235896834
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.17721812037236506
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: void <init>(int,int)>": [
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int,int)>": 0.3063256734566857
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparitySparseScoreSadRect_S16: void <init>(int,int,int,int)>": 0.30608298860796673
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparitySparseScoreSadRect_U8: void <init>(int,int,int,int)>": 0.30608298860796673
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.29248023588421435
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplSsdCorner_S16: void setImageShape(int,int)>": 0.2903947022169704
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.TransformView shear(net.imglib2.RandomAccessible,int,int)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.42579862127277157
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.42579862127277157
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.4257562311263859
        }, 
        {
            "<boofcv.factory.feature.disparity.FactoryStereoDisparityAlgs: boofcv.alg.feature.disparity.DisparitySparseScoreSadRect scoreDisparitySparseSadRect_F32(int,int,int,int)>": 0.41840010754717966
        }, 
        {
            "<boofcv.factory.feature.disparity.FactoryStereoDisparityAlgs: boofcv.alg.feature.disparity.DisparitySparseScoreSadRect scoreDisparitySparseSadRect_U8(int,int,int,int)>": 0.41840010754717966
        }
    ], 
    "<net.imglib2.view.composite.AbstractComposite: void <init>(net.imglib2.RandomAccess)>": [
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.3319405475729086
        }, 
        {
            "<Catalano.Statistics.Kernels.Polynomial: void setDegree(int)>": 0.31500851021349957
        }, 
        {
            "<Catalano.Statistics.Kernels.NormalizedPolynomial: void setDegree(int)>": 0.31500851021349957
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.FastVariance: void setRadius(int)>": 0.31500851021349957
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Minimum: void setRadius(int)>": 0.31500851021349957
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: void mul(net.imglib2.type.numeric.ARGBType)>": [
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(Catalano.Core.IntPoint,int,int,int,int)>": 0.4968357592415232
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getBlue(Catalano.Core.IntPoint)>": 0.4937155737581609
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getGreen(Catalano.Core.IntPoint)>": 0.48989095931473775
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getRed(Catalano.Core.IntPoint)>": 0.48989095931473775
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: boofcv.struct.image.ImageBase subimage(int,int,int,int,boofcv.struct.image.ImageBase)>": 0.48026633267533025
        }
    ], 
    "<net.imglib2.img.planar.PlanarPlaneSubsetLocalizingCursor: long offset(net.imglib2.Interval)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.2980358634463385
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.28983758944698845
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2890533874709051
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.27938127982017663
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.26147582308487954
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform: long getTranslation(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.640898077604318
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5680825892963839
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.5661064425770308
        }, 
        {
            "<org.jbox2d.collision.Distance$DistanceProxy: org.jbox2d.common.Vec2 getVertex(int)>": 0.5661064425770308
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: org.jbox2d.collision.AABB getFatAABB(int)>": 0.5661064425770308
        }
    ], 
    "<net.imglib2.converter.RealDoubleConverter: void convert(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.24305110926064444
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.201832294726364
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.201832294726364
        }, 
        {
            "<Catalano.Math.Distances.ChebyshevDistance: double Compute(java.lang.Object,java.lang.Object)>": 0.197232139822358
        }, 
        {
            "<Catalano.Math.Dissimilarities.RogersTanimotoDissimilarity: double Compute(java.lang.Object,java.lang.Object)>": 0.197232139822358
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsBorder: void move(long[])>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2781307969076244
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2658501859431446
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.24073080099245753
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.22892334824325347
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.22892334824325347
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void setPosition(net.imglib2.Localizable)>": [
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.43030934701493617
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3926317831077103
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.39130260749538603
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: int getMaxBalance()>": 0.38932806285507493
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve11(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.389093048458344
        }
    ], 
    "<net.imglib2.view.SlicingRandomAccess: void move(net.imglib2.Localizable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.40685943005057
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.40414951591347636
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.39483208879355125
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.389936211685903
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3841611419848475
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: void checkOutOfBounds()>": [
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: int getNumUnknownViews()>": 0.36879164106163287
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: int[] makeFateTable()>": 0.33384527625637067
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: double get(boofcv.struct.image.ImageInterleaved,int,int,int)>": 0.30225625822251256
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: void setB(boofcv.struct.image.ImageBase,int,int,int,double)>": 0.29969584447599995
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: void setM(boofcv.struct.image.ImageBase,int,int,double[])>": 0.2937107956694517
        }
    ], 
    "<net.imglib2.util.Util: double max(double[])>": [
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.6976300795773556
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: double sum(boofcv.struct.convolve.Kernel2D_F64)>": 0.5359840562621767
        }, 
        {
            "<Catalano.Statistics.Kernels.Linear: double Function(double[],double[])>": 0.523014974488497
        }, 
        {
            "<Catalano.Math.Distances.IntersectionDistance: double Compute(double[],double[])>": 0.5141024629758845
        }, 
        {
            "<Catalano.Statistics.Kernels.Hellinger: double Function(double[],double[])>": 0.4980958947750451
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.FinalRealInterval: void <init>(double[],double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.539120953810961
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.39751439889894963
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.39751439889894963
        }, 
        {
            "<boofcv.factory.transform.pyramid.FactoryPyramid: boofcv.struct.pyramid.PyramidFloat floatGaussian(double[],double[],java.lang.Class)>": 0.3804147298705951
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.376249835445469
        }
    ], 
    "<net.imglib2.iterator.OffsetableIntervalIterator: void <init>(long[],long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2714880268656277
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2714880268656277
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.25136798088455087
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2271525380463154
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2166580267769197
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: void move(int,int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.6191489345935914
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5570301585589491
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5291758291118177
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.5194647453026755
        }, 
        {
            "<org.jbox2d.collision.Distance$DistanceProxy: org.jbox2d.common.Vec2 getVertex(int)>": 0.5194647453026755
        }
    ], 
    "<net.imglib2.type.logic.BitType: int compareTo(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.46682521286027245
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.44649442101052905
        }, 
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.43104493873733585
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean overlap(int,int)>": 0.41215908397715584
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean isSubset(int,int)>": 0.41215908397715584
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: void move(long[])>": [
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.35926865023580207
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.34823685151774497
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.33385908687413374
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.32858607848672106
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.31969662002511956
        }
    ], 
    "<net.imglib2.img.cell.CellImgFactory: net.imglib2.img.cell.CellImg create(long[],net.imglib2.type.NativeType)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.139987229624723
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.139987229624723
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.12960910073940318
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.11200170379633057
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.10650160840378231
        }
    ], 
    "<net.imglib2.img.cell.CellImgFactory: net.imglib2.img.NativeImg createFloatInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.20557172820160094
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.20557172820160094
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.19009418367404002
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.15968814578412494
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.15968814578412494
        }
    ], 
    "<net.imglib2.view.composite.CompositeIntervalView: double realMin(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: double unsafe_getD(int,int)>": 0.3536520694668201
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.3287931553282879
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.31940660019314776
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(long[],int,int,double,long,long,long[],int,int,int,int)>": 0.3113131961881614
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply_A(long[],int,int,double,long,long,long[],int,int,int,int)>": 0.3113131961881614
        }
    ], 
    "<net.imglib2.display.AbstractLinearRange: void <init>(double,double)>": [
        {
            "<boofcv.alg.geo.pose.Relinearlize: void multiplyQuadratic2(double,double,double,double,double[])>": 0.4545613268803266
        }, 
        {
            "<boofcv.abst.tracker.Sfot_to_TrackObjectQuad: void setPoint(georegression.struct.point.Point2D_F64,double,double,double,double)>": 0.4533984931769351
        }, 
        {
            "<Catalano.Math.Tools: double Scale(double,double,double,double,double)>": 0.42383908574785867
        }, 
        {
            "<boofcv.alg.color.ColorYuv: void rgbToYuv(double,double,double,double[])>": 0.4138110300998871
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillCircleFromCenter(com.jogamp.opengl.GL2,double,double,double)>": 0.4108142171240663
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess: void fwd(int)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMax(int,int)>": 0.41139664939761134
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMin(int,int)>": 0.41139664939761134
        }, 
        {
            "<boofcv.struct.learning.ClassificationHistogram: void increment(int,int)>": 0.40990473364688557
        }, 
        {
            "<boofcv.struct.image.GrayS32: void unsafe_set(int,int,int)>": 0.38093861305496907
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void set(int,int,int)>": 0.37902036059532807
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: long valueCount()>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2822793550853616
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.251592923481539
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2425331504100877
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void setPaused(boolean)>": 0.23672008144939663
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.23306828352627873
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: void div(net.imglib2.type.numeric.integer.AbstractIntegerBitType)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2938780873461854
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2825107610076849
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2503660146807406
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.24466754041157818
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.24439866693571877
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: java.lang.String toString()>": [
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String getPatternName(int)>": 0.5301832493556564
        }, 
        {
            "<Catalano.Core.IntRange: java.lang.String toString()>": 0.4890014128208937
        }, 
        {
            "<Catalano.Core.IntPoint: java.lang.String toString()>": 0.4890014128208937
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: java.lang.String toString()>": 0.45828304242632806
        }, 
        {
            "<boofcv.app.BaseStandardInputApp: java.lang.String getCameraDeviceString()>": 0.4350657938931966
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: long upperTailCount()>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2555538298751302
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.2360686597967364
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void setPaused(boolean)>": 0.23377223141200382
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.22267233845221118
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.20106884260684568
        }
    ], 
    "<net.imglib2.img.AbstractImg: java.lang.String toString()>": [
        {
            "<org.jbox2d.serialization.UnsupportedObjectException: java.lang.String getLocalizedMessage()>": 0.5921456102840295
        }, 
        {
            "<boofcv.demonstrations.feature.disparity.VisualizeStereoDisparity: void main(java.lang.String[])>": 0.5844265079728623
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.5791729216263544
        }, 
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareFiducial: void main(java.lang.String[])>": 0.5588968369884625
        }, 
        {
            "<org.jbox2d.common.Transform: java.lang.String toString()>": 0.5510022633780505
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: void move(long,int)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.35849266182531014
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.3411350343933384
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.3204431562965548
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.315145621124415
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.30347745294322864
        }
    ], 
    "<net.imglib2.img.array.AbstractArrayCursor: void jumpFwd(long)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.20743110369112236
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.20269649934533532
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.19942900801881258
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$200(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.19582971585500344
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$100(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.19582971585500344
        }
    ], 
    "<net.imglib2.img.list.ListRandomAccess: void move(long[])>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal7(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.41593518960695286
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void horizontal7(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.41538733143055706
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal5(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.415090055784286
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.41496282866855605
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve5(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.4148463873795071
        }
    ], 
    "<net.imglib2.view.IterableRandomAccessibleInterval: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.02112885636821291
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.02112885636821291
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.02112885636821291
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.02112885636821291
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.02112885636821291
        }
    ], 
    "<net.imglib2.util.Util: float max(java.util.List)>": [
        {
            "<boofcv.alg.feature.detect.line.ImageLinePruneMerge: void pruneRelative(float)>": 0.46344192573029364
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerKltPyramid: void addToList(java.util.List,java.util.List)>": 0.4476386743355305
        }, 
        {
            "<boofcv.alg.filter.binary.BinaryImageOps: void clusterToBinary(java.util.List,boofcv.struct.image.GrayU8)>": 0.43511120707222467
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: java.awt.image.BufferedImage renderExternal(java.util.List,java.awt.Color,java.awt.image.BufferedImage)>": 0.4171280029699011
        }, 
        {
            "<boofcv.alg.feature.detect.edge.CannyEdge: void performThresholding(float,float,boofcv.struct.image.GrayU8)>": 0.4138449144281552
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: long indexToPositionWithOffset(long,long[],long[],long[],int)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.3349662219373462
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3233961058946687
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.32313968636200807
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.30838908333051973
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.3072205216288062
        }
    ], 
    "<net.imglib2.histogram.Real1dBinMapper: long map(net.imglib2.type.numeric.RealType)>": [
        {
            "<org.dyn4j.geometry.Vector3: boolean isZero()>": 0.3556621740832087
        }, 
        {
            "<org.dyn4j.geometry.Interval: double distance(org.dyn4j.geometry.Interval)>": 0.3528405437765605
        }, 
        {
            "<org.dyn4j.geometry.Vector2: boolean isZero()>": 0.34910798878869614
        }, 
        {
            "<boofcv.alg.distort.DistortImageOps: void updateBoundBox(boofcv.struct.distort.PixelTransform_F64,boofcv.struct.ImageRectangle_F64)>": 0.34634425041810757
        }, 
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 setMagnitude(double)>": 0.3452392912024429
        }
    ], 
    "<net.imglib2.histogram.Integer1dBinMapper: void getLowerBound(long,java.lang.Object)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.37239002832984297
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.35084168551403827
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.3388966036436249
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.33459515615448326
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3137588090294065
        }
    ], 
    "<net.imglib2.display.screenimage.awt.UnsignedIntAWTScreenImage: net.imglib2.display.awt.UnsignedIntDataBuffer createDataBuffer(net.imglib2.img.basictypeaccess.array.IntArray)>": [
        {
            "<Catalano.Imaging.Shapes.IntPolygon: void <init>(int[],int[])>": 0.15238593034671535
        }, 
        {
            "<Catalano.Imaging.Shapes.IntPolygon: void <init>(int[],int[],int)>": 0.14346556258926374
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int[])>": 0.1354325286710366
        }, 
        {
            "<Catalano.Math.Matrix: int[] getRows(int[],int[])>": 0.1354325286710366
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.13184275314267513
        }
    ], 
    "<net.imglib2.display.awt.SignedShortDataBuffer: void <init>(short[],int,int)>": [
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayF32)>": 0.33426189238381493
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayF32,int,int,boofcv.struct.image.GrayF32)>": 0.29700277189730784
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegion pixelRegion(int,int,java.lang.Class)>": 0.2940937061003129
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegionNCC pixelRegionNCC(int,int,java.lang.Class)>": 0.2940937061003129
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.GIntegralImageFeatureIntensity: void hessian(boofcv.struct.image.ImageGray,int,int,boofcv.struct.image.GrayF32)>": 0.2766470039866957
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.021677749238102995
        }
    ], 
    "<net.imglib2.type.logic.BoolType: void xor(boolean)>": [
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.43059763171516496
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.42608958284242704
        }, 
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.41672369967353645
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.41672369967353645
        }, 
        {
            "<boofcv.abst.feature.detect.extract.WrapperNonMaxCandidate: void <init>(boofcv.alg.feature.detect.extract.NonMaxCandidate,boolean,boolean)>": 0.37767244829427316
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgs: net.imglib2.img.planar.PlanarImg unsignedShorts(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.display.screenimage.awt.DoubleAWTScreenImage: java.awt.image.DataBufferDouble createDataBuffer(net.imglib2.img.basictypeaccess.array.DoubleArray)>": [
        {
            "<boofcv.alg.scene.HistogramScene: void <init>(int)>": 0.13325044772225653
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void <init>(int)>": 0.13325044772225653
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F64: void <init>(int)>": 0.13325044772225653
        }, 
        {
            "<boofcv.abst.geo.calibration.ImageResults: void <init>(int)>": 0.13325044772225653
        }, 
        {
            "<boofcv.struct.pyramid.PyramidFloat: void <init>(java.lang.Class,double[])>": 0.1325779544235058
        }
    ], 
    "<net.imglib2.Point: void setPosition(net.imglib2.Localizable)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.15211182259029543
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.15211182259029543
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.14107119965671933
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.13623731522826651
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.13623731522826651
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void move(float[])>": [
        {
            "<boofcv.struct.feature.TupleDesc_F32: void set(float[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: void <init>(int,float[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void <init>(float[],int,int)>": 0.2540764877039817
        }, 
        {
            "<boofcv.alg.interpolate.array.PolynomialNeville_F32: void <init>(int,float[],float[],int)>": 0.25147436847440663
        }, 
        {
            "<Catalano.Imaging.Filters.ImagePyramids: void <init>()>": 0.22423504135338396
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void setPosition(float[])>": [
        {
            "<boofcv.struct.feature.TupleDesc_F32: void set(float[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: void <init>(int,float[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void <init>(float[],int,int)>": 0.2540764877039817
        }, 
        {
            "<boofcv.alg.interpolate.array.PolynomialNeville_F32: void <init>(int,float[],float[],int)>": 0.25147436847440663
        }, 
        {
            "<Catalano.Imaging.Filters.ImagePyramids: void <init>()>": 0.22423504135338396
        }
    ], 
    "<net.imglib2.iterator.IntervalIterator: void localize(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.23079624778807156
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2165868455583067
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2165868455583067
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.21471933902187387
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.18809820346676676
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: int get()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void process(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.3406953603631273
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMaximum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.3403654119479009
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: int compareTo(net.imglib2.type.numeric.integer.GenericIntType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(Catalano.Imaging.Corners.FeaturePoint)>": 0.41472748505614637
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.41256982089943584
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(boofcv.alg.geo.calibration.CalibrationObservation$Point,boofcv.alg.geo.calibration.CalibrationObservation$Point)>": 0.3782063983850695
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3725026119536298
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3725026119536298
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: double getMaxValue()>": [
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.3239158125380203
        }, 
        {
            "<boofcv.abst.geo.fitting.DistanceFromModelResidual: double computeDistance(java.lang.Object)>": 0.31287079776504223
        }, 
        {
            "<boofcv.io.SimpleStringNumberReader: double getDouble()>": 0.3125
        }, 
        {
            "<Catalano.Statistics.Distributions.LaplaceDistribution: double Entropy()>": 0.3109020581105081
        }, 
        {
            "<Catalano.Math.Approximation: double Lowprecision_Pow(double,double)>": 0.3084858451322381
        }
    ], 
    "<net.imglib2.type.numeric.integer.LongType: net.imglib2.type.numeric.integer.LongType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void modifyCounts(java.util.List,net.imglib2.histogram.HistogramNd$Counter)>": [
        {
            "<boofcv.alg.geo.calibration.CalibrationPlanarGridZhang99: int totalPoints(java.util.List)>": 0.3475710553126654
        }, 
        {
            "<boofcv.alg.feature.detect.line.ImageLinePruneMerge: void pruneNBest(int)>": 0.3405859822704242
        }, 
        {
            "<boofcv.demonstrations.calibration.CommonDetectCalibrationApp: boolean isInGrids(georegression.struct.shapes.Polygon2D_F64)>": 0.33849543186542097
        }, 
        {
            "<boofcv.io.SimpleStringNumberReader: boolean next()>": 0.3374046779871683
        }, 
        {
            "<org.dyn4j.dynamics.World: java.util.List getListeners(java.lang.Class)>": 0.3371885999895431
        }
    ], 
    "<net.imglib2.util.Intervals: long[] minAsLongArray(net.imglib2.Interval)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.27794369028632787
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2674783269152191
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.23856877404808868
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2322352143515134
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.23156838761183193
        }
    ], 
    "<net.imglib2.AbstractCursorInt: double getDoublePosition(int)>": [
        {
            "<boofcv.alg.sfm.DepthSparse3D$I: double lookupDepth(int,int)>": 0.4827121526332953
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_S32: double unsafe_getD(int,int)>": 0.4827121526332953
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_U8: double unsafe_getD(int,int)>": 0.4827121526332953
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_I32: double unsafe_getD(int,int)>": 0.4827121526332953
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_U16: double unsafe_getD(int,int)>": 0.4827121526332953
        }
    ], 
    "<net.imglib2.RealPointSampleList$RealPointSampleListCursor: void localize(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void <init>(net.imglib2.img.array.ArrayImg)>": [
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: void unbufferMove(int)>": 0.22344199396793107
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: void destroyProxy(int)>": 0.22181008364767055
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.21877248742175145
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparityScoreSadRect_U8: void _process(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayU8,boofcv.struct.image.ImageGray)>": 0.2174830474045457
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparityScoreSadRect_S16: void _process(boofcv.struct.image.GrayS16,boofcv.struct.image.GrayS16,boofcv.struct.image.ImageGray)>": 0.2174830474045457
        }
    ], 
    "<net.imglib2.img.cell.CellImgFactory: net.imglib2.img.cell.CellImg createFloatInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.19270150385571458
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.19270150385571458
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.17820800197681597
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.14336948875748118
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.14336948875748118
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: void setPosition(long,int)>": [
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.40575276384648046
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: void set(int,float)>": 0.31743704270742773
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void setBand(int,int,int,long)>": 0.3139084167639316
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(long[],int,int,long[],int,int,int,int)>": 0.30357504550717707
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2933254752318818
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: double getMaxValue()>": [
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double Mean()>": 0.5087551332017118
        }, 
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double Entropy()>": 0.4951167150522183
        }, 
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double DistributionFunction(double)>": 0.45738161159959156
        }, 
        {
            "<Catalano.Statistics.Distributions.RayleighDistribution: double DistributionFunction(double)>": 0.4388734705755452
        }, 
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double Variance()>": 0.4030099989601111
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: void setPosition(long,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.31325484913065393
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.31097891796791843
        }
    ], 
    "<net.imglib2.display.projector.composite.CompositeXYProjector: void setComposite(boolean)>": [
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: void setViewKnown(int,boolean)>": 0.3667691897857698
        }, 
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: boolean isViewKnown(int)>": 0.23919159901581258
        }, 
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void setSelectRectangle(boolean)>": 0.1966882834627384
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void setSelectRectangle(boolean)>": 0.1966882834627384
        }, 
        {
            "<Catalano.Imaging.Texture.GrayLevelCooccurrenceMatrix: void <init>(int,Catalano.Imaging.Texture.GrayLevelCooccurrenceMatrix$Degree,boolean,boolean)>": 0.1950925396350841
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess1D: void setPosition(long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.2546741622694021
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.24407300246239094
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.24211723131030266
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.23521514342197844
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS32)>": 0.2251846234657119
        }
    ], 
    "<net.imglib2.img.list.ListRandomAccess: void setPosition(long[])>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void vertical11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3839445938262455
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void vertical9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.38393038516112366
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void vertical7(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.38330244378162337
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal7(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3827017405627682
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal5(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3826501453217966
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform: void applyInverse(long[],long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5504460460138464
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5347826009207023
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5346234411658888
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5226917271381455
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateMetrics(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.519028476331614
        }
    ], 
    "<net.imglib2.converter.readwrite.RealDoubleSamplerConverter: net.imglib2.type.numeric.real.DoubleType convert(net.imglib2.Sampler)>": [
        {
            "<boofcv.core.image.FactoryGImageGray: boofcv.core.image.GImageGray create(java.lang.Class)>": 0.14771521280891667
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void startWorkerThread()>": 0.11959585451399861
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void startWorkerThread()>": 0.11959585451399861
        }, 
        {
            "<boofcv.gui.DepthVideoAppBase: void startWorkerThread()>": 0.11959585451399861
        }, 
        {
            "<org.dyn4j.samples.LinkTerrain: void <init>()>": 0.10436321432853865
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: void localize(float[])>": [
        {
            "<boofcv.struct.feature.TupleDesc_F32: void set(float[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: void <init>(int,float[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void <init>(float[],int,int)>": 0.2540764877039817
        }, 
        {
            "<boofcv.alg.interpolate.array.PolynomialNeville_F32: void <init>(int,float[],float[],int)>": 0.25147436847440663
        }, 
        {
            "<Catalano.Imaging.Filters.ImagePyramids: void <init>()>": 0.22423504135338396
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: void <init>(net.imglib2.RandomAccess,net.imglib2.transform.integer.Mixed)>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.37438296832695184
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.356809419677994
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.PairManager: void shrinkMemory()>": 0.3518699474181712
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.349769397792662
        }, 
        {
            "<org.jbox2d.particle.StackQueue: java.lang.Object pop()>": 0.3478091991549235
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F32: float unsafe_getF(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.segmentation.slic.SegmentSlic_F32: float getIntensity(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_zero(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_unsafe(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float convolveSparse(boofcv.struct.image.GrayF32,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.img.array.ArrayImgFactory: net.imglib2.img.NativeImg createByteInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1686333664237103
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1686333664237103
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1559201193509509
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.15386142866645397
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.15386142866645397
        }
    ], 
    "<net.imglib2.display.projector.sampler.IntervalSampler: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.IntervalView invertAxis(net.imglib2.RandomAccessibleInterval,int)>": [
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.2673019077368061
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.26649111430681804
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.26201881216515155
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.26201881216515155
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.26201881216515155
        }
    ], 
    "<net.imglib2.display.awt.SignedShortDataBuffer: void <init>(int)>": [
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayF32)>": 0.24535855046559168
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegion pixelRegion(int,int,java.lang.Class)>": 0.222858843308686
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegionNCC pixelRegionNCC(int,int,java.lang.Class)>": 0.222858843308686
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayF32,int,int,boofcv.struct.image.GrayF32)>": 0.21786941605297158
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.GIntegralImageFeatureIntensity: void hessian(boofcv.struct.image.ImageGray,int,int,boofcv.struct.image.GrayF32)>": 0.2097865979195684
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: long frequency(long)>": [
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.2633464527175483
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.25784111451363395
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2567872647070055
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(org.jbox2d.particle.ParticleSystem$Proxy)>": 0.2518149514909368
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(java.lang.Object)>": 0.22972392779941037
        }
    ], 
    "<net.imglib2.img.array.ArrayImg: net.imglib2.img.array.ArrayImg copy()>": [
        {
            "<org.dyn4j.dynamics.WorldTest: void getUserData()>": 0.1259435564428259
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void getUserData()>": 0.1259435564428259
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.12478676046034072
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void addDecomposablePolygonAction()>": 0.12416102683238589
        }, 
        {
            "<org.dyn4j.collision.FixtureTest: void setUserData()>": 0.12189286000525414
        }
    ], 
    "<net.imglib2.display.AbstractArrayColorTable: int lookupARGB(double,double,double)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.43785667311150545
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.43785667311150545
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.43785667311150545
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: int getSerializedSize()>": 0.4310517070240338
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.4286216863813656
        }
    ], 
    "<net.imglib2.type.numeric.integer.ByteType: net.imglib2.type.numeric.integer.ByteType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: void localize(float[])>": [
        {
            "<Catalano.Imaging.Filters.HistogramStretch: float[] getMaxRGB(Catalano.Imaging.FastBitmap)>": 0.27997055274824156
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: float[] getMinRGB(Catalano.Imaging.FastBitmap)>": 0.2791894721945109
        }, 
        {
            "<Catalano.Math.Matrix: float[] CreateMatrix1D(int,float)>": 0.27911487134623586
        }, 
        {
            "<org.jbox2d.common.BufferUtils: void rotate(float[],int,int,int)>": 0.2789956324828439
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void computeDepthForGroup(org.jbox2d.particle.ParticleGroup)>": 0.277072874873686
        }
    ], 
    "<net.imglib2.RealPointSampleList$RealPointSampleListCursor: void localize(float[])>": [
        {
            "<boofcv.struct.feature.TupleDesc_F32: void set(float[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: void <init>(int,float[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void <init>(float[],int,int)>": 0.2540764877039817
        }, 
        {
            "<boofcv.alg.interpolate.array.PolynomialNeville_F32: void <init>(int,float[],float[],int)>": 0.25147436847440663
        }, 
        {
            "<Catalano.Imaging.Filters.ImagePyramids: void <init>()>": 0.22423504135338396
        }
    ], 
    "<net.imglib2.display.projector.specialized.ArrayImgXYShortProjector: void <init>(net.imglib2.img.array.ArrayImg,net.imglib2.img.array.ArrayImg,double,double)>": [
        {
            "<org.dyn4j.geometry.Vector2: boolean isOrthogonal(double,double)>": 0.28577421992028634
        }, 
        {
            "<org.dyn4j.sandbox.panels.UnitCirclePolygonPanel: boolean isValidInput()>": 0.2751000448505956
        }, 
        {
            "<org.dyn4j.geometry.Vector3: boolean isOrthogonal(double,double,double)>": 0.2734450414335164
        }, 
        {
            "<org.dyn4j.geometry.Interval: boolean isDegenerate(double)>": 0.26768780719894664
        }, 
        {
            "<boofcv.alg.shapes.edge.PolygonEdgeIntensity: boolean checkIntensity(boolean,double)>": 0.2676577006167146
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: void setPosition(int[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void getOutside(int,int,int[])>": 0.36929428407737236
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparityScoreSadRect_U8: void _process(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayU8,boofcv.struct.image.ImageGray)>": 0.35373145828189295
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparityScoreSadRect_S16: void _process(boofcv.struct.image.GrayS16,boofcv.struct.image.GrayS16,boofcv.struct.image.ImageGray)>": 0.35373145828189295
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: void bufferMove(int)>": 0.35134422579421276
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparityScoreSadRect_U8: void _process(boofcv.struct.image.ImageGray,boofcv.struct.image.ImageGray,boofcv.struct.image.ImageGray)>": 0.34983506081383875
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: long divide(long,long)>": [
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.3421840850693061
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3135433556192181
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.2973151931865032
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.29569907955068847
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.28015816804942906
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void dimensions(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.interpolation.neighborsearch.NearestNeighborSearchInterpolatorFactory: net.imglib2.interpolation.neighborsearch.NearestNeighborSearchInterpolator create(net.imglib2.neighborsearch.NearestNeighborSearch,net.imglib2.RealInterval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.03615507630310936
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03500700210070024
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.03469592594750754
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.03432718977381811
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03398218413540201
        }
    ], 
    "<net.imglib2.util.Util: long median(long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.3082040612422244
        }, 
        {
            "<boofcv.struct.image.GrayS64: long unsafe_get(int,int)>": 0.302728939978166
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.29801371601897564
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.28951026807797287
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.InterleavedS64,java.util.Random,long,long)>": 0.28846206943617686
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: long getLongPosition(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.48804399304921464
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.4331151716020548
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.43141870021812784
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.42694738219694767
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.40611062477757986
        }
    ], 
    "<net.imglib2.RealPoint: void setPosition(float[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF64)>": 0.43403432413324206
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_F64: void setF(int,float[])>": 0.4107151195895668
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedF32,boofcv.struct.image.InterleavedF64)>": 0.3949959276042379
        }, 
        {
            "<Catalano.Core.ArraysUtil: double[] toDouble(float[])>": 0.36598586029636637
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.3530837074107076
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: java.math.BigInteger get()>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.23239573705988423
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.21263645695014693
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.2126105741635425
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.21224095593526562
        }, 
        {
            "<org.dyn4j.geometry.Vector2: int hashCode()>": 0.21152527637725776
        }
    ], 
    "<net.imglib2.KDTree: net.imglib2.KDTree$SamplerNode makeSamplerNode(java.util.List,int,int,int)>": [
        {
            "<org.dyn4j.collision.narrowphase.ExpandingSimplex: void <init>(java.util.List)>": 0.2739476041032256
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.27240798248657694
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$2: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.27240798248657694
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$5: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.27113986787932565
        }, 
        {
            "<org.jbox2d.common.BufferUtils: void rotate(java.lang.Object[],int,int,int)>": 0.2693025735178276
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: void max(net.imglib2.Positionable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: void <init>(net.imglib2.img.NativeImg,int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36016035441676975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.35455846459436624
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.35455846459436624
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: int getIntPosition(int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.5078285150911725
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.5078285150911725
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.5078285150911725
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.SquaresIntoRegularClusters: int add(int,int)>": 0.46401913722402865
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.46236799717354615
        }
    ], 
    "<net.imglib2.Point: boolean equals(java.lang.Object)>": [
        {
            "<org.dyn4j.collision.manifold.IndexedManifoldPointId: boolean equals(java.lang.Object)>": 0.3747635345657242
        }, 
        {
            "<org.dyn4j.collision.narrowphase.AbstractFallbackCondition: boolean equals(java.lang.Object)>": 0.37291187903069817
        }, 
        {
            "<org.dyn4j.dynamics.Capacity: boolean equals(java.lang.Object)>": 0.3531464752717663
        }, 
        {
            "<com.flowpowered.react.Utilities$IntPair: boolean equals(java.lang.Object)>": 0.33865148276454177
        }, 
        {
            "<boofcv.examples.sfm.ExampleMultiviewSceneReconstruction: boofcv.examples.sfm.ExampleMultiviewSceneReconstruction$Feature3D lookupFeature(java.util.List,int,georegression.struct.point.Point2D_F64)>": 0.3364824743527101
        }
    ], 
    "<net.imglib2.transform.integer.permutation.PermutationTransform: void apply(int[],int[])>": [
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int[])>": 0.4973239358557454
        }, 
        {
            "<Catalano.Math.Matrix: int[] getRows(int[],int[])>": 0.4973239358557454
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: int getMaxBalance()>": 0.4236631627589766
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getIndex(int[])>": 0.4148730150561807
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.41334481242229726
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: void add(net.imglib2.type.numeric.integer.GenericIntType)>": [
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(Catalano.Core.IntPoint,int,int,int,int)>": 0.36427286377853174
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.3612222498762714
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getBlue(Catalano.Core.IntPoint)>": 0.35704550172706123
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getGreen(Catalano.Core.IntPoint)>": 0.3550260770030453
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getRed(Catalano.Core.IntPoint)>": 0.3550260770030453
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: void createAllocationSteps(int[],int[])>": [
        {
            "<Catalano.Math.Tools: int Sum(int[])>": 0.5193441013499882
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int sumCoefficients(int[])>": 0.5193441013499882
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.5127888562888087
        }, 
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.4912787682444494
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.4912787682444494
        }
    ], 
    "<net.imglib2.KDTree$KDTreeCursor: net.imglib2.KDTree$KDTreeCursor copy()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NearestNeighborInterpolator: void <init>(net.imglib2.interpolation.randomaccess.NearestNeighborInterpolator)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05270462766947299
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.05103103630798288
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.050577568786757836
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05004004806408974
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04953712024382607
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned2BitType: net.imglib2.type.numeric.integer.Unsigned2BitType createVariable()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05923488777590923
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.057353933467640436
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.05684427997196944
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05624015883323094
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.055674916760380555
        }
    ], 
    "<net.imglib2.RealPoint: void setPosition(double,int)>": [
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void setD(int,double)>": 0.5758928571428571
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMinimum(int,double)>": 0.5758928571428571
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMaximum(int,double)>": 0.5758928571428571
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setRange(int,double,double)>": 0.4845514268887624
        }, 
        {
            "<boofcv.struct.image.GrayF64: void unsafe_set(int,int,double)>": 0.40575276384648046
        }
    ], 
    "<net.imglib2.AbstractCursor: void jumpFwd(long)>": [
        {
            "<org.jbox2d.testbed.tests.ConveyorBelt: void processFixture(org.jbox2d.dynamics.Fixture,java.lang.Long)>": 0.32395378672635117
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.27155777860217123
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.25881247462951407
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.24975770593987426
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2467720467617631
        }
    ], 
    "<net.imglib2.img.AbstractImg: java.lang.Object firstElement()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.AbstractInterval: void <init>(net.imglib2.Dimensions)>": [
        {
            "<boofcv.struct.image.InterleavedS64: void set(int,int,long[])>": 0.2840169148159395
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2822994522564644
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2790503089136725
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2790503089136725
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2766853461369043
        }
    ], 
    "<net.imglib2.transform.integer.ComponentMappingTransform: net.imglib2.concatenate.Concatenable concatenate(java.lang.Object)>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.445755842742395
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.43529378685922904
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4346877627121908
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.42150661642361764
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.420028449282077
        }
    ], 
    "<net.imglib2.converter.ARGBARGBDoubleConverter: void convert(net.imglib2.type.numeric.ARGBType,net.imglib2.type.numeric.AbstractARGBDoubleType)>": [
        {
            "<Catalano.Imaging.Filters.Grayscale: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.3591434546666705
        }, 
        {
            "<Catalano.Imaging.Filters.Grayscale: void Apply(Catalano.Imaging.FastBitmap,Catalano.Imaging.Filters.Grayscale$Algorithm)>": 0.3573809068674337
        }, 
        {
            "<Catalano.Imaging.Filters.ResizeBicubic: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.3228214210233741
        }, 
        {
            "<Catalano.Imaging.Filters.FastVariance: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.30735143370804696
        }, 
        {
            "<Catalano.Imaging.Filters.ResizeBilinear: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.3069211391690546
        }
    ], 
    "<net.imglib2.PointSampleList$PointSampleListCursor: void jumpFwd(long)>": [
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.22431961880260584
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.21790474091864476
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.InterleavedS64,java.util.Random,long,long)>": 0.21334098282809072
        }, 
        {
            "<Catalano.Math.Geometry.GrahamConvexHull: java.util.ArrayList FindFull(java.util.ArrayList)>": 0.2100349525344004
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: long getTrackId(int)>": 0.20758300389531617
        }
    ], 
    "<net.imglib2.display.awt.UnsignedIntDataBuffer: float getElemFloat(int)>": [
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.4306574419217863
        }, 
        {
            "<Catalano.Imaging.Filters.Add: void <init>(int,int,int)>": 0.4289196145731164
        }, 
        {
            "<Catalano.Imaging.Filters.Subtract: void <init>(int,int,int)>": 0.4289196145731164
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: double getDouble(int,int)>": 0.41001699582754597
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.40735496501595575
        }
    ], 
    "<net.imglib2.KDTreeNode: float squDistanceTo(float[])>": [
        {
            "<Catalano.Statistics.Correlations: double Tanimoto(double[],double[])>": 0.4586143699352232
        }, 
        {
            "<Catalano.Math.Distances.Distance: double SymmetricChiSquareDivergence(double[],double[])>": 0.44791036791735545
        }, 
        {
            "<Catalano.Statistics.Kernels.NormalizedPolynomial: double Function(double[],double[])>": 0.4423256526680028
        }, 
        {
            "<Catalano.Statistics.Kernels.Spline: double Function(double[],double[])>": 0.4397853672999962
        }, 
        {
            "<Catalano.Statistics.Kernels.ChiSquare: double Function(double[],double[])>": 0.4369766992666841
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: void incIndex(int)>": [
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int checkInverseLower(boofcv.struct.wavelet.WlCoef,int,boofcv.core.image.border.BorderIndex1D,int)>": 0.441481505897173
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int checkInverseUpper(boofcv.struct.wavelet.WlCoef,int,boofcv.core.image.border.BorderIndex1D,int)>": 0.44032425248151813
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: boofcv.struct.image.ImageInterleaved subimage(int,int,int,int,boofcv.struct.image.ImageInterleaved)>": 0.4344891428398681
        }, 
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: int block_unsafe(boofcv.struct.image.GrayS32,int,int,int,int)>": 0.43080961357866054
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void selectBlockSize(int,int)>": 0.42726466582222905
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void add(net.imglib2.type.numeric.complex.ComplexFloatType)>": [
        {
            "<boofcv.gui.feature.VisualizeOpticalFlow: void magnitudeAbs(boofcv.struct.flow.ImageFlow,float,java.awt.image.BufferedImage)>": 0.32878592173218757
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$JoinParticleGroupsCallback: void callback(int,int,int)>": 0.32442510258396856
        }, 
        {
            "<org.jbox2d.testbed.perf.MathPerf: void runSinLUTTest(float)>": 0.3238183909344913
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$CreateParticleGroupCallback: void callback(int,int,int)>": 0.3228005823153547
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void raycast(org.jbox2d.callbacks.ParticleRaycastCallback,org.jbox2d.common.Vec2,org.jbox2d.common.Vec2)>": 0.3224221661073682
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: void move(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.12302323557756745
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.12302323557756745
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11392195087018471
        }, 
        {
            "<boofcv.core.image.border.ImageBorder_IL_S64: void set(int,int,long[])>": 0.10699463790927403
        }, 
        {
            "<boofcv.core.image.border.ImageBorder_IL_S64: void get(int,int,long[])>": 0.10699463790927403
        }
    ], 
    "<net.imglib2.type.numeric.AbstractARGBDoubleType: void mul(net.imglib2.type.numeric.AbstractARGBDoubleType)>": [
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void <init>(Catalano.Imaging.FastBitmap,Catalano.Core.DoublePoint,Catalano.Core.DoublePoint,Catalano.Core.DoublePoint)>": 0.4092852551544683
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void <init>(Catalano.Imaging.FastBitmap,double,double,double,double,double,double)>": 0.4090866806055765
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void <init>(Catalano.Imaging.FastBitmap,Catalano.Core.IntPoint,Catalano.Core.IntPoint,Catalano.Core.IntPoint)>": 0.40846718856297415
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void setNodes(Catalano.Imaging.ActiveContour.Ovuscule.OvusculeSnake2DNode[])>": 0.40643093135163977
        }, 
        {
            "<Catalano.Math.ComplexNumber: void Pow(double)>": 0.4046486092999563
        }
    ], 
    "<net.imglib2.img.cell.AbstractCells: long dimension(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.6444652635187575
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.5168876727488003
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.5115679070521639
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4966616068166122
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.4924576911988799
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: void localize(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.transform.InverseTransform: void apply(net.imglib2.Localizable,net.imglib2.Positionable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06666666666666665
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.06454972243679029
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06397612635199752
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.06329621044272916
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06266005147845038
        }
    ], 
    "<net.imglib2.display.projector.composite.CompositeXYProjector: boolean isComposite()>": [
        {
            "<Catalano.Math.Matrix: boolean isZero(int[])>": 0.4742411757776223
        }, 
        {
            "<Catalano.Math.Matrix: boolean isZero(float[])>": 0.4298765316020722
        }, 
        {
            "<Catalano.Math.Matrix: boolean isZero(double[])>": 0.4298765316020722
        }, 
        {
            "<Catalano.Math.Decompositions.QRDecomposition: boolean isFullRank()>": 0.420855395410265
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: boolean isNonsingular()>": 0.4085430777647874
        }
    ], 
    "<net.imglib2.view.IntervalView: net.imglib2.Cursor cursor()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.013363062095621218
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.013363062095621218
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.013363062095621218
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.013363062095621218
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.013363062095621218
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned12BitType: void <init>(long)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3476286615051204
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.3224464205204673
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3069151109540169
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.30155436569587
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2874057903729341
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: int compareTo(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3208770324203471
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3208770324203471
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3208770324203471
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$200(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.30231370138082325
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$100(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.30231370138082325
        }
    ], 
    "<net.imglib2.type.label.BasePairCharType: net.imglib2.type.label.BasePairCharType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: int compareTo(net.imglib2.type.numeric.integer.GenericLongType)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.22714136108586563
        }, 
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(Catalano.Imaging.Corners.FeaturePoint)>": 0.22589092966020874
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.22541884880947152
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.2244761310291613
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.21914560101481576
        }
    ], 
    "<net.imglib2.img.array.ArraySubIntervalCursor: void <init>(net.imglib2.img.array.ArrayImg,int,int)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.4954196921097764
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.4893810727715689
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.4893810727715689
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform: net.imglib2.concatenate.Concatenable concatenate(java.lang.Object)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.39000482904400824
        }, 
        {
            "<org.jbox2d.particle.StackQueue: java.lang.Object pop()>": 0.3805010746032209
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: java.lang.Object getUserData(int)>": 0.3795995652673173
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3776960105408377
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3771431805684604
        }
    ], 
    "<net.imglib2.view.IntervalView: java.lang.Object iterationOrder()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.1758429310762016
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.16907195642463727
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.16907195642463727
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.15495922682123855
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.io.Reader)>": 0.15495922682123855
        }
    ], 
    "<net.imglib2.AbstractLocalizableInt: void <init>(int[])>": [
        {
            "<Catalano.Imaging.Shapes.IntPolygon: void <init>(int[],int[],int)>": 0.29423795268075237
        }, 
        {
            "<Catalano.Imaging.Shapes.IntPolygon: void <init>(int[],int[])>": 0.2884782157273639
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int[])>": 0.276433075924424
        }, 
        {
            "<Catalano.Math.Matrix: int[] getRows(int[],int[])>": 0.276433075924424
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_U8: void <init>(int)>": 0.26605840726304103
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: long getLongPosition(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.40072094977552786
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.40072094977552786
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36614230440449047
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3401785297614231
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3199451900288743
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: int getInteger()>": [
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.2807193119834436
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.2783114003432696
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.2754133235235092
        }, 
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: void convolveBorder(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,boofcv.struct.image.GrayS64,int,int)>": 0.2748842830558804
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.27437201688044976
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: void inc()>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3217796318978022
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2948785774867601
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2615631929136559
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.25572262212543967
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2535010245943369
        }
    ], 
    "<net.imglib2.img.planar.PlanarPlaneSubsetLocalizingCursor: void jumpFwd(long)>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void process(int,java.lang.Object)>": 0.35641923371015727
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void process(int,int[])>": 0.35607441813087526
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.3489328411931648
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS32)>": 0.3486502645720676
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS32)>": 0.3486502645720676
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: void setPosition(net.imglib2.Localizable)>": [
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.2562113210592185
        }, 
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.2528411340007528
        }, 
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(Catalano.Imaging.Corners.FeaturePoint)>": 0.24650307764515172
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.24647835947121888
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: int getMinGray(Catalano.Imaging.FastBitmap)>": 0.2436756390493638
        }
    ], 
    "<net.imglib2.position.transform.AbstractPositionableTransform: java.lang.String toString()>": [
        {
            "<Catalano.Math.Special: double Polevl(double,double[],int)>": 0.24343804246785214
        }, 
        {
            "<Catalano.Statistics.Tools: double Max(double[])>": 0.22947974461772377
        }, 
        {
            "<Catalano.Statistics.Tools: double Min(double[])>": 0.22947974461772377
        }, 
        {
            "<Catalano.Math.Special: double P1evl(double,double[],int)>": 0.22233506467249764
        }, 
        {
            "<Catalano.Math.Decompositions.EigenvalueDecomposition: double[][] getD()>": 0.18413843267969895
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.LanczosInterpolator: double lookUpLanczos(double)>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal11(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5990409852028155
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve11(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5915919278709216
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal9(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5846346208839188
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve9(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5816716830006583
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve7(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5637230964617401
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: void indexToPosition(int,int[],float[])>": [
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.4254276570042418
        }, 
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.41280988100649285
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.41280988100649285
        }, 
        {
            "<org.jbox2d.common.BufferUtils: void rotate(float[],int,int,int)>": 0.4123413619099133
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve11(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.4003457694873894
        }
    ], 
    "<net.imglib2.neighborsearch.KNearestNeighborSearchOnIterableRealInterval: double squareDistance(net.imglib2.RealLocalizable)>": [
        {
            "<Catalano.Math.Distances.Distance: double SquaredEuclidean(double[],double[])>": 0.4818412844354817
        }, 
        {
            "<Catalano.Math.Distances.IntersectionDistance: double Compute(double[],double[])>": 0.4694462755075436
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Manhattan(double[],double[])>": 0.4691741567271662
        }, 
        {
            "<Catalano.Statistics.Kernels.Hellinger: double Function(double[],double[])>": 0.45898942695192596
        }, 
        {
            "<Catalano.Statistics.Kernels.HistogramIntersection: double Function(double[],double[])>": 0.43559807438753567
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: void set(net.imglib2.type.numeric.integer.GenericShortType)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.15715607654628283
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.15715607654628283
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.15715607654628283
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.15522024902029835
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.15229025866965912
        }
    ], 
    "<net.imglib2.type.label.BasePairCharType: boolean valueEquals(java.lang.Object)>": [
        {
            "<boofcv.demonstrations.tracker.VisualizeTldTrackerApp: void togglePause()>": 0.13923274452153397
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeCirculantTrackerApp: void togglePause()>": 0.13923274452153397
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.13815475399177435
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.13815475399177435
        }, 
        {
            "<boofcv.io.javacv.JavaCVVideoImageSequence: boolean hasNext()>": 0.13815475399177435
        }
    ], 
    "<net.imglib2.display.awt.UnsignedIntDataBuffer: int getElem(int,int)>": [
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.5731740416860015
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5496264391974737
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5426181336920435
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$2: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5426181336920435
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5416995529034251
        }
    ], 
    "<net.imglib2.img.array.ArrayImg: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.042447635997800895
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04109974682633932
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04073452985908362
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04030161751369757
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03989656585141091
        }
    ], 
    "<net.imglib2.img.planar.PlanarLocalizingCursor1D: void fwd()>": [
        {
            "<org.dyn4j.sandbox.ContactCounter: void sensed(org.dyn4j.dynamics.contact.ContactPoint)>": 0.3755119868588148
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.EPAAlgorithm: void addFaceCandidate(net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA,java.util.Queue,int[],float)>": 0.27982282191581026
        }, 
        {
            "<Catalano.Math.Matrix: int[] SubMatrix(int[],int)>": 0.2742958095801854
        }, 
        {
            "<org.dyn4j.sandbox.ContactCounter: void end(org.dyn4j.dynamics.contact.ContactPoint)>": 0.27076758930340716
        }, 
        {
            "<Catalano.Imaging.Filters.EnsembleThreshold: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.26605689943914873
        }
    ], 
    "<net.imglib2.AbstractWrappedInterval: void max(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.174312949091992
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.174312949091992
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16141770450978618
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.15179865302147907
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.13349163706577288
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void copy(double[][],double[][])>": [
        {
            "<Catalano.Math.Matrix: double[][] SubMatrix(double[][],int,int)>": 0.4449927111080973
        }, 
        {
            "<Catalano.Math.Matrix: double[][] CreateMatrix2D(int,int,double)>": 0.4036067328839865
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4000036639444827
        }, 
        {
            "<Catalano.Math.Decompositions.SingularValueDecomposition: double[][] getS()>": 0.3960386143966325
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3924214460611616
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: void localize(float[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5282528971256722
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5212330770750911
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.5110284331856345
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5065179940649942
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5057620661146874
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.MixedTransformView rotate(net.imglib2.RandomAccessible,int,int)>": [
        {
            "<Sort10: void swapKeys(int[],int,int)>": 0.3459161652523077
        }, 
        {
            "<Sort09: void swapKeys(int[],int,int)>": 0.3459161652523077
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMax(int,int)>": 0.3339949040299969
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMin(int,int)>": 0.3339949040299969
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.31848845237928813
        }
    ], 
    "<net.imglib2.AbstractWrappedRealInterval: void realMin(net.imglib2.RealPositionable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.type.numeric.real.DoubleType: net.imglib2.type.numeric.real.DoubleType createVariable()>": [
        {
            "<org.dyn4j.geometry.EllipseTest: void createZeroWidth()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.geometry.RectangleTest: void createInvalidHeight()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.geometry.HalfEllipseTest: void createZeroHeight()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.geometry.IntervalTest: void create()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.collision.AxisAlignedBoundsTest: void createInvalidBounds2()>": 0.09306821918192615
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: boolean isInMiddle(int,java.lang.Object)>": [
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isInlier(int)>": 0.2959018276804609
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isInlier(int)>": 0.2959018276804609
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: long getTrackId(int)>": 0.2771971606817768
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: long getTrackId(int)>": 0.2771971606817768
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: void downHeap(int,java.lang.Comparable)>": 0.27677923362276663
        }
    ], 
    "<net.imglib2.img.planar.PlanarPlaneSubsetLocalizingCursor: void <init>(net.imglib2.img.planar.PlanarPlaneSubsetLocalizingCursor)>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: void fill(boofcv.struct.convolve.Kernel2D_I32,int)>": 0.35063066145805105
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.344754250091933
        }, 
        {
            "<boofcv.alg.filter.binary.LinearContourLabelChang2004: void process(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayS32)>": 0.34273584346986663
        }, 
        {
            "<boofcv.alg.segmentation.ImageSegmentationOps: void regionPixelId_to_Compact(boofcv.struct.image.GrayS32,org.ddogleg.struct.GrowQueue_I32,boofcv.struct.image.GrayS32)>": 0.3420431523122917
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.PairManager: boolean removePair(int,int)>": 0.3416911066696074
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListRandomAccess: net.imglib2.img.list.AbstractLongListImg$LongListRandomAccess copy()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform: void applyInverse(int[],int[])>": [
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5959081176624421
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5914750255444985
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5908695571924593
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5753730831954832
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.568901118584658
        }
    ], 
    "<net.imglib2.display.ColorTable16: int getNative(int,int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.7162457553715462
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.7078148283174162
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.6870596426814346
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.6695751060538352
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.6647815546319923
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorSingleBoundary: void setPosition(long,int)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2181701368485381
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.2158169380390904
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.21219730932044512
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.2061553909092332
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void setPaused(boolean)>": 0.20124924175011671
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void add(java.lang.Iterable)>": [
        {
            "<boofcv.alg.sfm.d3.VisOdomPixelDepthPnP: int dropUnusedTracks()>": 0.22798850527386538
        }, 
        {
            "<boofcv.alg.sfm.d2.ImageMotionPointTrackerKey: void pruneUnusedTracks()>": 0.21477482469665596
        }, 
        {
            "<Catalano.Core.Concurrent.MulticoreExecutor: java.util.List run(java.util.Collection)>": 0.2087108305797553
        }, 
        {
            "<boofcv.alg.sfm.d2.ImageMotionPointTrackerKey: boolean process(boofcv.struct.image.ImageBase)>": 0.20345989766008615
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails: void checkForEmpty(java.lang.Iterable,java.lang.String)>": 0.2026661000781975
        }
    ], 
    "<net.imglib2.type.logic.BoolType: void setInteger(int)>": [
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: boolean isWithin(int,int,int,int,int)>": 0.5938500351968541
        }, 
        {
            "<boofcv.gui.feature.AssociationPanel: boolean isValidPoint(int)>": 0.5125743885244162
        }, 
        {
            "<boofcv.struct.image.ImageBase: boolean isInBounds(int,int)>": 0.509679194174872
        }, 
        {
            "<boofcv.struct.flow.ImageFlow: boolean isInBounds(int,int)>": 0.509679194174872
        }, 
        {
            "<boofcv.struct.feature.MatrixOfList: boolean isInBounds(int,int)>": 0.509679194174872
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: java.lang.String toString(double[],java.lang.String)>": [
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.6199562582218938
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendPrefix(java.lang.String,java.lang.String)>": 0.5590493042261699
        }, 
        {
            "<boofcv.demonstrations.feature.disparity.VisualizeStereoDisparity: void main(java.lang.String[])>": 0.5560370265721923
        }, 
        {
            "<Catalano.Statistics.Regression.PolynomialRegression: java.lang.String toString()>": 0.5416879895789453
        }, 
        {
            "<org.jbox2d.common.Transform: java.lang.String toString()>": 0.5367444060127244
        }
    ], 
    "<net.imglib2.view.composite.AbstractNumericComposite: boolean valueEquals(net.imglib2.view.composite.AbstractNumericComposite)>": [
        {
            "<boofcv.alg.filter.binary.BinaryImageOps: void clusterToBinary(java.util.List,boofcv.struct.image.GrayU8)>": 0.3291554107478291
        }, 
        {
            "<Catalano.Core.Concurrent.MulticoreExecutor: java.util.List run(java.util.Collection)>": 0.3263905205589049
        }, 
        {
            "<org.box2d.proto.Box2D$PbVec2$Builder: boolean isInitialized()>": 0.32539703886495774
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: java.awt.image.BufferedImage renderContours(java.util.List,int[],int,int,int,java.awt.image.BufferedImage)>": 0.3240761669854057
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: java.awt.image.BufferedImage renderContours(java.util.List,int,int,int,int,java.awt.image.BufferedImage)>": 0.32152570789313706
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: int indexToPositionWithOffset(int,int[],int[],int[],int)>": [
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(int[],int,int,int[],int,int,int,int)>": 0.5576287203442254
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(int[],int,int,int[],int,int,int,int)>": 0.5575845486951293
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(int[],int,int,int[],int,int,int,int)>": 0.5481813275348285
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int[],int,int,int,int)>": 0.5445453745642602
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int[],int,int,int,int)>": 0.5445453745642602
        }
    ], 
    "<net.imglib2.PointSampleList$PointSampleListCursor: void <init>(net.imglib2.PointSampleList)>": [
        {
            "<boofcv.abst.feature.detect.interest.ConfigGeneralDetector: void <init>(int,boofcv.abst.feature.detect.extract.ConfigExtract)>": 0.11874364002680188
        }, 
        {
            "<boofcv.abst.feature.describe.ConfigSiftScaleSpace: void <init>()>": 0.11096256684491979
        }, 
        {
            "<boofcv.abst.feature.detect.interest.ConfigGeneralDetector: void <init>(int,int,float)>": 0.10534611643432709
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.10230031515147768
        }, 
        {
            "<org.jbox2d.callbacks.DebugDraw: void clearFlags(int)>": 0.10040083646533446
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: boolean includesUpperBound(long)>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void setPaused(boolean)>": 0.26412123551590977
        }, 
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: boolean process(boofcv.struct.image.ImageBase)>": 0.24661491994777693
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: boolean isEmpty()>": 0.24257833769207987
        }, 
        {
            "<Catalano.Math.SparseArray: boolean isEmpty()>": 0.24257833769207987
        }, 
        {
            "<Catalano.Math.Geometry.Line: boolean isVertical()>": 0.24257833769207987
        }
    ], 
    "<net.imglib2.view.SlicingRandomAccess: void move(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.3755252779961463
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.36243484168899454
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3578654852510062
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.35023032977545593
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.34866074862376656
        }
    ], 
    "<net.imglib2.RealPointSampleList: void <init>(int)>": [
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void <init>(int)>": 0.32039692922997054
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void <init>(boofcv.struct.image.InterleavedF64)>": 0.3088904237763792
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int)>": 0.3059451124703976
        }, 
        {
            "<Catalano.Imaging.Tools.SpatialPyramidHistogram: double[] Compute(Catalano.Imaging.FastBitmap,Catalano.Imaging.Tools.IAggregateVectors)>": 0.3048288299644833
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.StereoDisparityWtoNaiveFive: void <init>(int,int,int,int)>": 0.3001727507773107
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedRandomAccessible: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04032389192727559
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03904344047215152
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.038696496074155144
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.03828524323948056
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03790045715961838
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess1D: void setPosition(int[])>": [
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int[])>": 0.3691878713960917
        }, 
        {
            "<Catalano.Math.Matrix: int[] getRows(int[],int[])>": 0.3691878713960917
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.3343403158741595
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int,int)>": 0.31291257121772276
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.3008101537559021
        }
    ], 
    "<net.imglib2.view.composite.AbstractComposite: java.lang.Object get(long)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.2465079117225205
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.2465079117225205
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.2465079117225205
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.InterleavedS64,long,long,boofcv.struct.image.InterleavedS64)>": 0.23691070642815165
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.InterleavedS64,long,long,long,boofcv.struct.image.InterleavedS64)>": 0.23691070642815165
        }
    ], 
    "<net.imglib2.KDTree: boolean verifyDimensions(java.util.List,int)>": [
        {
            "<boofcv.alg.filter.binary.BinaryImageOps: void clusterToBinary(java.util.List,boofcv.struct.image.GrayU8)>": 0.5048553366611023
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: java.awt.image.BufferedImage renderContours(java.util.List,int,int,int,int,java.awt.image.BufferedImage)>": 0.49833763463021313
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: java.awt.image.BufferedImage renderExternal(java.util.List,java.awt.Color,java.awt.image.BufferedImage)>": 0.4959523811223632
        }, 
        {
            "<Catalano.Math.SparseArray: double get(int)>": 0.48517649247054045
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: java.awt.image.BufferedImage renderContours(java.util.List,int[],int,int,int,java.awt.image.BufferedImage)>": 0.4703031944618438
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: void add(net.imglib2.type.numeric.integer.AbstractIntegerBitType)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2938780873461854
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2825107610076849
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2503660146807406
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.24466754041157818
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.24439866693571877
        }
    ], 
    "<net.imglib2.RealPoint: void move(long,int)>": [
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void setD(int,double)>": 0.39552995652691647
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMinimum(int,double)>": 0.39552995652691647
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMaximum(int,double)>": 0.39552995652691647
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxc020(double[],int)>": 0.3574230062346262
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxb020(double[],int)>": 0.3574230062346262
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: void <init>(int)>": [
        {
            "<boofcv.alg.background.BackgroundModel: void setUnknownValue(int)>": 0.3677288817612613
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setGray(int,int)>": 0.28985849046419526
        }, 
        {
            "<boofcv.struct.image.GrayI8: void unsafe_set(int,int,int)>": 0.2753644357140094
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_F32_U8: void setDisparity(int,int)>": 0.25973446975291703
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_S32_U8: void setDisparity(int,int)>": 0.25973446975291703
        }
    ], 
    "<net.imglib2.display.awt.SignedByteDataBuffer: byte[] getData(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4966616068166122
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.4893146606557609
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.47437111780712504
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.46420451256364215
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.4578204272586427
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.MixedTransformView translate(net.imglib2.RandomAccessible,long[])>": [
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.18118653932242723
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.18118653932242723
        }, 
        {
            "<org.dyn4j.dynamics.WorldTest: void listeners()>": 0.17851220793250272
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,boofcv.struct.image.GrayS64)>": 0.17830823939798757
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide(boofcv.struct.image.GrayS64,double,boofcv.struct.image.GrayS64)>": 0.17830823939798757
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void setPositionDim0(long)>": [
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.19483877398222774
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.18365737892326972
        }, 
        {
            "<org.dyn4j.sandbox.ContactCounter: void sensed(org.dyn4j.dynamics.contact.ContactPoint)>": 0.18203556679547434
        }, 
        {
            "<boofcv.alg.segmentation.watershed.WatershedVincentSoille1991: void handleNeighborAssign(int,int)>": 0.18195294846487867
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.1813681211394366
        }
    ], 
    "<net.imglib2.type.numeric.real.DoubleType: net.imglib2.type.numeric.real.DoubleType copy()>": [
        {
            "<org.dyn4j.sandbox.tests.Plotter: void render(com.jogamp.opengl.GL2)>": 0.20133481652529
        }, 
        {
            "<boofcv.alg.geo.h.HomographyLinear4: void createA(java.util.List,org.ejml.data.DenseMatrix64F)>": 0.20037669840105282
        }, 
        {
            "<boofcv.gui.fiducial.VisualizeFiducial: void drawChessboard(java.awt.Graphics2D,boofcv.alg.geo.WorldToCameraToPixel,int,int,double)>": 0.19689848595986242
        }, 
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double Variance()>": 0.19617827418580266
        }, 
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double DistributionFunction(double)>": 0.1958193125703741
        }
    ], 
    "<net.imglib2.transform.integer.ComponentMappingTransform: double[][] getMatrix()>": [
        {
            "<Catalano.Math.Matrix: double[][] Identity(int)>": 0.42051520587534474
        }, 
        {
            "<Catalano.Math.Matrix: double[][] Identity(int,int)>": 0.3837758406696127
        }, 
        {
            "<Catalano.Math.Matrix: double[][] Reshape(double[],int,int)>": 0.3825228641083277
        }, 
        {
            "<Catalano.Math.Matrix: double[][] CreateMatrix2D(int,int,double)>": 0.38201125174476347
        }, 
        {
            "<Catalano.Math.Matrix: double[][] SubMatrix(double[][],int,int)>": 0.37888227368197847
        }
    ], 
    "<net.imglib2.display.screenimage.awt.UnsignedIntAWTScreenImage: void <init>(net.imglib2.type.numeric.integer.UnsignedIntType,net.imglib2.img.basictypeaccess.array.IntArray,long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.15729768613092662
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.15729768613092662
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1456513577327886
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.13908532168678328
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.12126492036826719
        }
    ], 
    "<net.imglib2.converter.readwrite.ARGBChannelSamplerConverter$ARGBChannelConvertingAccess: void <init>(net.imglib2.converter.readwrite.ARGBChannelSamplerConverter,net.imglib2.Sampler)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0563436169819011
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0545544725589981
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.05406969538743988
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05349506156386412
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.05295740910852022
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: void inc()>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void solveColorMixing(org.jbox2d.dynamics.TimeStep)>": 0.24737253396823114
        }, 
        {
            "<org.jbox2d.collision.ContactID: int getKey()>": 0.22696139123022654
        }, 
        {
            "<org.jbox2d.collision.ContactID: int compareTo(org.jbox2d.collision.ContactID)>": 0.21532812618357883
        }, 
        {
            "<org.jbox2d.collision.ContactID: boolean isEqual(org.jbox2d.collision.ContactID)>": 0.21138449936218628
        }, 
        {
            "<org.jbox2d.collision.ContactID: int compareTo(java.lang.Object)>": 0.20812374726173258
        }
    ], 
    "<net.imglib2.type.logic.BitType: void set(boolean)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2835043278271982
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.2492576324782927
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.22920044346128535
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.2272851846039205
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2270659365676922
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void getCenterValues(long[],java.util.List)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void renderArrows()>": 0.38177871044769857
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void renderMagnets()>": 0.38177871044769857
        }, 
        {
            "<boofcv.demonstrations.calibration.CommonDetectCalibrationApp: boolean isInGrids(georegression.struct.shapes.Polygon2D_F64)>": 0.3703689017361448
        }, 
        {
            "<boofcv.gui.feature.AssociationScorePanel: void computeScore(boolean,int)>": 0.3592813643856071
        }, 
        {
            "<org.dyn4j.collision.AbstractCollidable: org.dyn4j.collision.Fixture removeFixture(org.dyn4j.geometry.Vector2)>": 0.3533833279992318
        }
    ], 
    "<net.imglib2.img.sparse.IntNtree: net.imglib2.img.sparse.IntNtree createInstance(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.12458962570367609
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.12458962570367609
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.11785109527680923
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11532909002102744
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.0989858659890338
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: void dec()>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.25615451548668816
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.24205028805162548
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.2361279257492409
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.23555272453560627
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.22841157931256
        }
    ], 
    "<net.imglib2.display.projector.sampler.IntervalSampler: void jumpFwd(long)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: int upperBound(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.3057205605058148
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int lowerBound(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.3057205605058148
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.29851074837284736
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.2830477311638334
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.2418602118170633
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: void <init>(long[],net.imglib2.util.Fraction)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.4103835785008543
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: int get(int)>": 0.40009995262848275
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getLength(int)>": 0.40009995262848275
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparityScoreSadRect_U8: void _process(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayU8,boofcv.struct.image.ImageGray)>": 0.3989254988604104
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparityScoreSadRect_S16: void _process(boofcv.struct.image.GrayS16,boofcv.struct.image.GrayS16,boofcv.struct.image.ImageGray)>": 0.3989254988604104
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: net.imglib2.Cursor cursor()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.024397501823713325
        }
    ], 
    "<net.imglib2.FlatIterationOrder: java.util.List validIndices(net.imglib2.Interval)>": [
        {
            "<boofcv.alg.geo.GeoTestingOps: java.util.List createList3_F64(int)>": 0.30604258176711524
        }, 
        {
            "<Catalano.Imaging.Tools.FlusserSukMoments: void FindNonZero(Catalano.Imaging.FastBitmap,int,int,java.util.ArrayList,java.util.ArrayList)>": 0.305790484369885
        }, 
        {
            "<org.dyn4j.dynamics.Body: java.util.List getJoints()>": 0.29150904843218367
        }, 
        {
            "<org.dyn4j.sandbox.panels.FixturePanel: int[] getSelectedIndices(int)>": 0.28637947249086193
        }, 
        {
            "<boofcv.struct.feature.MatrixOfList: java.util.List createSingleList()>": 0.2861721501701797
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: void localize(long[])>": [
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(long[],int,int,double,long[],int,int,int,int)>": 0.239886312429364
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply_A(long[],int,int,double,long[],int,int,int,int)>": 0.239886312429364
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.2296859157746426
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(long[],int,int,double,long,long,long[],int,int,int,int)>": 0.22907163004704195
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply_A(long[],int,int,double,long,long,long[],int,int,int,int)>": 0.22907163004704195
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void div(net.imglib2.type.numeric.complex.ComplexFloatType)>": [
        {
            "<org.jbox2d.dynamics.contacts.ContactSolver: void solveVelocityConstraints()>": 0.4287986395933705
        }, 
        {
            "<Catalano.Math.Matrix3x3: void Multiply(Catalano.Math.Matrix3x3)>": 0.4285607257539651
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: com.flowpowered.react.math.Matrix4x4 multiply(com.flowpowered.react.math.Matrix4x4,com.flowpowered.react.math.Matrix4x4)>": 0.42843320902625825
        }, 
        {
            "<Catalano.Math.Matrix3x3: Catalano.Math.Matrix3x3 Multiply(Catalano.Math.Matrix3x3,Catalano.Math.Matrix3x3)>": 0.42785544803290115
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void solveElastic(org.jbox2d.dynamics.TimeStep)>": 0.426798630512009
        }
    ], 
    "<net.imglib2.util.Util: float[] getArrayFromValue(float,int)>": [
        {
            "<Catalano.Math.Matrix: float[] CreateMatrix1D(int,float)>": 1.0
        }, 
        {
            "<Catalano.Math.Matrix: float[] getColumn(float[][],int)>": 0.6273722995248113
        }, 
        {
            "<Catalano.Math.Matrix: float[] getRow(float[][],int)>": 0.6138304653045941
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_F32: void setOutside(int,int,float[])>": 0.515342188161507
        }, 
        {
            "<Catalano.Math.Matrix: float[][] CreateMatrix2D(int,int,float)>": 0.48921414651187256
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: int red(int)>": [
        {
            "<Catalano.Imaging.FastBitmap: int getRed(int)>": 0.5847491954558717
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getRed(int,int)>": 0.5513865950315384
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setRGB(int,int,int,int)>": 0.5103485700345574
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(int,int,int,int,int)>": 0.49260427231397136
        }, 
        {
            "<Catalano.Imaging.Tools.ImageStatistics: int Minimum(Catalano.Imaging.FastBitmap,int,int,int,int)>": 0.48271758996331793
        }
    ], 
    "<net.imglib2.type.logic.BoolType: int compareTo(net.imglib2.type.logic.BoolType)>": [
        {
            "<boofcv.abst.fiducial.CalibrationFiducialDetector: int totalFound()>": 0.39418404493681924
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(org.jbox2d.particle.ParticleSystem$Proxy)>": 0.27372425841001036
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(java.lang.Object)>": 0.25420802482100896
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.24962083609651642
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.24962083609651642
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: void add(net.imglib2.type.numeric.integer.UnsignedByteType)>": [
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(Catalano.Core.IntPoint,int,int,int,int)>": 0.34279574994035583
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getBlue(Catalano.Core.IntPoint)>": 0.336430021688703
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: boofcv.struct.image.ImageBase subimage(int,int,int,int,boofcv.struct.image.ImageBase)>": 0.3361673280624054
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getGreen(Catalano.Core.IntPoint)>": 0.33418363988614425
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getRed(Catalano.Core.IntPoint)>": 0.33418363988614425
        }
    ], 
    "<net.imglib2.RealPointSampleList: double realMax(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.6444652635187575
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.PyramidDiscreteSampleBlur: double getSigma(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.NoCacheScaleSpace: double getScale(int)>": 0.6383928571428571
        }
    ], 
    "<net.imglib2.converter.RealUnsignedShortConverter: void <init>(double,double)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void access$000(boofcv.app.calib.AssistedCalibration,double,double,double,double)>": 0.5336401877373447
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceSe3SymmetricSq: void setIntrinsic(double,double,double,double,double,double)>": 0.5196431965654592
        }, 
        {
            "<boofcv.gui.fiducial.VisualizeFiducial: void drawLine(java.awt.Graphics2D,java.awt.geom.Line2D$Double,double,double,double,double)>": 0.5171538033530269
        }, 
        {
            "<boofcv.alg.sfm.robust.DistancePlane2DToPixelSq: void setIntrinsic(double,double,double)>": 0.510318790333798
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceHomographyPixelSq: void setIntrinsic(double,double,double)>": 0.510318790333798
        }
    ], 
    "<net.imglib2.img.list.ListLocalizingCursor: void <init>(net.imglib2.img.list.ListLocalizingCursor)>": [
        {
            "<boofcv.alg.segmentation.ImageSegmentationOps: void regionPixelId_to_Compact(boofcv.struct.image.GrayS32,org.ddogleg.struct.GrowQueue_I32,boofcv.struct.image.GrayS32)>": 0.33503080560115484
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void flipHorizontal(boofcv.struct.image.GrayS64)>": 0.3341439544465619
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.PairManager: boolean removePair(int,int)>": 0.33299488906133945
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS64)>": 0.3309166962966033
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS64)>": 0.3309166962966033
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolator3D: void <init>(net.imglib2.RandomAccessible,net.imglib2.type.numeric.NumericType)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: void incIndex()>": [
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.38668033786823425
        }, 
        {
            "<boofcv.alg.enhance.impl.ImplEnhanceFilter: void sharpenBorder4(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayU8,int,int)>": 0.3832149407953735
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: int getSerializedSize()>": 0.38222398789683343
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.3821208141838207
        }, 
        {
            "<Catalano.Imaging.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.3821208141838207
        }
    ], 
    "<net.imglib2.util.Fraction: void div(net.imglib2.util.Fraction)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3645242450470086
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.32411830422815274
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3042066573609582
        }, 
        {
            "<org.jbox2d.common.Timer: float getMilliseconds()>": 0.29977765344685564
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2987837495584856
        }
    ], 
    "<net.imglib2.view.iteration.SlicingCursor: double getDoublePosition(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.6188643624249502
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5517168169858438
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5382297579524616
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.5137724358016377
        }, 
        {
            "<org.jbox2d.collision.Distance$DistanceProxy: org.jbox2d.common.Vec2 getVertex(int)>": 0.5137724358016377
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void max(net.imglib2.Positionable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.converter.RealUnsignedByteConverter: void convert(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.37607319931427524
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.3758327784829476
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.37537214585944456
        }, 
        {
            "<Catalano.Statistics.Kernels.ThinPlateSpline: double Function(java.lang.Object,java.lang.Object)>": 0.3686181437227593
        }, 
        {
            "<Catalano.Statistics.Kernels.SquaredSinc: double Function(java.lang.Object,java.lang.Object)>": 0.3686181437227593
        }
    ], 
    "<net.imglib2.img.list.ListRandomAccess: void bck(int)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMax(int,int)>": 0.4747446304758694
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMin(int,int)>": 0.4747446304758694
        }, 
        {
            "<boofcv.struct.learning.ClassificationHistogram: void increment(int,int)>": 0.46914465164706726
        }, 
        {
            "<boofcv.struct.image.GrayS32: void unsafe_set(int,int,int)>": 0.43492848052705513
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void set(int,int,int)>": 0.4315663739064139
        }
    ], 
    "<net.imglib2.AbstractInterval: void <init>(long[],long[])>": [
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2946179434652096
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.2938657563782508
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2935652200646346
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2935652200646346
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.2927933796464802
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void mul(net.imglib2.type.numeric.integer.Unsigned128BitType)>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayI8)>": 0.23614791713289285
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2351449530630278
        }, 
        {
            "<boofcv.core.image.ConvertImage: boofcv.struct.image.GrayU8 convert(boofcv.struct.image.GrayS64,long,long,int,boofcv.struct.image.GrayU8)>": 0.22894787074994105
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedI8)>": 0.22462625618538337
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.22192002553328397
        }
    ], 
    "<net.imglib2.RealPoint: void move(int,int)>": [
        {
            "<boofcv.alg.color.ColorRgb: int rgbToGray_Weighted(int,int,int)>": 0.4829351149940867
        }, 
        {
            "<boofcv.alg.color.ColorXyz: void rgbToXyz(int,int,int,double[])>": 0.4726906466860327
        }, 
        {
            "<boofcv.alg.distort.DoNothingPixelTransform_F64: void compute(int,int)>": 0.4606593483371433
        }, 
        {
            "<Catalano.Core.DoublePoint: void <init>(int,int)>": 0.45111569068567386
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void setD(int,double)>": 0.4305301494449456
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair: void <init>(net.imglib2.RandomAccessible,net.imglib2.RandomAccessible)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04134491152973615
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04003203845127178
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.03967630926057839
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.039254643313832986
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03886011427237866
        }
    ], 
    "<net.imglib2.display.screenimage.awt.FloatAWTScreenImage: java.awt.image.DataBuffer createDataBuffer(java.lang.Object)>": [
        {
            "<boofcv.struct.image.GrayF32: void _setData(java.lang.Object)>": 0.1532590227806104
        }, 
        {
            "<boofcv.struct.image.InterleavedF32: void _setData(java.lang.Object)>": 0.1532590227806104
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.1345982968042152
        }, 
        {
            "<Catalano.Imaging.Tools.Curve: void <init>(Catalano.Imaging.Tools.Curve)>": 0.12440333788202981
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Rendering: void <init>(java.lang.String,int,java.lang.Object)>": 0.12182630799201812
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess1D: void move(net.imglib2.Localizable)>": [
        {
            "<Catalano.Math.Matrix: int[] Subtract(int[],int[])>": 0.27130519306524997
        }, 
        {
            "<Catalano.Math.Matrix: int[] Add(int[],int[])>": 0.27130519306524997
        }, 
        {
            "<Catalano.Math.Matrix: void Subtract(int[],int)>": 0.2711861742814492
        }, 
        {
            "<Catalano.Math.Matrix: void Add(int[],int)>": 0.2711861742814492
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(int,int[])>": 0.26901315655693264
        }
    ], 
    "<net.imglib2.view.TransformBuilder$3: void <init>(net.imglib2.view.TransformBuilder,net.imglib2.transform.integer.TranslationTransform,net.imglib2.RandomAccessible)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04714045207910317
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04564354645876384
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.045237952777544825
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.044757179627464554
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04430734730991042
        }
    ], 
    "<net.imglib2.converter.readwrite.RealDoubleSamplerConverter: java.lang.Object convert(net.imglib2.Sampler)>": [
        {
            "<boofcv.core.image.FactoryGImageGray: boofcv.core.image.GImageGray create(java.lang.Class)>": 0.12832847014558646
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void startWorkerThread()>": 0.10312708398593502
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void startWorkerThread()>": 0.10312708398593502
        }, 
        {
            "<boofcv.gui.DepthVideoAppBase: void startWorkerThread()>": 0.10312708398593502
        }, 
        {
            "<org.dyn4j.samples.LinkTerrain: void <init>()>": 0.08965676973579312
        }
    ], 
    "<net.imglib2.view.iteration.IterableTransformBuilder: net.imglib2.IterableInterval buildIterableInterval()>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.35947108088663715
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void updateObjectIntegerAABB(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.broadphase.AABBInt)>": 0.3533953650284788
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void updateObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.35325135284607884
        }, 
        {
            "<Catalano.Imaging.Filters.HueModifier: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.3389412181858419
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.RegularClustersIntoGrids: int checkNumberOfConnections(java.util.List)>": 0.33179971694908195
        }
    ], 
    "<net.imglib2.img.cell.CellImgFactory: net.imglib2.img.ImgFactory imgFactory(java.lang.Object)>": [
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareFiducial: void main(java.lang.String[])>": 0.41016260234975294
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.3999700022969224
        }, 
        {
            "<boofcv.demonstrations.feature.disparity.VisualizeStereoDisparity: void main(java.lang.String[])>": 0.39501377850053426
        }, 
        {
            "<boofcv.demonstrations.distort.RemoveLensDistortionApp: void main(java.lang.String[])>": 0.3829497926424892
        }, 
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareBinaryFiducial: void main(java.lang.String[])>": 0.37685961262782885
        }
    ], 
    "<net.imglib2.type.volatiles.VolatileNumericType: net.imglib2.type.volatiles.VolatileNumericType createVariable()>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.10065952899503389
        }, 
        {
            "<org.dyn4j.dynamics.WorldTest: void getUserData()>": 0.09395411519917388
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void getUserData()>": 0.09395411519917388
        }, 
        {
            "<org.dyn4j.Reference: boolean equals(java.lang.Object)>": 0.09211554424898176
        }, 
        {
            "<org.dyn4j.collision.FixtureTest: void setUserData()>": 0.09093228851361994
        }
    ], 
    "<net.imglib2.converter.readwrite.RealFloatSamplerConverter: java.lang.Object convert(net.imglib2.Sampler)>": [
        {
            "<boofcv.core.image.FactoryGImageGray: boofcv.core.image.GImageGray create(java.lang.Class)>": 0.12832847014558646
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void startWorkerThread()>": 0.10312708398593502
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void startWorkerThread()>": 0.10312708398593502
        }, 
        {
            "<boofcv.gui.DepthVideoAppBase: void startWorkerThread()>": 0.10312708398593502
        }, 
        {
            "<org.dyn4j.samples.LinkTerrain: void <init>()>": 0.08965676973579312
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: void <init>(net.imglib2.img.NativeImg)>": [
        {
            "<Catalano.Imaging.Filters.HistogramShrink: void <init>()>": 0.14476650603589652
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: void <init>()>": 0.14476650603589652
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.SobelEdgeDetector: void <init>()>": 0.13442290969427412
        }, 
        {
            "<boofcv.gui.tracker.TrackerObjectQuadPanel: void enterSelectMode()>": 0.13442290969427412
        }, 
        {
            "<org.jbox2d.dynamics.Filter: void <init>()>": 0.1329726164507926
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: net.imglib2.type.numeric.real.FloatType createVariable()>": [
        {
            "<org.jbox2d.testbed.tests.DominoTower: org.jbox2d.common.Vec2 getDefaultCameraPos()>": 0.07939310570042547
        }, 
        {
            "<org.jbox2d.testbed.tests.BulletTest: org.jbox2d.common.Vec2 getDefaultCameraPos()>": 0.07939310570042547
        }, 
        {
            "<org.jbox2d.testbed.framework.TestbedTest: org.jbox2d.common.Vec2 getDefaultCameraPos()>": 0.07939310570042547
        }, 
        {
            "<org.jbox2d.testbed.tests.BlobTest4: org.jbox2d.common.Vec2 getDefaultCameraPos()>": 0.07939310570042547
        }, 
        {
            "<org.jbox2d.testbed.tests.CircleStress: org.jbox2d.common.Vec2 getDefaultCameraPos()>": 0.07939310570042547
        }
    ], 
    "<net.imglib2.img.sparse.DoubleNtree: void <init>(net.imglib2.img.sparse.Ntree,long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.242012144279314
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.242012144279314
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2237584400126592
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.17235608187218834
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.17235608187218834
        }
    ], 
    "<net.imglib2.img.cell.CellRandomAccess: void setPosition(int,int)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.3567935498878286
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.3469344321563536
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.3466367624862912
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.29142594646176706
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.29142594646176706
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,byte[])>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.36609304571965384
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.36609304571965384
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36549264850998225
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.3595523916209714
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.3595523916209714
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListLocalizingCursor: void reset()>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.24257271898910168
        }, 
        {
            "<boofcv.core.image.impl.ConvertInterleavedToSingle: void average(boofcv.struct.image.InterleavedS64,boofcv.struct.image.GrayS64)>": 0.23899666573610787
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.23787833791834065
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.23111840592245256
        }, 
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.22855820029541452
        }
    ], 
    "<net.imglib2.img.cell.AbstractCells: void getCellDimensions(long[],long[],int[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void updateObjectIntegerAABB(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.broadphase.AABBInt)>": 0.36204810608521404
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void updateObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.36159203500015774
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect2D(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.BoxAABB,int,int)>": 0.33708819233824217
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: int getMaxBalance()>": 0.33009203648990726
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect2D(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,int,int)>": 0.3153707931069207
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: void localize(int[])>": [
        {
            "<boofcv.alg.misc.ImageStatistics: void histogram(boofcv.struct.image.GrayS64,int,int[])>": 0.2852421096965533
        }, 
        {
            "<Catalano.Imaging.Filters.Artistic.OilPainting: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.2722433673884282
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedS32)>": 0.2716795465234774
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS32)>": 0.26703510401371716
        }, 
        {
            "<Catalano.Math.Matrix: void Subtract(int[],int)>": 0.26494557901605587
        }
    ], 
    "<net.imglib2.RealPointSampleList: double realMin(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.6444652635187575
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.PyramidDiscreteSampleBlur: double getSigma(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.NoCacheScaleSpace: double getScale(int)>": 0.6383928571428571
        }
    ], 
    "<net.imglib2.img.sparse.FloatNtree: float getValue(int)>": [
        {
            "<boofcv.alg.weights.WeightPixelUniform_F32: float weight(int,int)>": 0.4131088259045248
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F32: float getOutside(int,int)>": 0.4131088259045248
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F32: void setOutside(int,int,float)>": 0.3758819896291122
        }, 
        {
            "<boofcv.alg.weights.WeightPixelUniform_F32: float weightIndex(int)>": 0.37235742867336374
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.3447577893536421
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: short getValue()>": [
        {
            "<boofcv.struct.QueueCorner: void add(int,int)>": 0.20186682935169176
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMaximum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.17883856297348882
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMinimum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.17883856297348882
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void process(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.1759244570205504
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void boundImage(boofcv.struct.image.GrayS16,int,int)>": 0.16561098890206907
        }
    ], 
    "<net.imglib2.display.projector.volatiles.Volatile2DRandomAccessibleProjector: void map()>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.19116519118898775
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18704412936990483
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18704412936990483
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isInlier(int)>": 0.16742102851441157
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isInlier(int)>": 0.16742102851441157
        }
    ], 
    "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double squareDistance(net.imglib2.RealLocalizable)>": [
        {
            "<Catalano.Math.Distances.Distance: double SquaredEuclidean(double[],double[])>": 0.4818412844354817
        }, 
        {
            "<Catalano.Math.Distances.IntersectionDistance: double Compute(double[],double[])>": 0.4694462755075436
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Manhattan(double[],double[])>": 0.4691741567271662
        }, 
        {
            "<Catalano.Statistics.Kernels.Hellinger: double Function(double[],double[])>": 0.45898942695192596
        }, 
        {
            "<Catalano.Statistics.Kernels.HistogramIntersection: double Function(double[],double[])>": 0.43559807438753567
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform$InverseTranslationTransform: void applyInverse(int[],int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.34381608450188594
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.3400885355425245
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.3018412667314224
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.3018412667314224
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.2886401704745511
        }
    ], 
    "<net.imglib2.img.list.ListImg: net.imglib2.img.list.ListImg copy()>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.Joint,double)>": 0.22020631409943042
        }, 
        {
            "<boofcv.alg.filter.misc.AverageDownSampleOps: void down(boofcv.struct.image.ImageGray,int,boofcv.struct.image.ImageGray)>": 0.20212865431628668
        }, 
        {
            "<org.dyn4j.examples.Graphics2DRenderer: void render(java.awt.Graphics2D,org.dyn4j.geometry.Shape,double,java.awt.Color)>": 0.19805378108716748
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillShape(com.jogamp.opengl.GL2,org.dyn4j.geometry.Shape)>": 0.18968058857463302
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: void setB(boofcv.struct.image.ImageBase,int,int,int,double)>": 0.18270492681807068
        }
    ], 
    "<net.imglib2.RealPointSampleList$RealPointSampleListCursor: void jumpFwd(long)>": [
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.22431961880260584
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.21790474091864476
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.InterleavedS64,java.util.Random,long,long)>": 0.21334098282809072
        }, 
        {
            "<Catalano.Math.Geometry.GrahamConvexHull: java.util.ArrayList FindFull(java.util.ArrayList)>": 0.2100349525344004
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: long getTrackId(int)>": 0.20758300389531617
        }
    ], 
    "<net.imglib2.AbstractCursorInt: long getLongPosition(int)>": [
        {
            "<Catalano.Imaging.Texture.LawsTextureEnergy: long getTextureEnergyMap(int,int,int,int)>": 0.42014196370507173
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.4005185293097753
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.4005185293097753
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.4005185293097753
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.398317842180782
        }
    ], 
    "<net.imglib2.display.screenimage.awt.IntAWTScreenImage: java.awt.image.DataBufferInt createDataBuffer(net.imglib2.img.basictypeaccess.array.IntArray)>": [
        {
            "<Catalano.Imaging.Shapes.IntPolygon: void <init>(int[],int[])>": 0.15238593034671535
        }, 
        {
            "<Catalano.Imaging.Shapes.IntPolygon: void <init>(int[],int[],int)>": 0.14346556258926374
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int[])>": 0.1354325286710366
        }, 
        {
            "<Catalano.Math.Matrix: int[] getRows(int[],int[])>": 0.1354325286710366
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.13184275314267513
        }
    ], 
    "<net.imglib2.converter.Converters: net.imglib2.converter.readwrite.WriteConvertedRandomAccessibleInterval convert(net.imglib2.RandomAccessibleInterval,net.imglib2.converter.readwrite.SamplerConverter)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0584019459079829
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.05406205059012895
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.05346179598430837
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.05164589025080292
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void <init>(boofcv.demonstrations.tracker.CirculantVisualizationPanel$Listener)>": 0.05040273807667476
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: void <init>(double,double,double,double)>": [
        {
            "<boofcv.alg.geo.robust.DistanceSe3SymmetricSq: void <init>(boofcv.abst.geo.TriangulateTwoViewsCalibrated,double,double,double,double,double,double)>": 0.4626170243826062
        }, 
        {
            "<boofcv.abst.feature.describe.WrapDescribeSurf: boolean process(double,double,double,double,boofcv.struct.feature.TupleDesc)>": 0.45076244571663243
        }, 
        {
            "<boofcv.abst.feature.describe.SurfPlanar_to_DescribeRegionPoint: boolean process(double,double,double,double,boofcv.struct.feature.TupleDesc)>": 0.45076244571663243
        }, 
        {
            "<boofcv.alg.geo.pose.PnPDistanceReprojectionSq: void <init>(double,double,double)>": 0.44997279842019466
        }, 
        {
            "<boofcv.struct.feature.ScalePoint: void <init>(double,double,double,boolean)>": 0.43438360748764093
        }
    ], 
    "<net.imglib2.img.planar.PlanarCursor: int getIntPosition(int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.5010565739549515
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.5010565739549515
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.5010565739549515
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.SquaresIntoRegularClusters: int add(int,int)>": 0.471733346000163
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: int block_zero(boofcv.struct.image.GrayS32,int,int,int,int)>": 0.46647988270871105
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void decrement(long)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.24792126681905285
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.24792126681905285
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.24521941746849626
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.18027032187139533
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(com.flowpowered.react.collision.shape.AABB)>": 0.18027032187139533
        }
    ], 
    "<net.imglib2.img.sparse.CharNtree: void <init>(net.imglib2.img.sparse.Ntree,long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.242012144279314
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.242012144279314
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2237584400126592
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.17235608187218834
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.17235608187218834
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.1061907736783491
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.09923339599665497
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.0982996523411924
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.095314860705753
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.095314860705753
        }
    ], 
    "<net.imglib2.display.awt.SignedByteDataBuffer: byte[] getData()>": [
        {
            "<boofcv.io.video.CreateMJpeg: byte[] createMarker(byte)>": 0.19872652373087768
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_I8: void set(byte[])>": 0.18866622924021265
        }, 
        {
            "<boofcv.struct.image.InterleavedI8: void set(int,int,byte[])>": 0.17836821743013087
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(byte[],int,int,byte[],int,int,int,int)>": 0.173077970601201
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(byte[],int,int,byte[],int,int,int,int)>": 0.1686910613951112
        }
    ], 
    "<net.imglib2.view.iteration.SlicingCursor: int getIntPosition(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.6638045043100587
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.6067764656465279
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5617116072558871
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.5538313521482858
        }, 
        {
            "<org.jbox2d.collision.Distance$DistanceProxy: org.jbox2d.common.Vec2 getVertex(int)>": 0.5538313521482858
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: java.lang.Object iterationOrder()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: void setPosition(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2362397310229929
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.23115276354329706
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.21645440365336222
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.21645440365336222
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.19796401980500927
        }
    ], 
    "<net.imglib2.view.iteration.SlicingCursor: void localize(int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.6104918353905384
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.6069635688162914
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.6031969885532117
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5893997689122148
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5856277226225717
        }
    ], 
    "<net.imglib2.AbstractWrappedRealInterval: void realMax(net.imglib2.RealPositionable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: void setPosition(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillBorder(boofcv.struct.image.GrayS64,long,int)>": 0.30882668252815415
        }, 
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.30625856208766067
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.3059584091529221
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.30574021075368907
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.30574021075368907
        }
    ], 
    "<net.imglib2.transform.integer.shear.ShearTransform: long[] getShear()>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.31500743549063015
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2937101076731853
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.2753816731153177
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.2753816731153177
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2650271775803208
        }
    ], 
    "<net.imglib2.iterator.OffsetableLocalizingIntervalIterator: void setMin(int[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS64)>": 0.30454719290093957
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS32,boofcv.struct.image.InterleavedS64)>": 0.2761058835104133
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.27405625919827037
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2660442846775913
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.2577927810477013
        }
    ], 
    "<net.imglib2.util.Binning: int exclusiveValueToBin(int,double,double,double)>": [
        {
            "<Catalano.Math.Special: double LogDiff(double,double)>": 0.4556832560017383
        }, 
        {
            "<Catalano.Imaging.Tools.FlusserSukMoments: double[] Compute(Catalano.Imaging.FastBitmap)>": 0.44465768279913426
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: boolean isInside(boofcv.struct.image.ImageGray,double,double,int,int,double,double,double)>": 0.4403870720805335
        }, 
        {
            "<boofcv.alg.geo.pose.UtilLepetitEPnP: void jacobian_Control4(org.ejml.data.DenseMatrix64F,double[],org.ejml.data.DenseMatrix64F)>": 0.4360395046995959
        }, 
        {
            "<boofcv.alg.geo.pose.UtilLepetitEPnP: void residuals_Control4(org.ejml.data.DenseMatrix64F,org.ejml.data.DenseMatrix64F,double[],double[])>": 0.43414609099454815
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: double getDoublePosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: double unsafe_getD(int,int)>": 0.36766640919741556
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.34314378426186853
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.3366120317795773
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.33327184503964336
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.33327184503964336
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void move(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: void <init>(double,double)>": [
        {
            "<boofcv.alg.geo.robust.DistanceSe3SymmetricSq: void <init>(boofcv.abst.geo.TriangulateTwoViewsCalibrated,double,double,double,double,double,double)>": 0.39947234853913327
        }, 
        {
            "<boofcv.alg.geo.pose.PnPDistanceReprojectionSq: void <init>(double,double,double)>": 0.38946461272235644
        }, 
        {
            "<boofcv.abst.feature.describe.WrapDescribeSurf: boolean process(double,double,double,double,boofcv.struct.feature.TupleDesc)>": 0.38560318718937736
        }, 
        {
            "<boofcv.abst.feature.describe.SurfPlanar_to_DescribeRegionPoint: boolean process(double,double,double,double,boofcv.struct.feature.TupleDesc)>": 0.38560318718937736
        }, 
        {
            "<boofcv.struct.feature.ScalePoint: void <init>(double,double,double,boolean)>": 0.3740510075449949
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,int,int,java.util.List)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5811787841893516
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5795957554113238
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.574959397921157
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5628405374594679
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5608701810597032
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsRandomValue: void <init>(net.imglib2.outofbounds.OutOfBoundsRandomValue)>": [
        {
            "<Catalano.Math.ComplexNumber: void Pow(double)>": 0.30240889799812
        }, 
        {
            "<Catalano.Math.ComplexNumber: Catalano.Math.ComplexNumber Pow(Catalano.Math.ComplexNumber,double)>": 0.30161072826470714
        }, 
        {
            "<Catalano.Math.ComplexNumber: Catalano.Math.ComplexNumber Cos(Catalano.Math.ComplexNumber)>": 0.30028624182228825
        }, 
        {
            "<Catalano.Statistics.Distributions.NormalDistribution: void <init>()>": 0.30006249366570314
        }, 
        {
            "<Catalano.Math.Approximation: double Lowprecision_Pow(double,double)>": 0.2995242585543826
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: void sub(net.imglib2.type.numeric.integer.GenericLongType)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2679887933858064
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2579115331531891
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.25069894227480943
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.23626500399272526
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.23595832499639566
        }
    ], 
    "<net.imglib2.img.list.ListRandomAccess: void fwd(int)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMax(int,int)>": 0.4747446304758694
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMin(int,int)>": 0.4747446304758694
        }, 
        {
            "<boofcv.struct.learning.ClassificationHistogram: void increment(int,int)>": 0.46914465164706726
        }, 
        {
            "<boofcv.struct.image.GrayS32: void unsafe_set(int,int,int)>": 0.43492848052705513
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void set(int,int,int)>": 0.4315663739064139
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileNumericType: boolean valueEquals(java.lang.Object)>": [
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.4306175703094666
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.4306175703094666
        }, 
        {
            "<boofcv.io.javacv.JavaCVVideoImageSequence: boolean hasNext()>": 0.4306175703094666
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.40224804019849786
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldTrackerApp: void togglePause()>": 0.39923656732210056
        }
    ], 
    "<net.imglib2.img.sparse.IntNtree: int getValue(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4758229559360494
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.47462351795956437
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.46920997671701414
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.46663436232689903
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.463400960269543
        }
    ], 
    "<net.imglib2.type.logic.BitType: void decIndex(int)>": [
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.6241711271514602
        }, 
        {
            "<boofcv.abst.fiducial.calib.CalibrationDetectorSquareFiducialGrid: int getPointIndex(int,int)>": 0.5747801203619927
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$9: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5631673913280111
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: int getIndex(int,int,int)>": 0.5573780954063181
        }, 
        {
            "<boofcv.struct.image.ImageBase: int getIndex(int,int)>": 0.5485724542486418
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.DoubleArray: java.lang.Object createArray(int)>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_F32_U8: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.33562632983523094
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_S32_U8: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.33562632983523094
        }, 
        {
            "<boofcv.alg.distort.impl.ImplImageDistort_PL: void apply(boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase,int,int,int,int)>": 0.3042974058213425
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2838082849127157
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2838082849127157
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform$InverseTranslationTransform: net.imglib2.concatenate.Concatenable concatenate(java.lang.Object)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3816616946434645
        }, 
        {
            "<org.jbox2d.particle.StackQueue: java.lang.Object pop()>": 0.3726687537634342
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: java.lang.Object getUserData(int)>": 0.3716659173074733
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3698621888940592
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.36931780881394677
        }
    ], 
    "<net.imglib2.AbstractCursor: double getDoublePosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: double unsafe_getD(int,int)>": 0.461254406027124
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3418863066808514
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3418863066808514
        }, 
        {
            "<Catalano.Math.Special: double Binomial(int,int)>": 0.3091910719889105
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.2997653761960239
        }
    ], 
    "<net.imglib2.util.Intervals: double[] maxAsDoubleArray(net.imglib2.RealInterval)>": [
        {
            "<Catalano.Core.Structs.DoubleArrayList: double[] toArray(double[])>": 0.298452727399759
        }, 
        {
            "<boofcv.struct.FastQueueArray_F64: double[] createInstance()>": 0.29801166703846915
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_F64: void setOutside(int,int,double[])>": 0.27794369028632787
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: void ensureCapacity(int)>": 0.2772820211463032
        }, 
        {
            "<Catalano.Math.Decompositions.EigenvalueDecomposition: double[][] getD()>": 0.2734791930798969
        }
    ], 
    "<net.imglib2.position.transform.Floor: void <init>(net.imglib2.RealLocalizable,net.imglib2.Localizable)>": [
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.23636622628303616
        }, 
        {
            "<boofcv.alg.feature.describe.DescribeSiftCommon: void normalizeDescriptor(boofcv.struct.feature.TupleDesc_F64,double)>": 0.22675787709728346
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: double[] getDoublePivot()>": 0.22528902804623085
        }, 
        {
            "<Catalano.Math.Decompositions.EigenvalueDecomposition: double[][] getD()>": 0.2195207435251875
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: double remove(int)>": 0.21749149549990068
        }
    ], 
    "<net.imglib2.AbstractCursorInt: void jumpFwd(long)>": [
        {
            "<org.jbox2d.testbed.tests.ConveyorBelt: void processFixture(org.jbox2d.dynamics.Fixture,java.lang.Long)>": 0.32395378672635117
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.27155777860217123
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.25881247462951407
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.24975770593987426
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2467720467617631
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: float unsafe_getF(int,int)>": 0.3578910124571392
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3256629153332698
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3256629153332698
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.3237834531123008
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long[],int,int,int,int)>": 0.32315823212108535
        }
    ], 
    "<net.imglib2.KDTree: void realMax(net.imglib2.RealPositionable)>": [
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.21487335015826062
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.21487335015826062
        }, 
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.214027382399185
        }, 
        {
            "<boofcv.abst.geo.optimization.ModelCodecSwapData: void encode(org.ejml.data.DenseMatrix64F,double[])>": 0.19295834780215798
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.19121854800574056
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolatorARGB: net.imglib2.type.numeric.ARGBType get()>": [
        {
            "<Catalano.Imaging.Tools.QuadrilateralTransformation: Catalano.Imaging.FastBitmap ProcessImage(Catalano.Imaging.FastBitmap)>": 0.46588167797691704
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve11(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.46586080476773534
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve9(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.46561868002330853
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal9(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.4651648319265087
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal11(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.4645179567867091
        }
    ], 
    "<net.imglib2.transform.InverseTransform: void applyInverse(int[],int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.34381608450188594
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.3400885355425245
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.3018412667314224
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.3018412667314224
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.2886401704745511
        }
    ], 
    "<net.imglib2.RealPoint: void move(double,int)>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.49939535390905154
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.49939535390905154
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftx020(double[],int)>": 0.4716531412372858
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel2D_F64,double)>": 0.4560785929343898
        }, 
        {
            "<Catalano.Math.Matrix: void Add(double[],double)>": 0.4418977811072938
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: net.imglib2.Cursor localizingCursor()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.024397501823713325
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.051639777949432225
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.05
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04955569438322958
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04902903378454601
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04853626716970755
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: java.lang.Object subIntervalIterationOrder(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.dynamics.WorldTest: void getUserData()>": 0.10067340828210365
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void getUserData()>": 0.10067340828210365
        }, 
        {
            "<org.dyn4j.collision.FixtureTest: void setUserData()>": 0.09743547036924464
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.09245003270420486
        }, 
        {
            "<org.dyn4j.geometry.AbstractShapeTest: void setUserData()>": 0.09128709291752769
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedRandomAccessibleInterval: net.imglib2.converter.readwrite.WriteConvertedRandomAccess randomAccess()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.051639777949432225
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.05
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04955569438322958
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04902903378454601
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04853626716970755
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void localize(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: void div(net.imglib2.type.volatiles.AbstractVolatileRealType)>": [
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.23777855777677998
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.23777855777677998
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.23568803939131827
        }, 
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.23536608771641823
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean raycast(org.dyn4j.geometry.Vector2,org.dyn4j.geometry.Vector2,boolean,boolean,boolean,java.util.List)>": 0.22054992511898777
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedRandomAccess: net.imglib2.converter.readwrite.WriteConvertedRandomAccess copy()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04364357804719847
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04225771273642583
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04188220595401253
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.041437096508237244
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04102063270711835
        }
    ], 
    "<net.imglib2.converter.ChannelARGBConverter$Channel: net.imglib2.converter.ChannelARGBConverter$Channel valueOf(java.lang.String)>": [
        {
            "<net.smert.jreactphysics3d.collision.shapes.CollisionShapeType: net.smert.jreactphysics3d.collision.shapes.CollisionShapeType valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<net.smert.jreactphysics3d.configuration.ContactsPositionCorrectionTechnique: net.smert.jreactphysics3d.configuration.ContactsPositionCorrectionTechnique valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<net.smert.jreactphysics3d.configuration.JointsPositionCorrectionTechnique: net.smert.jreactphysics3d.configuration.JointsPositionCorrectionTechnique valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<net.smert.jreactphysics3d.constraint.JointType: net.smert.jreactphysics3d.constraint.JointType valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<Catalano.Statistics.Analysis.PrincipalComponentAnalysis$AnalysisMethod: Catalano.Statistics.Analysis.PrincipalComponentAnalysis$AnalysisMethod valueOf(java.lang.String)>": 0.260989010989011
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: void setComplexNumber(float,float)>": [
        {
            "<com.flowpowered.react.math.Matrix4x4: void setAllValues(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)>": 0.4752336745279988
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: void setAllValues(float,float,float,float,float,float,float,float,float)>": 0.4619372063623012
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.DebugDrawJ2D$1: java.awt.Color newColor(float,float,float,float)>": 0.459157475818346
        }, 
        {
            "<org.jbox2d.callbacks.DebugDraw: void setCamera(float,float,float)>": 0.45311135772743316
        }, 
        {
            "<org.jbox2d.common.Mat33: void <init>(float,float,float,float,float,float,float,float,float)>": 0.44554405583161316
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: void setImaginary(float)>": [
        {
            "<boofcv.alg.filter.binary.impl.ThresholdSquareBlockMinMax_F32: void <init>(float,int,float,boolean)>": 0.29331742158524204
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float ArcTan2(float,float)>": 0.25726046131262154
        }, 
        {
            "<Catalano.Core.DoublePoint: void <init>(float,float)>": 0.2567234320939922
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_S16: float get_border(float,float)>": 0.25570612929884684
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_U8: float get_border(float,float)>": 0.25570612929884684
        }
    ], 
    "<net.imglib2.PointSampleList$PointSampleListCursor: double getDoublePosition(int)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.3782432325354622
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F64: double unsafe_getD(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double convolveSparse(boofcv.struct.image.GrayF64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void set(float,float)>": [
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_F32: void <init>(int,float,float)>": 0.3921171137662281
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_I: void <init>(int,float,float)>": 0.3921171137662281
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide(boofcv.struct.image.GrayF32,float,float,float,boofcv.struct.image.GrayF32)>": 0.3646140501595357
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayF32,float,float,float,boofcv.struct.image.GrayF32)>": 0.3646140501595357
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply(boofcv.struct.image.GrayF32,float,float,float,boofcv.struct.image.GrayF32)>": 0.3646140501595357
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: void div(net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3093182463564157
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2885590387035162
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.26518223096421123
        }, 
        {
            "<org.jbox2d.common.Timer: float getMilliseconds()>": 0.2569907198124741
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.25565144627844416
        }
    ], 
    "<net.imglib2.view.TransformBuilder$1: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04879500364742665
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04724555912615341
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04682572978040922
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04632808229131882
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04586246160658393
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: void <init>(net.imglib2.view.SubsampleView,net.imglib2.RandomAccess)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.1716933268067494
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.16893331528161287
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.16893331528161287
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.16172188394123557
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.1575705293016518
        }
    ], 
    "<net.imglib2.transform.integer.AbstractMixedTransform: net.imglib2.transform.integer.BoundingBox transform(net.imglib2.transform.integer.BoundingBox)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3274827694183863
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.3231682276461959
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3186515581037708
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.31496955961707046
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3136599610840287
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: void localize(int[])>": [
        {
            "<Sort10: void swapKeys(int[],int,int)>": 0.36190447590472
        }, 
        {
            "<Sort09: void swapKeys(int[],int,int)>": 0.36190447590472
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.33325877436932394
        }, 
        {
            "<Catalano.Math.Matrix: void Fill(int[],int)>": 0.3300002238763722
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: void bufferMove(int)>": 0.3258687622050158
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.composite.CompositeView collapse(net.imglib2.RandomAccessible)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.10813939077487976
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.10010346614252381
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.09899201058442432
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.0956296065296812
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void <init>(boofcv.demonstrations.tracker.CirculantVisualizationPanel$Listener)>": 0.0933277359899136
        }
    ], 
    "<net.imglib2.util.Util: double gLogInv(double,double)>": [
        {
            "<Catalano.Math.Distances.Distance: double QuasiEuclidean(double,double,double,double)>": 0.46675136061186306
        }, 
        {
            "<boofcv.alg.feature.detect.interest.FastHessianFeatureDetector: double polyPeak(double,double,double,double,double,double)>": 0.459433601524445
        }, 
        {
            "<org.dyn4j.geometry.Interval: void expand(double)>": 0.4518186115865778
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawArc(com.jogamp.opengl.GL2,double,double,double,double,double)>": 0.44966062114825406
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Manhattan(double,double,double,double)>": 0.44952177948160477
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: double getRealDouble()>": [
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double DistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double OneSideDistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double ComplementaryDistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.32533950937620415
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double pixelScaleCurrentToInput()>": 0.3144161822359606
        }
    ], 
    "<net.imglib2.type.numeric.complex.AbstractComplexType: float getPowerFloat()>": [
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double ProbabilityDensityFunction(double)>": 0.5172974913938666
        }, 
        {
            "<Catalano.Statistics.Distributions.GammaDistribution: double Entropy()>": 0.5067550734973421
        }, 
        {
            "<Catalano.Statistics.Distributions.TStudentDistribution: double LogProbabilityDensityFunction(double)>": 0.5050662238765994
        }, 
        {
            "<boofcv.gui.d3.Orientation3D: void setVector(georegression.struct.point.Vector3D_F64)>": 0.5035588299756023
        }, 
        {
            "<Catalano.Statistics.Distributions.ParetoDistribution: double LogProbabilityDensityFunction(double)>": 0.5018500378670698
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.1061907736783491
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.09923339599665497
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.0982996523411924
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.095314860705753
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.095314860705753
        }
    ], 
    "<net.imglib2.view.SlicingRandomAccess: void setPosition(net.imglib2.Localizable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4218310531898985
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4192511601307669
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.40896561422065614
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.40454126926423306
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3986554342333727
        }
    ], 
    "<net.imglib2.iterator.IntervalIterator: void jumpFwd(long)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.4644889111313864
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.42589133074849644
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.41672369967353645
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.4084123416233854
        }, 
        {
            "<org.jbox2d.common.Timer: float getMilliseconds()>": 0.39201275548895687
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: void move(int[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.3615735608242674
        }, 
        {
            "<boofcv.misc.BoofMiscOps: int countNotZero(int[],int)>": 0.3576409983491106
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.3439169734941024
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.3411674570554192
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectSparseBasicWta_S32: boolean select(int[],int)>": 0.33444556057506003
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: void setPosition(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.12302323557756745
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.12302323557756745
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11392195087018471
        }, 
        {
            "<boofcv.core.image.border.ImageBorder_IL_S64: void set(int,int,long[])>": 0.10699463790927403
        }, 
        {
            "<boofcv.core.image.border.ImageBorder_IL_S64: void get(int,int,long[])>": 0.10699463790927403
        }
    ], 
    "<net.imglib2.display.screenimage.awt.DoubleAWTScreenImage: void <init>(net.imglib2.type.numeric.real.DoubleType,net.imglib2.img.basictypeaccess.array.DoubleArray,long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.15729768613092662
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.15729768613092662
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1456513577327886
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.13908532168678328
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.12126492036826719
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: int rgba(double,double,double,double)>": [
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.36508198379587214
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.3647944889607152
        }, 
        {
            "<boofcv.alg.feature.describe.SurfDescribeOps: boolean isInside(boofcv.struct.image.ImageGray,double,double,int,int,double,double,double)>": 0.361670903320956
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: int hashCode()>": 0.35162743122907436
        }, 
        {
            "<org.dyn4j.geometry.Matrix22: int hashCode()>": 0.3495814982987067
        }
    ], 
    "<net.imglib2.histogram.Real1dBinMapper: double center(long)>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.5027415781360479
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.5019001361984514
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.49975685353185123
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Vector3 solve33(org.dyn4j.geometry.Vector3)>": 0.46462321883542346
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Matrix33 invert()>": 0.4589810982905536
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsValue: void setPosition(long[])>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.31129968218613663
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.24038117819596475
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.24007819484378443
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.23620897651983397
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.22443858692950788
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: void localize(float[])>": [
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchColor: void meanColor(float[],float[],float)>": 0.2673347198188893
        }, 
        {
            "<Catalano.Math.Matrix: void Add(float[],float)>": 0.24423948125621497
        }, 
        {
            "<Catalano.Math.Matrix: void Subtract(float[],float)>": 0.24423948125621497
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchColor: void sumColor(float[],float[],float)>": 0.2353567991670094
        }, 
        {
            "<org.jbox2d.tests.math.SinCosTable: void <init>(float)>": 0.23534527889692186
        }
    ], 
    "<net.imglib2.util.Util: java.lang.String printCoordinates(net.imglib2.RealLocalizable)>": [
        {
            "<boofcv.demonstrations.feature.disparity.VisualizeStereoDisparity: void main(java.lang.String[])>": 0.5674258774205152
        }, 
        {
            "<com.flowpowered.react.math.Vector2: java.lang.String toString()>": 0.5502033801629916
        }, 
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareFiducial: void main(java.lang.String[])>": 0.5465645523987004
        }, 
        {
            "<boofcv.demonstrations.denoise.DenoiseAccuracyStudyApp: void main(java.lang.String[])>": 0.5243879382941332
        }, 
        {
            "<org.jbox2d.common.Sweep: java.lang.String toString()>": 0.5221269006688884
        }
    ], 
    "<net.imglib2.img.sparse.FloatNtree: void setValue(int,float)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F32: void setOutside(int,int,float)>": 0.4046883728874424
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.38901104269312653
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3846723536618065
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.3832696151969503
        }, 
        {
            "<boofcv.alg.weights.WeightPixelUniform_F32: float weight(int,int)>": 0.3812515471264423
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,int,int,java.util.List,java.util.Comparator)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.552581169669595
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5513828449998806
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.5466087586177683
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5356954274437902
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5339934046283277
        }
    ], 
    "<net.imglib2.type.numeric.complex.AbstractComplexType: void sub(net.imglib2.type.numeric.complex.AbstractComplexType)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawPrismaticJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.PrismaticJoint)>": 0.3858213558043328
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawRopeJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.RopeJoint)>": 0.38558496278404886
        }, 
        {
            "<Catalano.Math.ComplexNumber: Catalano.Math.ComplexNumber Pow(Catalano.Math.ComplexNumber,double)>": 0.3832886280322012
        }, 
        {
            "<Catalano.Math.ComplexNumber: void Pow(double)>": 0.3766547249682445
        }, 
        {
            "<Catalano.Math.Approximation: double Lowprecision_Pow(double,double)>": 0.37371908445519414
        }
    ], 
    "<net.imglib2.display.screenimage.awt.ShortAWTScreenImage: net.imglib2.display.awt.SignedShortDataBuffer createDataBuffer(net.imglib2.img.basictypeaccess.array.ShortArray)>": [
        {
            "<boofcv.struct.image.InterleavedI16: short[] get(int,int,short[])>": 0.1041001694231636
        }, 
        {
            "<boofcv.struct.image.GrayI16: void _setData(java.lang.Object)>": 0.09633432944855654
        }, 
        {
            "<boofcv.struct.image.InterleavedI16: void _setData(java.lang.Object)>": 0.09633432944855654
        }, 
        {
            "<boofcv.struct.image.InterleavedI16: void set(int,int,short[])>": 0.0956914769780139
        }, 
        {
            "<boofcv.alg.fiducial.square.DetectFiducialSquareImage: int hamming(short[],short[])>": 0.09274901039623944
        }
    ], 
    "<net.imglib2.AbstractLocalizable: void localize(int[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS32)>": 0.44889338435450676
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedS32)>": 0.4132829780629394
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void fill(boofcv.struct.convolve.Kernel2D_I32,int)>": 0.36661737439650505
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.3605775583000914
        }, 
        {
            "<Catalano.Math.Matrix: void Fill(int[],int)>": 0.35163589953845803
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolatorARGB: void <init>(net.imglib2.RandomAccessible,net.imglib2.type.numeric.ARGBType)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.type.logic.BoolType: boolean valueEquals(java.lang.Object)>": [
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.4377979942142047
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.4377979942142047
        }, 
        {
            "<boofcv.io.javacv.JavaCVVideoImageSequence: boolean hasNext()>": 0.4377979942142047
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.4162883330466026
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldTrackerApp: void togglePause()>": 0.4146370140755814
        }
    ], 
    "<net.imglib2.img.list.ListLocalizingCursor: void jumpFwd(long)>": [
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.27118599832865564
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.26117978859459046
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.25522653137616635
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.InterleavedS64,java.util.Random,long,long)>": 0.25507983039752136
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.2512909654268679
        }
    ], 
    "<net.imglib2.util.Util: void quicksort(double[])>": [
        {
            "<Catalano.Math.Transforms.DiscreteSineTransform: void Backward(double[])>": 0.3941201030651655
        }, 
        {
            "<Catalano.Math.Transforms.FourierTransform: void FFT(double[],double[])>": 0.3246012242318734
        }, 
        {
            "<Catalano.Math.Matrix: void Clear(double[])>": 0.3229166666666667
        }, 
        {
            "<Catalano.Math.Matrix: double[] RemoveColumn(double[],int)>": 0.32184455063012984
        }, 
        {
            "<Catalano.Statistics.DescriptiveStatistics: double Median(double[])>": 0.3030844623041326
        }
    ], 
    "<net.imglib2.display.projector.composite.CompositeXYRandomAccessibleProjector: void map()>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.3383121656006578
        }, 
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: void transform(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.26299599588741795
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.26267771673774487
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2568920920748199
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.2555969869860587
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: void localize(int[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS32)>": 0.3150758221597203
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2986910861689144
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedS32)>": 0.286020697802957
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.28272029471014626
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void fill(boofcv.struct.convolve.Kernel2D_I32,int)>": 0.27922246272551626
        }
    ], 
    "<net.imglib2.img.array.AbstractArrayLocalizingCursor: void jumpFwd(long)>": [
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.25360304923500826
        }, 
        {
            "<org.jbox2d.collision.Distance$SimplexCache: void set(org.jbox2d.collision.Distance$SimplexCache)>": 0.24754751547550502
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int)>": 0.2437689867630396
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.2388461413222821
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: boofcv.struct.convolve.Kernel1D_I32 copy()>": 0.22148535402037922
        }
    ], 
    "<net.imglib2.type.logic.BitType: net.imglib2.type.logic.BitType copy()>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.35207035856441354
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.33199227890642613
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: boolean isWithin(int,int,int,int,int)>": 0.3303068529178222
        }, 
        {
            "<org.box2d.proto.Box2D$PbVec2: boolean isInitialized()>": 0.324743977140202
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean overlap(int,int)>": 0.32436827610696717
        }
    ], 
    "<net.imglib2.display.projector.RandomAccessibleProjector2D: void <init>(int,int,net.imglib2.RandomAccessible,net.imglib2.RandomAccessibleInterval,net.imglib2.converter.Converter)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.4218687033851392
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.4218687033851392
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.4218687033851392
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.4210854565541445
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.4210854565541445
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.RandomAccessibleInterval stack(net.imglib2.RandomAccessibleInterval[])>": [
        {
            "<boofcv.gui.feature.FancyInterestPointRender: void reset()>": 0.1975703340252388
        }, 
        {
            "<org.dyn4j.dynamics.Island: void clear()>": 0.19543013274466792
        }, 
        {
            "<boofcv.abst.feature.tracker.DetectDescribeAssociate: void dropAllTracks()>": 0.19406559334825674
        }, 
        {
            "<boofcv.alg.tracker.combined.CombinedTrackerScalePoint: void dropAllTracks()>": 0.1835086329136593
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerKltPyramid: void dropAllTracks()>": 0.1823856136092476
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: void setPosition(int,int)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.4954196921097764
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.4893810727715689
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.4893810727715689
        }
    ], 
    "<net.imglib2.histogram.Real1dBinMapper: boolean includesLowerBound(long)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3890174468816945
        }, 
        {
            "<boofcv.demonstrations.sfm.d2.ImageMotionInfoPanel: boolean resetRequested()>": 0.37584848916386515
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean equals(java.lang.Object)>": 0.3321510789951991
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: boolean isFloatingPoint(java.lang.Class)>": 0.3176017160032607
        }, 
        {
            "<org.dyn4j.sandbox.panels.FromFileConvexPolygonPanel: boolean isValidInput()>": 0.3063412640284569
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: void sub(net.imglib2.type.numeric.integer.UnsignedShortType)>": [
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void process(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.3430430866943239
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(Catalano.Core.IntPoint,int,int,int,int)>": 0.34279574994035583
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getBlue(Catalano.Core.IntPoint)>": 0.336430021688703
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: boofcv.struct.image.ImageBase subimage(int,int,int,int,boofcv.struct.image.ImageBase)>": 0.3361673280624054
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMaximum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.33434687216512604
        }
    ], 
    "<net.imglib2.img.planar.PlanarPlaneSubsetLocalizingCursor: void reset()>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void process(int,java.lang.Object)>": 0.3583444066111273
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void process(int,int[])>": 0.3579932155354074
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS32)>": 0.35077715112755775
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS32)>": 0.35077715112755775
        }, 
        {
            "<boofcv.alg.fiducial.square.DetectFiducialSquareBinary: boolean processSquare(boofcv.struct.image.GrayF32,boofcv.alg.fiducial.square.BaseDetectFiducialSquare$Result,double,double)>": 0.35074021608841766
        }
    ], 
    "<net.imglib2.img.planar.PlanarLocalizingCursor: void fwd()>": [
        {
            "<boofcv.alg.fiducial.calib.squares.RegularClustersIntoGrids: int checkNumberOfConnections(java.util.List)>": 0.37401098955125434
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: int getMaxBalance()>": 0.3703979425544941
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: int computeHeight()>": 0.36564540112222044
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void process(int,int[])>": 0.3633634846254439
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void process(int,java.lang.Object)>": 0.3625685052716682
        }
    ], 
    "<net.imglib2.img.cell.CellImgFactory: net.imglib2.img.cell.CellImg createIntInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.19270150385571458
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.19270150385571458
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.17820800197681597
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.14336948875748118
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.14336948875748118
        }
    ], 
    "<net.imglib2.display.screenimage.awt.ARGBScreenImage: void <init>(int,int,int[])>": [
        {
            "<boofcv.gui.binary.VisualizeBinaryData: java.awt.image.BufferedImage renderLabeled(boofcv.struct.image.GrayS32,int[],java.awt.image.BufferedImage)>": 0.21007691953638702
        }, 
        {
            "<boofcv.io.image.ConvertBufferedImage: java.awt.image.BufferedImage extractBuffered(boofcv.struct.image.GrayU8)>": 0.19128483148926792
        }, 
        {
            "<boofcv.alg.enhance.EnhanceImageOps: void equalizeLocal(boofcv.struct.image.GrayU16,int,boofcv.struct.image.GrayU16,int[],int[])>": 0.188839970690309
        }, 
        {
            "<boofcv.alg.enhance.EnhanceImageOps: void equalizeLocal(boofcv.struct.image.GrayU8,int,boofcv.struct.image.GrayU8,int[],int[])>": 0.188839970690309
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: java.awt.image.BufferedImage renderBinary(boofcv.struct.image.GrayU8,boolean,java.awt.image.BufferedImage)>": 0.18563266598558914
        }
    ], 
    "<net.imglib2.RealPoint: java.lang.String toString()>": [
        {
            "<org.dyn4j.sandbox.persist.XmlFormatter: java.lang.String createIndentation(int)>": 0.4884153749105291
        }, 
        {
            "<org.dyn4j.sandbox.persist.XmlFormatter: java.lang.String format(java.lang.String)>": 0.37764231668474113
        }, 
        {
            "<org.dyn4j.geometry.Polygon: java.lang.String toString()>": 0.3776202684460097
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: java.lang.String toString()>": 0.34622255373099875
        }, 
        {
            "<boofcv.misc.AutoTypeImage: java.lang.String getInterleavedName()>": 0.3442365535447876
        }
    ], 
    "<net.imglib2.view.iteration.IterableTransformBuilder: void <init>(net.imglib2.Interval,net.imglib2.RandomAccessible)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06454972243679027
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0625
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06194461797903697
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.061286292230682514
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06067033396213444
        }
    ], 
    "<net.imglib2.transform.InverseTransform: void applyInverse(net.imglib2.Positionable,net.imglib2.Localizable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06666666666666665
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.06454972243679029
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06397612635199752
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.06329621044272916
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06266005147845038
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.ShortArray: void <init>(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.48756114143768725
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.480546430335053
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.4690702513207908
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.45564948974375985
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.45190741788301614
        }
    ], 
    "<net.imglib2.view.MixedRandomAccess: void move(long,int)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.37504442834351787
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.37394472869920126
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.3600692200584755
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.35929830021378784
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3549559961252939
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: void move(net.imglib2.Localizable)>": [
        {
            "<Catalano.Imaging.Filters.MoveTowards: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.3863310727550802
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.38439284294019277
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.38439284294019277
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.38439284294019277
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.38433355294258664
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: void indexToGlobalPosition(int,int,int[])>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.50219717133037
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.5018271076042141
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal7(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.501386482228609
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve7(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.4981352760497507
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve9(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.4977838207867055
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.LanczosInterpolator: void accumulate(int)>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal11(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5852613875631754
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve11(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5762189825310701
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal9(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5760483914709617
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve9(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5695958179459406
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal7(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.5577983129410898
        }
    ], 
    "<net.imglib2.PointSampleList: long size()>": [
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.24153791645299358
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.24016962278000953
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.24016962278000953
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(boofcv.struct.image.GrayS64)>": 0.23409362913607434
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(boofcv.struct.image.GrayS64)>": 0.23409362913607434
        }
    ], 
    "<net.imglib2.converter.VolatileRealTypeARGBConverter: void convert(net.imglib2.type.volatiles.VolatileRealType,net.imglib2.type.numeric.ARGBType)>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void renderBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.16054234215230104
        }, 
        {
            "<boofcv.gui.DepthVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.1582826474015472
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.1582826474015472
        }, 
        {
            "<org.dyn4j.sandbox.dialogs.AddNonConvexFixtureDialog: void actionPerformed(java.awt.event.ActionEvent)>": 0.14833045856515725
        }, 
        {
            "<org.dyn4j.sandbox.dialogs.AddConvexHullFixtureDialog: void actionPerformed(java.awt.event.ActionEvent)>": 0.14833045856515725
        }
    ], 
    "<net.imglib2.FinalDimensions: net.imglib2.FinalDimensions wrap(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.16091774958338118
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.16091774958338118
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.14897796647374148
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.13674648593716815
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.13530550484613413
        }
    ], 
    "<net.imglib2.display.projector.sampler.SelectiveSampler: boolean hasNext()>": [
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.5827689022114758
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.5798421434210209
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.5798421434210209
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.5798421434210209
        }, 
        {
            "<net.coobird.thumbnailator.ThumbnailParameter: boolean useOriginalImageType()>": 0.5798421434210209
        }
    ], 
    "<net.imglib2.transform.integer.shear.InverseShearTransform: long[] getShear()>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.31500743549063015
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2937101076731853
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.2753816731153177
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.2753816731153177
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2650271775803208
        }
    ], 
    "<net.imglib2.AbstractWrappedInterval: void min(net.imglib2.Positionable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.07453559924999299
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07216878364870323
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.07152748373009106
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07076731463403724
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07005606728972563
        }
    ], 
    "<net.imglib2.iterator.LocalizingIntervalIterator: double getDoublePosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.49163800764408094
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.49163800764408094
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: double getOutside(int,int)>": 0.4868016044136483
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.47153771681976947
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.46449118080111146
        }
    ], 
    "<net.imglib2.transform.integer.permutation.PermutationTransform: void applyInverse(net.imglib2.Positionable,net.imglib2.Localizable)>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4136925577950428
        }, 
        {
            "<boofcv.alg.tracker.tld.TldFernClassifier: void increment(boofcv.alg.tracker.tld.TldFernFeature,boolean)>": 0.4054683113645773
        }, 
        {
            "<org.jbox2d.dynamics.Island: void add(org.jbox2d.dynamics.Body)>": 0.3998594161888
        }, 
        {
            "<org.jbox2d.particle.StackQueue: java.lang.Object pop()>": 0.39549538784198407
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3934043049983259
        }
    ], 
    "<net.imglib2.display.AbstractArrayColorTable: java.lang.Object[] getValues()>": [
        {
            "<Catalano.Math.Matrix: java.lang.Object[] getRows(java.lang.Object[],int[])>": 0.2533854288962194
        }, 
        {
            "<Catalano.Math.Matrix: java.lang.Object[] getColumns(java.lang.Object[],int[])>": 0.2533854288962194
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: java.lang.Object[] getParticleUserDataBuffer()>": 0.23765997600400526
        }, 
        {
            "<Catalano.Math.Matrix: java.lang.Object[] getColumn(java.lang.Object[][],int)>": 0.2375140686065874
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: java.lang.Object[] requestParticleBuffer(java.lang.Class,java.lang.Object[])>": 0.23335748736611547
        }
    ], 
    "<net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolatorFactory: net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolator create(net.imglib2.neighborsearch.KNearestNeighborSearch,net.imglib2.RealInterval)>": [
        {
            "<org.dyn4j.geometry.TransformTest: void rotate()>": 0.11407049564947083
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawMouseJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.PinJoint,double)>": 0.11029031393727005
        }, 
        {
            "<org.dyn4j.geometry.AABBTest: void expand()>": 0.10998066145498897
        }, 
        {
            "<org.dyn4j.dynamics.AngleJointTest: void setMinAndMax()>": 0.10847148872316047
        }, 
        {
            "<org.dyn4j.geometry.Vector2Test: void distanceBugInVersions_1_1_0_to_3_1_7()>": 0.10834092812346863
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void axisFromR(double[][],double[])>": [
        {
            "<Catalano.Math.Geometry.QuadrilateralTransformationCalc: double[][] MultiplyMatrix(double[][],double[][])>": 0.6969402287556323
        }, 
        {
            "<Catalano.Imaging.Filters.PeronaMalikAnisotropicDiffusion: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.636532698704268
        }, 
        {
            "<Catalano.Imaging.Filters.Photometric.RetinaModel: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.5679397487657534
        }, 
        {
            "<Catalano.Math.Decompositions.CholeskyDecomposition: double[][] solve(double[][])>": 0.5653363446873053
        }, 
        {
            "<Catalano.Math.Decompositions.SingularValueDecomposition: void <init>(double[][],boolean,boolean)>": 0.5637080495821108
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(java.util.ListIterator,java.util.ListIterator,int,int[])>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: int selectRightToLeft(int,int[])>": 0.37982795592549756
        }, 
        {
            "<boofcv.alg.shapes.polyline.FitLinesToContour: boolean sanityCheckCornerOrder(int,org.ddogleg.struct.GrowQueue_I32)>": 0.3745383667529825
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.37204432998871645
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void process(int,java.lang.Object)>": 0.36755234617078136
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.3674321207184993
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void increment(java.lang.Object)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.22893798292191825
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.21049592858180857
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.196595031896449
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.19554831474908085
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(java.lang.Object)>": 0.189112676881158
        }
    ], 
    "<net.imglib2.converter.readwrite.RealFloatSamplerConverter: net.imglib2.type.numeric.real.FloatType convert(net.imglib2.Sampler)>": [
        {
            "<boofcv.core.image.FactoryGImageGray: boofcv.core.image.GImageGray create(java.lang.Class)>": 0.14771521280891667
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void startWorkerThread()>": 0.11959585451399861
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void startWorkerThread()>": 0.11959585451399861
        }, 
        {
            "<boofcv.gui.DepthVideoAppBase: void startWorkerThread()>": 0.11959585451399861
        }, 
        {
            "<org.dyn4j.samples.LinkTerrain: void <init>()>": 0.10436321432853865
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.LongArray: net.imglib2.img.basictypeaccess.array.LongArray createArray(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.29781790326307295
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.29649405014104924
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.29649405014104924
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.2930792985571642
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.2930792985571642
        }
    ], 
    "<net.imglib2.view.TransformRandomAccess: void move(long,int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.47326283111906076
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.45725912552305853
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.4571944517699016
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.4571944517699016
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.45678973183659993
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void decrement(java.util.List)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void renderArrows()>": 0.2815758479812761
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void renderMagnets()>": 0.2815758479812761
        }, 
        {
            "<boofcv.gui.feature.AssociationScorePanel: void computeScore(boolean,int)>": 0.2681259096664741
        }, 
        {
            "<boofcv.demonstrations.calibration.CommonDetectCalibrationApp: boolean isInGrids(georegression.struct.shapes.Polygon2D_F64)>": 0.26445407167623486
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerTwoPassKltPyramid: void finishTracking()>": 0.2637338756778449
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: void dec()>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void drawPadding()>": 0.34727514753180444
        }, 
        {
            "<org.box2d.proto.Box2D$PbFilter: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.3415772722431274
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.34061281576299474
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.3386167573955984
        }, 
        {
            "<org.jbox2d.callbacks.DebugDraw: void clearFlags(int)>": 0.3378825370084552
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform$InverseTranslationTransform: void getTranslation(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.44033137671851097
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4291065943406319
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4276245856497063
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.424295512416687
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.42193312313775233
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: void move(int,int)>": [
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.41835042236699627
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.4066246880041046
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.3700050853025898
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.3700050853025898
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.3700050853025898
        }
    ], 
    "<net.imglib2.view.iteration.SlicingCursor: boolean hasNext()>": [
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: boolean process(boofcv.struct.image.ImageBase)>": 0.2782949759634314
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: boolean isEmpty()>": 0.2738095238095238
        }, 
        {
            "<Catalano.Math.SparseArray: boolean isEmpty()>": 0.2738095238095238
        }, 
        {
            "<Catalano.Math.Geometry.Line: boolean isVertical()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$BufferedImageIterable$1: boolean hasNext()>": 0.2738095238095238
        }
    ], 
    "<net.imglib2.iterator.ZeroMinIntervalIterator: void localize(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2591217289294584
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2591217289294584
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2551158659682218
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.23981663049514645
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.1871555980409772
        }
    ], 
    "<net.imglib2.position.transform.Round: void setPosition(double[])>": [
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int[])>": 0.304523673326775
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRows(double[],int[])>": 0.304523673326775
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_F64: void setOutside(int,int,double[])>": 0.28588869493645025
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int,int)>": 0.27737505203678436
        }, 
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.2685118960177332
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: boolean getComponentInversion(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.6834580649234657
        }, 
        {
            "<org.jbox2d.collision.shapes.CircleShape: org.jbox2d.common.Vec2 getVertex(int)>": 0.6267124991771027
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.6186610555340056
        }, 
        {
            "<org.jbox2d.collision.Distance$DistanceProxy: org.jbox2d.common.Vec2 getVertex(int)>": 0.6186610555340056
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: org.jbox2d.collision.AABB getFatAABB(int)>": 0.6186610555340056
        }
    ], 
    "<net.imglib2.display.projector.composite.CompositeXYProjector: void map()>": [
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: void transform(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.2935599354214472
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void flipHorizontal(boofcv.struct.image.GrayS64)>": 0.2901766853366812
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2793651079153733
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.2754497512015023
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.2734930400702006
        }
    ], 
    "<net.imglib2.img.array.ArrayImgFactory: net.imglib2.img.array.ArrayImg createCharInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1719914001789366
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.16989915581702875
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.16989915581702875
        }
    ], 
    "<net.imglib2.converter.TypeIdentity: void convert(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.22658043529545518
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.18848212570282627
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.18848212570282627
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.17304408168942298
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.1694216098686478
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void move(long[])>": [
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.2978214100446351
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.294928292570132
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.2862358316958765
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.2817839313057697
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.27506600820581945
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: void setPosition(int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.2540764877039817
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.21777659600227028
        }
    ], 
    "<net.imglib2.type.AbstractBitType: void <init>(net.imglib2.img.NativeImg,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.31646295954671877
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.31646295954671877
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.31646295954671877
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.31469035500319537
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.31469035500319537
        }
    ], 
    "<net.imglib2.img.array.ArrayImg: int fastCursorAvailable(net.imglib2.Interval)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: int upperBound(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.32566177041741956
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int lowerBound(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.32566177041741956
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(org.jbox2d.collision.broadphase.Pair)>": 0.30005071065346683
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(java.lang.Object)>": 0.2937447647531545
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void addObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.28935023743329535
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: void setPosition(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.37249577975384607
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.37249577975384607
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void boundRectangleInside(boofcv.struct.image.ImageBase,boofcv.struct.ImageRectangle)>": 0.3683782266685875
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3673383225354306
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3673383225354306
        }
    ], 
    "<net.imglib2.type.logic.BoolType: void xor(net.imglib2.type.logic.BoolType)>": [
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.2956572448217507
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.29421560826684073
        }, 
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.28831399045930317
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.28831399045930317
        }, 
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: boolean process(boofcv.struct.image.ImageBase)>": 0.2712573740901436
        }
    ], 
    "<net.imglib2.display.awt.UnsignedIntDataBuffer: void setElem(int,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void abs(int[],int,int,int[],int,int,int,int)>": 0.5301576499930104
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.5203048039980213
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int[],int,int,int,int)>": 0.518336497289274
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int[],int,int,int,int)>": 0.518336497289274
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int[],int,int,int,int)>": 0.518336497289274
        }
    ], 
    "<net.imglib2.type.numeric.integer.LongType: int compareTo(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.26253298750374954
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.230960523604179
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2193386105675623
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.21546490714187164
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.21530246534264683
        }
    ], 
    "<net.imglib2.view.composite.CompositeView: void <init>(net.imglib2.RandomAccessible,net.imglib2.view.composite.CompositeFactory)>": [
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.29178024543478487
        }, 
        {
            "<Catalano.Statistics.Kernels.Polynomial: void setDegree(int)>": 0.27675152339429393
        }, 
        {
            "<Catalano.Statistics.Kernels.NormalizedPolynomial: void setDegree(int)>": 0.27675152339429393
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.FastVariance: void setRadius(int)>": 0.27675152339429393
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Minimum: void setRadius(int)>": 0.27675152339429393
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.KDTree: java.lang.Object firstElement()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.23117677496815398
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.22140371487376198
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.22140371487376198
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.20848416141839446
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.20425494166153965
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess1D: void move(int[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.4213700528265671
        }, 
        {
            "<Catalano.Math.Matrix: int[] Subtract(int[],int[])>": 0.40843330937102973
        }, 
        {
            "<Catalano.Math.Matrix: int[] Add(int[],int[])>": 0.40843330937102973
        }, 
        {
            "<Catalano.Math.Matrix: int[] Multiply(int[],int[][])>": 0.40776395422954415
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(int,int[])>": 0.3941983109488788
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: long getLongPosition(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.41500044381988177
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.41500044381988177
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.379188685237836
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3503361972557814
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3310263258362788
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: int compareTo(net.imglib2.type.numeric.integer.AbstractIntegerType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.27143901582835495
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.23875131874632927
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.22922981152000166
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.22554886991647033
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.22148801744043484
        }
    ], 
    "<net.imglib2.KDTree$KDTreeCursor: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void setPosition(long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3435473219525866
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.33502921051637735
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3328467792081444
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.33254990190266553
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal7(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3314012607533465
        }
    ], 
    "<net.imglib2.converter.read.ConvertedCursor: net.imglib2.converter.read.ConvertedCursor copy()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04134491152973615
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04003203845127178
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.03967630926057839
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.039254643313832986
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03886011427237866
        }
    ], 
    "<net.imglib2.RealPoint: void <init>(float[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF64)>": 0.3929283297703471
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedF32,boofcv.struct.image.InterleavedF64)>": 0.36050027906388055
        }, 
        {
            "<Catalano.Core.ArraysUtil: double[] toDouble(float[])>": 0.32707259421636903
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_F64: void setF(int,float[])>": 0.31880829426438534
        }, 
        {
            "<boofcv.misc.BoofMiscOps: double[] convertArray(float[],double[])>": 0.31068072931283264
        }
    ], 
    "<net.imglib2.util.Binning: int valueToBin(int,double,double,double)>": [
        {
            "<Catalano.Imaging.Shapes.IntRectangle: void <init>(double,double,int,int)>": 0.4245341963776206
        }, 
        {
            "<boofcv.struct.sparse.GradientValue_I32: void set(double,double)>": 0.4159837176240617
        }, 
        {
            "<Catalano.Core.IntPoint: void <init>(double,double)>": 0.4077577384066169
        }, 
        {
            "<Catalano.Imaging.Filters.AdditiveNoise: int generateNumber(int,int)>": 0.39609047130246966
        }, 
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3931108222494718
        }
    ], 
    "<net.imglib2.iterator.IntervalIterator: void <init>(long[],long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.32292259629130055
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.32292259629130055
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.3217338900699826
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.2795740979982282
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.27629716989958714
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgFactory: net.imglib2.img.planar.PlanarImg create(long[],net.imglib2.type.NativeType)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.139987229624723
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.139987229624723
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.12960910073940318
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.11200170379633057
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.10650160840378231
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: void <init>(net.imglib2.img.NativeImg)>": [
        {
            "<Catalano.Imaging.Filters.HistogramShrink: void <init>()>": 0.14476650603589652
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: void <init>()>": 0.14476650603589652
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.SobelEdgeDetector: void <init>()>": 0.13442290969427412
        }, 
        {
            "<boofcv.gui.tracker.TrackerObjectQuadPanel: void enterSelectMode()>": 0.13442290969427412
        }, 
        {
            "<org.jbox2d.dynamics.Filter: void <init>()>": 0.1329726164507926
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: void inc()>": [
        {
            "<Catalano.Imaging.Concurrent.Filters.Maximum: void <init>(int)>": 0.3314392192486343
        }, 
        {
            "<Catalano.Imaging.Filters.ConservativeSmoothing: void <init>(int)>": 0.3314392192486343
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Minimum: void <init>(int)>": 0.3314392192486343
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.ConservativeSmoothing: void <init>(int)>": 0.3314392192486343
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Median: void <init>(int)>": 0.3314392192486343
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolator: void fillWeights()>": [
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverse(double[],boolean)>": 0.4340072601040772
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverseFull(double[],boolean)>": 0.4174423588468858
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_2D: void rdft2d_sub(int,double[])>": 0.41471695972113226
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxc020(double[],int)>": 0.396562714158078
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftxb020(double[],int)>": 0.396562714158078
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImgFactory: net.imglib2.img.ImgFactory imgFactory(java.lang.Object)>": [
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareFiducial: void main(java.lang.String[])>": 0.4215982327505652
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.4110876076876874
        }, 
        {
            "<boofcv.demonstrations.feature.disparity.VisualizeStereoDisparity: void main(java.lang.String[])>": 0.40593088532578125
        }, 
        {
            "<boofcv.demonstrations.distort.RemoveLensDistortionApp: void main(java.lang.String[])>": 0.39342786807928365
        }, 
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareBinaryFiducial: void main(java.lang.String[])>": 0.3872018256073534
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess: void setPosition(long,int)>": [
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getIndex(int,int,int)>": 0.5034367151506378
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void vertical9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.4994278789279727
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void vertical7(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.49925098444861155
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void vertical11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.4988628214297591
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.4959864874035975
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: void move(long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.32345081072070736
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.28212446335294117
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.27420241838213555
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.2731216822013734
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(long[],int,int,int,int)>": 0.2672346876861069
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void decIndex(int)>": [
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int checkInverseLower(boofcv.struct.wavelet.WlCoef,int,boofcv.core.image.border.BorderIndex1D,int)>": 0.441481505897173
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int checkInverseUpper(boofcv.struct.wavelet.WlCoef,int,boofcv.core.image.border.BorderIndex1D,int)>": 0.44032425248151813
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: boofcv.struct.image.ImageInterleaved subimage(int,int,int,int,boofcv.struct.image.ImageInterleaved)>": 0.4344891428398681
        }, 
        {
            "<boofcv.alg.transform.ii.impl.ImplIntegralImageOps: int block_unsafe(boofcv.struct.image.GrayS32,int,int,int,int)>": 0.43080961357866054
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void selectBlockSize(int,int)>": 0.42726466582222905
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: net.imglib2.type.numeric.complex.ComplexFloatType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: net.imglib2.transform.integer.MixedTransform preConcatenate(net.imglib2.transform.integer.Mixed)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.3539662227412762
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.34097053194324956
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.3379062254239842
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void addObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.3355862070120812
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.33520572652042707
        }
    ], 
    "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval copy()>": [
        {
            "<boofcv.struct.feature.TupleDesc_F64: boofcv.struct.feature.TupleDesc_F64 copy()>": 0.2927347266334068
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.24619024569969497
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.24619024569969497
        }, 
        {
            "<boofcv.abst.geo.optimization.ModelCodecSwapData: void encode(org.ejml.data.DenseMatrix64F,double[])>": 0.2317217911083766
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: void ensureCapacity(int)>": 0.22800274483865704
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: long valueCount(int)>": [
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isInlier(int)>": 0.27728912709435694
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isInlier(int)>": 0.27728912709435694
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: long getTrackId(int)>": 0.2704904756243913
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: long getTrackId(int)>": 0.2704904756243913
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.26375652210086487
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: double getImaginaryDouble()>": [
        {
            "<boofcv.alg.sfm.DepthSparse3D$F32: double lookupDepth(int,int)>": 0.3333098443530773
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_F32: double unsafe_getD(int,int)>": 0.3333098443530773
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F32: double unsafe_getD(int,int)>": 0.3333098443530773
        }, 
        {
            "<boofcv.factory.filter.convolve.FactoryConvolveSparse$Horizontal1D_F32: double compute(int,int)>": 0.30837712401746653
        }, 
        {
            "<boofcv.factory.filter.convolve.FactoryConvolveSparse$Convolve2D_F32: double compute(int,int)>": 0.30837712401746653
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: void <init>(int,int)>": [
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int)>": 0.46124989629514523
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleBuffer(org.jbox2d.particle.ParticleSystem$ParticleBufferInt,int[],int)>": 0.451540634489479
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.4488136426329757
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleFlagsBuffer(int[],int)>": 0.4273234124641955
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.42458426013470596
        }
    ], 
    "<net.imglib2.neighborsearch.RadiusNeighborSearchOnKDTree: void searchNode(net.imglib2.KDTreeNode,double)>": [
        {
            "<Catalano.Core.DoubleRange: boolean IsOverlapping(Catalano.Core.DoubleRange)>": 0.3366209493418372
        }, 
        {
            "<Catalano.Core.DoubleRange: boolean isInside(double)>": 0.330435606488959
        }, 
        {
            "<org.dyn4j.geometry.Interval: boolean includesInclusive(double)>": 0.330435606488959
        }, 
        {
            "<org.dyn4j.geometry.Interval: boolean includesInclusiveMin(double)>": 0.330435606488959
        }, 
        {
            "<org.dyn4j.geometry.Interval: boolean includesExclusive(double)>": 0.330435606488959
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void move(int,int)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.4954196921097764
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.4893810727715689
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.4893810727715689
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.10842661409823065
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.10132274924351498
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.10036934567095813
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.09785730607238811
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.09785730607238811
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolatorFactory: net.imglib2.interpolation.randomaccess.NLinearInterpolator create(net.imglib2.RandomAccessible)>": [
        {
            "<boofcv.alg.enhance.EnhanceImageOps: void equalizeLocal(boofcv.struct.image.GrayU16,int,boofcv.struct.image.GrayU16,int[],int[])>": 0.16384069688021935
        }, 
        {
            "<boofcv.alg.enhance.EnhanceImageOps: void equalizeLocal(boofcv.struct.image.GrayU8,int,boofcv.struct.image.GrayU8,int[],int[])>": 0.16384069688021935
        }, 
        {
            "<boofcv.alg.filter.convolve.ConvolveNormalized: void convolve(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayU8,boofcv.struct.image.GrayI8)>": 0.16198599838906974
        }, 
        {
            "<boofcv.alg.filter.convolve.ConvolveNormalized: void convolve(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS16,boofcv.struct.image.GrayI16)>": 0.16198599838906974
        }, 
        {
            "<Catalano.Imaging.Filters.Threshold: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.156798719881043
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: int compareTo(net.imglib2.type.numeric.integer.AbstractIntegerType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.42020104153392573
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.37183342002070013
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(org.jbox2d.collision.broadphase.Pair)>": 0.338196041930255
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(java.lang.Object)>": 0.33140772433646115
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.32943893241394046
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: long max(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3508771929824561
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3142423944400126
        }
    ], 
    "<net.imglib2.img.sparse.NtreeIntAccess: void setValue(int,int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4980548333102488
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.4911017614626907
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.48723405655412355
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.47296444271029114
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.47208550203103106
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg shorts(short[],long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.14702947288269252
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.1361035951395862
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.13459242771327712
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.13002080499333155
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void <init>(boofcv.demonstrations.tracker.CirculantVisualizationPanel$Listener)>": 0.1268911146031685
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void set(net.imglib2.type.numeric.complex.ComplexFloatType)>": [
        {
            "<com.flowpowered.react.math.Matrix4x4: com.flowpowered.react.math.Matrix4x4 negate(com.flowpowered.react.math.Matrix4x4)>": 0.25926777309238436
        }, 
        {
            "<boofcv.gui.feature.VisualizeOpticalFlow: void magnitudeAbs(boofcv.struct.flow.ImageFlow,float,java.awt.image.BufferedImage)>": 0.2581519358736729
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: com.flowpowered.react.math.Matrix4x4 set(com.flowpowered.react.math.Matrix4x4)>": 0.25602764237525183
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: com.flowpowered.react.math.Matrix3x3 negate(com.flowpowered.react.math.Matrix3x3)>": 0.2542153707206644
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: void <init>(com.flowpowered.react.math.Matrix4x4)>": 0.25336316082348603
        }
    ], 
    "<net.imglib2.type.logic.BitType: void setInteger(long)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3050638934438218
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.2720320746461706
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.23721063373628784
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.23678515958665924
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.23363071323886309
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.ByteArray: net.imglib2.img.basictypeaccess.array.ByteArray createArray(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.29781790326307295
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.29649405014104924
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.29649405014104924
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.2930792985571642
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.2930792985571642
        }
    ], 
    "<net.imglib2.position.transform.Round: void move(float,int)>": [
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float ArcTan2(float,float)>": 0.25016708449412667
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_S16: float get_border(float,float)>": 0.24957469659029968
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_U8: float get_border(float,float)>": 0.24957469659029968
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_U16: float get_border(float,float)>": 0.24957469659029968
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_S32: float get_border(float,float)>": 0.24957469659029968
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: int compare(long,long)>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void setCompiledSimulation(boolean)>": 0.4087783238180997
        }, 
        {
            "<org.jbox2d.profile.SettingsPerformanceTest: void preStep(int)>": 0.33369356162286334
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: boolean isWithin(int,int,int,int,int)>": 0.2777266116563439
        }, 
        {
            "<Catalano.Core.Stopwatch: boolean isRunning()>": 0.276793801339286
        }, 
        {
            "<org.box2d.proto.Box2D$PbFilter: boolean isInitialized()>": 0.270197304078222
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F32: float unsafe_getF(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.segmentation.slic.SegmentSlic_F32: float getIntensity(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_zero(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_unsafe(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float convolveSparse(boofcv.struct.image.GrayF32,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: void mul(float)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: float unsafe_getF(int,int)>": 0.30464325441638634
        }, 
        {
            "<boofcv.gui.image.VisualizeImageData: java.awt.image.BufferedImage grayMagnitude(boofcv.struct.image.GrayF32,java.awt.image.BufferedImage,float)>": 0.2988868618060656
        }, 
        {
            "<boofcv.alg.segmentation.ms.MergeRegionMeanShift: void <init>(int,float)>": 0.28836987816965776
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplHarrisCornerWeighted_S16: void <init>(int,float)>": 0.2877220869120796
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplHarrisCorner_S16: void <init>(int,float)>": 0.2877220869120796
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: long lowerTailCount()>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void setPaused(boolean)>": 0.19888868861602396
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.17928964547779763
        }, 
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: boolean process(boofcv.struct.image.ImageBase)>": 0.1690546304152334
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16732495453000434
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.EndPoint: void setValues(int,boolean,long)>": 0.16607439962839204
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.IntervalView offsetInterval(net.imglib2.RandomAccessible,long[],long[])>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.3211945712705503
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.29711495375466795
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2773873489966126
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2773873489966126
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2639811734193738
        }
    ], 
    "<net.imglib2.display.awt.UnsignedIntDataBuffer: double getElemDouble(int)>": [
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.4306574419217863
        }, 
        {
            "<Catalano.Imaging.Filters.Add: void <init>(int,int,int)>": 0.4289196145731164
        }, 
        {
            "<Catalano.Imaging.Filters.Subtract: void <init>(int,int,int)>": 0.4289196145731164
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: double getDouble(int,int)>": 0.4248429637412123
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: double getDouble(int,int)>": 0.42235184040486534
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: java.lang.String toString()>": [
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String getPatternName(int)>": 0.5010920192132385
        }, 
        {
            "<Catalano.Core.IntRange: java.lang.String toString()>": 0.46629714808488393
        }, 
        {
            "<Catalano.Core.IntPoint: java.lang.String toString()>": 0.46629714808488393
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: java.lang.String toString()>": 0.42989012358771933
        }, 
        {
            "<boofcv.app.BaseStandardInputApp: java.lang.String getCameraDeviceString()>": 0.41411814548239795
        }
    ], 
    "<net.imglib2.view.SlicingRandomAccess: void <init>(net.imglib2.view.SlicingRandomAccess)>": [
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.2320480026185838
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.2320480026185838
        }, 
        {
            "<Catalano.Math.Geometry.GrahamConvexHull: java.util.ArrayList FindFull(java.util.ArrayList)>": 0.16952645942407885
        }, 
        {
            "<Catalano.Math.Geometry.QuadrilateralTransformationCalc: double[][] MapSquareToQuad(java.util.ArrayList)>": 0.16276927983457357
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Rendering: void <init>(java.lang.String,int,java.lang.Object)>": 0.16108666636699193
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImgFactory: net.imglib2.img.sparse.NtreeImg createLongInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1905956679204486
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18708294810845796
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18708294810845796
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1843130748885495
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.1823230856882226
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedRandomAccessibleInterval: net.imglib2.converter.readwrite.WriteConvertedRandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04794633014853841
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.046423834544262965
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04601130713546223
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04552231504557686
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04506479272965292
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg complexFloats(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.view.composite.CompositeIntervalView: void min(long[])>": [
        {
            "<boofcv.alg.misc.PixelMath: void abs(long[],int,int,long[],int,int,int,int)>": 0.25846675897786575
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.25380825089202996
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.25163951777832444
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.25163951777832444
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.25163951777832444
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: int compareTo(net.imglib2.type.numeric.integer.AbstractIntegerType)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3208770324203471
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3208770324203471
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3208770324203471
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$200(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.30231370138082325
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$100(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.30231370138082325
        }
    ], 
    "<net.imglib2.type.logic.BitType: net.imglib2.type.logic.BitType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.PointSampleList$PointSampleListCursor: void reset()>": [
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.15491741431402278
        }, 
        {
            "<org.jbox2d.callbacks.DebugDraw: void clearFlags(int)>": 0.14953565064866994
        }, 
        {
            "<com.flowpowered.react.Utilities: int indexOf(java.lang.Object[],java.lang.Object)>": 0.14601528649871723
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.1437072317138391
        }, 
        {
            "<boofcv.abst.feature.describe.ConfigSiftScaleSpace: void <init>()>": 0.14307745624343587
        }
    ], 
    "<net.imglib2.transform.integer.ComponentMappingTransform: void getComponentMapping(int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.519673839972705
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5061517773825265
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.4906766313473351
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.48995602847974673
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int)>": 0.48275443737485824
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: void updateContainer(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.3187477037083238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.22574829559349857
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.22057752193984925
        }
    ], 
    "<net.imglib2.type.numeric.integer.LongType: int hashCode()>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.33079395522513394
        }, 
        {
            "<org.dyn4j.geometry.Matrix22: int hashCode()>": 0.32316328452209164
        }, 
        {
            "<org.dyn4j.geometry.Vector3: int hashCode()>": 0.3228474515825519
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: int hashCode()>": 0.3205657897285508
        }, 
        {
            "<org.dyn4j.geometry.Vector2: int hashCode()>": 0.3186541343468169
        }
    ], 
    "<net.imglib2.histogram.Real1dBinMapper: void getUpperBound(long,java.lang.Object)>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.4654306950481808
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.46470096652320103
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.4628720056819189
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Vector3 solve33(org.dyn4j.geometry.Vector3)>": 0.43261363621427523
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Matrix33 invert()>": 0.42770751171242727
        }
    ], 
    "<net.imglib2.AbstractLocalizingCursorInt: void jumpFwd(long)>": [
        {
            "<org.jbox2d.testbed.tests.ConveyorBelt: void processFixture(org.jbox2d.dynamics.Fixture,java.lang.Long)>": 0.32395378672635117
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.27155777860217123
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.25881247462951407
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.24975770593987426
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2467720467617631
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: void fwd(int)>": [
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.4039700349013416
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.4039700349013416
        }, 
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.39308798274850476
        }, 
        {
            "<boofcv.alg.feature.detect.line.LineImageOps: void pruneClutteredGrids(boofcv.struct.feature.MatrixOfList,int)>": 0.3914825035614205
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: net.coobird.thumbnailator.util.exif.Orientation typeOf(int)>": 0.3885984925044633
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: boolean valueEquals(net.imglib2.type.numeric.real.FloatType)>": [
        {
            "<Catalano.Core.FloatRange: boolean IsOverlapping(Catalano.Core.FloatRange)>": 0.4916769230762067
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.SphereShape: boolean isEqualTo(net.smert.jreactphysics3d.collision.shapes.CollisionShape)>": 0.449288734691426
        }, 
        {
            "<com.flowpowered.react.collision.shape.SphereShape: boolean isEqualTo(com.flowpowered.react.collision.shape.CollisionShape)>": 0.449288734691426
        }, 
        {
            "<Catalano.Math.Geometry.Line: boolean isHorizontal()>": 0.44857523344919353
        }, 
        {
            "<Catalano.Core.FloatRange: boolean isInside(float)>": 0.4418219877776707
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void add(net.imglib2.type.numeric.integer.Unsigned128BitType)>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayI8)>": 0.23614791713289285
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2351449530630278
        }, 
        {
            "<boofcv.core.image.ConvertImage: boofcv.struct.image.GrayU8 convert(boofcv.struct.image.GrayS64,long,long,int,boofcv.struct.image.GrayU8)>": 0.22894787074994105
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedI8)>": 0.22462625618538337
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.22192002553328397
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImgFactory: net.imglib2.img.NativeImg createByteInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.21705827617664453
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.21705827617664453
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.21595157666228834
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.1783420060558816
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.17275322472499285
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: boolean isInMiddle(java.util.List)>": [
        {
            "<boofcv.demonstrations.calibration.CommonDetectCalibrationApp: boolean isInGrids(georegression.struct.shapes.Polygon2D_F64)>": 0.31327745646393346
        }, 
        {
            "<boofcv.io.SimpleStringNumberReader: boolean next()>": 0.3119461535831264
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrackerTwoPassKltPyramid: void finishTracking()>": 0.30837912755368696
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.ConvexMeshShape: net.smert.jreactphysics3d.mathematics.Vector3 getLocalSupportPointWithoutMargin(net.smert.jreactphysics3d.mathematics.Vector3,net.smert.jreactphysics3d.mathematics.Vector3)>": 0.29981337330423413
        }, 
        {
            "<org.dyn4j.dynamics.World: void getListeners(java.lang.Class,java.util.List)>": 0.2977244085764309
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: double getDoublePosition(int)>": [
        {
            "<boofcv.alg.sfm.DepthSparse3D$F32: double lookupDepth(int,int)>": 0.4100063432378143
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_F32: double unsafe_getD(int,int)>": 0.4100063432378143
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F32: double unsafe_getD(int,int)>": 0.4100063432378143
        }, 
        {
            "<boofcv.factory.filter.convolve.FactoryConvolveSparse$Horizontal1D_F32: double compute(int,int)>": 0.3790878021361213
        }, 
        {
            "<boofcv.factory.filter.convolve.FactoryConvolveSparse$Convolve2D_F32: double compute(int,int)>": 0.3790878021361213
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: boolean hasTails()>": [
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: boolean process(boofcv.struct.image.ImageBase)>": 0.2782949759634314
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: boolean isEmpty()>": 0.2738095238095238
        }, 
        {
            "<Catalano.Math.SparseArray: boolean isEmpty()>": 0.2738095238095238
        }, 
        {
            "<Catalano.Math.Geometry.Line: boolean isVertical()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.Thumbnails$Builder$BufferedImageIterable$1: boolean hasNext()>": 0.2738095238095238
        }
    ], 
    "<net.imglib2.AbstractCursorInt: java.lang.String toString()>": [
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.526752750580476
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendPrefix(java.lang.String,java.lang.String)>": 0.5011337286649346
        }, 
        {
            "<org.jbox2d.common.Transform: java.lang.String toString()>": 0.49977499326548597
        }, 
        {
            "<org.jbox2d.serialization.UnsupportedObjectException: java.lang.String getLocalizedMessage()>": 0.4985106336692748
        }, 
        {
            "<org.jbox2d.common.Sweep: java.lang.String toString()>": 0.4726143207273933
        }
    ], 
    "<net.imglib2.histogram.Real1dBinMapper: net.imglib2.histogram.Real1dBinMapper copy()>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawCircle(com.jogamp.opengl.GL2,org.dyn4j.geometry.Circle,boolean,boolean)>": 0.2454341661413657
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_S32: void <init>(double,int,double,boolean)>": 0.2393988919333102
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_F32: void <init>(double,int,double,boolean)>": 0.2393988919333102
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_S16: void <init>(double,int,double,boolean)>": 0.2393988919333102
        }, 
        {
            "<org.dyn4j.geometry.TransformTest: void rotate()>": 0.23902033327386385
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileNumericType: void add(net.imglib2.type.volatiles.AbstractVolatileNumericType)>": [
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.23777855777677998
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.23777855777677998
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.23568803939131827
        }, 
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.23536608771641823
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean raycast(org.dyn4j.geometry.Vector2,org.dyn4j.geometry.Vector2,boolean,boolean,boolean,java.util.List)>": 0.22054992511898777
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: void decIndex()>": [
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.4274195384558474
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.4147280985068987
        }, 
        {
            "<Catalano.Imaging.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.4147280985068987
        }, 
        {
            "<Catalano.Imaging.Filters.AlphaTrimmedMean: void setT(int)>": 0.40168653618935546
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.AlphaTrimmedMean: void setT(int)>": 0.40168653618935546
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: int compareTo(java.lang.Object)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.31330095864918467
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.31330095864918467
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.31330095864918467
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$200(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.2965193701289685
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$100(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.2965193701289685
        }
    ], 
    "<net.imglib2.AbstractLocalizable: void <init>(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.22574017247451303
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.22574017247451303
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.20911222275329572
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.20334137817692804
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.18794964166224815
        }
    ], 
    "<net.imglib2.converter.ARGBDoubleARGBConverter: void convert(net.imglib2.type.numeric.AbstractARGBDoubleType,net.imglib2.type.numeric.ARGBType)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2193376805259411
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2193376805259411
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2193376805259411
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.2159591436723548
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.21239808581646524
        }
    ], 
    "<net.imglib2.display.projector.IterableIntervalProjector2D: void map()>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.22384323171702747
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.22384323171702747
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.22384323171702747
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply(boofcv.struct.image.GrayS64,double,long,long,boofcv.struct.image.GrayS64)>": 0.21134344142926764
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide(boofcv.struct.image.GrayS64,double,long,long,boofcv.struct.image.GrayS64)>": 0.21134344142926764
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void multT(double[][],double[],double[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.519772105439494
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5132638481617114
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.505284081958669
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4972837564339603
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void removeContactPoint(int)>": 0.496070195579509
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible copy()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.041885390829169554
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.040555355282690636
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04019497583984625
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.039767797685986116
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03936811118326167
        }
    ], 
    "<net.imglib2.iterator.LocalizingZeroMinIntervalIterator: void jumpFwd(long)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3495468000100693
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.32528446683469825
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.32491480067724066
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.31261732098023737
        }, 
        {
            "<org.jbox2d.common.Timer: float getMilliseconds()>": 0.2956339680404375
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: void div(net.imglib2.type.numeric.integer.GenericIntType)>": [
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(Catalano.Core.IntPoint,int,int,int,int)>": 0.36427286377853174
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.3612222498762714
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getBlue(Catalano.Core.IntPoint)>": 0.35704550172706123
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getGreen(Catalano.Core.IntPoint)>": 0.3550260770030453
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getRed(Catalano.Core.IntPoint)>": 0.3550260770030453
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.FloorInterpolatorFactory: net.imglib2.RealRandomAccess create(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.15166887845560387
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.1263514767671512
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.1263514767671512
        }, 
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.11959585451399861
        }, 
        {
            "<net.coobird.thumbnailator.resizers.ProgressiveBilinearResizer: void <init>(java.util.Map)>": 0.11959585451399861
        }
    ], 
    "<net.imglib2.type.numeric.real.AbstractRealType: void mul(double)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillCircleFromTopLeft(com.jogamp.opengl.GL2,double,double,double,double)>": 0.5365000993943728
        }, 
        {
            "<org.dyn4j.geometry.Vector3: org.dyn4j.geometry.Vector3 sum(double,double,double)>": 0.5160755811921937
        }, 
        {
            "<org.dyn4j.geometry.Vector3: org.dyn4j.geometry.Vector3 difference(double,double,double)>": 0.5160755811921937
        }, 
        {
            "<org.dyn4j.geometry.Vector3: org.dyn4j.geometry.Vector3 'to'(double,double,double)>": 0.5160755811921937
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawCircleFromTopLeft(com.jogamp.opengl.GL2,double,double,double,double,boolean,boolean)>": 0.5010582219115353
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: void decIndex(int)>": [
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.6241711271514602
        }, 
        {
            "<boofcv.abst.fiducial.calib.CalibrationDetectorSquareFiducialGrid: int getPointIndex(int,int)>": 0.5747801203619927
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$9: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5631673913280111
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: int getIndex(int,int,int)>": 0.5573780954063181
        }, 
        {
            "<boofcv.struct.image.ImageBase: int getIndex(int,int)>": 0.5485724542486418
        }
    ], 
    "<net.imglib2.position.transform.AbstractPositionableTransform: void setPosition(int[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayF64)>": 0.3845803496723386
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: double[] getDoublePivot()>": 0.36616300997566026
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS32,boofcv.struct.image.InterleavedF64)>": 0.3557192433576686
        }, 
        {
            "<Catalano.Core.ArraysUtil: double[] toDouble(int[])>": 0.33286955041627314
        }, 
        {
            "<boofcv.misc.BoofMiscOps: double[] convertTo_F64(int[])>": 0.33286955041627314
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.MixedTransformView offset(net.imglib2.RandomAccessible,long[])>": [
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.18118653932242723
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.18118653932242723
        }, 
        {
            "<org.dyn4j.dynamics.WorldTest: void listeners()>": 0.17851220793250272
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,boofcv.struct.image.GrayS64)>": 0.17830823939798757
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide(boofcv.struct.image.GrayS64,double,boofcv.struct.image.GrayS64)>": 0.17830823939798757
        }
    ], 
    "<net.imglib2.type.numeric.complex.AbstractComplexType: boolean equals(java.lang.Object)>": [
        {
            "<Catalano.Core.DoubleRange: boolean equals(java.lang.Object)>": 0.48451163989236495
        }, 
        {
            "<org.dyn4j.geometry.Vector2: boolean equals(double,double)>": 0.4479226109607435
        }, 
        {
            "<org.dyn4j.geometry.Vector2: boolean equals(java.lang.Object)>": 0.4408936460284446
        }, 
        {
            "<net.smert.jreactphysics3d.engine.Timer: boolean isPossibleToTakeStep()>": 0.4357567900477737
        }, 
        {
            "<com.flowpowered.react.engine.Timer: boolean isPossibleToTakeStep()>": 0.4357567900477737
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.IntervalView permute(net.imglib2.RandomAccessibleInterval,int,int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2911765573686867
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.28156828219053714
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.28156828219053714
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2729451544954089
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.26686014246461454
        }
    ], 
    "<net.imglib2.view.SubsampleIntervalView: void min(long[])>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.3036874020267729
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2186582925622686
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.21748958805796192
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.21748958805796192
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.21266100024838364
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: void move(long,int)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.30582935906874814
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.3031998646333549
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.28678956088187046
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.2759292828991365
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2619370572928379
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void setPosition(double,int)>": [
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationAverageGradientIntegral: void <init>(double,int,double,int,double,java.lang.Class)>": 0.4043042024541294
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.SelectRectSubpixel$F32_F32: void <init>(int,int,double)>": 0.3964462393048189
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_F32_U8: void <init>(int,int,double)>": 0.3964462393048189
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.SelectRectSubpixel$S32_F32: void <init>(int,int,double)>": 0.3964462393048189
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_S32_U8: void <init>(int,int,double)>": 0.3964462393048189
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolator1D: void fillWeights()>": [
        {
            "<Catalano.Math.Geometry.QuadrilateralTransformationCalc: double[][] AdjugateMatrix(double[][])>": 0.2509185339601373
        }, 
        {
            "<Catalano.Imaging.Tools.ColorMoments: void <init>(double,double,double)>": 0.24707718414257807
        }, 
        {
            "<Catalano.Math.Matrix: double[] Subtract(double[],double[])>": 0.2470511574376467
        }, 
        {
            "<Catalano.Math.Matrix: double[] Add(double[],double[])>": 0.2470511574376467
        }, 
        {
            "<Catalano.Math.Decompositions.EigenvalueDecomposition: void tql2()>": 0.24702180382168218
        }
    ], 
    "<net.imglib2.view.TransformBuilder: void visitExtended(net.imglib2.view.ExtendedRandomAccessibleInterval)>": [
        {
            "<boofcv.gui.DepthVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.25832301718559847
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.25832301718559847
        }, 
        {
            "<org.dyn4j.collision.narrowphase.PairwiseTypedFallbackCondition: boolean isMatch(java.lang.Class,java.lang.Class)>": 0.2441872359597957
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.2427635448544183
        }, 
        {
            "<boofcv.abst.feature.associate.EnforceUniqueByScore: void <init>(boofcv.abst.feature.associate.Associate,boolean,boolean)>": 0.2385833554726297
        }
    ], 
    "<net.imglib2.img.planar.PlanarCursor: boolean hasNext()>": [
        {
            "<Catalano.Core.IntRange: boolean isInside(int)>": 0.489800208478835
        }, 
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.4878600775930464
        }, 
        {
            "<boofcv.struct.image.ImageBase: boolean isInBounds(int,int)>": 0.4812151106575698
        }, 
        {
            "<boofcv.struct.flow.ImageFlow: boolean isInBounds(int,int)>": 0.4812151106575698
        }, 
        {
            "<boofcv.struct.feature.MatrixOfList: boolean isInBounds(int,int)>": 0.4812151106575698
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsPeriodic: void setPosition(int,int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.28491430222170827
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2803667595523754
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2803667595523754
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2803667595523754
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.2750621474641736
        }
    ], 
    "<net.imglib2.util.Util: void quicksort(float[],int,int)>": [
        {
            "<Catalano.Imaging.Filters.MedianCut: void quickSort(int[],int,int)>": 0.369671580095446
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectSparseStandardWta_F32: boolean select(float[],int)>": 0.3603803359120141
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectSparseBasicWta_F32: boolean select(float[],int)>": 0.35695991794969784
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectSparseStandardWta_F32: boolean select(java.lang.Object,int)>": 0.35039208365607377
        }, 
        {
            "<org.jbox2d.common.BufferUtils: void rotate(float[],int,int,int)>": 0.34361795312815807
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: net.imglib2.type.numeric.complex.ComplexDoubleType createVariable()>": [
        {
            "<org.dyn4j.geometry.EllipseTest: void createZeroWidth()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.geometry.RectangleTest: void createInvalidHeight()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.geometry.HalfEllipseTest: void createZeroHeight()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.geometry.IntervalTest: void create()>": 0.09306821918192615
        }, 
        {
            "<org.dyn4j.collision.AxisAlignedBoundsTest: void createInvalidBounds2()>": 0.09306821918192615
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.CharArray: void <init>(int)>": [
        {
            "<org.dyn4j.sandbox.help.HelpReader: void characters(char[],int,int)>": 0.5315774075852734
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.48756114143768725
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.480546430335053
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.4690702513207908
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.45564948974375985
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorExpWindowingFactory: void <init>()>": [
        {
            "<Catalano.Imaging.Filters.MeanShift: void <init>(int,float)>": 0.19094065395649334
        }, 
        {
            "<Catalano.Core.IntPoint: void <init>(float,float)>": 0.19015970731391624
        }, 
        {
            "<Catalano.Core.FloatPoint: void <init>(int,int)>": 0.19015970731391624
        }, 
        {
            "<boofcv.alg.segmentation.ms.MergeRegionMeanShift: void <init>(int,float)>": 0.18844459036110225
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplFastHelper_F32: void <init>(int)>": 0.18844459036110225
        }
    ], 
    "<net.imglib2.transform.integer.shear.ShearTransform: void apply(int[],int[])>": [
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int)>": 0.47509630494847
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.4669080099870698
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.4638087763307206
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4604903972653938
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4568556838584709
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedCursor: void localize(float[])>": [
        {
            "<boofcv.struct.feature.TupleDesc_F32: void set(float[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: void <init>(int,float[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void <init>(float[],int,int)>": 0.2540764877039817
        }, 
        {
            "<boofcv.alg.interpolate.array.PolynomialNeville_F32: void <init>(int,float[],float[],int)>": 0.25147436847440663
        }, 
        {
            "<Catalano.Imaging.Filters.ImagePyramids: void <init>()>": 0.22423504135338396
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned12BitType: void <init>(net.imglib2.img.NativeImg)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>()>": 0.10540925533894598
        }, 
        {
            "<boofcv.alg.segmentation.slic.SegmentSlic$Pixel: void <init>()>": 0.10248644896874036
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.10127393670836665
        }, 
        {
            "<org.jbox2d.testbed.framework.TestbedController: void stepAndRender()>": 0.1011299793694863
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void <init>(boofcv.struct.image.InterleavedS64,long)>": 0.09882117688026185
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolatorFactory: net.imglib2.RealRandomAccess create(java.lang.Object)>": [
        {
            "<boofcv.demonstrations.feature.detect.line.VideoDisplayLinesApp: void setActiveAlgorithm(int,java.lang.String,java.lang.Object)>": 0.15358057662614888
        }, 
        {
            "<boofcv.alg.enhance.EnhanceImageOps: void equalizeLocal(boofcv.struct.image.GrayU16,int,boofcv.struct.image.GrayU16,int[],int[])>": 0.14788608654974594
        }, 
        {
            "<boofcv.alg.enhance.EnhanceImageOps: void equalizeLocal(boofcv.struct.image.GrayU8,int,boofcv.struct.image.GrayU8,int[],int[])>": 0.14788608654974594
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.147787097926955
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.14729488093315382
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.IntervalView shear(net.imglib2.RandomAccessible,net.imglib2.Interval,int,int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.24824431165282362
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.2468442288310694
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.2468442288310694
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.24330831461970323
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.24330831461970323
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImg: void <init>(net.imglib2.img.sparse.NtreeAccess,long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.13845860565848012
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.13845860565848012
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1281914277862448
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1257869660063697
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.10802474017649849
        }
    ], 
    "<net.imglib2.display.projector.composite.CompositeXYProjector: void setComposite(int,boolean)>": [
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: void setViewKnown(int,boolean)>": 0.5758928571428571
        }, 
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: boolean isViewKnown(int)>": 0.29464285714285715
        }, 
        {
            "<boofcv.abst.feature.detect.interest.ConfigGeneralDetector: void <init>(int,int,float,int,boolean,boolean,boolean)>": 0.2719882510332161
        }, 
        {
            "<boofcv.alg.geo.calibration.Zhang99ParamAll: void <init>(boolean,int,boolean)>": 0.2546589697638087
        }, 
        {
            "<boofcv.abst.feature.detect.extract.ConfigExtract: void <init>(int,float,int,boolean,boolean,boolean)>": 0.24847440646345137
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.ByteArray: java.lang.Object createArray(int)>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_F32_U8: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.33562632983523094
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_S32_U8: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.33562632983523094
        }, 
        {
            "<boofcv.alg.distort.impl.ImplImageDistort_PL: void apply(boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase,int,int,int,int)>": 0.3042974058213425
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2838082849127157
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2838082849127157
        }
    ], 
    "<net.imglib2.type.numeric.real.AbstractRealType: void div(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawPrismaticJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.PrismaticJoint)>": 0.342783015976373
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawRopeJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.RopeJoint)>": 0.3425471189570898
        }, 
        {
            "<Catalano.Math.ComplexNumber: Catalano.Math.ComplexNumber Pow(Catalano.Math.ComplexNumber,double)>": 0.3405267680946604
        }, 
        {
            "<Catalano.Math.ComplexNumber: void Pow(double)>": 0.3352156507986024
        }, 
        {
            "<Catalano.Statistics.Distributions.GammaDistribution: double Entropy()>": 0.33215170322091153
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: void mul(float)>": [
        {
            "<boofcv.alg.feature.dense.DescribeDenseHogAlg: void computeCellHistograms()>": 0.31624421109087053
        }, 
        {
            "<boofcv.alg.feature.detect.line.HoughTransformLineFootOfNorm: void parameterize(int,int,float,float)>": 0.3153121355866662
        }, 
        {
            "<boofcv.alg.tracker.klt.KltTracker: void setAllowedBounds(boofcv.alg.tracker.klt.KltFeature)>": 0.31270927301236867
        }, 
        {
            "<boofcv.examples.tracking.ExampleTrackerMeanShiftLikelihood$RgbLikelihood: float compute(int,int)>": 0.31266052379007664
        }, 
        {
            "<boofcv.alg.feature.detect.line.HoughTransformLineFootOfNorm: void _transform(boofcv.struct.image.GrayS16,boofcv.struct.image.GrayS16,boofcv.struct.image.GrayU8)>": 0.3111552463954525
        }
    ], 
    "<net.imglib2.AbstractLocalizable: double getDoublePosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.49163800764408094
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.49163800764408094
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: double getOutside(int,int)>": 0.4868016044136483
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.47153771681976947
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.46449118080111146
        }
    ], 
    "<net.imglib2.view.StackView$DefaultRA: void localize(long[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS64)>": 0.2738148682644476
        }, 
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.2726774840509485
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2700098964277657
        }, 
        {
            "<boofcv.core.image.impl.ConvertInterleavedToSingle: void average(boofcv.struct.image.InterleavedS64,boofcv.struct.image.GrayS64)>": 0.2685787776869626
        }, 
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.268103768320999
        }
    ], 
    "<net.imglib2.converter.ARGBDoubleARGBConverter: void convert(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.24305110926064444
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Rendering: void <init>(java.lang.String,int,java.lang.Object)>": 0.23185982861881543
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Antialiasing: void <init>(java.lang.String,int,java.lang.Object)>": 0.23185982861881543
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Dithering: void <init>(java.lang.String,int,java.lang.Object)>": 0.23185982861881543
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.AlphaInterpolation: void <init>(java.lang.String,int,java.lang.Object)>": 0.23185982861881543
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: long access$210(net.imglib2.histogram.HistogramNd)>": [
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.3532599845766765
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.25272387104958893
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.Utils: long encodeFloatIntoInteger(float)>": 0.21997706650320273
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: long encodeFloatIntoInteger(float)>": 0.21997706650320273
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.20965696734438366
        }
    ], 
    "<net.imglib2.display.projector.specialized.ArrayImgXYByteProjector: void map()>": [
        {
            "<boofcv.struct.feature.TupleDesc_U8: double getDouble(int)>": 0.28535393439512546
        }, 
        {
            "<boofcv.alg.color.ColorRgb: void rgbToGray_Weighted(boofcv.struct.image.InterleavedU8,boofcv.struct.image.GrayU8)>": 0.24105868101029598
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiplyU_A(byte[],int,int,double,byte[],int,int,int,int)>": 0.23874117973031192
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divideU_A(byte[],int,int,double,byte[],int,int,int,int)>": 0.23874117973031192
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: Catalano.Imaging.FastBitmap make8Bit(float[][],Catalano.Imaging.FastBitmap,float,double)>": 0.22939387704556355
        }
    ], 
    "<net.imglib2.img.cell.AbstractCellImgFactory: int[] checkCellSize(int[],long[])>": [
        {
            "<Catalano.Core.ArraysUtil: int[] Concatenate(int[],int[])>": 0.37361327055377835
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int,int)>": 0.34276891880552735
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int[])>": 0.3370523934268203
        }, 
        {
            "<Catalano.Math.Matrix: int[] getRows(int[],int[])>": 0.3370523934268203
        }, 
        {
            "<boofcv.factory.transform.wavelet.FactoryWaveletDaub: boofcv.struct.wavelet.WlCoef_I32 computeInnerBiorthogonalInverse(boofcv.struct.wavelet.WlCoef_I32)>": 0.32805469698142337
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.10842661409823065
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.10132274924351498
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.10036934567095813
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.09785730607238811
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.09785730607238811
        }
    ], 
    "<net.imglib2.display.screenimage.awt.UnsignedByteAWTScreenImage: java.awt.image.DataBufferByte createDataBuffer(net.imglib2.img.basictypeaccess.array.ByteArray)>": [
        {
            "<boofcv.struct.feature.TupleDesc_I8: void <init>(int)>": 0.13325044772225653
        }, 
        {
            "<boofcv.io.image.ConvertBufferedImage: java.awt.image.BufferedImage extractBuffered(boofcv.struct.image.GrayU8)>": 0.1311227930416687
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_I8: void set(byte[])>": 0.1244489319234661
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_I8: int size()>": 0.11249426064331437
        }, 
        {
            "<boofcv.io.video.CreateMJpeg: byte[] readVariableLength(java.io.DataInputStream,byte)>": 0.11012693519343583
        }
    ], 
    "<net.imglib2.img.cell.ListImgCells: void <init>(net.imglib2.img.basictypeaccess.array.ArrayDataAccess,net.imglib2.util.Fraction,long[],int[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.23396812811717926
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.22752887083364928
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int)>": 0.22686574898290393
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.21358452621134105
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.20036320473737163
        }
    ], 
    "<net.imglib2.view.RandomAccessibleIntervalCursor: void localize(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.FloorInterpolatorFactory: net.imglib2.interpolation.randomaccess.FloorInterpolator create(net.imglib2.RandomAccessible)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06454972243679027
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0625
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06194461797903697
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.061286292230682514
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06067033396213444
        }
    ], 
    "<net.imglib2.view.iteration.SlicingCursor: long getLongPosition(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.6188643624249502
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5517168169858438
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5382297579524616
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.5137724358016377
        }, 
        {
            "<org.jbox2d.collision.Distance$DistanceProxy: org.jbox2d.common.Vec2 getVertex(int)>": 0.5137724358016377
        }
    ], 
    "<net.imglib2.view.TransformBuilder$2: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,java.util.List,int[],java.util.Comparator)>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparitySparseScoreSadRect_S16: void <init>(int,int,int,int)>": 0.35401401851748543
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparitySparseScoreSadRect_U8: void <init>(int,int,int,int)>": 0.35401401851748543
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.339361213975527
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.33352220906539076
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.33352220906539076
        }
    ], 
    "<net.imglib2.type.numeric.integer.ByteType: net.imglib2.type.numeric.integer.ByteType copy()>": [
        {
            "<org.jbox2d.particle.ParticleColor: void <init>()>": 0.11631052629980886
        }, 
        {
            "<org.jbox2d.particle.ParticleColor: void <init>(byte,byte,byte,byte)>": 0.11195846607693935
        }, 
        {
            "<org.jbox2d.collision.ContactID: void flip()>": 0.11153357472981405
        }, 
        {
            "<org.jbox2d.particle.ParticleColor: void set(byte,byte,byte,byte)>": 0.11027885519384148
        }, 
        {
            "<org.jbox2d.collision.ContactID: void zero()>": 0.11005109731001664
        }
    ], 
    "<net.imglib2.util.Intervals: long numElements(int[])>": [
        {
            "<Catalano.Math.Tools: int Sum(int[])>": 0.49915596767611986
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int sumCoefficients(int[])>": 0.49915596767611986
        }, 
        {
            "<Catalano.Statistics.HistogramStatistics: int Mode(int[])>": 0.48373152454053225
        }, 
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.4696444543624718
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.4696444543624718
        }
    ], 
    "<net.imglib2.position.transform.FloorOffset: void setPosition(float,int)>": [
        {
            "<org.jbox2d.tests.math.SinCosTest: long speedTestMath(int,int)>": 0.21176389878146673
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2106681369548762
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.20754449156360855
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.20754449156360855
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.20754449156360855
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: boolean valueEquals(net.imglib2.type.numeric.integer.GenericLongType)>": [
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.4169808852994868
        }, 
        {
            "<Catalano.Core.Stopwatch: boolean isRunning()>": 0.41079089066765817
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.39838085066655965
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.39838085066655965
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.39838085066655965
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: void <init>(net.imglib2.view.RandomAccessibleOnRealRandomAccessible,net.imglib2.RealRandomAccess)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0563436169819011
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0545544725589981
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.05406969538743988
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05349506156386412
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.05295740910852022
        }
    ], 
    "<net.imglib2.neighborsearch.RadiusNeighborSearchOnKDTree: net.imglib2.Sampler getSampler(int)>": [
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: java.lang.Object getUserData(int)>": 0.2444557237570986
        }, 
        {
            "<Catalano.Math.Geometry.ConvexHullDefects: Catalano.Math.Geometry.ConvexityDefect ExtractDefect(java.util.ArrayList,int,int)>": 0.23285558822434732
        }, 
        {
            "<Catalano.Math.Geometry.FlatAnglesOptimizer: java.util.ArrayList OptimizeShape(java.util.ArrayList)>": 0.2190181087945047
        }, 
        {
            "<Catalano.Math.Geometry.GrahamConvexHull: java.util.ArrayList FindFull(java.util.ArrayList)>": 0.20782539888160628
        }, 
        {
            "<Catalano.Imaging.Tools.QuadrilateralTransformation: void CalculateDestinationSize()>": 0.20550898665435613
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned4BitType: void <init>(net.imglib2.img.basictypeaccess.LongAccess)>": [
        {
            "<boofcv.app.calib.AssistedCalibration$1: georegression.struct.shapes.Polygon2D_F64 createInstance()>": 0.07388220906506968
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void startWorkerThread()>": 0.0657951694959769
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void startWorkerThread()>": 0.0657951694959769
        }, 
        {
            "<boofcv.gui.DepthVideoAppBase: void startWorkerThread()>": 0.0657951694959769
        }, 
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareFiducial$Detector: void <init>()>": 0.06363507084690104
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: void setPosition(net.imglib2.Localizable)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09718671256528
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.09174598761193291
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.08996469021204838
        }, 
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.08861469461982084
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.08838834764831845
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void realMin(net.imglib2.RealPositionable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: void sub(net.imglib2.type.numeric.ARGBType)>": [
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(Catalano.Core.IntPoint,int,int,int,int)>": 0.4968357592415232
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getBlue(Catalano.Core.IntPoint)>": 0.4937155737581609
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getGreen(Catalano.Core.IntPoint)>": 0.48989095931473775
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getRed(Catalano.Core.IntPoint)>": 0.48989095931473775
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: boofcv.struct.image.ImageBase subimage(int,int,int,int,boofcv.struct.image.ImageBase)>": 0.48026633267533025
        }
    ], 
    "<net.imglib2.view.TransformBuilder$4: void <init>(net.imglib2.view.TransformBuilder,net.imglib2.transform.integer.SlicingTransform,boolean,net.imglib2.RandomAccessible)>": [
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.22820512820512817
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.22820512820512817
        }, 
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.22812290775026625
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.22689686309955928
        }, 
        {
            "<boofcv.abst.feature.detect.extract.WrapperNonMaxCandidate: void <init>(boofcv.alg.feature.detect.extract.NonMaxCandidate,boolean,boolean)>": 0.2068496337977838
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: long distributionCount(int,long)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.39350597990377123
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.3843853207826404
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.35736453271563073
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.32442477388497937
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.32025084980495433
        }
    ], 
    "<net.imglib2.display.screenimage.awt.UnsignedByteAWTScreenImage: void <init>(net.imglib2.type.numeric.integer.UnsignedByteType,net.imglib2.img.basictypeaccess.array.ByteArray,long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.15729768613092662
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.15729768613092662
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1456513577327886
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.13908532168678328
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.12126492036826719
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListRandomAccess: void move(int,int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.35896043885366713
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.31537769627539236
        }, 
        {
            "<org.jbox2d.tests.math.SinCosTest: long speedTestMath(int,int)>": 0.2884892068346552
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2857913719486188
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2857913719486188
        }
    ], 
    "<net.imglib2.type.numeric.AbstractARGBDoubleType: void add(net.imglib2.type.numeric.AbstractARGBDoubleType)>": [
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void <init>(Catalano.Imaging.FastBitmap,Catalano.Core.DoublePoint,Catalano.Core.DoublePoint,Catalano.Core.DoublePoint)>": 0.4092852551544683
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void <init>(Catalano.Imaging.FastBitmap,double,double,double,double,double,double)>": 0.4090866806055765
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void <init>(Catalano.Imaging.FastBitmap,Catalano.Core.IntPoint,Catalano.Core.IntPoint,Catalano.Core.IntPoint)>": 0.40846718856297415
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void setNodes(Catalano.Imaging.ActiveContour.Ovuscule.OvusculeSnake2DNode[])>": 0.40643093135163977
        }, 
        {
            "<Catalano.Math.ComplexNumber: void Pow(double)>": 0.4046486092999563
        }
    ], 
    "<net.imglib2.util.Util: int pow(int,int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5971155460191714
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.5907454574346209
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5897371455548367
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5732745278035947
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5672746964159097
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: java.math.BigInteger getMaxBigIntegerValue()>": [
        {
            "<Catalano.Math.RationalNumber: void <init>(int)>": 0.30286986346541267
        }, 
        {
            "<Catalano.Math.RationalNumber: void <init>(java.math.BigInteger)>": 0.29799149295423266
        }, 
        {
            "<Catalano.Math.RationalNumber: void <init>(int,int)>": 0.2876607726493743
        }, 
        {
            "<Catalano.Math.RationalNumber: void <init>(java.math.BigInteger,java.math.BigInteger)>": 0.27197265512015656
        }, 
        {
            "<Catalano.Math.RationalNumber: void Multiply(java.math.BigInteger,java.math.BigInteger)>": 0.25333906432185205
        }
    ], 
    "<net.imglib2.type.numeric.ARGBDoubleType: void set(double,double,double,double)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillCircleFromTopLeft(com.jogamp.opengl.GL2,double,double,double,double)>": 0.5178332328475961
        }, 
        {
            "<Catalano.Math.Distances.Distance: double SquaredEuclidean(double,double,double,double)>": 0.5151742247018822
        }, 
        {
            "<Catalano.Math.Geometry.QuadrilateralTransformationCalc: double Det2(double,double,double,double)>": 0.514622372317729
        }, 
        {
            "<org.dyn4j.geometry.Vector3: void <init>(double,double,double,double,double,double)>": 0.5122492099643766
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Manhattan(double,double,double,double)>": 0.5105729704035235
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.MixedTransformView invertAxis(net.imglib2.RandomAccessible,int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.23602838686314015
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.22792312707026832
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.22792312707026832
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.2270406871745065
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.2270406871745065
        }
    ], 
    "<net.imglib2.converter.RealDoubleConverter: void convert(net.imglib2.type.numeric.RealType,net.imglib2.type.numeric.real.DoubleType)>": [
        {
            "<org.dyn4j.geometry.TransformTest: void rotate()>": 0.2054656420515421
        }, 
        {
            "<org.dyn4j.geometry.AABBTest: void expand()>": 0.1994107849628539
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawMouseJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.PinJoint,double)>": 0.19883792199954095
        }, 
        {
            "<org.dyn4j.geometry.Vector2Test: void distanceBugInVersions_1_1_0_to_3_1_7()>": 0.19624022786617382
        }, 
        {
            "<org.dyn4j.dynamics.AngleJointTest: void setMinAndMax()>": 0.19620879435999555
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: double getRealDouble()>": [
        {
            "<boofcv.alg.sfm.DepthSparse3D$F32: double lookupDepth(int,int)>": 0.3333098443530773
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_F32: double unsafe_getD(int,int)>": 0.3333098443530773
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F32: double unsafe_getD(int,int)>": 0.3333098443530773
        }, 
        {
            "<boofcv.factory.filter.convolve.FactoryConvolveSparse$Horizontal1D_F32: double compute(int,int)>": 0.30837712401746653
        }, 
        {
            "<boofcv.factory.filter.convolve.FactoryConvolveSparse$Convolve2D_F32: double compute(int,int)>": 0.30837712401746653
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: void localize(int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.2540764877039817
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.21777659600227028
        }
    ], 
    "<net.imglib2.type.numeric.ARGBDoubleType: net.imglib2.type.numeric.ARGBDoubleType copy()>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawMouseJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.PinJoint,double)>": 0.32572945325354563
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void access$000(boofcv.app.calib.AssistedCalibration,double,double,double,double)>": 0.32571559337527756
        }, 
        {
            "<org.dyn4j.geometry.TransformTest: void rotate()>": 0.32207630010388216
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawVector(com.jogamp.opengl.GL2,org.dyn4j.geometry.Vector2,org.dyn4j.geometry.Vector2,double)>": 0.3213158352453983
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceSe3SymmetricSq: void setIntrinsic(double,double,double,double,double,double)>": 0.31709264464962117
        }
    ], 
    "<net.imglib2.transform.integer.SequentializeTransform$1: int numSourceDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,int,int,byte[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5811787841893516
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5795957554113238
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.574959397921157
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5628405374594679
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5608701810597032
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: java.math.BigInteger getBigInteger()>": [
        {
            "<Catalano.Math.RationalNumber: void Multiply(int,int)>": 0.22106891667196943
        }, 
        {
            "<Catalano.Math.RationalNumber: void Subtract(int,int)>": 0.21993897456677208
        }, 
        {
            "<Catalano.Math.RationalNumber: void Add(int,int)>": 0.21993897456677208
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.21884874340761257
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.2173728226719424
        }
    ], 
    "<net.imglib2.img.array.ArrayImg: long offset(net.imglib2.Interval)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.3063721497242649
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.29785724290980675
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2968881233424067
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2874420817414114
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.268474652743549
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: long getLongPosition(int)>": [
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.35414788767880295
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.3538304461047289
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.28510903087954015
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.2793978046724663
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.2793978046724663
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void map(java.util.List,long[])>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void renderArrows()>": 0.37234178045790955
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void renderMagnets()>": 0.37234178045790955
        }, 
        {
            "<boofcv.demonstrations.calibration.CommonDetectCalibrationApp: boolean isInGrids(georegression.struct.shapes.Polygon2D_F64)>": 0.3593877664339726
        }, 
        {
            "<boofcv.gui.feature.AssociationScorePanel: void computeScore(boolean,int)>": 0.356098074506783
        }, 
        {
            "<org.dyn4j.dynamics.World: void getListeners(java.lang.Class,java.util.List)>": 0.3439311008281445
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: net.imglib2.view.SubsampleView$SubsampleRandomAccess copy()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.041885390829169554
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.040555355282690636
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04019497583984625
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.039767797685986116
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03936811118326167
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform$InverseTranslationTransform: long getTranslation(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.5823849348131012
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5157024741462656
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.5142200901614531
        }, 
        {
            "<org.jbox2d.collision.Distance$DistanceProxy: org.jbox2d.common.Vec2 getVertex(int)>": 0.5142200901614531
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: org.jbox2d.collision.AABB getFatAABB(int)>": 0.5142200901614531
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgFactory: net.imglib2.img.NativeImg createByteInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.13257949307988665
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.13257949307988665
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.12277271921448075
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.12050140956603536
        }, 
        {
            "<boofcv.gui.StandardAlgConfigPanel: void <init>()>": 0.11572751247156893
        }
    ], 
    "<net.imglib2.util.Util: long[] getArrayFromValue(long,int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.515342188161507
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.4814217941640671
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.47076070793766284
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4672079417037638
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.4626127769591179
        }
    ], 
    "<net.imglib2.view.StackView$StackAccessMode: void <init>(java.lang.String,int)>": [
        {
            "<net.smert.jreactphysics3d.configuration.ContactsPositionCorrectionTechnique: void <init>(java.lang.String,int)>": 0.4415584415584415
        }, 
        {
            "<net.smert.jreactphysics3d.constraint.JointType: void <init>(java.lang.String,int)>": 0.4415584415584415
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.CollisionShapeType: void <init>(java.lang.String,int)>": 0.4415584415584415
        }, 
        {
            "<net.smert.jreactphysics3d.configuration.JointsPositionCorrectionTechnique: void <init>(java.lang.String,int)>": 0.4415584415584415
        }, 
        {
            "<Catalano.Statistics.Analysis.PrincipalComponentAnalysis$AnalysisMethod: void <init>(java.lang.String,int)>": 0.4415584415584415
        }
    ], 
    "<net.imglib2.img.cell.CellImgFactory: net.imglib2.img.cell.CellImg createInstance(net.imglib2.img.basictypeaccess.array.ArrayDataAccess,long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18193331882145847
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18193331882145847
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.16888845072941613
        }, 
        {
            "<Catalano.Imaging.Texture.LawsTextureEnergy: void <init>(int[],int[])>": 0.16888845072941613
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void <init>()>": 0.16888845072941613
        }
    ], 
    "<net.imglib2.type.numeric.integer.LongType: void setBigInteger(java.math.BigInteger)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.22187986087078743
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.22187986087078743
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.22187986087078743
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.21524699743979925
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.InterleavedS64,long,long,boofcv.struct.image.InterleavedS64)>": 0.20916243127372558
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: int compareTo(java.lang.Object)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.4317581461874518
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.3987872556289599
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3678944452106656
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3678944452106656
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3678944452106656
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgs: net.imglib2.img.planar.PlanarImg bits(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: void move(long,int)>": [
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayF32)>": 0.1918981815496716
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.18868728623271852
        }, 
        {
            "<boofcv.core.image.border.ImageBorder_S64: void set(int,int,long)>": 0.1803357160729523
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.17753711473423037
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.17499832294689424
        }
    ], 
    "<net.imglib2.view.RandomAccessibleIntervalCursor: void <init>(net.imglib2.RandomAccessible)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2853993948812974
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2853993948812974
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2808221211269415
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2574261820259405
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2411323763828836
        }
    ], 
    "<net.imglib2.display.projector.composite.CompositeXYRandomAccessibleProjector: int updateCurrentArrays()>": [
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: int getNumUnknownViews()>": 0.3009283773684975
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: int[] makeFateTable()>": 0.27922317900328164
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.2640517105191177
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.26230688798192175
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.25867836547388084
        }
    ], 
    "<net.imglib2.type.numeric.integer.ByteType: java.math.BigInteger getBigInteger()>": [
        {
            "<Catalano.Math.RationalNumber: void Subtract(Catalano.Math.RationalNumber)>": 0.22322774838529674
        }, 
        {
            "<Catalano.Math.RationalNumber: void Add(Catalano.Math.RationalNumber)>": 0.22322774838529674
        }, 
        {
            "<Catalano.Math.RationalNumber: void Factorize()>": 0.22204362020290835
        }, 
        {
            "<Catalano.Math.RationalNumber: void Subtract(java.math.BigInteger)>": 0.22120162501374496
        }, 
        {
            "<Catalano.Math.RationalNumber: void Add(java.math.BigInteger)>": 0.22120162501374496
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgFactory: net.imglib2.img.NativeImg createDoubleInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.13257949307988665
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.13257949307988665
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.12277271921448075
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.12050140956603536
        }, 
        {
            "<boofcv.gui.StandardAlgConfigPanel: void <init>()>": 0.11572751247156893
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: void <init>(net.imglib2.img.basictypeaccess.LongAccess,int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36016035441676975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.35455846459436624
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.35455846459436624
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: void indexToPosition(long,long[],int[])>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.30636021788914003
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.2962032320058755
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.InterleavedS64,java.util.Random,long,long)>": 0.2878037230527337
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.27982746184685975
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2796792323962135
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void outer(double[],double[],double[][])>": [
        {
            "<Catalano.Math.Matrix: double[][] CreateMatrix2D(int,int,double)>": 0.41024273341779227
        }, 
        {
            "<Catalano.Math.Matrix: double[][] MultiplyByDiagonal(double[][],double[])>": 0.398171763933871
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3970267159369123
        }, 
        {
            "<Catalano.Imaging.Tools.FastRadialSymmetryTransform: void Normalize(double[][],double[][])>": 0.3923531652954195
        }, 
        {
            "<Catalano.Math.Matrix: double[][] OuterProduct(double[],double[])>": 0.3917083589122488
        }
    ], 
    "<net.imglib2.display.awt.SignedShortDataBuffer: void <init>(short[][],int,int[])>": [
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.2462028230577463
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayF32)>": 0.22339074471043285
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int)>": 0.2211683057264955
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_B: void <init>(int,int)>": 0.2211683057264955
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int,int)>": 0.22026496029102272
        }
    ], 
    "<net.imglib2.view.ExtendedRealRandomAccessibleRealInterval: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: void setReal(double)>": [
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.33801027099321435
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.3319998816845233
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrack: void <init>(double,double,long)>": 0.27275392824008454
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.24132264067299614
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.22671273788385474
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: int get()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.collision.ContactID: int compareTo(java.lang.Object)>": 0.32713587638249
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(byte[],int,int,int,int)>": 0.31912958246678813
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: void div(net.imglib2.type.numeric.integer.GenericLongType)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2679887933858064
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2579115331531891
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.25069894227480943
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.23626500399272526
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.23595832499639566
        }
    ], 
    "<net.imglib2.util.Util: int[] long2int(long[])>": [
        {
            "<Catalano.Math.Matrix: int[] getColumn(int[][],int)>": 0.45273414657687666
        }, 
        {
            "<Catalano.Core.ArraysUtil: int[] toInt(double[])>": 0.451388888888889
        }, 
        {
            "<Catalano.Core.ArraysUtil: int[] toInt(float[])>": 0.451388888888889
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.44777714908123134
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: int[] getPivot()>": 0.4101362215225234
        }
    ], 
    "<net.imglib2.RealPointSampleList$RealPointSampleListCursor: net.imglib2.RealCursor copy()>": [
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.15034988313170589
        }, 
        {
            "<org.box2d.proto.Box2D$PbBody: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.14958843829505516
        }, 
        {
            "<Catalano.Math.Geometry.GrahamConvexHull: java.util.ArrayList FindFull(java.util.ArrayList)>": 0.14890982424563157
        }, 
        {
            "<org.box2d.proto.Box2D$PbWorld: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.14748544458497612
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: void setTo(boofcv.struct.image.ImageInterleaved)>": 0.1469016400551394
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.10842661409823065
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.10132274924351498
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.10036934567095813
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.09785730607238811
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.09785730607238811
        }
    ], 
    "<net.imglib2.img.AbstractNativeImg: net.imglib2.type.NativeType createLinkedType()>": [
        {
            "<org.dyn4j.geometry.hull.DivideAndConquer: org.dyn4j.geometry.Vector2[] generate(org.dyn4j.geometry.Vector2[])>": 0.1176951793892409
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Region: void <init>(net.coobird.thumbnailator.geometry.Position,net.coobird.thumbnailator.geometry.Size)>": 0.05713163056339038
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.URLImageSource: void <init>(java.net.URL,java.net.Proxy)>": 0.05713163056339038
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.URLImageSource: void <init>(java.net.URL)>": 0.05567022142689041
        }, 
        {
            "<net.coobird.thumbnailator.filters.Pipeline: void add(net.coobird.thumbnailator.filters.ImageFilter)>": 0.05277504136509364
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorFactory$Boundary: net.imglib2.outofbounds.OutOfBoundsMirrorFactory$Boundary valueOf(java.lang.String)>": [
        {
            "<net.smert.jreactphysics3d.collision.shapes.CollisionShapeType: net.smert.jreactphysics3d.collision.shapes.CollisionShapeType valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<net.smert.jreactphysics3d.configuration.ContactsPositionCorrectionTechnique: net.smert.jreactphysics3d.configuration.ContactsPositionCorrectionTechnique valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<net.smert.jreactphysics3d.configuration.JointsPositionCorrectionTechnique: net.smert.jreactphysics3d.configuration.JointsPositionCorrectionTechnique valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<net.smert.jreactphysics3d.constraint.JointType: net.smert.jreactphysics3d.constraint.JointType valueOf(java.lang.String)>": 0.260989010989011
        }, 
        {
            "<Catalano.Statistics.Analysis.PrincipalComponentAnalysis$AnalysisMethod: Catalano.Statistics.Analysis.PrincipalComponentAnalysis$AnalysisMethod valueOf(java.lang.String)>": 0.260989010989011
        }
    ], 
    "<net.imglib2.converter.readwrite.ARGBChannelSamplerConverter: net.imglib2.type.numeric.integer.UnsignedByteType convert(net.imglib2.Sampler)>": [
        {
            "<boofcv.core.image.FactoryGImageGray: boofcv.core.image.GImageGray create(java.lang.Class)>": 0.14771521280891667
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void startWorkerThread()>": 0.11959585451399861
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void startWorkerThread()>": 0.11959585451399861
        }, 
        {
            "<boofcv.gui.DepthVideoAppBase: void startWorkerThread()>": 0.11959585451399861
        }, 
        {
            "<org.dyn4j.samples.LinkTerrain: void <init>()>": 0.10436321432853865
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedIterableRandomAccessibleInterval: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.028490144114909487
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.028490144114909487
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.028490144114909487
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.028490144114909487
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.028490144114909487
        }
    ], 
    "<net.imglib2.neighborsearch.KNearestNeighborSearchOnKDTree: net.imglib2.RealLocalizable getPosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.507951431150968
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.500192321953524
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.4851771862988099
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.4748176736264324
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.4686374391227377
        }
    ], 
    "<net.imglib2.AbstractWrappedRealInterval: double realMax(int)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.3782432325354622
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F64: double unsafe_getD(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double convolveSparse(boofcv.struct.image.GrayF64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.interpolation.Interpolant: net.imglib2.RealRandomAccess realRandomAccess(net.imglib2.RealInterval)>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.019702760155977515
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.019702760155977515
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.019702760155977515
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.019702760155977515
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.019702760155977515
        }
    ], 
    "<net.imglib2.type.label.BasePairBitType: boolean valueEquals(net.imglib2.type.label.BasePairBitType)>": [
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.4147376962415307
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.4046550061553241
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.4046550061553241
        }, 
        {
            "<boofcv.io.javacv.JavaCVVideoImageSequence: boolean hasNext()>": 0.4046550061553241
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.3987058049713662
        }
    ], 
    "<net.imglib2.KDTree: void realMin(double[])>": [
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.41549793349128344
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumn(double[][],int)>": 0.3973144980183334
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRow(double[][],int)>": 0.39592283060630346
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumns(double[],int[])>": 0.39110786522669816
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRows(double[],int[])>": 0.39110786522669816
        }
    ], 
    "<net.imglib2.util.ImgUtil: void copy(double[],int,int[],net.imglib2.img.Img)>": [
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getIndex(int[])>": 0.46136687760412176
        }, 
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.43194937076981743
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.43194937076981743
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(double[],int,int,double[],int,int,int,int)>": 0.4080284449919514
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(double[],int,int,double[],int,int,int,int)>": 0.40597327533299055
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileNumericType: void div(net.imglib2.type.volatiles.AbstractVolatileNumericType)>": [
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.23777855777677998
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.23777855777677998
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.23568803939131827
        }, 
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.23536608771641823
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean raycast(org.dyn4j.geometry.Vector2,org.dyn4j.geometry.Vector2,boolean,boolean,boolean,java.util.List)>": 0.22054992511898777
        }
    ], 
    "<net.imglib2.view.SubsampleIntervalView: void max(net.imglib2.Positionable)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.23028776078442167
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.22423752035108865
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.19516104942281642
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.19516104942281642
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.19468784744304193
        }
    ], 
    "<net.imglib2.transform.integer.SequentializeTransform$1: void apply(long[],long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.24729034217626794
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.24729034217626794
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.22895986090025797
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.20773877534405594
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.19764098730509247
        }
    ], 
    "<net.imglib2.type.label.BasePairBitType: int compareTo(java.lang.Object)>": [
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(java.lang.Object)>": 0.22549403898768772
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(org.jbox2d.particle.ParticleSystem$Proxy)>": 0.22425951319456922
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(org.jbox2d.collision.broadphase.Pair)>": 0.20683512840778656
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(java.lang.Object)>": 0.2012066954636964
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Vector2: int getMinAxis()>": 0.18703230483221706
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void fwd(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36016035441676975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.35455846459436624
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.35455846459436624
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void updateIndex(int)>": [
        {
            "<boofcv.alg.feature.describe.DescribePointRectangleRegion: void <init>(int,int)>": 0.36047713069145976
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Median$Run: int CalcLines(int)>": 0.35930358542591234
        }, 
        {
            "<Catalano.Imaging.Filters.AdaptiveContrastEnhancement: int CalcLines(int)>": 0.35930358542591234
        }, 
        {
            "<Catalano.Imaging.Filters.Mode: int CalcLines(int)>": 0.35930358542591234
        }, 
        {
            "<Catalano.Imaging.Filters.Mean: int CalcLines(int)>": 0.35930358542591234
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: void add(net.imglib2.type.volatiles.AbstractVolatileRealType)>": [
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.23777855777677998
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.23777855777677998
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.23568803939131827
        }, 
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.23536608771641823
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean raycast(org.dyn4j.geometry.Vector2,org.dyn4j.geometry.Vector2,boolean,boolean,boolean,java.util.List)>": 0.22054992511898777
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: int compareTo(net.imglib2.type.numeric.integer.UnsignedLongType)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: int access$200(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.2874437581105223
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$100(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.2874437581105223
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.2544631889899203
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.2544631889899203
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.2544631889899203
        }
    ], 
    "<net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolator: net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolator copy()>": [
        {
            "<org.dyn4j.geometry.TransformTest: void rotate()>": 0.14045917106032457
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawMouseJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.PinJoint,double)>": 0.13575941578818224
        }, 
        {
            "<org.dyn4j.geometry.AABBTest: void expand()>": 0.13509686048371655
        }, 
        {
            "<org.dyn4j.dynamics.AngleJointTest: void setMinAndMax()>": 0.1333588796252712
        }, 
        {
            "<org.dyn4j.geometry.IntervalTest: void expand()>": 0.13327689190087785
        }
    ], 
    "<net.imglib2.converter.RealARGBConverter: void convert(java.lang.Object,java.lang.Object)>": [
        {
            "<Catalano.Imaging.Filters.RotateBicubic: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.34806021927263314
        }, 
        {
            "<boofcv.alg.tracker.circulant.CirculantTracker: void gaussianKernel(double,double,boofcv.struct.image.GrayF64,double,boofcv.struct.image.GrayF64)>": 0.34586295653780236
        }, 
        {
            "<Catalano.Statistics.Distributions.BinomialDistribution: double ProbabilityMassFunction(int)>": 0.3443751251135501
        }, 
        {
            "<boofcv.gui.feature.AssociationScorePanel: void drawDistribution(java.awt.Graphics2D,java.util.List,int,int,double)>": 0.34226580743624707
        }, 
        {
            "<org.dyn4j.sandbox.panels.PreviewPanel: void paintComponent(java.awt.Graphics)>": 0.34186304340865703
        }
    ], 
    "<net.imglib2.view.composite.AbstractNumericComposite: void setOne()>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2584534649874901
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2584534649874901
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2584534649874901
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.2563148129876702
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.2546620474446557
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedCursor: void localize(int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.2540764877039817
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.21777659600227028
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: void setPosition(int,int)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.4954196921097764
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.4893810727715689
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.4893810727715689
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRandomAccessible: void <init>(net.imglib2.RandomAccessible,net.imglib2.converter.Converter,net.imglib2.type.Type)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04032389192727559
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03904344047215152
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.038696496074155144
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.03828524323948056
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03790045715961838
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: void <init>(net.imglib2.img.Img)>": [
        {
            "<net.smert.jreactphysics3d.engine.DynamicsWorld: void updateRigidBodiesAABB()>": 0.11813466865711711
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: boolean checkMagnetCapturePicture()>": 0.11751513616635209
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void renderBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.11611533216858289
        }, 
        {
            "<boofcv.gui.DepthVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.11475047128770918
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.11475047128770918
        }
    ], 
    "<net.imglib2.type.logic.BoolType: void setInteger(long)>": [
        {
            "<boofcv.demonstrations.tracker.VisualizeTldTrackerApp: void togglePause()>": 0.41786366668308944
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeCirculantTrackerApp: void togglePause()>": 0.41786366668308944
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: boolean isWithin(int,int,int,int,int)>": 0.41711480062347406
        }, 
        {
            "<org.box2d.proto.Box2D$PbVec2: boolean isInitialized()>": 0.4039506611757762
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.3974626039499307
        }
    ], 
    "<net.imglib2.histogram.Integer1dBinMapper: void getUpperBound(long,java.lang.Object)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3735275197256959
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.35169346496574194
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.33992828188637525
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.33539789124726765
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.314537452930981
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListRandomAccess: void move(int[])>": [
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.33433435379430704
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3249944566297846
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.3109609134094861
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.2998156511833733
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.29939120190449287
        }
    ], 
    "<net.imglib2.display.screenimage.awt.ShortAWTScreenImage: java.awt.image.DataBuffer createDataBuffer(java.lang.Object)>": [
        {
            "<boofcv.struct.image.GrayI16: void _setData(java.lang.Object)>": 0.1532590227806104
        }, 
        {
            "<boofcv.struct.image.InterleavedI16: void _setData(java.lang.Object)>": 0.1532590227806104
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.1345982968042152
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Rendering: void <init>(java.lang.String,int,java.lang.Object)>": 0.12182630799201812
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Antialiasing: void <init>(java.lang.String,int,java.lang.Object)>": 0.12182630799201812
        }
    ], 
    "<net.imglib2.iterator.IntervalIterator: void localize(float[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2165868455583067
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2165868455583067
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.21471933902187387
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1796296296296296
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F32: void set(float[])>": 0.17686625863003808
        }
    ], 
    "<net.imglib2.position.transform.Floor: void move(float[])>": [
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.24772299471592568
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.24704551657456825
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.230984471168653
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.22088531544818718
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_F64: void setF(int,float[])>": 0.21918597301750148
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: int compareTo(net.imglib2.type.numeric.integer.AbstractIntegerType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.27853790090102365
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.2448691276343342
        }, 
        {
            "<boofcv.io.video.VideoMjpegCodec: boolean findMarker(java.io.DataInputStream,byte)>": 0.21891294438365672
        }, 
        {
            "<Catalano.Math.Geometry.PointToProcess: int compareTo(java.lang.Object)>": 0.21839836612578653
        }, 
        {
            "<boofcv.abst.feature.detect.extract.NonMaxLimiter$LocalExtreme: int compareTo(java.lang.Object)>": 0.21839836612578653
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void move(net.imglib2.Localizable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void quaternionInvert(double[],double[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.48571933977200543
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4743207020792333
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateStructure(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.4735071642819715
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.46748093543731584
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateMetrics(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.46680125793718796
        }
    ], 
    "<net.imglib2.img.list.ListImgFactory: net.imglib2.img.Img create(long[],java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.24081859299662556
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.22763060433562957
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.22763060433562957
        }, 
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>()>": 0.22304239398620315
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.19467431438003932
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: double dot(double[],double[])>": [
        {
            "<Catalano.Statistics.Correlations: double VectorInnerProduct(double[],double[])>": 0.5772857551886176
        }, 
        {
            "<Catalano.Math.Matrix: double InnerProduct(double[],double[])>": 0.5772857551886176
        }, 
        {
            "<Catalano.Imaging.Filters.SeparableConvolution: double SumKernel(double[],double[])>": 0.4758631933867026
        }, 
        {
            "<Catalano.Imaging.Tools.HistogramOfOrientedGradients: double Euclidean(double[])>": 0.4610804504639805
        }, 
        {
            "<Catalano.Math.Distances.Distance: double SquaredEuclidean(double[],double[])>": 0.4571365516519324
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg shorts(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.view.IntervalView: net.imglib2.IterableInterval getFullViewIterableInterval()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.015328483487124145
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.015328483487124145
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.015328483487124145
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.015328483487124145
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.015328483487124145
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: void <init>(net.imglib2.RandomAccess,net.imglib2.transform.integer.Slicing)>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.41436077364405455
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.3940363825983344
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3903784298981135
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.PairManager: boolean removePair(int,int)>": 0.3898571958837253
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.PairManager: void shrinkMemory()>": 0.38810719189337894
        }
    ], 
    "<net.imglib2.iterator.IntervalIterator: boolean hasNext()>": [
        {
            "<Catalano.Core.Stopwatch: boolean isRunning()>": 0.4945485634967093
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.4739643758646771
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.4739643758646771
        }, 
        {
            "<boofcv.io.javacv.JavaCVVideoImageSequence: boolean hasNext()>": 0.4739643758646771
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.4575697875022087
        }
    ], 
    "<net.imglib2.transform.integer.ComponentMappingTransform: void apply(long[],long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.6128017112457449
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.591460865715009
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5832331289259932
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5800540888018952
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5742780261181195
        }
    ], 
    "<net.imglib2.view.iteration.SlicingCursor: void localize(double[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5893979327979786
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5833282853181612
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5703647788499532
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5678098459882039
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.5583900047785767
        }
    ], 
    "<net.imglib2.display.screenimage.awt.FloatAWTScreenImage: java.awt.image.DataBufferFloat createDataBuffer(net.imglib2.img.basictypeaccess.array.FloatArray)>": [
        {
            "<boofcv.struct.feature.TupleDesc_F32: void <init>(int)>": 0.13325044772225653
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F32: void <init>(int)>": 0.13325044772225653
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void <init>(float[],int,int)>": 0.13184275314267513
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: void <init>(int,float[])>": 0.1310045962328118
        }, 
        {
            "<org.jbox2d.callbacks.ContactImpulse: void <init>()>": 0.13078470916554102
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: double getDoublePosition(int)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.3782432325354622
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F64: double unsafe_getD(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double convolveSparse(boofcv.struct.image.GrayF64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: void <init>(net.imglib2.img.basictypeaccess.array.ArrayDataAccess,long[],net.imglib2.util.Fraction)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.41311267689679476
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: int get(int)>": 0.4027498434931738
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getLength(int)>": 0.4027498434931738
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparityScoreSadRect_U8: void _process(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayU8,boofcv.struct.image.ImageGray)>": 0.4016654002829249
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparityScoreSadRect_S16: void _process(boofcv.struct.image.GrayS16,boofcv.struct.image.GrayS16,boofcv.struct.image.ImageGray)>": 0.4016654002829249
        }
    ], 
    "<net.imglib2.view.iteration.SlicingCursor: void <init>(net.imglib2.Cursor,net.imglib2.transform.integer.Slicing)>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4369485422200783
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.4149234667423476
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.PairManager: boolean removePair(int,int)>": 0.4134171451218821
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4112927597204833
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.411245736150376
        }
    ], 
    "<net.imglib2.img.sparse.DoubleNtree: net.imglib2.img.sparse.DoubleNtree createInstance(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.12458962570367609
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.12458962570367609
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.11785109527680923
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11532909002102744
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.0989858659890338
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolator: void <init>(net.imglib2.RandomAccessible)>": [
        {
            "<boofcv.alg.segmentation.watershed.WatershedVincentSoille1991: int getTotalRegions()>": 0.17310513986695913
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: void <init>(int)>": 0.16890471231020077
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.StereoDisparityWtoNaiveFive: void <init>(int,int,int,int)>": 0.16857618870868704
        }, 
        {
            "<Catalano.Math.Decompositions.SingularValueDecomposition: double cond()>": 0.16451873384512775
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindowIntegral: void <init>(double,double,double,int,double,int,java.lang.Class)>": 0.16375956093335237
        }
    ], 
    "<net.imglib2.img.sparse.FloatNtree: net.imglib2.img.sparse.FloatNtree createInstance(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.12458962570367609
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.12458962570367609
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.11785109527680923
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11532909002102744
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.0989858659890338
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.ExtendedRandomAccessibleInterval extendZero(net.imglib2.RandomAccessibleInterval)>": [
        {
            "<org.dyn4j.dynamics.WorldTest: void getUserData()>": 0.12729053583079553
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void getUserData()>": 0.12729053583079553
        }, 
        {
            "<org.dyn4j.collision.FixtureTest: void setUserData()>": 0.12319651677504118
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.12058492751953875
        }, 
        {
            "<org.dyn4j.sandbox.panels.WorldPanel: void setWorld(org.dyn4j.dynamics.World)>": 0.11875865619420184
        }
    ], 
    "<net.imglib2.display.projector.sampler.SelectiveSampler: net.imglib2.Sampler copy()>": [
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.28120892392405406
        }, 
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27921783072750345
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27921783072750345
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.27921783072750345
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.27001179346834925
        }
    ], 
    "<net.imglib2.util.Intervals: boolean equalDimensions(net.imglib2.Interval,net.imglib2.Interval)>": [
        {
            "<org.dyn4j.collision.manifold.IndexedManifoldPointId: boolean equals(java.lang.Object)>": 0.31606990614152836
        }, 
        {
            "<org.dyn4j.dynamics.Capacity: boolean equals(java.lang.Object)>": 0.29747093191195473
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int upperBound(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.2954509460704038
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int lowerBound(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.2954509460704038
        }, 
        {
            "<boofcv.misc.BoofMiscOps: boolean checkInside(boofcv.struct.image.ImageBase,boofcv.struct.ImageRectangle)>": 0.2952023927922546
        }
    ], 
    "<net.imglib2.view.IntervalView: java.lang.Object firstElement()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.1758429310762016
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.16907195642463727
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.16907195642463727
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.15495922682123855
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.io.Reader)>": 0.15495922682123855
        }
    ], 
    "<net.imglib2.neighborsearch.RadiusNeighborSearchOnKDTree: int numNeighbors()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.view.iteration.IterableTransformBuilder: net.imglib2.IterableInterval getEfficientIterableInterval(net.imglib2.Interval,net.imglib2.RandomAccessible)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.04890096469218257
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.0483580139723127
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.0467154654343056
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void <init>(boofcv.demonstrations.tracker.CirculantVisualizationPanel$Listener)>": 0.04559099198369714
        }
    ], 
    "<net.imglib2.img.sparse.ShortNtree: void setValue(int,short)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.38901104269312653
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3846723536618065
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.3832696151969503
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.37155075560642714
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.36358570700650333
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsMirrorFactory$Boundary: void <init>(java.lang.String,int)>": [
        {
            "<net.smert.jreactphysics3d.configuration.ContactsPositionCorrectionTechnique: void <init>(java.lang.String,int)>": 0.4415584415584415
        }, 
        {
            "<net.smert.jreactphysics3d.constraint.JointType: void <init>(java.lang.String,int)>": 0.4415584415584415
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.CollisionShapeType: void <init>(java.lang.String,int)>": 0.4415584415584415
        }, 
        {
            "<net.smert.jreactphysics3d.configuration.JointsPositionCorrectionTechnique: void <init>(java.lang.String,int)>": 0.4415584415584415
        }, 
        {
            "<Catalano.Statistics.Analysis.PrincipalComponentAnalysis$AnalysisMethod: void <init>(java.lang.String,int)>": 0.4415584415584415
        }
    ], 
    "<net.imglib2.display.awt.SignedByteDataBuffer: void setElem(int,int,int)>": [
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5751343565165313
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$7: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5747792477906963
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$3: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5747792477906963
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5723049927534144
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$2: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5723049927534144
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: int getIntPosition(int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.5456006401830915
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.49858646749915747
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4968451049311344
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.48979852214936204
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.PairManager: boolean removePair(int,int)>": 0.48797579960202264
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsPeriodic: void move(net.imglib2.Localizable)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.29091728230087294
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.2641135425518252
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2603655252356673
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.25439684724802814
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2537445336409534
        }
    ], 
    "<net.imglib2.interpolation.neighborsearch.NearestNeighborSearchInterpolator: net.imglib2.interpolation.neighborsearch.NearestNeighborSearchInterpolator copy()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.044280744277004756
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04287464628562721
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04249365736239222
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.042042049624769526
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04161950573851823
        }
    ], 
    "<net.imglib2.display.screenimage.awt.ArrayImgAWTScreenImage: void <init>(net.imglib2.type.NativeType,java.lang.Object,long[])>": [
        {
            "<org.dyn4j.VersionTest: void versions()>": 0.2720341152394543
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(int,boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayS32)>": 0.2675096469591636
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS32,int,int,int,boofcv.struct.image.GrayS32)>": 0.2675096469591636
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS32,int,int,int,boofcv.struct.image.GrayS32)>": 0.2675096469591636
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(int,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.26675255873075915
        }
    ], 
    "<net.imglib2.img.array.AbstractArrayLocalizingCursor: boolean hasNext()>": [
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.6023849455289535
        }, 
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.5934959054221014
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.5928412662400641
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.5928412662400641
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.5928412662400641
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: long upperTailCount(int)>": [
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: long getTrackId(int)>": 0.26696453774945905
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: long getTrackId(int)>": 0.26696453774945905
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isInlier(int)>": 0.2590463472473276
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isInlier(int)>": 0.2590463472473276
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomDualTrackPnP: long getTrackId(int)>": 0.24716113497493727
        }
    ], 
    "<net.imglib2.img.NativeImgFactory: net.imglib2.img.NativeImg create(long[],net.imglib2.type.NativeType)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.13832511755238167
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.13832511755238167
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.12805586144349837
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.1118010770131368
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.10366105360784116
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void setPosition(float,int)>": [
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_F32: void <init>(int,float,float)>": 0.3964462393048189
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplPolynomialPixel_I: void <init>(int,float,float)>": 0.3964462393048189
        }, 
        {
            "<boofcv.abst.feature.detect.interest.ConfigGeneralDetector: void <init>(int,int,float)>": 0.3456010616334146
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchGray: void <init>(int,float,boofcv.alg.interpolate.InterpolatePixelS,int,int,float,boolean)>": 0.3449367496482926
        }, 
        {
            "<boofcv.abst.feature.detect.interest.ConfigGeneralDetector: void <init>(int,int,float,int,boolean)>": 0.3442822428944223
        }
    ], 
    "<net.imglib2.view.SubsampleView: void <init>(net.imglib2.RandomAccessible,long)>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2764056183731007
        }, 
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.2694406273902944
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS8,boofcv.struct.image.GrayS64)>": 0.2560492336629998
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayS64)>": 0.2560492336629998
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayF64,boofcv.struct.image.GrayS64)>": 0.2560492336629998
        }
    ], 
    "<net.imglib2.type.logic.BoolType: void and(boolean)>": [
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.43059763171516496
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.42608958284242704
        }, 
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.41672369967353645
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.41672369967353645
        }, 
        {
            "<boofcv.abst.feature.detect.extract.WrapperNonMaxCandidate: void <init>(boofcv.alg.feature.detect.extract.NonMaxCandidate,boolean,boolean)>": 0.37767244829427316
        }
    ], 
    "<net.imglib2.view.iteration.SlicingCursor: void localize(float[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5893979327979786
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5833282853181612
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5703647788499532
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5693853170929909
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.5583900047785767
        }
    ], 
    "<net.imglib2.transform.integer.ComponentMappingTransform: net.imglib2.transform.integer.ComponentMappingTransform preConcatenate(net.imglib2.transform.integer.ComponentMapping)>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4689113794090941
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.45661067802945
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.44838691369379813
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.PairManager: boolean removePair(int,int)>": 0.44669846525148976
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.44472852601999946
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void <init>(java.math.BigInteger)>": [
        {
            "<boofcv.core.encoding.ImplConvertNV21: void nv21ToGray(byte[],boofcv.struct.image.GrayU8)>": 0.2562302166343736
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void flipHorizontal(boofcv.struct.image.GrayI8)>": 0.25315858288393356
        }, 
        {
            "<boofcv.io.image.ConvertRaster: void from_1BU8_to_U8(boofcv.struct.image.GrayU8,byte[],byte[],int,int,int,int)>": 0.2521713420266436
        }, 
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.2493640796562972
        }, 
        {
            "<boofcv.io.image.ConvertRaster: void grayToBuffered(boofcv.struct.image.GrayU8,sun.awt.image.ByteInterleavedRaster)>": 0.24872989671092433
        }
    ], 
    "<net.imglib2.transform.integer.BoundingBox: void <init>(net.imglib2.Interval)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.279999931941627
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2763004519352053
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2763004519352053
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.269927519276114
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.269913356243121
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: void set(net.imglib2.type.numeric.ARGBType)>": [
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.29772617643192967
        }, 
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.29443155358186823
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.29443155358186823
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.29443155358186823
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(int,boofcv.struct.image.InterleavedU8,int,int,boofcv.struct.image.InterleavedU8)>": 0.2861359894274673
        }
    ], 
    "<net.imglib2.img.cell.AbstractCells: net.imglib2.Cursor cursor()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.0236227795630767
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.0236227795630767
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.0236227795630767
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.0236227795630767
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.0236227795630767
        }
    ], 
    "<net.imglib2.util.Util: net.imglib2.type.Type min(net.imglib2.type.Type,net.imglib2.type.Type)>": [
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(org.jbox2d.collision.broadphase.Pair)>": 0.1525366673869996
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void boundRectangleInside(boofcv.struct.image.ImageBase,boofcv.struct.ImageRectangle)>": 0.1520888260726217
        }, 
        {
            "<Catalano.Imaging.Filters.HysteresisThreshold: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.15139084691173516
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(java.lang.Object)>": 0.15108504021348912
        }, 
        {
            "<Catalano.Imaging.Shapes.IntRectangle: boolean isInside(int,int)>": 0.15047558530273028
        }
    ], 
    "<net.imglib2.img.planar.PlanarPlaneSubsetLocalizingCursor: void updatePositionFromIndex(int)>": [
        {
            "<boofcv.alg.transform.wavelet.impl.ImplWaveletTransformInner: void verticalInverse(boofcv.struct.wavelet.WlCoef_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3574439045697602
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void process(int,int[])>": 0.3565742700007922
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void process(int,java.lang.Object)>": 0.3563412098176699
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.35459113903368067
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ImplConvolveBox: void vertical(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.3544396695900913
        }
    ], 
    "<net.imglib2.display.awt.SignedByteDataBuffer: int getElem(int,int)>": [
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5621846727746335
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$7: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5609779760972249
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$3: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5609779760972249
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5589629216192875
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$2: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5589629216192875
        }
    ], 
    "<net.imglib2.KDTree$ValueNode: void <init>(java.lang.Object,net.imglib2.RealLocalizable,int,net.imglib2.KDTree$ValueNode,net.imglib2.KDTree$ValueNode)>": [
        {
            "<net.coobird.thumbnailator.resizers.configurations.Rendering: void <init>(java.lang.String,int,java.lang.Object)>": 0.23821587308684739
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Antialiasing: void <init>(java.lang.String,int,java.lang.Object)>": 0.23821587308684739
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Dithering: void <init>(java.lang.String,int,java.lang.Object)>": 0.23821587308684739
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.AlphaInterpolation: void <init>(java.lang.String,int,java.lang.Object)>": 0.23821587308684739
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.2119882303138446
        }
    ], 
    "<net.imglib2.transform.integer.BoundingBox: void <init>(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.32195907259883305
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.32195907259883305
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: void <init>(int,int,long[],boofcv.alg.fiducial.square.BaseDetectFiducialSquare)>": 0.3030975115084152
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2976176959149782
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(long[],int,int,long[],int,int,int,int)>": 0.2926599364360215
        }
    ], 
    "<net.imglib2.view.composite.AbstractNumericComposite: java.util.Iterator iterator()>": [
        {
            "<Catalano.Math.SparseArray: java.util.Iterator iterator()>": 0.2263294747994812
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.1979119539719209
        }, 
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.18991505911126727
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.18991505911126727
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.18991505911126727
        }
    ], 
    "<net.imglib2.img.planar.PlanarPlaneSubsetLocalizingCursor: boolean hasNext()>": [
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.6023849455289535
        }, 
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.5934959054221014
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.5928412662400641
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.5928412662400641
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.5928412662400641
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess1D: void move(long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3267607922038396
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.32364200904579665
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.32353434927736796
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(long[],int,int,int,int)>": 0.30416761460984254
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long min(long[],int,int,int,int)>": 0.30416761460984254
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: int compareTo(java.lang.Object)>": [
        {
            "<Catalano.Math.Geometry.PointToProcess: int compareTo(java.lang.Object)>": 0.3297620590918394
        }, 
        {
            "<boofcv.abst.feature.detect.extract.NonMaxLimiter$LocalExtreme: int compareTo(java.lang.Object)>": 0.3297620590918394
        }, 
        {
            "<boofcv.alg.feature.detect.line.ImageLinePruneMerge$1: int compare(java.lang.Object,java.lang.Object)>": 0.308892289731338
        }, 
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.28302336416052903
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EPAAlgorithm$TriangleComparison: int compare(java.lang.Object,java.lang.Object)>": 0.2757935166529757
        }
    ], 
    "<net.imglib2.position.transform.Round: void round(double[],long[])>": [
        {
            "<Catalano.Statistics.Tools: double Sum(double[])>": 0.47541841068846447
        }, 
        {
            "<Catalano.Math.Tools: double Sum(double[])>": 0.47541841068846447
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.46598236503508195
        }, 
        {
            "<Catalano.Math.Matrix: double[] Log(double[])>": 0.46517302643496944
        }, 
        {
            "<Catalano.Statistics.DescriptiveStatistics: double Minimum(double[])>": 0.45852261978464537
        }
    ], 
    "<net.imglib2.img.planar.PlanarPlaneSubsetCursor: void jumpFwd(long)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.20743110369112236
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.20269649934533532
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.19942900801881258
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$200(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.19582971585500344
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$100(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.19582971585500344
        }
    ], 
    "<net.imglib2.converter.ComplexPhaseFloatConverter: void convert(net.imglib2.type.numeric.ComplexType,net.imglib2.type.numeric.real.FloatType)>": [
        {
            "<com.flowpowered.react.collision.shape.SphereShape: void getLocalBounds(com.flowpowered.react.math.Vector3,com.flowpowered.react.math.Vector3)>": 0.19435863798650005
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: void setAllValues(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)>": 0.19108644636634647
        }, 
        {
            "<org.jbox2d.callbacks.DebugDraw: void setCamera(float,float,float)>": 0.18994096893194629
        }, 
        {
            "<boofcv.factory.background.FactoryBackgroundModel: boofcv.alg.background.stationary.BackgroundStationaryGaussian stationaryGaussian(boofcv.factory.background.ConfigBackgroundGaussian,boofcv.struct.image.ImageType)>": 0.1897591722051496
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: void setAllValues(float,float,float,float,float,float,float,float,float)>": 0.1892278869165811
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: void fwd(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.5462930505750294
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.49034478304381485
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.48353756135700293
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4780924305036752
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int)>": 0.46676991896235726
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: long getBinCount()>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void renderArrows()>": 0.47259038037035284
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void renderMagnets()>": 0.47259038037035284
        }, 
        {
            "<boofcv.demonstrations.fiducial.FiducialTrackerApp: boofcv.demonstrations.fiducial.FiducialTrackerApp$FiducialInfo findFiducial(long)>": 0.42178419830755753
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean isEmpty()>": 0.41268911884938836
        }, 
        {
            "<org.dyn4j.dynamics.Body: double getAccumulatedTorque()>": 0.400384861880071
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListCursor: void jumpFwd(long)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.4644889111313864
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.42589133074849644
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.41672369967353645
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.4084123416233854
        }, 
        {
            "<org.jbox2d.common.Timer: float getMilliseconds()>": 0.39201275548895687
        }
    ], 
    "<net.imglib2.display.projector.sampler.IntervalSampler: void reset()>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.2574589689725099
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.2574589689725099
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.2574589689725099
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.InterleavedS64,long,long,boofcv.struct.image.InterleavedS64)>": 0.24628832034315729
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.InterleavedS64,long,long,long,boofcv.struct.image.InterleavedS64)>": 0.24628832034315729
        }
    ], 
    "<net.imglib2.position.transform.AbstractPositionableTransform: void move(long[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.40148486985033094
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.40148486985033094
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel2D_F64,double)>": 0.36548631366949724
        }, 
        {
            "<Catalano.Math.Matrix: void Add(double[],double)>": 0.33715289838682205
        }, 
        {
            "<Catalano.Math.Matrix: void Subtract(double[],double)>": 0.33715289838682205
        }
    ], 
    "<net.imglib2.AbstractCursor: void localize(float[])>": [
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_S64: void getF(int,float[])>": 0.42188889609451374
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF32)>": 0.4038446782269746
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedF32)>": 0.36592657624266656
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchColor: void meanColor(float[],float[],float)>": 0.3500261331312005
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$PL: void getF(int,float[])>": 0.3468498892930734
        }
    ], 
    "<net.imglib2.KDTreeNode: double getSplitCoordinate()>": [
        {
            "<Catalano.Core.Structs.DoubleArrayList: double get(int)>": 0.4821428571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.PyramidDiscreteSampleBlur: double getSigma(int)>": 0.4821428571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.NoCacheScaleSpace: double getCurrentScale()>": 0.4821428571428571
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: double get(int)>": 0.4821428571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.NoCacheScaleSpace: double getScale(int)>": 0.4821428571428571
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.ShortArray: short getValue(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4966616068166122
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.4893146606557609
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.47437111780712504
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.46420451256364215
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.4578204272586427
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedIterableRandomAccessibleInterval: net.imglib2.converter.readwrite.WriteConvertedCursor cursor()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05063696835418333
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04902903378454601
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04859335628264
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.04807692307692309
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04759372565678686
        }
    ], 
    "<net.imglib2.img.cell.AbstractCells: void cellDimensions(int[])>": [
        {
            "<Catalano.Math.Decompositions.LUDecomposition: int[] getPivot()>": 0.4329924519975518
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.406754657569875
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int[])>": 0.4045579620769534
        }, 
        {
            "<Catalano.Math.Matrix: int[] getRows(int[],int[])>": 0.4045579620769534
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumn(int[][],int)>": 0.40212575026158026
        }
    ], 
    "<net.imglib2.neighborsearch.KNearestNeighborSearchOnIterableRealInterval: net.imglib2.Sampler getSampler(int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.4834652807461461
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.4834652807461461
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.4834652807461461
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int max(int[],int,int,int,int)>": 0.4013429655248379
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int min(int[],int,int,int,int)>": 0.4013429655248379
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: net.imglib2.type.numeric.integer.UnsignedShortType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.RealPoint: void setPosition(int,int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.4114253412923709
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.4114253412923709
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void setD(int,double)>": 0.403968035541881
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMinimum(int,double)>": 0.403968035541881
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMaximum(int,double)>": 0.403968035541881
        }
    ], 
    "<net.imglib2.histogram.Integer1dBinMapper: void getUpperBound(long,net.imglib2.type.numeric.IntegerType)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3621175457682244
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.3381652855773228
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.33126770926898763
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.323828090379885
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(org.jbox2d.particle.ParticleSystem$Proxy)>": 0.3023294748895318
        }
    ], 
    "<net.imglib2.view.TransformBuilder: void prependTransform(net.imglib2.transform.Transform)>": [
        {
            "<boofcv.gui.DepthVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.11863096786180194
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.11863096786180194
        }, 
        {
            "<org.dyn4j.collision.narrowphase.PairwiseTypedFallbackCondition: boolean isMatch(java.lang.Class,java.lang.Class)>": 0.11405096132061561
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.11121182505741461
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.11069521337959207
        }
    ], 
    "<net.imglib2.view.TransformBuilder$2: net.imglib2.RandomAccess randomAccess()>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void renderBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.11062540762110826
        }, 
        {
            "<boofcv.gui.DepthVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.10826038615175794
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.10826038615175794
        }, 
        {
            "<org.dyn4j.sandbox.dialogs.AddNonConvexFixtureDialog: void actionPerformed(java.awt.event.ActionEvent)>": 0.10160473048770866
        }, 
        {
            "<org.dyn4j.sandbox.dialogs.AddConvexHullFixtureDialog: void actionPerformed(java.awt.event.ActionEvent)>": 0.10160473048770866
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: void mul(double)>": [
        {
            "<Catalano.Math.Geometry.QuadrilateralTransformationCalc: double Det2(double,double,double,double)>": 0.37813162389516874
        }, 
        {
            "<Catalano.Math.Distances.Distance: double SquaredEuclidean(double,double,double,double)>": 0.3776046417497811
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Manhattan(double,double,double,double)>": 0.37345282965243043
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Chessboard(double,double,double,double)>": 0.36931071411042604
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Chebyshev(double,double,double,double)>": 0.36931071411042604
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: void sub(net.imglib2.type.volatiles.AbstractVolatileRealType)>": [
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.23777855777677998
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.23777855777677998
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.23568803939131827
        }, 
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.23536608771641823
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean raycast(org.dyn4j.geometry.Vector2,org.dyn4j.geometry.Vector2,boolean,boolean,boolean,java.util.List)>": 0.22054992511898777
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: int compareTo(java.lang.Object)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.44067284167776294
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.40870221758588354
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.34840015583511963
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(java.lang.Object)>": 0.34420992654906324
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(org.jbox2d.collision.broadphase.Pair)>": 0.338196041930255
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: void mul(net.imglib2.type.numeric.integer.UnsignedIntType)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.31376158296399126
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.29001144867368306
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.27879041970933305
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.2784751582084055
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.27376256708444696
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.ShortArray: java.lang.Object createArray(int)>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_F32_U8: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.33562632983523094
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_S32_U8: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.33562632983523094
        }, 
        {
            "<boofcv.alg.distort.impl.ImplImageDistort_PL: void apply(boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase,int,int,int,int)>": 0.3042974058213425
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2838082849127157
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2838082849127157
        }
    ], 
    "<net.imglib2.converter.ComplexPowerGLogFloatConverter: void convert(net.imglib2.type.numeric.ComplexType,net.imglib2.type.numeric.real.FloatType)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: float getParticleRadius()>": 0.3042086882609232
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleRadius(float)>": 0.2922974197507435
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: com.flowpowered.react.math.Matrix4x4 negate(com.flowpowered.react.math.Matrix4x4)>": 0.28703634340157996
        }, 
        {
            "<boofcv.alg.weights.WeightDistanceSqGaussian_F32: float weight(float)>": 0.2863605796997176
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: com.flowpowered.react.math.Matrix4x4 set(com.flowpowered.react.math.Matrix4x4)>": 0.28391345170962
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: float getPhaseFloat()>": [
        {
            "<org.jbox2d.dynamics.contacts.Contact: float mixFriction(float,float)>": 0.3072378133345426
        }, 
        {
            "<org.jbox2d.common.Settings: float mixFriction(float,float)>": 0.3072378133345426
        }, 
        {
            "<Catalano.Math.Geometry.PointsCloud: void setQuadrilateralRelativeDistortionLimit(float)>": 0.3045366364956434
        }, 
        {
            "<org.jbox2d.common.Rot: float getAngle()>": 0.3028023210173788
        }, 
        {
            "<org.jbox2d.common.MathUtils: float fastAbs(float)>": 0.3022179620091295
        }
    ], 
    "<net.imglib2.converter.CompositeChannelConverter: void convert(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.25438926161381564
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.21275186430221937
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.21275186430221937
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.20012304704140352
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.19600372567171814
        }
    ], 
    "<net.imglib2.img.cell.AbstractCellImg: void <init>(net.imglib2.img.cell.AbstractCellImgFactory,net.imglib2.img.cell.Cells)>": [
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_U8: void <init>(int)>": 0.25499466884264455
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_S32: void <init>(int)>": 0.25499466884264455
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_S16: void <init>(int)>": 0.25499466884264455
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int)>": 0.25317481625268223
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.2531151990823624
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImgFactory: net.imglib2.img.Img create(long[],java.lang.Object)>": [
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.21110361716348555
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.21110361716348555
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.19177377961240089
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.19177377961240089
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1773215478370479
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: int compareTo(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<Catalano.Math.Geometry.PointToProcess: int compareTo(java.lang.Object)>": 0.30714908907671956
        }, 
        {
            "<boofcv.abst.feature.detect.extract.NonMaxLimiter$LocalExtreme: int compareTo(java.lang.Object)>": 0.30714908907671956
        }, 
        {
            "<boofcv.alg.feature.detect.line.ImageLinePruneMerge$1: int compare(java.lang.Object,java.lang.Object)>": 0.26895632048902385
        }, 
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.26253298750374954
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectSparseStandardWta_F32: boolean select(float[],int)>": 0.25922273267558593
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: int hashCode()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.299534222966088
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.299534222966088
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.299534222966088
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$200(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.2766907224538334
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$100(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.2766907224538334
        }
    ], 
    "<net.imglib2.KDTree: java.lang.String toString(net.imglib2.KDTreeNode,java.lang.String)>": [
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.6050024508460502
        }, 
        {
            "<boofcv.demonstrations.feature.disparity.VisualizeStereoDisparity: void main(java.lang.String[])>": 0.5783959812200219
        }, 
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareFiducial: void main(java.lang.String[])>": 0.5552954309829313
        }, 
        {
            "<org.jbox2d.common.Transform: java.lang.String toString()>": 0.5479505194084959
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendPrefix(java.lang.String,java.lang.String)>": 0.5338934792450207
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void scale(double[],double,double[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4306925167920085
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.42144489326469975
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4210009451284463
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4190897632236889
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.41497235698581003
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: void incIndex(int)>": [
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.6241711271514602
        }, 
        {
            "<boofcv.abst.fiducial.calib.CalibrationDetectorSquareFiducialGrid: int getPointIndex(int,int)>": 0.5747801203619927
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$9: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5631673913280111
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: int getIndex(int,int,int)>": 0.5573780954063181
        }, 
        {
            "<boofcv.struct.image.ImageBase: int getIndex(int,int)>": 0.5485724542486418
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: boolean valueEquals(net.imglib2.type.numeric.ARGBType)>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.5846165927731498
        }, 
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.531434694236937
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.5155930519101228
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean overlap(int,int)>": 0.4865153566947954
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean isSubset(int,int)>": 0.4865153566947954
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: void mul(double)>": [
        {
            "<boofcv.alg.feature.dense.DescribeDenseHogAlg: void getDescriptorsInRegion(int,int,int,int,java.util.List)>": 0.3908408589880116
        }, 
        {
            "<boofcv.alg.sfm.d2.PruneCloseTracks: void process(java.util.List,java.util.List)>": 0.39070564993124296
        }, 
        {
            "<Catalano.Imaging.Filters.Variance: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.3899367193097952
        }, 
        {
            "<boofcv.alg.tracker.tld.TldFernFeature: void incrementN()>": 0.38668452111544954
        }, 
        {
            "<boofcv.alg.tracker.tld.TldFernFeature: void incrementP()>": 0.38668452111544954
        }
    ], 
    "<net.imglib2.view.TransformBuilder: void visitTransformed(net.imglib2.view.TransformedRandomAccessible)>": [
        {
            "<boofcv.gui.DepthVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.25350372125381826
        }, 
        {
            "<boofcv.gui.StereoVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.25350372125381826
        }, 
        {
            "<org.dyn4j.collision.narrowphase.PairwiseTypedFallbackCondition: boolean isMatch(java.lang.Class,java.lang.Class)>": 0.24381164900453622
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.23838813290382244
        }, 
        {
            "<boofcv.abst.feature.associate.EnforceUniqueByScore: boolean uniqueDestination()>": 0.23658632281865433
        }
    ], 
    "<net.imglib2.neighborsearch.NearestNeighborSearchOnIterableRealInterval: double getDistance()>": [
        {
            "<org.dyn4j.sandbox.panels.TransformPanel: double getRotation()>": 0.6116198616198616
        }, 
        {
            "<Catalano.Statistics.DescriptiveStatistics: double StandartDeviation(double[])>": 0.5942358989703281
        }, 
        {
            "<Catalano.Statistics.Tools: double StandartDeviation(double[])>": 0.5942358989703281
        }, 
        {
            "<Catalano.Statistics.Tools: double StandartDeviation(double[],double)>": 0.5854908577056641
        }, 
        {
            "<Catalano.Statistics.DescriptiveStatistics: double StandartDeviation(double[],double)>": 0.5854908577056641
        }
    ], 
    "<net.imglib2.img.planar.PlanarCursor: void reset()>": [
        {
            "<Catalano.Imaging.Filters.HistogramShrink: void <init>()>": 0.17168571440870956
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: void <init>()>": 0.17168571440870956
        }, 
        {
            "<org.jbox2d.dynamics.Filter: void <init>()>": 0.16397155063080396
        }, 
        {
            "<Catalano.Imaging.Filters.Erosion: void <init>(int)>": 0.15945935698131516
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Erosion: void <init>(int)>": 0.15945935698131516
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: void dec()>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3320441077035986
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2822107380010058
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.2670552737401176
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2510515894854382
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.2453007087087036
        }
    ], 
    "<net.imglib2.view.SubsampleIntervalView: void max(long[])>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.31096659430952167
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.3057382683596148
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2547835729863967
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.24629105240841243
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.24629105240841243
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg bytes(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: boolean includesUpperBound(int,long)>": [
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: long getTrackId(int)>": 0.3182506592968145
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: long getTrackId(int)>": 0.3182506592968145
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isInlier(int)>": 0.3138124222159318
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isInlier(int)>": 0.3138124222159318
        }, 
        {
            "<boofcv.abst.sfm.d3.MonoPlaneInfinity_to_MonocularPlaneVisualOdometry: boolean isInlier(int)>": 0.2970142650775524
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolatorFactory: net.imglib2.RealRandomAccess create(java.lang.Object,net.imglib2.RealInterval)>": [
        {
            "<boofcv.demonstrations.feature.detect.line.VideoDisplayLinesApp: void setActiveAlgorithm(int,java.lang.String,java.lang.Object)>": 0.12411690100347247
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.12187807182554693
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.12139638875704822
        }, 
        {
            "<boofcv.alg.enhance.EnhanceImageOps: void equalizeLocal(boofcv.struct.image.GrayU16,int,boofcv.struct.image.GrayU16,int[],int[])>": 0.11958398624140647
        }, 
        {
            "<boofcv.alg.enhance.EnhanceImageOps: void equalizeLocal(boofcv.struct.image.GrayU8,int,boofcv.struct.image.GrayU8,int[],int[])>": 0.11958398624140647
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: void mul(net.imglib2.type.numeric.integer.UnsignedShortType)>": [
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void process(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.3430430866943239
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(Catalano.Core.IntPoint,int,int,int,int)>": 0.34279574994035583
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getBlue(Catalano.Core.IntPoint)>": 0.336430021688703
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: boofcv.struct.image.ImageBase subimage(int,int,int,int,boofcv.struct.image.ImageBase)>": 0.3361673280624054
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMaximum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.33434687216512604
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: net.imglib2.Cursor cursor()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.024397501823713325
        }
    ], 
    "<net.imglib2.img.list.ListRandomAccess: void setPosition(int,int)>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.5216172255992195
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.5208810750825847
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve9(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.5203251816864141
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve7(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.520168570226326
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve11(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.5197356582707041
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRealRandomAccess: net.imglib2.type.Type get()>": [
        {
            "<org.dyn4j.dynamics.WorldTest: void getUserData()>": 0.13072589053758338
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void getUserData()>": 0.13072589053758338
        }, 
        {
            "<org.dyn4j.collision.FixtureTest: void setUserData()>": 0.1260928308340071
        }, 
        {
            "<org.dyn4j.geometry.AbstractShapeTest: void setUserData()>": 0.1172913120753782
        }, 
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.10743667507913031
        }
    ], 
    "<net.imglib2.img.list.ListRandomAccess: void move(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal5(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.4316670965534907
        }, 
        {
            "<boofcv.alg.transform.wavelet.impl.ImplWaveletTransformInner: void verticalInverse(boofcv.struct.wavelet.WlCoef_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.4304485694684361
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal3(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.43015261094236457
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void horizontal5(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.42990307569647485
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void horizontal3(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.4295625489377816
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.IntervalView unshear(net.imglib2.RandomAccessible,net.imglib2.Interval,int,int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.24824431165282362
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.2468442288310694
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.2468442288310694
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.24330831461970323
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.24330831461970323
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.021677749238102995
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.021677749238102995
        }
    ], 
    "<net.imglib2.type.label.BasePairBitType: int compareTo(net.imglib2.type.label.BasePairBitType)>": [
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(org.jbox2d.particle.ParticleSystem$Proxy)>": 0.22717495228784085
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(java.lang.Object)>": 0.2166328405698702
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Vector2: int getMinAxis()>": 0.18858814417787723
        }, 
        {
            "<com.flowpowered.react.math.Vector2: int getMinAxis()>": 0.18858814417787723
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(org.jbox2d.collision.broadphase.Pair)>": 0.18576528866943962
        }
    ], 
    "<net.imglib2.img.sparse.NtreeIntAccess: void <init>(net.imglib2.img.sparse.Ntree,long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.242012144279314
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.242012144279314
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2237584400126592
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.17235608187218834
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.17235608187218834
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: void min(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.type.numeric.real.DoubleType: double get()>": [
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double DistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double OneSideDistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Statistics.Distributions.KolmogorovSmirnovDistribution: double ComplementaryDistributionFunction(double)>": 0.3343029701612813
        }, 
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.32533950937620415
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double pixelScaleCurrentToInput()>": 0.3144161822359606
        }
    ], 
    "<net.imglib2.RealPointSampleList$RealPointSampleListCursor: void reset()>": [
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.15491741431402278
        }, 
        {
            "<org.jbox2d.callbacks.DebugDraw: void clearFlags(int)>": 0.14953565064866994
        }, 
        {
            "<com.flowpowered.react.Utilities: int indexOf(java.lang.Object[],java.lang.Object)>": 0.14601528649871723
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.1437072317138391
        }, 
        {
            "<boofcv.abst.feature.describe.ConfigSiftScaleSpace: void <init>()>": 0.14307745624343587
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3849525311446277
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: float getF(int)>": 0.37110543560105713
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_S64: float getF(int)>": 0.37110543560105713
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.36693378189071646
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.3647521773095299
        }
    ], 
    "<net.imglib2.view.TransformRandomAccess: void setPosition(int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.48703809177335233
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.48337771419629477
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.47756132381937283
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4728014561086328
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4660921256691174
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: net.imglib2.Cursor localizingCursor(net.imglib2.Interval)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.40226478907269614
        }, 
        {
            "<org.jbox2d.dynamics.World: void destroyParticlesInGroup(org.jbox2d.particle.ParticleGroup,boolean)>": 0.39622395060158067
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.39200575449900343
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void addObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.3837806731205467
        }, 
        {
            "<org.jbox2d.dynamics.World: org.jbox2d.particle.ParticleGroup createParticleGroup(org.jbox2d.particle.ParticleGroupDef)>": 0.38206196907772294
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.position.transform.Round: void <init>(net.imglib2.RealLocalizable,net.imglib2.Localizable)>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayF64,boofcv.struct.image.GrayS64)>": 0.26135126577516915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.24579025853517927
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedF64,boofcv.struct.image.InterleavedS64)>": 0.23350254904470816
        }, 
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.2173275002145681
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS8,boofcv.struct.image.GrayS64)>": 0.21388006671782844
        }
    ], 
    "<net.imglib2.histogram.Integer1dBinMapper: void <init>(long,long,boolean)>": [
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.3637238993215979
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.29947175673129034
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.29762820453479727
        }, 
        {
            "<org.jbox2d.testbed.framework.TestbedController: void run()>": 0.28159550934192734
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2715125217159393
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: void setValue(int)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.4257675403110725
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.4257675403110725
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.4243808218415991
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.41962228699555393
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.41962228699555393
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedIterableRandomAccessibleInterval: java.lang.Object iterationOrder()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.26265931675138493
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.25104719102359413
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.25104719102359413
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2332737831015865
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.2276219143654155
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: int green(int)>": [
        {
            "<Catalano.Imaging.FastBitmap: int getGreen(int)>": 0.5847491954558717
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getGreen(int,int)>": 0.5513865950315384
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setRGB(int,int,int,int)>": 0.5103485700345574
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(int,int,int,int,int)>": 0.49260427231397136
        }, 
        {
            "<Catalano.Imaging.Tools.ImageStatistics: int Minimum(Catalano.Imaging.FastBitmap,int,int,int,int)>": 0.48271758996331793
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.composite.CompositeIntervalView collapseReal(net.imglib2.RandomAccessibleInterval)>": [
        {
            "<Catalano.Imaging.Filters.GaussianBoxBlur: void BoxBlurH_RGB(Catalano.Imaging.FastBitmap,Catalano.Imaging.FastBitmap,int)>": 0.22922148244132856
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Maximum: void <init>(int)>": 0.22913263861451996
        }, 
        {
            "<Catalano.Imaging.Filters.ConservativeSmoothing: void <init>(int)>": 0.22913263861451996
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Minimum: void <init>(int)>": 0.22913263861451996
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.ConservativeSmoothing: void <init>(int)>": 0.22913263861451996
        }
    ], 
    "<net.imglib2.img.planar.PlanarCursor: void <init>(net.imglib2.img.planar.PlanarImg)>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3945992425963102
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3937128519182349
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal7(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.39141952497863175
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.3908916742338906
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve11(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.38997217814364077
        }
    ], 
    "<net.imglib2.view.TransformRandomAccess: java.lang.Object get()>": [
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.1950648980862749
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.1950648980862749
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.16791464642414702
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.16791464642414702
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.15756539745759274
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform$InverseTranslationTransform: void applyInverse(long[],long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.24729034217626794
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.24729034217626794
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.22895986090025797
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.20773877534405594
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.19764098730509247
        }
    ], 
    "<net.imglib2.type.logic.BitType: void mul(float)>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.3720460614423329
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.3565754586636352
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean overlap(int,int)>": 0.3347548928104189
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean isSubset(int,int)>": 0.3347548928104189
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean computeClosestPoint(net.smert.jreactphysics3d.mathematics.Vector3)>": 0.3297353194575754
        }
    ], 
    "<net.imglib2.util.Intervals: boolean contains(net.imglib2.Interval,net.imglib2.Interval)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void addObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.38210301122564905
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.331009446212203
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3299540466391047
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.32708781553385885
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.32152500664464395
        }
    ], 
    "<net.imglib2.view.SlicingRandomAccess: void setPosition(int,int)>": [
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.48651234684476896
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.4804562856446779
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.478143850749093
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4723791362271737
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4602632617702225
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolator: void printWeights()>": [
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void print()>": 0.33388423332517164
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomQuadPnP: java.lang.String toString(georegression.struct.se.Se3_F64)>": 0.28800023339415737
        }, 
        {
            "<boofcv.struct.calib.StereoParameters: void print()>": 0.27681980844157655
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void print()>": 0.26540460679072203
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: double computeSum()>": 0.24963240664120456
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: int compareTo(net.imglib2.type.numeric.integer.UnsignedByteType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(Catalano.Imaging.Corners.FeaturePoint)>": 0.4258491346281389
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.42307211475038187
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(boofcv.alg.geo.calibration.CalibrationObservation$Point,boofcv.alg.geo.calibration.CalibrationObservation$Point)>": 0.3877991700277703
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.33137892671572144
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.33137892671572144
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess: void setPosition(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void vertical11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.5026149303592734
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.5023606108593612
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal7(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.5023157795195653
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void vertical9(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.5018620516359591
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.5014098422682772
        }
    ], 
    "<net.imglib2.img.cell.DefaultCell: void <init>(net.imglib2.img.basictypeaccess.array.ArrayDataAccess,int[],long[],net.imglib2.util.Fraction)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.20086802988005464
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.18241400193181645
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.17740752610412133
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(boofcv.struct.image.GrayS64)>": 0.17611896306021657
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(boofcv.struct.image.GrayS64)>": 0.17611896306021657
        }
    ], 
    "<net.imglib2.transform.integer.SequentializeTransform: void applyInverse(net.imglib2.Positionable,net.imglib2.Localizable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5100916772095181
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5029712879179844
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.4951120891432003
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.48882933260419303
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void removeContactPoint(int)>": 0.48148596376432895
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: void move(int,int)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.4954196921097764
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.4893810727715689
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.4893810727715689
        }
    ], 
    "<net.imglib2.type.logic.BitType: java.lang.String toString()>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.4524290501181284
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.4413357041398108
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean overlap(int,int)>": 0.40811962667865764
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean isSubset(int,int)>": 0.40811962667865764
        }, 
        {
            "<org.jbox2d.dynamics.Body: boolean isFixedRotation()>": 0.40023319473989616
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: void <init>(net.imglib2.view.FullSourceMapMixedRandomAccess)>": [
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.25859596584803285
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.25859596584803285
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18021791619586824
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18021791619586824
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.17814101745558297
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgs: net.imglib2.img.planar.PlanarImg ints(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: net.imglib2.view.composite.CompositeView$CompositeRandomAccess copy()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.IntervalView interval(net.imglib2.RandomAccessible,net.imglib2.Interval)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0584019459079829
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.05406205059012895
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.05346179598430837
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.05164589025080292
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void <init>(boofcv.demonstrations.tracker.CirculantVisualizationPanel$Listener)>": 0.05040273807667476
        }
    ], 
    "<net.imglib2.display.projector.composite.CompositeXYRandomAccessibleProjector: void setComposite(int,boolean)>": [
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: void setViewKnown(int,boolean)>": 0.5758928571428571
        }, 
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: boolean isViewKnown(int)>": 0.29464285714285715
        }, 
        {
            "<boofcv.abst.feature.detect.interest.ConfigGeneralDetector: void <init>(int,int,float,int,boolean,boolean,boolean)>": 0.2719882510332161
        }, 
        {
            "<boofcv.alg.geo.calibration.Zhang99ParamAll: void <init>(boolean,int,boolean)>": 0.2546589697638087
        }, 
        {
            "<boofcv.abst.feature.detect.extract.ConfigExtract: void <init>(int,float,int,boolean,boolean,boolean)>": 0.24847440646345137
        }
    ], 
    "<net.imglib2.img.AbstractImg: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.024397501823713325
        }
    ], 
    "<net.imglib2.img.planar.PlanarLocalizingCursor: void reset()>": [
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: void unbufferMove(int)>": 0.25275111985166887
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: void destroyProxy(int)>": 0.24769046036338746
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: void bufferMove(int)>": 0.2458071248893519
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: int createProxy(org.jbox2d.collision.AABB,java.lang.Object)>": 0.24302726014785478
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: int[] getPivot()>": 0.2423947727030115
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned4BitType: void set(long)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.40809392595573296
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.37592130110689626
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.3379410913064502
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3210124262483862
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2937653174389967
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: void mul(net.imglib2.type.numeric.integer.UnsignedByteType)>": [
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(Catalano.Core.IntPoint,int,int,int,int)>": 0.34279574994035583
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getBlue(Catalano.Core.IntPoint)>": 0.336430021688703
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: boofcv.struct.image.ImageBase subimage(int,int,int,int,boofcv.struct.image.ImageBase)>": 0.3361673280624054
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getGreen(Catalano.Core.IntPoint)>": 0.33418363988614425
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getRed(Catalano.Core.IntPoint)>": 0.33418363988614425
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void normalize(double[])>": [
        {
            "<Catalano.Math.Matrix: void Add(double[],double)>": 0.4773856156203356
        }, 
        {
            "<Catalano.Math.Matrix: void Subtract(double[],double)>": 0.4773856156203356
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.4536989266114165
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.4536989266114165
        }, 
        {
            "<Catalano.Math.Matrix: double[] Subtract(double[],double[])>": 0.43447664678653386
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: double getDoublePosition(int)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.3782432325354622
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F64: double unsafe_getD(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double convolveSparse(boofcv.struct.image.GrayF64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void setPosition(long,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.31325484913065393
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.31097891796791843
        }
    ], 
    "<net.imglib2.transform.integer.shear.AbstractShearTransform: void applyInverse(long[],long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.23170492496167674
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.23170492496167674
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2145056688054409
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.20000982369850753
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.18707715270054678
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedRandomAccessible: net.imglib2.converter.readwrite.WriteConvertedRandomAccess randomAccess()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05270462766947299
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.05103103630798288
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.050577568786757836
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05004004806408974
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04953712024382607
        }
    ], 
    "<net.imglib2.img.planar.PlanarLocalizingCursor2D: boolean hasNext()>": [
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.6023849455289535
        }, 
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.5934959054221014
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.5928412662400641
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.5928412662400641
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.5928412662400641
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: int getComponentMapping(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.8028812106614286
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.6927569254918229
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.68467237202013
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.6728382027998716
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.6662651344050108
        }
    ], 
    "<net.imglib2.view.TransformBuilder$4: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: long getTranslation(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.640898077604318
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5680825892963839
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.5661064425770308
        }, 
        {
            "<org.jbox2d.collision.Distance$DistanceProxy: org.jbox2d.common.Vec2 getVertex(int)>": 0.5661064425770308
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: org.jbox2d.collision.AABB getFatAABB(int)>": 0.5661064425770308
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: void move(int[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.360530104534061
        }, 
        {
            "<boofcv.misc.BoofMiscOps: int countNotZero(int[],int)>": 0.3534005801733502
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int max(int[],int,int,int,int)>": 0.3532298597986646
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int min(int[],int,int,int,int)>": 0.3532298597986646
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.34674962081858385
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: void sub(net.imglib2.type.numeric.integer.GenericIntType)>": [
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(Catalano.Core.IntPoint,int,int,int,int)>": 0.36427286377853174
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.3612222498762714
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getBlue(Catalano.Core.IntPoint)>": 0.35704550172706123
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getGreen(Catalano.Core.IntPoint)>": 0.3550260770030453
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getRed(Catalano.Core.IntPoint)>": 0.3550260770030453
        }
    ], 
    "<net.imglib2.img.AbstractImg: void realMin(net.imglib2.RealPositionable)>": [
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.26698093205087026
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(org.jbox2d.collision.broadphase.Pair)>": 0.2576696457996196
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.2561303361961954
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void clear()>": 0.25587756560490377
        }, 
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(Catalano.Imaging.Corners.FeaturePoint)>": 0.25583363680084636
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: void apply(net.imglib2.Localizable,net.imglib2.Positionable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5423503012851358
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5423385681723436
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5302578770043864
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5288639253857845
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5152374377074611
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: void move(int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.2540764877039817
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.21777659600227028
        }
    ], 
    "<net.imglib2.util.Util: void quicksort(double[],int,int)>": [
        {
            "<Catalano.Statistics.Tools: double Mode(double[])>": 0.37611888613269995
        }, 
        {
            "<Catalano.Statistics.DescriptiveStatistics: double Mode(double[])>": 0.37611888613269995
        }, 
        {
            "<Catalano.Imaging.Filters.MedianCut: void quickSort(int[],int,int)>": 0.369671580095446
        }, 
        {
            "<Catalano.Statistics.Tools: double Max(double[])>": 0.34298324063908303
        }, 
        {
            "<Catalano.Statistics.Tools: double Min(double[])>": 0.34298324063908303
        }
    ], 
    "<net.imglib2.KDTree$KDTreeCursor: boolean hasNext()>": [
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.6447857201585537
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.6447857201585537
        }, 
        {
            "<boofcv.io.javacv.JavaCVVideoImageSequence: boolean hasNext()>": 0.6447857201585537
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.594794158132044
        }, 
        {
            "<boofcv.struct.flow.ImageFlow$D: boolean isValid()>": 0.5932400932400933
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsPeriodic: void <init>(net.imglib2.Interval)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.3248985132873628
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.3248985132873628
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.3059697305396948
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.30144432159723406
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.2985172221427735
        }
    ], 
    "<net.imglib2.img.list.ListImg: void <init>(java.util.Collection,long[])>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void renderBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.2661798836824361
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void addObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.2649417719500427
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.2645263150541595
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.EdgeEPA: void <init>(net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA,int)>": 0.2484082068723244
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.24812263945451843
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: void mul(float)>": [
        {
            "<boofcv.alg.feature.detect.interest.FastHessianFeatureDetector: void findLocalScaleSpaceMax(int[],int,int)>": 0.2546276984962046
        }, 
        {
            "<boofcv.alg.feature.detect.interest.FastHessianFeatureDetector: void detectOctave(boofcv.struct.image.ImageGray,int,int[])>": 0.25132964690479687
        }, 
        {
            "<boofcv.alg.feature.detect.interest.FastHessianFeatureDetector: void detect(boofcv.struct.image.ImageGray)>": 0.2462696316438052
        }, 
        {
            "<boofcv.gui.image.VisualizeImageData: java.awt.image.BufferedImage grayMagnitude(boofcv.struct.image.GrayF32,java.awt.image.BufferedImage,float)>": 0.23304105059089927
        }, 
        {
            "<boofcv.alg.segmentation.ms.MergeRegionMeanShift: void <init>(int,float)>": 0.22469281209165162
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: void set(net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType)>": [
        {
            "<org.jbox2d.testbed.framework.TestbedController: void stepAndRender()>": 0.1511356598562146
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.14470719035407653
        }, 
        {
            "<org.jbox2d.testbed.framework.TestbedController: void run()>": 0.13692249966245912
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void <init>(boofcv.struct.image.InterleavedS64,long)>": 0.12909944487358055
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void <init>(boofcv.struct.image.GrayS64,long)>": 0.12909944487358055
        }
    ], 
    "<net.imglib2.position.transform.FloorOffset: void setPosition(double,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(long[],int,int,double,long,long,long[],int,int,int,int)>": 0.2182701742587292
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply_A(long[],int,int,double,long,long,long[],int,int,int,int)>": 0.2182701742587292
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setRange(int,double,double)>": 0.21604617293361766
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void setD(int,double)>": 0.21551565361819233
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMinimum(int,double)>": 0.21551565361819233
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: void setPosition(long,int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.504441827431669
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4462459796648577
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.44331549262362974
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4229946366090648
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.42029515009442187
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.RandomAccessible pair(net.imglib2.RandomAccessible,net.imglib2.RandomAccessible)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.045237952777544825
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.04187628431947846
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.04141132910111297
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.040004734568283136
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void <init>(boofcv.demonstrations.tracker.CirculantVisualizationPanel$Listener)>": 0.039041793034843154
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: void move(net.imglib2.Localizable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.42808703968919737
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.42574442464147527
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4150367774822906
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.41078338787897895
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4042691409732714
        }
    ], 
    "<net.imglib2.AbstractCursor: java.lang.String toString()>": [
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.526752750580476
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendPrefix(java.lang.String,java.lang.String)>": 0.5011337286649346
        }, 
        {
            "<org.jbox2d.common.Transform: java.lang.String toString()>": 0.49977499326548597
        }, 
        {
            "<org.jbox2d.serialization.UnsupportedObjectException: java.lang.String getLocalizedMessage()>": 0.4985106336692748
        }, 
        {
            "<org.jbox2d.common.Sweep: java.lang.String toString()>": 0.4726143207273933
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: void mul(double)>": [
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.27055204670324057
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.27027452086734005
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillGaussian(boofcv.struct.image.GrayS64,java.util.Random,double,double,long,long)>": 0.23806739613847358
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.23690701092341485
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.23150300144944308
        }
    ], 
    "<net.imglib2.img.array.ArrayRandomAccess: void move(long)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.24307098990978243
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.2299875004550736
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.22779667510417215
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2261696489728423
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.22579325064157982
        }
    ], 
    "<net.imglib2.Point: void <init>(int[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS64)>": 0.4048695065832647
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS32,boofcv.struct.image.InterleavedS64)>": 0.3747408916001287
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: int[] getPivot()>": 0.30837216382653854
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.30155807812608115
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayU16,boofcv.struct.image.GrayS64)>": 0.29775619371895246
        }
    ], 
    "<net.imglib2.AbstractRealLocalizable: void <init>(double[])>": [
        {
            "<boofcv.numerics.InterpolateArray: void <init>(double[])>": 0.31557968789356255
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F64: void set(double[],double,double)>": 0.27543450230500016
        }, 
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.27519104068229483
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: void <init>(double[])>": 0.2699047997589354
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void <init>(int)>": 0.26605840726304103
        }
    ], 
    "<net.imglib2.view.TransformBuilder: net.imglib2.RandomAccessible wrapMixedTransform(net.imglib2.RandomAccessible,net.imglib2.transform.integer.MixedTransform)>": [
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlockRelaxed: void <init>(boolean,boolean)>": 0.1605926404366362
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlockStrict: void <init>(boolean,boolean)>": 0.1605926404366362
        }, 
        {
            "<boofcv.demonstrations.calibration.StereoPlanarPanel: void stateChanged(javax.swing.event.ChangeEvent)>": 0.15333903379590608
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void isKinematic()>": 0.15122413117755784
        }, 
        {
            "<org.dyn4j.geometry.Vector3Test: void isOrthogonal()>": 0.14980831220992594
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImgFactory: net.imglib2.img.NativeImg createCharInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.21705827617664453
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.21705827617664453
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.21595157666228834
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.1783420060558816
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.17275322472499285
        }
    ], 
    "<net.imglib2.type.numeric.ARGBType: java.lang.String toString()>": [
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: void checkShape(boofcv.struct.image.ImageGray,boofcv.struct.image.ImageGray)>": 0.48411392486098853
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint: java.lang.String toString()>": 0.4825721448495047
        }, 
        {
            "<org.dyn4j.dynamics.Capacity: java.lang.String toString()>": 0.4798158786769499
        }, 
        {
            "<org.dyn4j.collision.manifold.IndexedManifoldPointId: java.lang.String toString()>": 0.473577006662321
        }, 
        {
            "<boofcv.struct.feature.Match: java.lang.String toString()>": 0.4696500103451636
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolator: net.imglib2.type.numeric.NumericType get()>": [
        {
            "<boofcv.alg.transform.fft.DiscreteFourierTransformOps: void multiplyRealComplex(boofcv.struct.image.GrayF64,boofcv.struct.image.InterleavedF64,boofcv.struct.image.InterleavedF64)>": 0.2925576897332829
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverseFull(double[],boolean)>": 0.29194177495317436
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: double remove(int)>": 0.28587615946263056
        }, 
        {
            "<boofcv.alg.color.ColorRgb: void rgbToGray_Weighted(boofcv.struct.image.InterleavedF64,boofcv.struct.image.GrayF64)>": 0.28513267548584953
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ImplConvolveBox: void vertical(boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64,int)>": 0.28513141234028816
        }
    ], 
    "<net.imglib2.type.logic.BoolType: int getInteger()>": [
        {
            "<boofcv.abst.fiducial.CalibrationFiducialDetector: int totalFound()>": 0.6138447625377657
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Vector2: int getMaxAxis()>": 0.38226926965285285
        }, 
        {
            "<com.flowpowered.react.math.Vector2: int getMaxAxis()>": 0.38226926965285285
        }, 
        {
            "<boofcv.abst.sfm.d3.MonoOverhead_to_MonocularPlaneVisualOdometry: boolean process(boofcv.struct.image.ImageBase)>": 0.2384452245820991
        }, 
        {
            "<boofcv.gui.VideoProcessAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.23190290618559495
        }
    ], 
    "<net.imglib2.view.TransformBuilder: net.imglib2.RandomAccessible wrapSlicingTransform(net.imglib2.RandomAccessible,net.imglib2.transform.integer.SlicingTransform)>": [
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlockRelaxed: void <init>(boolean,boolean)>": 0.1605926404366362
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlockStrict: void <init>(boolean,boolean)>": 0.1605926404366362
        }, 
        {
            "<boofcv.demonstrations.calibration.StereoPlanarPanel: void stateChanged(javax.swing.event.ChangeEvent)>": 0.15333903379590608
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void isKinematic()>": 0.15122413117755784
        }, 
        {
            "<org.dyn4j.geometry.Vector3Test: void isOrthogonal()>": 0.14980831220992594
        }
    ], 
    "<net.imglib2.view.iteration.SlicingCursor: void <init>(net.imglib2.view.iteration.SlicingCursor)>": [
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawPolygon(java.util.List,boolean,java.awt.Graphics2D)>": 0.2041877831294911
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectSparseBasicWta_S32: boolean select(java.lang.Object,int)>": 0.1982915278395452
        }, 
        {
            "<boofcv.struct.image.ImageGray: void setTo(boofcv.struct.image.ImageGray)>": 0.19621241970137634
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: void setTo(boofcv.struct.image.ImageInterleaved)>": 0.1938856047586137
        }, 
        {
            "<Catalano.Math.Geometry.GrahamConvexHull: java.util.ArrayList FindFull(java.util.ArrayList)>": 0.19347591637754835
        }
    ], 
    "<net.imglib2.converter.RealFloatConverter: void convert(java.lang.Object,java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.24305110926064444
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.201832294726364
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.201832294726364
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.18427430546639723
        }, 
        {
            "<boofcv.alg.sfm.robust.ModelManagerScaleTranslate2D: void copyModel(java.lang.Object,java.lang.Object)>": 0.1810950483542926
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: net.imglib2.Cursor cursor(net.imglib2.Interval)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.40226478907269614
        }, 
        {
            "<org.jbox2d.dynamics.World: void destroyParticlesInGroup(org.jbox2d.particle.ParticleGroup,boolean)>": 0.39622395060158067
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.39200575449900343
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void addObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.3837806731205467
        }, 
        {
            "<org.jbox2d.dynamics.World: org.jbox2d.particle.ParticleGroup createParticleGroup(org.jbox2d.particle.ParticleGroupDef)>": 0.38206196907772294
        }
    ], 
    "<net.imglib2.img.planar.PlanarLocalizingCursor2D: void fwd()>": [
        {
            "<Catalano.Imaging.Filters.EnsembleThreshold: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.3960904591465496
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect2D(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.BoxAABB,int,int)>": 0.38184961897214076
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: int getMaxBalance()>": 0.36634843623558555
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect2D(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,int,int)>": 0.3644566455229022
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.RegularClustersIntoGrids: int checkNumberOfConnections(java.util.List)>": 0.3355762934218097
        }
    ], 
    "<net.imglib2.view.SlicingRandomAccess: void setPosition(int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.42604760365919037
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4139137796199519
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.40370622457529104
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.40218653100386936
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.3949597336084292
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: int hashCode()>": [
        {
            "<org.dyn4j.geometry.Matrix22: int hashCode()>": 0.36073361434404144
        }, 
        {
            "<org.dyn4j.geometry.Vector3: int hashCode()>": 0.3602783864493624
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: int hashCode()>": 0.3577231715452224
        }, 
        {
            "<org.dyn4j.geometry.Vector2: int hashCode()>": 0.3550789343744079
        }, 
        {
            "<org.dyn4j.geometry.Mass: int hashCode()>": 0.33319159854390334
        }
    ], 
    "<net.imglib2.type.numeric.integer.LongType: int compareTo(net.imglib2.type.numeric.integer.GenericLongType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.26253298750374954
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.230960523604179
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2193386105675623
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.21546490714187164
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.21530246534264683
        }
    ], 
    "<net.imglib2.img.array.ArrayImgFactory: net.imglib2.img.NativeImg createIntInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1686333664237103
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1686333664237103
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.1559201193509509
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.15386142866645397
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.15386142866645397
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: void setReal(double)>": [
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.33801027099321435
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.3319998816845233
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrack: void <init>(double,double,long)>": 0.27275392824008454
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.24132264067299614
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.22671273788385474
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.ExtendedRandomAccessibleInterval extendMirrorSingle(net.imglib2.RandomAccessibleInterval)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.09174634218511289
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.09072767633979884
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.08764598212022147
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void <init>(boofcv.demonstrations.tracker.CirculantVisualizationPanel$Listener)>": 0.0855362829225267
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.TransformView unshear(net.imglib2.RandomAccessible,int,int)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.42579862127277157
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.42579862127277157
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.4257562311263859
        }, 
        {
            "<boofcv.factory.feature.disparity.FactoryStereoDisparityAlgs: boofcv.alg.feature.disparity.DisparitySparseScoreSadRect scoreDisparitySparseSadRect_F32(int,int,int,int)>": 0.41840010754717966
        }, 
        {
            "<boofcv.factory.feature.disparity.FactoryStereoDisparityAlgs: boofcv.alg.feature.disparity.DisparitySparseScoreSadRect scoreDisparitySparseSadRect_U8(int,int,int,int)>": 0.41840010754717966
        }
    ], 
    "<net.imglib2.view.RandomAccessibleIntervalCursor: int getIntPosition(int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.5078285150911725
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.5078285150911725
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.5078285150911725
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.SquaresIntoRegularClusters: int add(int,int)>": 0.46401913722402865
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.46236799717354615
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRandomAccess: void move(long,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.31325484913065393
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.31097891796791843
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void max(net.imglib2.Positionable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.img.planar.PlanarLocalizingCursor: void jumpFwd(long)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.3382712190102073
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.InterleavedS64,java.util.Random,long,long)>": 0.3186867629575259
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.3154935834600058
        }, 
        {
            "<boofcv.core.image.ConvertImage: boofcv.struct.image.GrayU8 convert(boofcv.struct.image.GrayS64,long,long,int,boofcv.struct.image.GrayU8)>": 0.3144126743848391
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillUniform(boofcv.struct.image.InterleavedS64,java.util.Random,long,long)>": 0.3113802377138467
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: void setValue(byte)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2193376805259411
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2193376805259411
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.2193376805259411
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.2159591436723548
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.21239808581646524
        }
    ], 
    "<net.imglib2.iterator.LocalizingIntervalIterator: void localize(float[])>": [
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_S64: void getF(int,float[])>": 0.4494482389628714
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF32)>": 0.43403432413324206
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedF32)>": 0.3949959276042379
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchColor: void meanColor(float[],float[],float)>": 0.3832306753076067
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$PL: void getF(int,float[])>": 0.3805787737085878
        }
    ], 
    "<net.imglib2.Point: void move(int[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.35054473995482405
        }, 
        {
            "<boofcv.misc.BoofMiscOps: int countNotZero(int[],int)>": 0.34644011587970597
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS64)>": 0.3447306577152276
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.33308360327359116
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.3300172027899271
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedCursor: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F32: float unsafe_getF(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.segmentation.slic.SegmentSlic_F32: float getIntensity(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_zero(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_unsafe(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float convolveSparse(boofcv.struct.image.GrayF32,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.img.list.ListCursor: void set(java.lang.Object)>": [
        {
            "<boofcv.gui.SelectAlgorithmAndInputPanel: void access$100(boofcv.gui.SelectAlgorithmAndInputPanel,int,java.lang.String,java.lang.Object)>": 0.25201157660526974
        }, 
        {
            "<org.dyn4j.sandbox.events.BodyActionEvent: void <init>(java.lang.Object,int,java.lang.String,org.dyn4j.sandbox.SandboxBody)>": 0.2279866140386201
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Rendering: void <init>(java.lang.String,int,java.lang.Object)>": 0.22590970842636068
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Antialiasing: void <init>(java.lang.String,int,java.lang.Object)>": 0.22590970842636068
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Dithering: void <init>(java.lang.String,int,java.lang.Object)>": 0.22590970842636068
        }
    ], 
    "<net.imglib2.view.TransformRandomAccess: void <init>(net.imglib2.view.TransformRandomAccess)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1795569180716574
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1795569180716574
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set(int,int,long[])>": 0.16920030260670463
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.1680163992778599
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.1680163992778599
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(java.util.ListIterator,java.util.ListIterator,int)>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: int selectRightToLeft(int,int[])>": 0.3781936441242812
        }, 
        {
            "<boofcv.alg.shapes.polyline.FitLinesToContour: boolean sanityCheckCornerOrder(int,org.ddogleg.struct.GrowQueue_I32)>": 0.3760496872378568
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.36914212971940186
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.36905262611942696
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void process(int,java.lang.Object)>": 0.3668203889880425
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void <init>(net.imglib2.histogram.HistogramNd)>": [
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomDualTrackPnP: java.util.List getAllTracks()>": 0.32312919866661743
        }, 
        {
            "<boofcv.alg.feature.detect.line.ImageLinePruneMerge: java.util.List createList()>": 0.32312919866661743
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomQuadPnP: java.util.List getAllTracks()>": 0.29500518258436736
        }, 
        {
            "<boofcv.alg.feature.detect.line.ImageLinePruneMerge: void pruneRelative(float)>": 0.29226060911668805
        }, 
        {
            "<boofcv.alg.filter.binary.Contour: boofcv.alg.filter.binary.Contour copy()>": 0.28951030440461073
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: int indexToPosition(int,int[],int[],int)>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.7206708858292001
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.7116085898920983
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(int[],int,int,int[],int,int,int,int)>": 0.6673639799173122
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(int[],int,int,int[],int,int,int,int)>": 0.6596074879924319
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int max(int[],int,int,int,int)>": 0.6527587442143321
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: boolean valueEquals(java.lang.Object)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: boolean equals(java.lang.Object)>": 0.36790853401372436
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isInlier(int)>": 0.32973363070750644
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isInlier(int)>": 0.32973363070750644
        }, 
        {
            "<Catalano.Core.Stopwatch: boolean isRunning()>": 0.31562743814162475
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: boolean isWithin(int,int,int,int,int)>": 0.31020539654264745
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsValue: void move(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.3002794576203457
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.24685594703603989
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.24275852665020936
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.23412753639290362
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.23182227990489357
        }
    ], 
    "<net.imglib2.img.sparse.IntNtree: void <init>(long[],long[],int)>": [
        {
            "<boofcv.demonstrations.calibration.ChessboardPanel: void setThreshold(int)>": 0.28522053576724565
        }, 
        {
            "<boofcv.demonstrations.calibration.SquareGridPanel: void setThreshold(int)>": 0.28522053576724565
        }, 
        {
            "<boofcv.demonstrations.feature.detect.extract.GeneralExtractConfigPanel: void setFeatureSeparation(int)>": 0.28522053576724565
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2540752051198477
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2540752051198477
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: void <init>(net.imglib2.img.basictypeaccess.IntAccess)>": [
        {
            "<Catalano.Imaging.Filters.HistogramShrink: void <init>()>": 0.13404738190002652
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: void <init>()>": 0.13404738190002652
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.SobelEdgeDetector: void <init>()>": 0.12437183348566663
        }, 
        {
            "<boofcv.gui.tracker.TrackerObjectQuadPanel: void enterSelectMode()>": 0.12437183348566663
        }, 
        {
            "<org.jbox2d.dynamics.Filter: void <init>()>": 0.12317689748992192
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: int getIntPosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5867111703953767
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.5785863688512851
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.578159006540164
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5596150726660568
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.5487091398200385
        }
    ], 
    "<net.imglib2.util.Binning: double[] edgeValuesPerBin(int,double,double)>": [
        {
            "<Catalano.Statistics.Normalizations: double[] MinMaxNormalization(double[],double,double)>": 0.5689146340771274
        }, 
        {
            "<Catalano.Math.Tools: double Scale(double,double,double,double,double)>": 0.5189066245864811
        }, 
        {
            "<Catalano.Statistics.Normalizations: double[] RangeNormalization(double[],double,double,double,double)>": 0.5170232753715701
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double computeSigmaScale(int,int)>": 0.514743896585854
        }, 
        {
            "<Catalano.Math.Random: void nextDoubles(double[],double,double)>": 0.5030264061259757
        }
    ], 
    "<net.imglib2.position.transform.AbstractPositionableTransform: void setPosition(long[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF64)>": 0.36711485181302483
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedF64)>": 0.3352806616144842
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.3114562805215896
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.3114562805215896
        }, 
        {
            "<boofcv.alg.feature.describe.DescribeSiftCommon: void normalizeDescriptor(boofcv.struct.feature.TupleDesc_F64,double)>": 0.30859617672917133
        }
    ], 
    "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPowerDouble()>": [
        {
            "<Catalano.Math.Approximation: double Lowprecision_Pow(double,double)>": 0.626490657767266
        }, 
        {
            "<Catalano.Math.Approximation: double Highprecision_Pow(double,double)>": 0.626490657767266
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Euclidean(double,double,double,double)>": 0.5911962139645951
        }, 
        {
            "<Catalano.Math.Functions.Gaussian: double Function2D(double,double)>": 0.5854625317184518
        }, 
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double ProbabilityDensityFunction(double)>": 0.5581501558206622
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: void setPosition(int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.46377009540868036
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.45182869931320724
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.43679167157263643
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.43418155429480043
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.42872927172891595
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolatorARGBFactory: net.imglib2.interpolation.randomaccess.NLinearInterpolatorARGB create(net.imglib2.RandomAccessible,net.imglib2.RealInterval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04364357804719847
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04225771273642583
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04188220595401253
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.041437096508237244
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04102063270711835
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: net.imglib2.RandomAccess randomAccess()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.024397501823713325
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,int,int,java.util.List,int[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.552581169669595
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5513828449998806
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.5466087586177683
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5356954274437902
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5339934046283277
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: void setPosition(long,int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.44485293020416616
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.43506240591149953
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4345880791821305
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.43113382037493103
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.43113382037493103
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: boolean isInUpperTail(int,java.lang.Object)>": [
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isInlier(int)>": 0.31095222420836377
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isInlier(int)>": 0.31095222420836377
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: long getTrackId(int)>": 0.28134571352235044
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: long getTrackId(int)>": 0.28134571352235044
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: void downHeap(int,java.lang.Comparable)>": 0.2810265947346906
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: void getComponentZero(boolean[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.47302461677289603
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.460597729177852
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4591713053184648
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.45330664298380163
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.45133604702775554
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: void mul(net.imglib2.type.numeric.real.FloatType)>": [
        {
            "<boofcv.gui.feature.VisualizeOpticalFlow: void magnitudeAbs(boofcv.struct.flow.ImageFlow,float,java.awt.image.BufferedImage)>": 0.309791041113351
        }, 
        {
            "<org.jbox2d.testbed.perf.MathPerf: void runSinLUTTest(float)>": 0.3070660559641686
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$JoinParticleGroupsCallback: void callback(int,int,int)>": 0.30605768330171645
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$CreateParticleGroupCallback: void callback(int,int,int)>": 0.30455710497624167
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void raycast(org.jbox2d.callbacks.ParticleRaycastCallback,org.jbox2d.common.Vec2,org.jbox2d.common.Vec2)>": 0.30433357265682204
        }
    ], 
    "<net.imglib2.util.RealSum: void add(double)>": [
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F64: void set(double[],double,double)>": 0.32066291749840287
        }, 
        {
            "<boofcv.alg.distort.radtan.RadialTangential_F64: void <init>(double[],double,double)>": 0.3067355696951519
        }, 
        {
            "<Catalano.Imaging.Tools.HistogramOfOrientedGradients: double[] Divide(double[],double)>": 0.29954256379563365
        }, 
        {
            "<boofcv.abst.geo.fitting.DistanceFromModelResidualN: void computeDistance(java.util.List,double[])>": 0.26840310515355253
        }, 
        {
            "<Catalano.Statistics.Regression.PolynomialRegression: void <init>(double[],double[])>": 0.2664491902436801
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: void set(net.imglib2.type.numeric.integer.AbstractIntegerBitType)>": [
        {
            "<org.jbox2d.testbed.framework.TestbedController: void stepAndRender()>": 0.1511356598562146
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.14470719035407653
        }, 
        {
            "<org.jbox2d.testbed.framework.TestbedController: void run()>": 0.13692249966245912
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void <init>(boofcv.struct.image.InterleavedS64,long)>": 0.12909944487358055
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void <init>(boofcv.struct.image.GrayS64,long)>": 0.12909944487358055
        }
    ], 
    "<net.imglib2.view.SubsampleIntervalView: void realMin(net.imglib2.RealPositionable)>": [
        {
            "<org.jbox2d.dynamics.Filter: void <init>()>": 0.17620141607878056
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: void clear()>": 0.1743643376331371
        }, 
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.17246789974140625
        }, 
        {
            "<Catalano.Imaging.Filters.Erosion: void <init>(int)>": 0.17144935235251066
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Erosion: void <init>(int)>": 0.17144935235251066
        }
    ], 
    "<net.imglib2.neighborsearch.KNearestNeighborSearchOnKDTree: double getSquareDistance(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.6444652635187575
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.PyramidDiscreteSampleBlur: double getSigma(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.NoCacheScaleSpace: double getScale(int)>": 0.6383928571428571
        }
    ], 
    "<net.imglib2.img.array.ArrayImg: net.imglib2.Cursor cursor(net.imglib2.Interval)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void addObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.3362787335697425
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.3033358834347191
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.3005138652576499
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.29860859798869654
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.29736372050455645
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: void <init>(net.imglib2.img.basictypeaccess.LongAccess)>": [
        {
            "<Catalano.Imaging.Filters.HistogramShrink: void <init>()>": 0.13404738190002652
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: void <init>()>": 0.13404738190002652
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.SobelEdgeDetector: void <init>()>": 0.12437183348566663
        }, 
        {
            "<boofcv.gui.tracker.TrackerObjectQuadPanel: void enterSelectMode()>": 0.12437183348566663
        }, 
        {
            "<org.jbox2d.dynamics.Filter: void <init>()>": 0.12317689748992192
        }
    ], 
    "<net.imglib2.display.screenimage.awt.ByteAWTScreenImage: java.awt.image.DataBuffer createDataBuffer(java.lang.Object)>": [
        {
            "<boofcv.struct.image.GrayI8: void _setData(java.lang.Object)>": 0.1532590227806104
        }, 
        {
            "<boofcv.struct.image.InterleavedI8: void _setData(java.lang.Object)>": 0.1532590227806104
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.1345982968042152
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Rendering: void <init>(java.lang.String,int,java.lang.Object)>": 0.12182630799201812
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Antialiasing: void <init>(java.lang.String,int,java.lang.Object)>": 0.12182630799201812
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: boolean valueEquals(net.imglib2.type.volatiles.AbstractVolatileRealType)>": [
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.5635384385982035
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.5635384385982035
        }, 
        {
            "<boofcv.io.javacv.JavaCVVideoImageSequence: boolean hasNext()>": 0.5635384385982035
        }, 
        {
            "<boofcv.struct.flow.ImageFlow$D: boolean isValid()>": 0.5193782080336427
        }, 
        {
            "<org.dyn4j.BinarySearchTreeIterator: boolean hasNext()>": 0.5193782080336427
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsRandomValue: net.imglib2.type.numeric.RealType get()>": [
        {
            "<org.dyn4j.geometry.Vector3: org.dyn4j.geometry.Vector3 cross(org.dyn4j.geometry.Vector3)>": 0.3467315937869999
        }, 
        {
            "<org.dyn4j.dynamics.contact.SequentialImpulses: void warmStart(java.util.List,org.dyn4j.dynamics.Step,org.dyn4j.dynamics.Settings)>": 0.33191731318367107
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawPrismaticJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.PrismaticJoint)>": 0.33147279692222975
        }, 
        {
            "<Catalano.Math.ComplexNumber: void Pow(double)>": 0.33060611591299915
        }, 
        {
            "<Catalano.Statistics.Distributions.GammaDistribution: double Entropy()>": 0.32918164532933836
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.ExtendedRandomAccessibleInterval extendBorder(net.imglib2.RandomAccessibleInterval)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.10813939077487976
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.10010346614252381
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.09899201058442432
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.0956296065296812
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void <init>(boofcv.demonstrations.tracker.CirculantVisualizationPanel$Listener)>": 0.0933277359899136
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.SubsampleIntervalView subsample(net.imglib2.RandomAccessibleInterval,long)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue: boofcv.core.image.border.ImageBorder_S64 wrap(boofcv.struct.image.GrayS64,long)>": 0.172492598543589
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.16830689182442837
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.1658638159064975
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.16058209780293067
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.16058209780293067
        }
    ], 
    "<net.imglib2.util.Intervals: long numElements(long[])>": [
        {
            "<Catalano.Statistics.Tools: double Max(double[])>": 0.3237569036943947
        }, 
        {
            "<Catalano.Statistics.Tools: double Min(double[])>": 0.3237569036943947
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2792520332174188
        }, 
        {
            "<org.box2d.proto.Box2D$PbShape$Builder: org.box2d.proto.Box2D$PbShape$Builder setTag(long)>": 0.27423169712454243
        }, 
        {
            "<org.box2d.proto.Box2D$PbFixture$Builder: org.box2d.proto.Box2D$PbFixture$Builder setTag(long)>": 0.27423169712454243
        }
    ], 
    "<net.imglib2.type.label.BasePairBitType: net.imglib2.type.label.BasePairBitType$Base get()>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.14517323726225953
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.14085904245475275
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.1384091330895666
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.13664859862498713
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.13507386680979225
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListLocalizingCursor: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2535623089962512
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.24257833769207987
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.24257833769207987
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.22426820488056018
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.2196844671691046
        }
    ], 
    "<net.imglib2.view.SubsampleView: void <init>(net.imglib2.RandomAccessible,long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: java.lang.Object getUserData(int)>": 0.30163813967168007
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3012873575027831
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: java.lang.Object getUserData(int)>": 0.2920843984463619
        }, 
        {
            "<org.jbox2d.pooling.normal.MutableStack: void push(java.lang.Object)>": 0.2863435566462052
        }, 
        {
            "<org.jbox2d.particle.StackQueue: java.lang.Object pop()>": 0.28434935718436494
        }
    ], 
    "<net.imglib2.type.numeric.complex.AbstractComplexType: void mul(double)>": [
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 create(double,double)>": 0.43998791184738656
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillRectangleFromTopLeft(com.jogamp.opengl.GL2,double,double,double,double)>": 0.3904650277173352
        }, 
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 cross(double)>": 0.38361592660000804
        }, 
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 product(double)>": 0.3835847898896653
        }, 
        {
            "<Catalano.Math.Functions.Beta: double Log(double,double)>": 0.38268829623959133
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRandomAccess: net.imglib2.converter.read.ConvertedRandomAccess copy()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.03984095364447979
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03857583749052298
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.03823304826514973
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.037826720791800154
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03744654309470488
        }
    ], 
    "<net.imglib2.type.numeric.integer.IntType: java.math.BigInteger getBigInteger()>": [
        {
            "<Catalano.Math.RationalNumber: void Multiply(int,int)>": 0.24261334584514832
        }, 
        {
            "<Catalano.Math.RationalNumber: void pow(int)>": 0.24127379172015345
        }, 
        {
            "<Catalano.Math.RationalNumber: void Subtract(int,int)>": 0.23930750915012894
        }, 
        {
            "<Catalano.Math.RationalNumber: void Add(int,int)>": 0.23930750915012894
        }, 
        {
            "<Catalano.Math.RationalNumber: void Multiply(int)>": 0.23572300429118626
        }
    ], 
    "<net.imglib2.img.list.ListLocalizingCursor: java.lang.Object get()>": [
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: java.lang.Object getUserData(int)>": 0.29532163742690054
        }, 
        {
            "<boofcv.gui.SelectAlgorithmAndInputPanel: java.lang.Object getAlgorithmCookie(int)>": 0.2557870110234477
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2535623089962512
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.24257833769207987
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.24257833769207987
        }
    ], 
    "<net.imglib2.view.iteration.IterableTransformBuilder$SubInterval: void <init>(net.imglib2.view.iteration.IterableTransformBuilder,net.imglib2.view.iteration.SubIntervalIterable)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.16155006398000393
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.16153846153846152
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.13816898983020665
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.13727478605747978
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.13540440790957894
        }
    ], 
    "<net.imglib2.transform.integer.ComponentMappingTransform: void apply(net.imglib2.Localizable,net.imglib2.Positionable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5963997951602429
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5961319917513976
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.582775151794033
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5821249858858794
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void shrinkArrays()>": 0.5616305531346955
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsBorder: void checkOutOfBounds()>": [
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: int getNumUnknownViews()>": 0.36879164106163287
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: int[] makeFateTable()>": 0.33384527625637067
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: double get(boofcv.struct.image.ImageInterleaved,int,int,int)>": 0.30225625822251256
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: void setB(boofcv.struct.image.ImageBase,int,int,int,double)>": 0.29969584447599995
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: void setM(boofcv.struct.image.ImageBase,int,int,double[])>": 0.2937107956694517
        }
    ], 
    "<net.imglib2.util.Util: double distance(long[],long[])>": [
        {
            "<Catalano.Imaging.Tools.HistogramOfOrientedGradients: double Euclidean(double[])>": 0.42337932824299723
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Bhattacharyya(double[],double[])>": 0.3893349545392826
        }, 
        {
            "<Catalano.Math.Matrix: double NormP(double[],int)>": 0.38283966813137743
        }, 
        {
            "<Catalano.Statistics.Tools: double Sum(double[])>": 0.3763034562838974
        }, 
        {
            "<Catalano.Math.Tools: double Sum(double[])>": 0.3763034562838974
        }
    ], 
    "<net.imglib2.display.awt.UnsignedIntDataBuffer: void <init>(int[],int)>": [
        {
            "<Catalano.Math.Matrix: int[][] MultiplyByTranspose(int[][],int[][])>": 0.31468114792008206
        }, 
        {
            "<Catalano.Imaging.Filters.WeightedMedian: void <init>(int[][])>": 0.30502046784852843
        }, 
        {
            "<Catalano.Imaging.Texture.LawsTextureEnergy: int[][] CreateMask(int[],int[])>": 0.2864299241932285
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryOpening: void <init>(int[][])>": 0.28446750914564173
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryClosing: void <init>(int[][])>": 0.28446750914564173
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: void incIndex(int)>": [
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.6241711271514602
        }, 
        {
            "<boofcv.abst.fiducial.calib.CalibrationDetectorSquareFiducialGrid: int getPointIndex(int,int)>": 0.5747801203619927
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$9: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5631673913280111
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: int getIndex(int,int,int)>": 0.5573780954063181
        }, 
        {
            "<boofcv.struct.image.ImageBase: int getIndex(int,int)>": 0.5485724542486418
        }
    ], 
    "<net.imglib2.neighborsearch.KNearestNeighborSearchOnIterableRealInterval: net.imglib2.RealCursor getSampler(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4966616068166122
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.4893146606557609
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.47437111780712504
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.46420451256364215
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.4578204272586427
        }
    ], 
    "<net.imglib2.FinalRealInterval: net.imglib2.FinalRealInterval createMinSize(double[])>": [
        {
            "<Catalano.Statistics.Correlations: double VectorInnerProduct(double[],double[])>": 0.4515937520372843
        }, 
        {
            "<Catalano.Math.Matrix: double InnerProduct(double[],double[])>": 0.4515937520372843
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Chessboard(double[],double[])>": 0.4433436971026876
        }, 
        {
            "<Catalano.Math.Distances.Distance: double SquaredEuclidean(double[],double[])>": 0.44089514768614346
        }, 
        {
            "<Catalano.Math.Transforms.FourierTransform: void transformBluestein(double[],double[])>": 0.4294406174696637
        }
    ], 
    "<net.imglib2.util.Util: double min(double[])>": [
        {
            "<boofcv.alg.geo.GeoTestingOps: double residualError(double[])>": 0.6976300795773556
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: double sum(boofcv.struct.convolve.Kernel2D_F64)>": 0.5359840562621767
        }, 
        {
            "<Catalano.Statistics.Kernels.Linear: double Function(double[],double[])>": 0.523014974488497
        }, 
        {
            "<Catalano.Math.Distances.IntersectionDistance: double Compute(double[],double[])>": 0.5141024629758845
        }, 
        {
            "<Catalano.Statistics.Kernels.Hellinger: double Function(double[],double[])>": 0.4980958947750451
        }
    ], 
    "<net.imglib2.neighborsearch.RadiusNeighborSearchOnKDTree: net.imglib2.RealLocalizable getPosition(int)>": [
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: java.lang.Object getUserData(int)>": 0.2444557237570986
        }, 
        {
            "<Catalano.Math.Geometry.ConvexHullDefects: Catalano.Math.Geometry.ConvexityDefect ExtractDefect(java.util.ArrayList,int,int)>": 0.23285558822434732
        }, 
        {
            "<Catalano.Math.Geometry.FlatAnglesOptimizer: java.util.ArrayList OptimizeShape(java.util.ArrayList)>": 0.2190181087945047
        }, 
        {
            "<Catalano.Math.Geometry.GrahamConvexHull: java.util.ArrayList FindFull(java.util.ArrayList)>": 0.20782539888160628
        }, 
        {
            "<Catalano.Imaging.Tools.QuadrilateralTransformation: void CalculateDestinationSize()>": 0.20550898665435613
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedCursor: void localize(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: void <init>(net.imglib2.img.NativeImg)>": [
        {
            "<Catalano.Imaging.Filters.HistogramShrink: void <init>()>": 0.14476650603589652
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: void <init>()>": 0.14476650603589652
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.SobelEdgeDetector: void <init>()>": 0.13442290969427412
        }, 
        {
            "<boofcv.gui.tracker.TrackerObjectQuadPanel: void enterSelectMode()>": 0.13442290969427412
        }, 
        {
            "<org.jbox2d.dynamics.Filter: void <init>()>": 0.1329726164507926
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRealRandomAccessible: net.imglib2.converter.AbstractConvertedRealRandomAccess realRandomAccess(net.imglib2.RealInterval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04032389192727559
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03904344047215152
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.038696496074155144
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.03828524323948056
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03790045715961838
        }
    ], 
    "<net.imglib2.converter.RealLUTConverter: void <init>(double,double,net.imglib2.display.ColorTable)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void access$000(boofcv.app.calib.AssistedCalibration,double,double,double,double)>": 0.3360451391518585
        }, 
        {
            "<boofcv.gui.fiducial.VisualizeFiducial: void drawLine(java.awt.Graphics2D,java.awt.geom.Line2D$Double,double,double,double,double)>": 0.32870074340621547
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceSe3SymmetricSq: void setIntrinsic(double,double,double,double,double,double)>": 0.3276249306290997
        }, 
        {
            "<boofcv.alg.sfm.robust.DistancePlane2DToPixelSq: void setIntrinsic(double,double,double)>": 0.3210777289475547
        }, 
        {
            "<boofcv.alg.geo.robust.DistanceHomographyPixelSq: void setIntrinsic(double,double,double)>": 0.3210777289475547
        }
    ], 
    "<net.imglib2.interpolation.neighborsearch.NearestNeighborSearchInterpolator: void <init>(net.imglib2.neighborsearch.NearestNeighborSearch)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.21943989681367793
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.21943989681367793
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.21943989681367793
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.2163123949343606
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.21255250817658958
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.IntArray: void <init>(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.5315774075852734
        }, 
        {
            "<org.jbox2d.pooling.arrays.IntArray: int[] getInitializedArray(int)>": 0.5265929256802434
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: int get(int)>": 0.5060618894312819
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getLength(int)>": 0.5060618894312819
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.48756114143768725
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: void setPosition(int[])>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.24097661078051374
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2386672792747817
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS64)>": 0.2191559933993539
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.21841534365662235
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int[])>": 0.21686109627825123
        }
    ], 
    "<net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolatorFactory: net.imglib2.RealRandomAccess create(java.lang.Object,net.imglib2.RealInterval)>": [
        {
            "<org.dyn4j.geometry.TransformTest: void rotate()>": 0.10192927172657679
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawMouseJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.PinJoint,double)>": 0.09854002301152634
        }, 
        {
            "<org.dyn4j.geometry.AABBTest: void expand()>": 0.09819210594681503
        }, 
        {
            "<boofcv.gui.d3.PointCloudViewer: void addPoint(double,double,double,int)>": 0.0975601937597815
        }, 
        {
            "<org.dyn4j.dynamics.AngleJointTest: void setMinAndMax()>": 0.09687403079756102
        }
    ], 
    "<net.imglib2.AbstractLocalizable: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: float getF(int)>": 0.5869727736761196
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_S64: float getF(int)>": 0.5869727736761196
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F32: void setOutside(int,int,float)>": 0.49163800764408094
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.49163800764408094
        }, 
        {
            "<boofcv.alg.weights.WeightPixelUniform_F32: float weight(int,int)>": 0.4868016044136483
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: java.lang.Object update(java.lang.Object)>": [
        {
            "<boofcv.alg.segmentation.watershed.WatershedVincentSoille1991: int getTotalRegions()>": 0.34599836068317236
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.33105552305041147
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.33105552305041147
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.33105552305041147
        }, 
        {
            "<org.jbox2d.pooling.normal.CircleStack: java.lang.Object pop()>": 0.3244187725904985
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: void indexToPositionWithOffset(long,long[],long[],double[])>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.31594590647389126
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.31584726372204075
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.3002222019395603
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.299529558753148
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.2745931535811322
        }
    ], 
    "<net.imglib2.util.Util: double[] getArrayFromValue(double,int)>": [
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 1.0
        }, 
        {
            "<Catalano.Math.Matrix: double[] Log(double[])>": 0.6560242445036316
        }, 
        {
            "<Catalano.Math.Matrix: double[] getColumn(double[][],int)>": 0.6273722995248113
        }, 
        {
            "<Catalano.Math.Matrix: double[] getRow(double[][],int)>": 0.6138304653045941
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_F64: void setOutside(int,int,double[])>": 0.515342188161507
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: void max(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: void increment(long[])>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.20116610407847824
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.1844625141423921
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.1764490582684312
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.17614610529377714
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>()>": 0.16653826718183404
        }
    ], 
    "<net.imglib2.util.Util: void max(double[],double[])>": [
        {
            "<Catalano.Math.Matrix: void Fill(double[],double)>": 0.5913095358633942
        }, 
        {
            "<Catalano.Math.Matrix: double[] Subtract(double[],double[])>": 0.5564419674045196
        }, 
        {
            "<Catalano.Math.Matrix: double[] Add(double[],double[])>": 0.5564419674045196
        }, 
        {
            "<Catalano.Math.Matrix: void Add(double[],double)>": 0.5358303296689279
        }, 
        {
            "<Catalano.Math.Matrix: void Subtract(double[],double)>": 0.5358303296689279
        }
    ], 
    "<net.imglib2.img.planar.PlanarCursor2D: int getIntPosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.46076788187897344
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.4542976436550543
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.4492642909496013
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: int get(int)>": 0.43980691322718
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.43980691322718
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: void setPosition(long,int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.6292240465282719
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5606404026152911
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5492657532905405
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5311642946423635
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.5230713022002441
        }
    ], 
    "<net.imglib2.display.AbstractLinearRange: void setMax(double)>": [
        {
            "<Catalano.Math.Distances.Distance: double BrayCurtis(double,double,double,double)>": 0.4244744968848417
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Canberra(double,double,double,double)>": 0.41343352784941123
        }, 
        {
            "<Catalano.Math.Functions.Beta: double Log(double,double)>": 0.4110841524555428
        }, 
        {
            "<boofcv.abst.tracker.Sfot_to_TrackObjectQuad: void setPoint(georegression.struct.point.Point2D_F64,double,double,double,double)>": 0.4096004634711338
        }, 
        {
            "<Catalano.Math.Tools: double Scale(double,double,double,double,double)>": 0.4072306455694919
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: void <init>(net.imglib2.RandomAccess,net.imglib2.transform.integer.Translation)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4139967465140812
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4060206396341375
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4022934583358899
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.39917639434786467
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.3933440522849423
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRandomAccess: void <init>(net.imglib2.RandomAccess,net.imglib2.converter.Converter,net.imglib2.type.Type)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04032389192727559
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03904344047215152
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.038696496074155144
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.03828524323948056
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03790045715961838
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: int compareTo(java.lang.Object)>": [
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.33303839254483486
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.3321895127820626
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: int getSerializedSize()>": 0.3288554744360641
        }, 
        {
            "<org.box2d.proto.Box2D$PbBody: int getSerializedSize()>": 0.32881651447055726
        }, 
        {
            "<Catalano.Imaging.Texture.LawsTextureEnergy: long getTextureEnergyMap(Catalano.Core.IntPoint,int,int)>": 0.32681409478085477
        }
    ], 
    "<net.imglib2.KDTree: net.imglib2.KDTree$ValueNode makeNode(java.util.ListIterator,java.util.ListIterator,int)>": [
        {
            "<boofcv.core.image.border.BorderIndex1D_Reflect: int getIndex(int)>": 0.29956490666132446
        }, 
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.2994072050930963
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.2926866645819379
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandardBase_S32: void process(int,java.lang.Object)>": 0.29125660777714246
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.AlphaTrimmedMean: void <init>(int,int)>": 0.29099845166832716
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsValue: void move(long[])>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.3380354540749131
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.26477293623960485
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.26098258954565795
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.26098258954565795
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.26098258954565795
        }
    ], 
    "<net.imglib2.AbstractInterval: void realMin(double[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.473749339213746
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.46415327114059296
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.46104521220249894
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4572411548053488
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4562496988424407
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedIterableRandomAccessibleInterval: long size()>": [
        {
            "<Catalano.Math.Random: long nextLong()>": 0.25104719102359413
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.23427108379087383
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.22750786216909014
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.22243705435199762
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2126355758694594
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: net.imglib2.type.numeric.complex.ComplexDoubleType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.type.numeric.complex.AbstractComplexType: int hashCode()>": [
        {
            "<org.dyn4j.geometry.Vector2: int hashCode()>": 0.4262388261536146
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: int hashCode()>": 0.4148285241015845
        }, 
        {
            "<org.dyn4j.geometry.Matrix22: int hashCode()>": 0.4126090386869039
        }, 
        {
            "<org.dyn4j.geometry.Vector3: int hashCode()>": 0.408642735220321
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.3779048483128155
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: void localize(double[])>": [
        {
            "<Catalano.Statistics.Regression.ExponentialRegression: double[] Regression(double[])>": 0.24435215886925551
        }, 
        {
            "<Catalano.Math.Matrix: void Add(double[],double)>": 0.24423948125621497
        }, 
        {
            "<Catalano.Math.Matrix: void Subtract(double[],double)>": 0.24423948125621497
        }, 
        {
            "<Catalano.Statistics.Regression.LogarithmicRegression: double[] Regression(double[])>": 0.2419681768436498
        }, 
        {
            "<Catalano.Statistics.Regression.PowerRegression: double[] Regression(double[])>": 0.23977510287184362
        }
    ], 
    "<net.imglib2.position.transform.AbstractPositionableTransform: void bck(int)>": [
        {
            "<boofcv.alg.scene.FeatureToWordHistogram_F64: void addFeature(boofcv.struct.feature.TupleDesc_F64)>": 0.30548800519691655
        }, 
        {
            "<boofcv.alg.feature.color.GHistogramFeatureOps: void histogram(double[],int,boofcv.alg.feature.color.Histogram_F64)>": 0.27160054991503085
        }, 
        {
            "<Catalano.Imaging.Texture.GrayLevelRunLengthMatrix: double[][] Compute(Catalano.Imaging.FastBitmap)>": 0.265703932312517
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setRange(int,double,double)>": 0.2633696945370123
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void setD(int,double)>": 0.26308739982075546
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedCursor: int getIntPosition(int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.5078285150911725
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.5078285150911725
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.5078285150911725
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.SquaresIntoRegularClusters: int add(int,int)>": 0.46401913722402865
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.46236799717354615
        }
    ], 
    "<net.imglib2.img.sparse.DoubleNtree: double getValue(int)>": [
        {
            "<boofcv.io.SimpleStringNumberReader: double getDouble()>": 0.4308931947855523
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: double getOutside(int,int)>": 0.4131088259045248
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.3758819896291122
        }, 
        {
            "<boofcv.abst.fiducial.CalibrationFiducialDetector: double getWidth(int)>": 0.37235742867336374
        }, 
        {
            "<boofcv.abst.fiducial.SquareBinary_to_FiducialDetector: double getWidth(int)>": 0.37235742867336374
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.LanczosInterpolator: long[] createOffset(int,int)>": [
        {
            "<net.coobird.thumbnailator.geometry.Positions$7: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5671366093667507
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$3: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5671366093667507
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5629836874255341
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5597741377582992
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$2: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5597741377582992
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: long getLongPosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.4021445051114553
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.385134159675461
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.377696229914575
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.37636166342649585
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.32784253407247926
        }
    ], 
    "<net.imglib2.img.sparse.ByteNtree: void <init>(net.imglib2.img.sparse.Ntree,long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.242012144279314
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.242012144279314
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2237584400126592
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.17235608187218834
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.17235608187218834
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.FloatArray: void setValue(int,float)>": [
        {
            "<boofcv.alg.distort.impl.ImplImageDistortCache_F32: void assign(int,float)>": 0.49242127032157823
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_F32: void set(int,float)>": 0.49242127032157823
        }, 
        {
            "<boofcv.alg.distort.impl.ImplImageDistort_F32: void assign(int,float)>": 0.49242127032157823
        }, 
        {
            "<boofcv.struct.image.GrayF32: void unsafe_set(int,int,float)>": 0.40575276384648046
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void setD(int,double)>": 0.36654472411578426
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: void incIndex(int)>": [
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.6241711271514602
        }, 
        {
            "<boofcv.abst.fiducial.calib.CalibrationDetectorSquareFiducialGrid: int getPointIndex(int,int)>": 0.5747801203619927
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$9: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5631673913280111
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: int getIndex(int,int,int)>": 0.5573780954063181
        }, 
        {
            "<boofcv.struct.image.ImageBase: int getIndex(int,int)>": 0.5485724542486418
        }
    ], 
    "<net.imglib2.AbstractLocalizable: int getIntPosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5867111703953767
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.5785863688512851
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.578159006540164
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5596150726660568
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.5487091398200385
        }
    ], 
    "<net.imglib2.iterator.LocalizingIntervalIterator: void jumpFwd(long)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2900083640303336
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2844393222945314
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.27241975711079447
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.27141844416954514
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.26076012187662534
        }
    ], 
    "<net.imglib2.util.Util: net.imglib2.type.Type max(net.imglib2.type.Type,net.imglib2.type.Type)>": [
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(org.jbox2d.collision.broadphase.Pair)>": 0.1525366673869996
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void boundRectangleInside(boofcv.struct.image.ImageBase,boofcv.struct.ImageRectangle)>": 0.1520888260726217
        }, 
        {
            "<Catalano.Imaging.Filters.HysteresisThreshold: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.15139084691173516
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(java.lang.Object)>": 0.15108504021348912
        }, 
        {
            "<Catalano.Imaging.Shapes.IntRectangle: boolean isInside(int,int)>": 0.15047558530273028
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned12BitType: long get()>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3198894799224484
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.30748659007638257
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.29825984428719066
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.2895826787825259
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.28912910114685275
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: net.imglib2.img.ImgFactory factory()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.024397501823713325
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.024397501823713325
        }
    ], 
    "<net.imglib2.position.transform.FloorOffset: void move(net.imglib2.RealLocalizable)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.24191931561519597
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.22420773388281118
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.22357568053028717
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addGaussian(boofcv.struct.image.GrayS64,java.util.Random,double,long,long)>": 0.2229993015928702
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.22287691512478514
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: net.imglib2.view.RandomAccessiblePair$RandomAccess copy()>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.08498731472478444
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.08022953877233097
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.07867183938373667
        }, 
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.07749130248475833
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07729336780010529
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: java.lang.String toString()>": [
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String getPatternName(int)>": 0.5301832493556564
        }, 
        {
            "<Catalano.Core.IntRange: java.lang.String toString()>": 0.4890014128208937
        }, 
        {
            "<Catalano.Core.IntPoint: java.lang.String toString()>": 0.4890014128208937
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: java.lang.String toString()>": 0.45828304242632806
        }, 
        {
            "<boofcv.app.BaseStandardInputApp: java.lang.String getCameraDeviceString()>": 0.4350657938931966
        }
    ], 
    "<net.imglib2.img.cell.AbstractCell: void indexToGlobalPosition(int,long[])>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long[],int,int,int,int)>": 0.29343415954075586
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long[],int,int,int,int)>": 0.29343415954075586
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long[],int,int,int,int)>": 0.29343415954075586
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2933825875845205
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2933825875845205
        }
    ], 
    "<net.imglib2.PointSampleList$PointSampleListCursor: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F32: float unsafe_getF(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.segmentation.slic.SegmentSlic_F32: float getIntensity(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_zero(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_unsafe(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float convolveSparse(boofcv.struct.image.GrayF32,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: void inc()>": [
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMaximum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.1987362190884991
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMinimum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.1987362190884991
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void process(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.19596329382281813
        }, 
        {
            "<boofcv.struct.QueueCorner: void add(int,int)>": 0.19429670518041633
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.18887672270022854
        }
    ], 
    "<net.imglib2.view.RandomAccessibleIntervalCursor: void localize(int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.2540764877039817
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.21777659600227028
        }
    ], 
    "<net.imglib2.converter.ChannelARGBConverter: void convert(java.lang.Object,java.lang.Object)>": [
        {
            "<org.dyn4j.collision.narrowphase.AbstractFallbackCondition: int compareTo(java.lang.Object)>": 0.28550791559889566
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: void drawPadding()>": 0.27422139869716833
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.2735153663403049
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.2727076982616041
        }, 
        {
            "<org.box2d.proto.Box2D$PbBody: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.2712336420057889
        }
    ], 
    "<net.imglib2.img.list.ListImg: void <init>(long[],java.lang.Object)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: boolean equals(java.lang.Object)>": 0.2621081260932958
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.23135182668037174
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomPixelDepthPnP: int dropUnusedTracks()>": 0.2175050111614899
        }, 
        {
            "<boofcv.alg.geo.GeoTestingOps: java.util.List createList3_F64(int)>": 0.2159861737016901
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomMonoPlaneInfinity: int dropUnusedTracks()>": 0.2085008662845595
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NearestNeighborInterpolator: void <init>(net.imglib2.RandomAccessible)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: void dec()>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.3082907442430296
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.28240681262577627
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.27535950287699673
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.2706374724324635
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.2684679872899037
        }
    ], 
    "<net.imglib2.util.Partition: int partitionSubList(int,int,int[])>": [
        {
            "<boofcv.alg.fiducial.calib.squares.RegularClustersIntoGrids: int checkNumberOfConnections(java.util.List)>": 0.4954622760105796
        }, 
        {
            "<Catalano.Imaging.Filters.MedianCut: void quickSort(int[],int,int)>": 0.4942751031928335
        }, 
        {
            "<Sort07: void sort(int[])>": 0.4714369911241708
        }, 
        {
            "<Catalano.Math.Dissimilarities.Dissimilarity: double SokalMichener(int[],int[])>": 0.4671472725743344
        }, 
        {
            "<Catalano.Math.Dissimilarities.Dissimilarity: double RogersTanimoto(int[],int[])>": 0.4671472725743344
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: long valueCount()>": [
        {
            "<org.dyn4j.collision.AbstractCollidable: boolean contains(org.dyn4j.geometry.Vector2)>": 0.28196166673300754
        }, 
        {
            "<org.dyn4j.collision.narrowphase.FallbackNarrowphaseDetector: boolean isFallbackRequired(org.dyn4j.geometry.Convex,org.dyn4j.geometry.Convex)>": 0.27040972505489985
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomPixelDepthPnP: int dropUnusedTracks()>": 0.267763931334543
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2559420482838829
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: long getTrackId(int)>": 0.25525569302913553
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsPeriodic: void move(long,int)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3244621302475386
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.28450456781586797
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.2757715470143195
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.26309877994581465
        }, 
        {
            "<org.jbox2d.tests.math.SinCosTest: long speedTestMath(int,int)>": 0.2585534972436553
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: void realMin(net.imglib2.RealPositionable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.img.cell.CellImgFactory: net.imglib2.img.NativeImg createLongInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.20557172820160094
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.20557172820160094
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.19009418367404002
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.15968814578412494
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.15968814578412494
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: double det3x3(double[])>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal11(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.7467756756116727
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve11(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.7376583013798114
        }, 
        {
            "<Catalano.Math.Distances.Distance: double KumarJohnsonDivergence(double[],double[])>": 0.7330161996199206
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal9(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.7303355859026919
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve9(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.726618694816823
        }
    ], 
    "<net.imglib2.util.Util: java.lang.String printCoordinates(boolean[])>": [
        {
            "<boofcv.demonstrations.feature.disparity.VisualizeStereoDisparity: void main(java.lang.String[])>": 0.7032452654399173
        }, 
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareFiducial: void main(java.lang.String[])>": 0.6652750175674873
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.6412249121704866
        }, 
        {
            "<boofcv.demonstrations.denoise.DenoiseAccuracyStudyApp: void main(java.lang.String[])>": 0.639016598142525
        }, 
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareBinaryFiducial: void main(java.lang.String[])>": 0.6212227597533714
        }
    ], 
    "<net.imglib2.img.sparse.Ntree: void <init>(long[],java.lang.Comparable)>": [
        {
            "<Catalano.Statistics.HistogramStatistics: double Entropy(int[])>": 0.3486590639356596
        }, 
        {
            "<org.dyn4j.sandbox.panels.PreviewPanel: void paintComponent(java.awt.Graphics)>": 0.34832783741582
        }, 
        {
            "<boofcv.alg.tracker.circulant.CirculantTracker: void gaussianKernel(double,double,boofcv.struct.image.GrayF64,double,boofcv.struct.image.GrayF64)>": 0.33818075400668207
        }, 
        {
            "<org.dyn4j.geometry.hull.MinXYPointComparator: int compare(java.lang.Object,java.lang.Object)>": 0.33153879615265874
        }, 
        {
            "<org.dyn4j.geometry.hull.MinXYPointComparator: int compare(org.dyn4j.geometry.Vector2,org.dyn4j.geometry.Vector2)>": 0.33007928599109776
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: void setReal(float)>": [
        {
            "<Catalano.Core.IntPoint: void <init>(float,float)>": 0.42552333518807844
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_F32: float get_fast(float,float)>": 0.41051999452983723
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_S32: float get_fast(float,float)>": 0.4008370768294799
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_S16: float get_fast(float,float)>": 0.3994520227988777
        }, 
        {
            "<boofcv.alg.interpolate.impl.NearestNeighborPixel_U16: float get_fast(float,float)>": 0.3929803130279143
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.LongArray: void <init>(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.5315774075852734
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.4891331417118402
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.48756114143768725
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.480546430335053
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.4690702513207908
        }
    ], 
    "<net.imglib2.KDTree$KDTreeCursor: void <init>(net.imglib2.KDTree,net.imglib2.KDTree$KDTreeCursor)>": [
        {
            "<org.dyn4j.sandbox.help.HelpReader: void <init>()>": 0.11080065755348979
        }, 
        {
            "<org.dyn4j.BinarySearchTreeIterator: void <init>(org.dyn4j.BinarySearchTreeNode,boolean)>": 0.046309910852184284
        }, 
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.03450327796711771
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03340765523905305
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.03311079106173623
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: java.math.BigInteger getBigInteger()>": [
        {
            "<Catalano.Math.RationalNumber: void Multiply(Catalano.Math.RationalNumber)>": 0.39239974688742923
        }, 
        {
            "<Catalano.Math.RationalNumber: void Multiply(int)>": 0.391057659112226
        }, 
        {
            "<Catalano.Math.RationalNumber: void Multiply(java.math.BigInteger)>": 0.39053142768346605
        }, 
        {
            "<Catalano.Math.RationalNumber: void Multiply(int,int)>": 0.390468947113172
        }, 
        {
            "<Catalano.Math.RationalNumber: void Multiply(java.math.BigInteger,java.math.BigInteger)>": 0.3901245499299362
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerType: int hashCode()>": [
        {
            "<org.dyn4j.geometry.Matrix22: int hashCode()>": 0.36073361434404144
        }, 
        {
            "<org.dyn4j.geometry.Vector3: int hashCode()>": 0.3602783864493624
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: int hashCode()>": 0.3577231715452224
        }, 
        {
            "<org.dyn4j.geometry.Vector2: int hashCode()>": 0.3550789343744079
        }, 
        {
            "<org.dyn4j.geometry.Mass: int hashCode()>": 0.33319159854390334
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: boolean valueEquals(net.imglib2.type.numeric.complex.ComplexDoubleType)>": [
        {
            "<org.dyn4j.geometry.Vector2: boolean isZero()>": 0.465601528702875
        }, 
        {
            "<org.dyn4j.geometry.Vector3: boolean isZero()>": 0.4508323575653124
        }, 
        {
            "<org.dyn4j.geometry.Interval: boolean isDegenerate(double)>": 0.43708417917046916
        }, 
        {
            "<org.dyn4j.geometry.Vector2: boolean equals(double,double)>": 0.4305292396358523
        }, 
        {
            "<org.dyn4j.geometry.Vector3: boolean equals(double,double,double)>": 0.41368133550925107
        }
    ], 
    "<net.imglib2.img.sparse.Ntree$NtreeNode: boolean hasChildren()>": [
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.6312032571666298
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.6312032571666298
        }, 
        {
            "<boofcv.io.javacv.JavaCVVideoImageSequence: boolean hasNext()>": 0.6312032571666298
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.609509295431853
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.5931372549019608
        }
    ], 
    "<net.imglib2.view.composite.AbstractNumericComposite: void mul(float)>": [
        {
            "<boofcv.alg.misc.PixelMath: void divide(boofcv.struct.image.GrayF32,float,float,float,boofcv.struct.image.GrayF32)>": 0.2696080727655931
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayF32,float,float,float,boofcv.struct.image.GrayF32)>": 0.2696080727655931
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply(boofcv.struct.image.GrayF32,float,float,float,boofcv.struct.image.GrayF32)>": 0.2696080727655931
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayF32,float,float,float,boofcv.struct.image.GrayF32)>": 0.2696080727655931
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(float,boofcv.struct.image.GrayF32,float,float,boofcv.struct.image.GrayF32)>": 0.2696080727655931
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: java.lang.Object getA()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NearestNeighborInterpolatorFactory: net.imglib2.interpolation.randomaccess.NearestNeighborInterpolator create(net.imglib2.RandomAccessible,net.imglib2.RealInterval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04364357804719847
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.04225771273642583
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.04188220595401253
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.041437096508237244
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.04102063270711835
        }
    ], 
    "<net.imglib2.Point: java.lang.String toString()>": [
        {
            "<org.dyn4j.sandbox.persist.XmlFormatter: java.lang.String createIndentation(int)>": 0.4884153749105291
        }, 
        {
            "<org.dyn4j.sandbox.persist.XmlFormatter: java.lang.String format(java.lang.String)>": 0.37764231668474113
        }, 
        {
            "<org.dyn4j.geometry.Polygon: java.lang.String toString()>": 0.3776202684460097
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: java.lang.String toString()>": 0.34622255373099875
        }, 
        {
            "<boofcv.misc.AutoTypeImage: java.lang.String getInterleavedName()>": 0.3442365535447876
        }
    ], 
    "<net.imglib2.type.numeric.integer.ByteType: void setBigInteger(java.math.BigInteger)>": [
        {
            "<org.jbox2d.particle.ParticleColor: void <init>(byte,byte,byte,byte)>": 0.24383355881574897
        }, 
        {
            "<org.jbox2d.collision.ContactID: void flip()>": 0.2336607246490357
        }, 
        {
            "<org.jbox2d.particle.ParticleColor: void set(byte,byte,byte,byte)>": 0.22276632844671548
        }, 
        {
            "<org.jbox2d.particle.ParticleColor: void set(org.jbox2d.particle.ParticleColor)>": 0.22223703901263836
        }, 
        {
            "<org.jbox2d.collision.ContactID: void set(org.jbox2d.collision.ContactID)>": 0.22223703901263836
        }
    ], 
    "<net.imglib2.util.KthElement: void kthElement(int,int,int,long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5811787841893516
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5795957554113238
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.574959397921157
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5628405374594679
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5608701810597032
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: net.imglib2.type.numeric.integer.Unsigned128BitType copy()>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.InterleavedS64,long,long,boofcv.struct.image.InterleavedS64)>": 0.19619767211259742
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.InterleavedS64,long,long,long,boofcv.struct.image.InterleavedS64)>": 0.19619767211259742
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.InterleavedS64,long,long,long,boofcv.struct.image.InterleavedS64)>": 0.19619767211259742
        }, 
        {
            "<org.box2d.proto.Box2D$PbShape$Builder: org.box2d.proto.Box2D$PbShape$Builder setTag(long)>": 0.19185223162237552
        }, 
        {
            "<org.box2d.proto.Box2D$PbFixture$Builder: org.box2d.proto.Box2D$PbFixture$Builder setTag(long)>": 0.19185223162237552
        }
    ], 
    "<net.imglib2.img.list.ListRandomAccess: void <init>(net.imglib2.img.list.AbstractListImg)>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.24042448950914636
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.24042448950914636
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.24042448950914636
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.23968639433227695
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.23233195409929946
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListLocalizingCursor: net.imglib2.img.list.AbstractLongListImg$LongListLocalizingCursor copy()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.converter.RealUnsignedShortConverter: void convert(net.imglib2.type.numeric.RealType,net.imglib2.type.numeric.integer.UnsignedShortType)>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.40435709780834334
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.40409475064784167
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.4035958452628556
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void <init>(Catalano.Imaging.FastBitmap,Catalano.Core.IntPoint,Catalano.Core.IntPoint,Catalano.Core.IntPoint)>": 0.3957078080123178
        }, 
        {
            "<Catalano.Imaging.ActiveContour.Ovuscule.Ovuscule: void <init>(Catalano.Imaging.FastBitmap,double,double,double,double,double,double)>": 0.3939881109407228
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned12BitType: net.imglib2.type.numeric.integer.Unsigned12BitType copy()>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.31399086771511264
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.30300898952796057
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2928182545666013
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.28536962480387396
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.28432456659077443
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: net.imglib2.type.numeric.real.FloatType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.img.ImgView: java.lang.Object subIntervalIterationOrder(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.Joint,double)>": 0.23703487130848733
        }, 
        {
            "<boofcv.alg.filter.misc.AverageDownSampleOps: void down(boofcv.struct.image.ImageGray,int,boofcv.struct.image.ImageGray)>": 0.2173875251261429
        }, 
        {
            "<org.dyn4j.examples.Graphics2DRenderer: void render(java.awt.Graphics2D,org.dyn4j.geometry.Shape,double,java.awt.Color)>": 0.21358060119778244
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void fillShape(com.jogamp.opengl.GL2,org.dyn4j.geometry.Shape)>": 0.20429578482035934
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: void setB(boofcv.struct.image.ImageBase,int,int,int,double)>": 0.19598538688382205
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsPeriodic: java.lang.String toString()>": [
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.5080197820774149
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendPrefix(java.lang.String,java.lang.String)>": 0.4836345702584153
        }, 
        {
            "<org.jbox2d.common.Transform: java.lang.String toString()>": 0.48265451817954086
        }, 
        {
            "<org.jbox2d.serialization.UnsupportedObjectException: java.lang.String getLocalizedMessage()>": 0.4816929085523147
        }, 
        {
            "<org.jbox2d.common.Sweep: java.lang.String toString()>": 0.4565742610425534
        }
    ], 
    "<net.imglib2.view.MixedRandomAccess: void move(int[])>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.38325484830007983
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.38093404094813843
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.3777703759801348
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.37563877396392686
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3650684692768731
        }
    ], 
    "<net.imglib2.img.cell.AbstractCells: net.imglib2.Cursor localizingCursor()>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.0236227795630767
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.0236227795630767
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.0236227795630767
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.0236227795630767
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.0236227795630767
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: net.imglib2.type.numeric.complex.ComplexDoubleType copy()>": [
        {
            "<org.jbox2d.tests.math.SinCosTest: double accuracyTest(org.jbox2d.tests.math.SinCosTable,int)>": 0.24889798179851208
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float Sqrt(float)>": 0.23750250015858443
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float ArcSin(float)>": 0.23750250015858443
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float Cos(float)>": 0.23750250015858443
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float ArcCos(float)>": 0.23750250015858443
        }
    ], 
    "<net.imglib2.position.transform.FloorOffset: void <init>(net.imglib2.RealLocalizable,net.imglib2.Localizable,long[])>": [
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.25802991375888257
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.22501824917347107
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.21990113632769256
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.21990113632769256
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.21724362452442617
        }
    ], 
    "<net.imglib2.img.cell.CellRandomAccess: void setPosition(int[])>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.36966611924781195
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.31943469167706573
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.31085217818806143
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void updateObjectIntegerAABB(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.broadphase.AABBInt)>": 0.25676175637783005
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void updateObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.2565917595784652
        }
    ], 
    "<net.imglib2.type.logic.BoolType: int compareTo(java.lang.Object)>": [
        {
            "<boofcv.abst.fiducial.CalibrationFiducialDetector: int totalFound()>": 0.3611053428245955
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(java.lang.Object)>": 0.26517473788651125
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(org.jbox2d.particle.ParticleSystem$Proxy)>": 0.250096332041624
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean raycast(org.dyn4j.geometry.Ray,org.dyn4j.dynamics.Body,double,org.dyn4j.collision.Filter,boolean,org.dyn4j.dynamics.RaycastResult)>": 0.2402660174210085
        }, 
        {
            "<org.dyn4j.dynamics.World: void solveTOI(org.dyn4j.dynamics.ContinuousDetectionMode)>": 0.24001928481415957
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.NLinearInterpolatorARGBFactory: net.imglib2.interpolation.randomaccess.NLinearInterpolatorARGB create(net.imglib2.RandomAccessible)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06454972243679027
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0625
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06194461797903697
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.061286292230682514
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06067033396213444
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: void localize(int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5738910439330277
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5688937379406395
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5584699498958436
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5562058374126162
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5550522139045893
        }
    ], 
    "<net.imglib2.AbstractCursor: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: float unsafe_getF(int,int)>": 0.461254406027124
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3418863066808514
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3418863066808514
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.2997653761960239
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: double unsafe_getD(int,int)>": 0.28462893109651044
        }
    ], 
    "<net.imglib2.display.projector.sampler.SamplingProjector2D: void <init>(int,int,net.imglib2.RandomAccessible,net.imglib2.IterableInterval,net.imglib2.converter.Converter,int,long[])>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.3810102010154811
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.3810102010154811
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.3810102010154811
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(long[],int,int,long[],int,int,int,int)>": 0.3808467349926187
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long[],int,int,int,int)>": 0.3803759210133074
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: java.lang.Object get()>": [
        {
            "<org.dyn4j.Reference: int hashCode()>": 0.25862502700206197
        }, 
        {
            "<org.jbox2d.collision.broadphase.DefaultBroadPhaseBuffer: java.lang.Object getUserData(int)>": 0.2586031531191114
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: java.lang.Object getUserData(int)>": 0.24886856628034051
        }, 
        {
            "<boofcv.gui.SelectAlgorithmAndInputPanel: java.lang.Object getAlgorithmCookie(int)>": 0.2470729480638793
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.24468556393659008
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsBorderFactory: net.imglib2.outofbounds.OutOfBounds create(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.15166887845560387
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.1263514767671512
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.1263514767671512
        }, 
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.11959585451399861
        }, 
        {
            "<net.coobird.thumbnailator.resizers.ProgressiveBilinearResizer: void <init>(java.util.Map)>": 0.11959585451399861
        }
    ], 
    "<net.imglib2.transform.InverseTransform: void apply(long[],long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.24729034217626794
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.24729034217626794
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.22895986090025797
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.20773877534405594
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.19764098730509247
        }
    ], 
    "<net.imglib2.interpolation.Interpolant: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.img.planar.PlanarImg: int indexToGlobalPosition(int,int,int)>": [
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getIndex(int,int,int)>": 0.6250891684670087
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getIndex(int,int)>": 0.606955187325881
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal11(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.5566572241546707
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve9(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.5561897734446232
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32_Div: void convolve11(boofcv.struct.convolve.Kernel2D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,int)>": 0.5560468614267752
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: void mul(float)>": [
        {
            "<boofcv.alg.feature.dense.DescribeDenseHogAlg: void process()>": 0.34244339190952583
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.34002366769942594
        }, 
        {
            "<boofcv.alg.feature.detect.line.HoughTransformLineFootOfNorm: void transform(boofcv.struct.image.ImageGray,boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.3392138584203557
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplDisparityScoreSadRectFive_F32: void computeRemainingRows(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32)>": 0.33723397660763976
        }, 
        {
            "<boofcv.alg.tracker.klt.KltTracker: void setAllowedBounds(boofcv.alg.tracker.klt.KltFeature)>": 0.3360448600901588
        }
    ], 
    "<net.imglib2.img.cell.AbstractCellImgFactory: void <init>(int)>": [
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.TriangleEPA: void <init>(int,int,int)>": 0.36590618659753343
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: void <init>(int,int,int)>": 0.3207796896987712
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMax(int,int)>": 0.3117788508690422
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB: void setMin(int,int)>": 0.3117788508690422
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.3025420593756554
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericLongType: void set(net.imglib2.type.numeric.integer.GenericLongType)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.203648008204243
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.203648008204243
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.203648008204243
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.19408486402271555
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.InterleavedS64,long,long,boofcv.struct.image.InterleavedS64)>": 0.19155635064717697
        }
    ], 
    "<net.imglib2.iterator.LocalizingIntervalIterator: int getIntPosition(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5867111703953767
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.5785863688512851
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.578159006540164
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5596150726660568
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.5487091398200385
        }
    ], 
    "<net.imglib2.view.IntervalView: void <init>(net.imglib2.RandomAccessible,net.imglib2.Interval)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.47352040016188685
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4569652944778266
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.45667569344777303
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4530260021807848
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateMetrics(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.4449521532810675
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerType: void setReal(double)>": [
        {
            "<boofcv.abst.feature.tracker.PointTrack: void <init>(double,double,long)>": 0.27842878014688643
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.2680790892820422
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.2619826775126171
        }, 
        {
            "<boofcv.struct.feature.ScalePoint: void set(double,double,double)>": 0.23406371247952426
        }, 
        {
            "<boofcv.struct.feature.ScalePoint: void <init>(double,double,double)>": 0.23406371247952426
        }
    ], 
    "<net.imglib2.Volatile: void <init>(java.lang.Object,boolean)>": [
        {
            "<Catalano.Imaging.Filters.Mirror: void <init>(boolean,boolean)>": 0.3038135843272336
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.3038135843272336
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxBlock: void <init>(boolean,boolean)>": 0.3038135843272336
        }, 
        {
            "<boofcv.gui.calibration.CalibratedImageGridPanel: void setDisplay(boolean,boolean,boolean,boolean,boolean,double)>": 0.30310915814028855
        }, 
        {
            "<boofcv.demonstrations.calibration.SubpixelGridTargetDisplay: void setShow(boolean,boolean)>": 0.30177879823984954
        }
    ], 
    "<net.imglib2.img.planar.PlanarLocalizingCursor1D: boolean hasNext()>": [
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.6023849455289535
        }, 
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.5934959054221014
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.5928412662400641
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.5928412662400641
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.5928412662400641
        }
    ], 
    "<net.imglib2.AbstractRealInterval: double realMin(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.6444652635187575
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.PyramidDiscreteSampleBlur: double getSigma(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.NoCacheScaleSpace: double getScale(int)>": 0.6383928571428571
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: void set(double,double)>": [
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitSegment: void <init>(double,double,int)>": 0.3921171137662281
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitLoop: void <init>(double,double,int)>": 0.3921171137662281
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationAverageGradientIntegral: void <init>(double,int,double,int,double,java.lang.Class)>": 0.38954801115626536
        }, 
        {
            "<boofcv.factory.feature.orientation.FactoryOrientationAlgs: boofcv.abst.feature.orientation.OrientationIntegral image_ii(double,int,double,int,double,java.lang.Class)>": 0.38162496046963756
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply(boofcv.struct.image.GrayF64,double,double,double,boofcv.struct.image.GrayF64)>": 0.3646140501595357
        }
    ], 
    "<net.imglib2.type.numeric.complex.AbstractComplexType: double getPhaseDouble()>": [
        {
            "<Catalano.Math.ComplexNumber: double getPhase()>": 0.5030165912518854
        }, 
        {
            "<org.dyn4j.geometry.Vector2: double getDirection()>": 0.5030165912518854
        }, 
        {
            "<org.dyn4j.dynamics.CoefficientMixer$1: double mixRestitution(double,double)>": 0.5030165912518854
        }, 
        {
            "<org.dyn4j.geometry.Transform: double getRotation()>": 0.5030165912518854
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Chessboard(double,double,double,double)>": 0.4955355568202517
        }
    ], 
    "<net.imglib2.neighborsearch.KNearestNeighborSearchOnKDTree: void searchNode(net.imglib2.KDTreeNode)>": [
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: void findHistogramPeaks()>": 0.33041279471802687
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.StereoDisparityWtoNaiveFive: double selectBest(int)>": 0.30589608251931844
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.StereoDisparityWtoNaive: double selectBest(int)>": 0.30589608251931844
        }, 
        {
            "<Catalano.Math.Decompositions.EigenvalueDecomposition: void tql2()>": 0.304009471374632
        }, 
        {
            "<boofcv.alg.geo.f.ParamFundamentalEpipolar: void decode(double[],org.ejml.data.DenseMatrix64F)>": 0.3037063740869015
        }
    ], 
    "<net.imglib2.type.label.BasePairCharType: int compareTo(net.imglib2.type.label.BasePairCharType)>": [
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(org.jbox2d.particle.ParticleSystem$Proxy)>": 0.3020689258160245
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(java.lang.Object)>": 0.28140518839910483
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Vector2: int getMinAxis()>": 0.2646087080685227
        }, 
        {
            "<com.flowpowered.react.math.Vector2: int getMinAxis()>": 0.2646087080685227
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EPAAlgorithm$TriangleComparison: int compare(com.flowpowered.react.collision.narrowphase.EPA.TriangleEPA,com.flowpowered.react.collision.narrowphase.EPA.TriangleEPA)>": 0.2572242309548291
        }
    ], 
    "<net.imglib2.Point: void setPosition(int,int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.4114253412923709
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.4114253412923709
        }, 
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.3513309957034328
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(long[],int,int,long[],int,int,int,int)>": 0.33981987479231784
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(long[],int,int,long[],int,int,int,int)>": 0.3393584667617955
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: void dimensions(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.histogram.Real1dBinMapper: void <init>(double,double,long,boolean)>": [
        {
            "<Catalano.Statistics.Tools: double Fisher(double)>": 0.30820335762367695
        }, 
        {
            "<Catalano.Statistics.Tools: double InverseFisher(double)>": 0.2886424962264003
        }, 
        {
            "<org.dyn4j.geometry.Capsule: boolean validate(double,double)>": 0.2856899974486395
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrack: void <init>(double,double,long)>": 0.28166000661331864
        }, 
        {
            "<boofcv.factory.filter.kernel.FactoryKernelGaussian: double sigmaForRadius(double,int)>": 0.2789912707764261
        }
    ], 
    "<net.imglib2.AbstractInterval: double realMin(int)>": [
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.6837368139947142
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.6837368139947142
        }, 
        {
            "<org.jbox2d.common.BufferUtils: java.lang.Object[] reallocateBuffer(java.lang.Class,java.lang.Object[],int,int,int,boolean)>": 0.6666471527552539
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.6581664875033119
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.6486315185673585
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.ExtendedRandomAccessibleInterval extendMirrorDouble(net.imglib2.RandomAccessibleInterval)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.09174634218511289
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.09072767633979884
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.08764598212022147
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void <init>(boofcv.demonstrations.tracker.CirculantVisualizationPanel$Listener)>": 0.0855362829225267
        }
    ], 
    "<net.imglib2.position.transform.FloorOffset: void f(net.imglib2.RealLocalizable,long[])>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2573966116082401
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.24820609240324737
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2268620918964319
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2268620918964319
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.22673213687191832
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedRandomAccessibleInterval: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.03984095364447979
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03857583749052298
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.03823304826514973
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.037826720791800154
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03744654309470488
        }
    ], 
    "<net.imglib2.FinalDimensions: void <init>(long[],boolean)>": [
        {
            "<boofcv.alg.fiducial.calib.chess.ChessboardPolygonHelper: boolean filterContour(java.util.List,boolean,boolean)>": 0.3353037891055827
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void renderBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.3128097625934187
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void display(com.jogamp.opengl.GLAutoDrawable)>": 0.2699718565513012
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.2681644861047991
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.2681644861047991
        }
    ], 
    "<net.imglib2.util.Intervals: long[] maxAsLongArray(net.imglib2.Interval)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.27794369028632787
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2674783269152191
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.23856877404808868
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2322352143515134
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.23156838761183193
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: long dimension(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3508771929824561
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3142423944400126
        }
    ], 
    "<net.imglib2.converter.readwrite.ARGBChannelSamplerConverter$ARGBChannelConvertingAccess: void setValue(int,byte)>": [
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.4486720450965859
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$7: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.44227952779342555
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$3: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.44227952779342555
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$4: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.43084074611045364
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$2: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.43084074611045364
        }
    ], 
    "<net.imglib2.position.transform.Floor: long floor(double)>": [
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.3046247132811093
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2568764868293795
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.24541706285660106
        }, 
        {
            "<org.dyn4j.dynamics.World: void setAccumulatedTime(double)>": 0.24165114406299046
        }, 
        {
            "<boofcv.abst.feature.tracker.PointTrack: void <init>(double,double,long)>": 0.24157114187851256
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: void <init>(float)>": [
        {
            "<com.flowpowered.react.math.Matrix4x4: void <init>(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)>": 0.323914940157631
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: void <init>(float,float,float,float,float,float,float,float,float)>": 0.31774264278260245
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.DebugDrawJ2D$1: java.lang.Object newColor(float,float,float,float)>": 0.31053422273094805
        }, 
        {
            "<com.flowpowered.react.math.Matrix2x2: void <init>(float,float,float,float)>": 0.2949010515340823
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplHarrisCornerWeighted_S16: void <init>(int,float)>": 0.2512468739832863
        }
    ], 
    "<net.imglib2.type.logic.BoolType: int compareTo(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<boofcv.abst.fiducial.CalibrationFiducialDetector: int totalFound()>": 0.3611053428245955
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(org.jbox2d.particle.ParticleSystem$Proxy)>": 0.250096332041624
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(java.lang.Object)>": 0.2436965970577186
        }, 
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.22908272093382842
        }, 
        {
            "<org.jbox2d.collision.broadphase.Pair: int compareTo(org.jbox2d.collision.broadphase.Pair)>": 0.22874192332332477
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void setPosition(float[])>": [
        {
            "<boofcv.struct.feature.TupleDesc_F32: void set(float[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: void <init>(int,float[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void <init>(float[],int,int)>": 0.2540764877039817
        }, 
        {
            "<boofcv.alg.interpolate.array.PolynomialNeville_F32: void <init>(int,float[],float[],int)>": 0.25147436847440663
        }, 
        {
            "<Catalano.Imaging.Filters.ImagePyramids: void <init>()>": 0.22423504135338396
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.IntervalView addDimension(net.imglib2.RandomAccessibleInterval,long,long)>": [
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.25263998331225673
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2420780218031994
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2402437032103877
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2402437032103877
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2402437032103877
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedIterableRandomAccessibleInterval: net.imglib2.RandomAccess randomAccess(net.imglib2.Interval)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.03984095364447979
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03857583749052298
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.03823304826514973
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.037826720791800154
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03744654309470488
        }
    ], 
    "<net.imglib2.util.BenchmarkHelper: void benchmarkAndPrint(int,boolean,java.lang.Runnable)>": [
        {
            "<boofcv.app.CommandParserFiducialSquare: void execute(java.lang.String[],boofcv.app.BaseFiducialSquare)>": 0.5429066083109818
        }, 
        {
            "<boofcv.app.CommandParserFiducialSquare: void printHelp()>": 0.5295073583003505
        }, 
        {
            "<boofcv.app.Help: void printHelp()>": 0.5159066290346508
        }, 
        {
            "<boofcv.app.CreateFiducialSquareBinary: void printPatternDefinitions()>": 0.5013670841921647
        }, 
        {
            "<boofcv.applet.AppletMediaManager: java.awt.image.BufferedImage openImage(java.lang.String)>": 0.4937991338695051
        }
    ], 
    "<net.imglib2.view.TransformRandomAccess: void move(int,int)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.5143686406894911
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.4960513026060557
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.4960513026060557
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.48914420806715503
        }, 
        {
            "<org.jbox2d.common.BufferUtils: java.lang.Object[] reallocateBuffer(java.lang.Class,java.lang.Object[],int,int,int,boolean)>": 0.48412986015394255
        }
    ], 
    "<net.imglib2.img.array.AbstractArrayLocalizingCursor: void <init>(net.imglib2.img.array.AbstractArrayLocalizingCursor)>": [
        {
            "<com.flowpowered.react.collision.broadphase.PairManager: boolean removePair(int,int)>": 0.3693004334675189
        }, 
        {
            "<boofcv.alg.segmentation.ImageSegmentationOps: void regionPixelId_to_Compact(boofcv.struct.image.GrayS32,org.ddogleg.struct.GrowQueue_I32,boofcv.struct.image.GrayS32)>": 0.3659622240275797
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS32)>": 0.3633556278733882
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS32)>": 0.3633556278733882
        }, 
        {
            "<boofcv.alg.fiducial.square.DetectFiducialSquareBinary: boolean rotateUntilInLowerCorner(boofcv.alg.fiducial.square.BaseDetectFiducialSquare$Result)>": 0.35793043061570623
        }
    ], 
    "<net.imglib2.img.sparse.ByteNtree: net.imglib2.img.sparse.NtreeAccess createInstance(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1826418206216855
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1826418206216855
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16881288427264435
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.12701685073623692
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.12701685073623692
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform: void <init>(long[])>": [
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.20941750112180452
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.20941750112180452
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.19912429506555623
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.19912429506555623
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,boofcv.struct.image.GrayS64)>": 0.19601346409278436
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: boolean isInLowerTail(java.lang.Object)>": [
        {
            "<Catalano.Core.Stopwatch: boolean isRunning()>": 0.43220757626531975
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldTrackerApp: void togglePause()>": 0.4011661295213105
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeCirculantTrackerApp: void togglePause()>": 0.4011661295213105
        }, 
        {
            "<boofcv.abst.sfm.d3.WrapVisOdomPixelDepthPnP: boolean isFault()>": 0.396723390162075
        }, 
        {
            "<boofcv.abst.sfm.d3.VisOdomPixelDepthPnP_to_DepthVisualOdometry: boolean isFault()>": 0.396723390162075
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void setRow(int,double[],double[][])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.586771290933976
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5753387335707808
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.5715620909934264
        }, 
        {
            "<org.jbox2d.common.BufferUtils: float[] reallocateBuffer(float[],int,int,int,boolean)>": 0.5715620909934264
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5708811048808173
        }
    ], 
    "<net.imglib2.RealPoint: void move(net.imglib2.RealLocalizable)>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.402402829457273
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.402402829457273
        }, 
        {
            "<boofcv.alg.descriptor.UtilFeature: void normalizeL2(boofcv.struct.feature.TupleDesc_F64)>": 0.36697759733594204
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel2D_F64,double)>": 0.36356715611543783
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void cftx020(double[],int)>": 0.3499060569112929
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: java.lang.String toString()>": [
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String getPatternName(int)>": 0.636301808120843
        }, 
        {
            "<boofcv.app.CreateFiducialSquareBinary: java.lang.String selectDocumentName()>": 0.5121823758133354
        }, 
        {
            "<boofcv.misc.AutoTypeImage: java.lang.String getInterleavedName()>": 0.4087007586491165
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.Orientation: java.lang.String toString()>": 0.395062149884675
        }, 
        {
            "<net.coobird.thumbnailator.geometry.RelativeSize: java.lang.String toString()>": 0.395062149884675
        }
    ], 
    "<net.imglib2.view.FullSourceMapSlicingRandomAccess: void localize(double[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5893979327979786
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5833282853181612
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5703647788499532
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5678098459882039
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.5583900047785767
        }
    ], 
    "<net.imglib2.img.sparse.ByteNtree: byte getValue(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.3447577893536421
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.33979763956490483
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.3389953346808261
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.3292717657186516
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.3221928440420029
        }
    ], 
    "<net.imglib2.img.cell.CellRandomAccess: void move(net.imglib2.Localizable)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.36766373031591154
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.3154574710925264
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.30701198501674126
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.25044485438965636
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void updateObjectIntegerAABB(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.broadphase.AABBInt)>": 0.24611637649042714
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: void <init>(net.imglib2.img.sparse.NtreeImg)>": [
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.2712685660317052
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void rotateCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.2712685660317052
        }, 
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.2693014739552722
        }, 
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.26664594719186124
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.26609586109426575
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedByteType: net.imglib2.type.numeric.integer.UnsignedByteType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.view.composite.CompositeIntervalView: long min(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.3508771929824561
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: long getOutside(int,int)>": 0.3142423944400126
        }
    ], 
    "<net.imglib2.display.awt.UnsignedIntDataBuffer: int[] getData()>": [
        {
            "<Catalano.Math.Matrix: int[] getColumns(int[],int[])>": 0.31895360110341153
        }, 
        {
            "<Catalano.Math.Matrix: int[] getRows(int[],int[])>": 0.31895360110341153
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.29328234169936723
        }, 
        {
            "<org.dyn4j.sandbox.ContactCounter: int getSensed()>": 0.2792207792207792
        }, 
        {
            "<Catalano.Imaging.Filters.HighBoost: void <init>(int)>": 0.27633621924611396
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: void localize(int[])>": [
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(int[],int,int,double,int[],int,int,int,int)>": 0.26754094390620975
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void multiply_A(int[],int,int,double,int[],int,int,int,int)>": 0.26754094390620975
        }, 
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.25250757858713263
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: int[] getPivot()>": 0.24695618114561774
        }, 
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.24681561722752574
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgs: net.imglib2.img.planar.PlanarImg complexDoubles(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned4BitType: net.imglib2.type.numeric.integer.Unsigned4BitType createVariable()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05923488777590923
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.057353933467640436
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.05684427997196944
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05624015883323094
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.055674916760380555
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsBorder: void fwd(int)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.27514708171999197
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: void setB(boofcv.struct.image.ImageBase,int,int,int,double)>": 0.2669989971603726
        }, 
        {
            "<boofcv.alg.geo.bundle.CalibratedPoseAndPoint: int getNumUnknownViews()>": 0.2596542217052865
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: void setM(boofcv.struct.image.ImageBase,int,int,double[])>": 0.25447594472262897
        }, 
        {
            "<boofcv.core.image.GeneralizedImageOps: double get(boofcv.struct.image.ImageInterleaved,int,int,int)>": 0.2532678369168408
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: double relativeFrequency(long,boolean)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.33468595764372694
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.2976822876906035
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.2797791220276316
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2776852309476081
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.2684236526656841
        }
    ], 
    "<net.imglib2.img.sparse.DoubleNtree: net.imglib2.img.sparse.NtreeAccess createInstance(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1826418206216855
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1826418206216855
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16881288427264435
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.12701685073623692
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.12701685073623692
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.FloorInterpolator: void <init>(net.imglib2.RandomAccessible)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.converter.VolatileRealTypeARGBConverter: void <init>()>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09718671256528
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.09174598761193291
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.08996469021204838
        }, 
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.08861469461982084
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.08838834764831845
        }
    ], 
    "<net.imglib2.view.RandomAccessibleOnRealRandomAccessible$RandomAccessOnRealRandomAccessible: void localize(float[])>": [
        {
            "<boofcv.struct.feature.TupleDesc_F32: void set(float[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: void <init>(int,float[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void <init>(float[],int,int)>": 0.2540764877039817
        }, 
        {
            "<boofcv.alg.interpolate.array.PolynomialNeville_F32: void <init>(int,float[],float[],int)>": 0.25147436847440663
        }, 
        {
            "<Catalano.Imaging.Filters.ImagePyramids: void <init>()>": 0.22423504135338396
        }
    ], 
    "<net.imglib2.histogram.Integer1dBinMapper: net.imglib2.histogram.Integer1dBinMapper copy()>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint: void access$400(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint,int,boolean,long)>": 0.19036953974675297
        }, 
        {
            "<org.jbox2d.testbed.framework.TestbedController: void run()>": 0.18000311725408324
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void setPaused(boolean)>": 0.17230060940112776
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.16884540837649262
        }, 
        {
            "<org.jbox2d.testbed.framework.TestbedController: void stepAndRender()>": 0.16578085379924062
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedRandomAccessibleInterval: void <init>(net.imglib2.RandomAccessibleInterval,net.imglib2.converter.readwrite.SamplerConverter)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06454972243679027
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0625
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06194461797903697
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.061286292230682514
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06067033396213444
        }
    ], 
    "<net.imglib2.img.list.ListRandomAccess: void setPosition(int[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.4740391187367547
        }, 
        {
            "<Catalano.Math.Matrix: int InnerProduct(int[],int[])>": 0.4487876321385675
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(int[],int,int,int[],int,int,int,int)>": 0.4285118298015622
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(int[],int,int,int[],int,int,int,int)>": 0.4250034056672301
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_S32_S32: void horizontal7(boofcv.struct.convolve.Kernel1D_I32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.4200465668454615
        }
    ], 
    "<net.imglib2.display.projector.specialized.PlanarImgContainerSamplerImpl: int fwd()>": [
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.4126395803264231
        }, 
        {
            "<boofcv.io.wrapper.images.LoadFileImageSequence: int getFrameNumber()>": 0.37969924812030065
        }, 
        {
            "<boofcv.io.wrapper.images.ImageStreamSequence: int getFrameNumber()>": 0.37969924812030065
        }, 
        {
            "<boofcv.io.wrapper.images.MjpegStreamSequence: int getFrameNumber()>": 0.37969924812030065
        }, 
        {
            "<boofcv.io.wrapper.images.BufferedFileImageSequence: int getFrameNumber()>": 0.37969924812030065
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess1D: void bck(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.5042294228042216
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.49710692444961135
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.49583004082014753
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.4857787542816115
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Coordinate: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.48025427171273927
        }
    ], 
    "<net.imglib2.type.numeric.complex.AbstractComplexType: void mul(float)>": [
        {
            "<com.flowpowered.react.math.Matrix4x4: com.flowpowered.react.math.Matrix4x4 multiply(com.flowpowered.react.math.Matrix4x4,float)>": 0.393189665079286
        }, 
        {
            "<com.flowpowered.react.math.Matrix3x3: com.flowpowered.react.math.Matrix3x3 multiply(com.flowpowered.react.math.Matrix3x3,float)>": 0.38710877734933935
        }, 
        {
            "<org.jbox2d.common.Vec2: org.jbox2d.common.Vec2 mul(float)>": 0.3835847898896653
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: com.flowpowered.react.math.Matrix4x4 add(com.flowpowered.react.math.Matrix4x4,com.flowpowered.react.math.Matrix4x4)>": 0.3816041388159212
        }, 
        {
            "<com.flowpowered.react.math.Matrix4x4: com.flowpowered.react.math.Matrix4x4 subtract(com.flowpowered.react.math.Matrix4x4,com.flowpowered.react.math.Matrix4x4)>": 0.3816041388159212
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void <init>(long,long)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.29083484331425874
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.27295044162398285
        }, 
        {
            "<org.box2d.proto.Box2D$PbShape$Builder: org.box2d.proto.Box2D$PbShape$Builder setTag(long)>": 0.264823312984893
        }, 
        {
            "<org.box2d.proto.Box2D$PbFixture$Builder: org.box2d.proto.Box2D$PbFixture$Builder setTag(long)>": 0.264823312984893
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint$Builder: org.box2d.proto.Box2D$PbJoint$Builder setTag(long)>": 0.264823312984893
        }
    ], 
    "<net.imglib2.img.sparse.NtreeImgFactory: net.imglib2.img.sparse.NtreeImg createByteInstance(long[],net.imglib2.util.Fraction)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.18737514941608052
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18412209502692617
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18412209502692617
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.1822362181592632
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1791168235896834
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void move(float[])>": [
        {
            "<boofcv.struct.feature.TupleDesc_F32: void set(float[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: void <init>(int,float[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void <init>(float[],int,int)>": 0.2540764877039817
        }, 
        {
            "<boofcv.alg.interpolate.array.PolynomialNeville_F32: void <init>(int,float[],float[],int)>": 0.25147436847440663
        }, 
        {
            "<Catalano.Imaging.Filters.ImagePyramids: void <init>()>": 0.22423504135338396
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void <init>(net.imglib2.img.basictypeaccess.LongAccess)>": [
        {
            "<boofcv.struct.feature.TupleDesc_I8: void <init>(int)>": 0.2017079274029055
        }, 
        {
            "<boofcv.alg.filter.binary.impl.BinaryThinning$Mask: void <init>(boofcv.alg.filter.binary.impl.BinaryThinning,byte[])>": 0.16251653302482985
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_I8: void set(byte[])>": 0.15952191190323523
        }, 
        {
            "<boofcv.io.video.VideoMjpegCodec: byte[] convertToByteArray(java.io.InputStream)>": 0.15050744658464452
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.ExifUtils: net.coobird.thumbnailator.util.exif.Orientation getOrientationFromExif(byte[])>": 0.13268663902519282
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void move(long,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.31325484913065393
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.31097891796791843
        }
    ], 
    "<net.imglib2.neighborsearch.KNearestNeighborSearchOnKDTree: void search(net.imglib2.RealLocalizable)>": [
        {
            "<boofcv.alg.feature.orientation.OrientationHistogramSift: void findHistogramPeaks()>": 0.3228698410539926
        }, 
        {
            "<boofcv.alg.feature.describe.DescribeSiftCommon: void normalizeDescriptor(boofcv.struct.feature.TupleDesc_F64,double)>": 0.3173141865167549
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.StereoDisparityWtoNaiveFive: double selectBest(int)>": 0.30934852123431555
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.StereoDisparityWtoNaive: double selectBest(int)>": 0.30934852123431555
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: void realInverseFull(double[],boolean)>": 0.3041025998127469
        }
    ], 
    "<net.imglib2.AbstractWrappedRealInterval: int numDimensions()>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3652167676687162
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3652167676687162
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.EPA.EdgeEPA: int getTargetVertexIndex()>": 0.3184893664460647
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: int getOutside(int,int)>": 0.31672989028797055
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void setPosition(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.img.list.ListRandomAccess: void move(long,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void abs(int[],int,int,int[],int,int,int,int)>": 0.4829400395813672
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int[],int,int,int,int)>": 0.45691129775731903
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int[],int,int,int,int)>": 0.45691129775731903
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int[],int,int,int,int)>": 0.45691129775731903
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getIndex(int,int,int)>": 0.4545548783057129
        }
    ], 
    "<net.imglib2.img.planar.PlanarPlaneSubsetLocalizingCursor: void fwd()>": [
        {
            "<Catalano.Imaging.Filters.EnsembleThreshold: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.39727398037755884
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: int get(int)>": 0.3427532261477151
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S32: void setOutside(int,int,int[])>": 0.3427532261477151
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: int getLength(int)>": 0.3427532261477151
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.3397435389241089
        }
    ], 
    "<net.imglib2.AbstractCursor: void <init>(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.31871009265509614
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.3167249163010024
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.3167249163010024
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.31370340328680457
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.31370340328680457
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void move(net.imglib2.RealLocalizable)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0778498944161523
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.07537783614444092
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0747080202248614
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.07391404949863532
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.07317117587562046
        }
    ], 
    "<net.imglib2.transform.integer.TranslationTransform: void applyInverse(net.imglib2.Positionable,net.imglib2.Localizable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5845464998712748
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5679589407541452
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5602169992197462
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.554448918794042
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateMetrics(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.545453323948808
        }
    ], 
    "<net.imglib2.util.Partition: int partitionSubList(int,int,short[])>": [
        {
            "<boofcv.alg.filter.misc.AverageDownSampleOps: int downSampleSize(int,int)>": 0.31173990305945715
        }, 
        {
            "<boofcv.alg.filter.convolve.down.UtilDownConvolve: int computeOffset(int,int)>": 0.29978874697387004
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void copy(int,int,int,int,int,int,boofcv.struct.image.GrayI16,boofcv.struct.image.GrayI16)>": 0.2946304781731456
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void boundImage(boofcv.struct.image.GrayS16,int,int)>": 0.28775900629976847
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(short[],int,int,short[],int,int,int,int)>": 0.28655374899504615
        }
    ], 
    "<net.imglib2.transform.integer.permutation.SingleDimensionPermutationTransform: void applyInverse(net.imglib2.Positionable,net.imglib2.Localizable)>": [
        {
            "<boofcv.app.calib.AssistedCalibration: void drawPadding()>": 0.3560699098466614
        }, 
        {
            "<org.box2d.proto.Box2D$PbFilter: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.3423876559732745
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void process(boofcv.struct.image.ImageGray,boofcv.struct.image.GrayU8)>": 0.3390095376905524
        }, 
        {
            "<boofcv.alg.filter.binary.ThresholdSquareBlockMinMax: void computeMinMax(boofcv.struct.image.ImageGray,int,int)>": 0.3370224823130172
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: void writeTo(com.google.protobuf.CodedOutputStream)>": 0.335537423159051
        }
    ], 
    "<net.imglib2.position.transform.Floor: void move(double[])>": [
        {
            "<Catalano.Statistics.Correlations: double VectorInnerProduct(double[],double[])>": 0.3027512109199807
        }, 
        {
            "<Catalano.Math.Matrix: double InnerProduct(double[],double[])>": 0.3027512109199807
        }, 
        {
            "<Catalano.Math.Distances.Distance: double SquaredEuclidean(double[],double[])>": 0.2936885687388374
        }, 
        {
            "<Catalano.Math.Special: double Polevl(double,double[],int)>": 0.2926082013304288
        }, 
        {
            "<Catalano.Statistics.Kernels.Linear: double Function(double[],double[])>": 0.29229355750661956
        }
    ], 
    "<net.imglib2.util.Intervals: long[] dimensionsAsLongArray(net.imglib2.Dimensions)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.27794369028632787
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2674783269152191
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.23856877404808868
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2322352143515134
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.23156838761183193
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg floats(float[],long[])>": [
        {
            "<org.dyn4j.sandbox.Sandbox: void renderSelectedBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.1546271459612003
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.14702947288269252
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void <init>(float[],int,int)>": 0.14456567617355504
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: void <init>(int,float[])>": 0.1420743506677539
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void renderEditingBody(com.jogamp.opengl.GL2,org.dyn4j.sandbox.SandboxBody)>": 0.14010975024018577
        }
    ], 
    "<net.imglib2.position.transform.FloorOffset: void move(float[])>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.246184098512037
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2285273105937536
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.21973100932535056
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.21865830769458777
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.21833372793215056
        }
    ], 
    "<net.imglib2.type.numeric.real.AbstractRealType: int compareTo(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<boofcv.struct.feature.MatchScoreType$1: int compareTo(double,double)>": 0.5383608073422567
        }, 
        {
            "<boofcv.struct.feature.MatchScoreType$2: int compareTo(double,double)>": 0.5383608073422567
        }, 
        {
            "<boofcv.alg.tracker.meanshift.TrackerMeanShiftComaniciu2003: int selectBest(double,double,double)>": 0.3877358756903347
        }, 
        {
            "<org.dyn4j.collision.narrowphase.ExpandingSimplexEdge: int compareTo(org.dyn4j.collision.narrowphase.ExpandingSimplexEdge)>": 0.3628494709513976
        }, 
        {
            "<boofcv.examples.recognition.ExampleColorHistogramLookup$1: int compare(org.ddogleg.nn.NnData,org.ddogleg.nn.NnData)>": 0.33179744956292795
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.IntArray: java.lang.Object createArray(int)>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_F32_U8: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.33562632983523094
        }, 
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectRectStandard_S32_U8: void configure(boofcv.struct.image.ImageGray,int,int,int)>": 0.33562632983523094
        }, 
        {
            "<boofcv.alg.distort.impl.ImplImageDistort_PL: void apply(boofcv.struct.image.ImageBase,boofcv.struct.image.ImageBase,int,int,int,int)>": 0.3042974058213425
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2838082849127157
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.2838082849127157
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgs: net.imglib2.img.planar.PlanarImg longs(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: int getIntPosition(int)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.5078285150911725
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.5078285150911725
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.5078285150911725
        }, 
        {
            "<boofcv.alg.fiducial.calib.squares.SquaresIntoRegularClusters: int add(int,int)>": 0.46401913722402865
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: int maxAbs(int[],int,int,int,int)>": 0.46236799717354615
        }
    ], 
    "<net.imglib2.display.projector.IterableIntervalProjector2D: void <init>(int,int,net.imglib2.RandomAccessible,net.imglib2.IterableInterval,net.imglib2.converter.Converter)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.42250183881719844
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.42250183881719844
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.42250183881719844
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.42154632432533184
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.42154632432533184
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void move(int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.2540764877039817
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.21777659600227028
        }
    ], 
    "<net.imglib2.view.SubsampleIntervalView: void realMax(net.imglib2.RealPositionable)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.23028776078442167
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.22423752035108865
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.19516104942281642
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.19516104942281642
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.19468784744304193
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListCursor: void set(java.lang.Object)>": [
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<net.coobird.thumbnailator.resizers.ProgressiveBilinearResizer: void <init>(java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<net.coobird.thumbnailator.resizers.BicubicResizer: void <init>(java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<net.coobird.thumbnailator.resizers.BilinearResizer: void <init>(java.util.Map)>": 0.21126595987653524
        }, 
        {
            "<boofcv.abst.geo.fitting.DistanceFromModelResidualN: void setModel(java.lang.Object)>": 0.21126595987653524
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: boolean valueEquals(java.lang.Object)>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.45929739390889646
        }, 
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.4194347937635405
        }, 
        {
            "<org.jbox2d.callbacks.ContactFilter: boolean shouldCollide(org.jbox2d.dynamics.Fixture,org.jbox2d.dynamics.Fixture)>": 0.39484128083596104
        }, 
        {
            "<Catalano.Imaging.Filters.BinaryWatershed: boolean isWithin(int,int,int,int,int)>": 0.39079663577324225
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.3903317435807435
        }
    ], 
    "<net.imglib2.img.sparse.ByteNtree: net.imglib2.img.sparse.ByteNtree createInstance(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.12458962570367609
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.12458962570367609
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.11785109527680923
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11532909002102744
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.0989858659890338
        }
    ], 
    "<net.imglib2.type.label.BasePairBitType: byte baseToValue()>": [
        {
            "<boofcv.alg.feature.disparity.impl.ImplSelectSparseBasicWta_S32: boolean select(int[],int)>": 0.34719634039112596
        }, 
        {
            "<boofcv.misc.BoofMiscOps: int countNotZero(int[],int)>": 0.3466646190235623
        }, 
        {
            "<Catalano.Math.Dissimilarities.Dissimilarity: double Jaccard(int[],int[])>": 0.33241197258863403
        }, 
        {
            "<Catalano.Math.Dissimilarities.Dissimilarity: double Dice(int[],int[])>": 0.3315053049816405
        }, 
        {
            "<Catalano.Math.Dissimilarities.Dissimilarity: double SokalSneath(int[],int[])>": 0.3311987346830431
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void bck(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.36016035441676975
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.35742259995382736
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.35455846459436624
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.35455846459436624
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: float getRealFloat()>": [
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float Sqrt(float)>": 0.3442758736770201
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float ArcSin(float)>": 0.3442758736770201
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float Cos(float)>": 0.3442758736770201
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float ArcCos(float)>": 0.3442758736770201
        }, 
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float Tan(float)>": 0.3442758736770201
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: void localize(float[])>": [
        {
            "<Catalano.Math.Matrix: float[] CreateMatrix1D(int,float)>": 0.3010628090554279
        }, 
        {
            "<boofcv.core.image.FactoryGImageMultiBand$PL: void getF(int,float[])>": 0.2844669538166352
        }, 
        {
            "<Catalano.Math.Matrix: void Fill(float[],float)>": 0.27785161717654067
        }, 
        {
            "<boofcv.alg.segmentation.ms.SegmentMeanShiftSearchColor: void meanColor(float[],float[],float)>": 0.2745912182716453
        }, 
        {
            "<boofcv.alg.segmentation.ComputeRegionMeanColor$PL_F32: void addPixelValue(int,float[])>": 0.27170691961930254
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: double squareDistance(double[],double[])>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve11(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.6187273683919339
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal11(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.617848943773919
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve9(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.6158941421438979
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal9(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.6132741186161312
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve7(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.6076973813860276
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccessible: net.imglib2.RealRandomAccess realRandomAccess(net.imglib2.RealInterval)>": [
        {
            "<Catalano.Imaging.Filters.GaussianBlur: void <init>()>": 0.028490144114909487
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.BradleyLocalThreshold: void <init>()>": 0.028490144114909487
        }, 
        {
            "<Catalano.Imaging.Filters.CosineTransform: void <init>()>": 0.028490144114909487
        }, 
        {
            "<Catalano.Imaging.Filters.BradleyLocalThreshold: void <init>()>": 0.028490144114909487
        }, 
        {
            "<Catalano.Imaging.Filters.UnsharpMasking: void <init>()>": 0.028490144114909487
        }
    ], 
    "<net.imglib2.type.numeric.integer.IntType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.10842661409823065
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.10132274924351498
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.10036934567095813
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.09785730607238811
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.09785730607238811
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: void setPosition(long,int)>": [
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayF32)>": 0.1918981815496716
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.18868728623271852
        }, 
        {
            "<boofcv.core.image.border.ImageBorder_S64: void set(int,int,long)>": 0.1803357160729523
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I64: void setOutside(int,int,long)>": 0.17753711473423037
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.17499832294689424
        }
    ], 
    "<net.imglib2.util.Util: java.lang.String printInterval(net.imglib2.Interval)>": [
        {
            "<boofcv.demonstrations.feature.disparity.VisualizeStereoDisparity: void main(java.lang.String[])>": 0.591519113515899
        }, 
        {
            "<boofcv.demonstrations.fiducial.VisualizeSquareFiducial: void main(java.lang.String[])>": 0.5663461290971654
        }, 
        {
            "<boofcv.demonstrations.denoise.DenoiseAccuracyStudyApp: void main(java.lang.String[])>": 0.5429629006177439
        }, 
        {
            "<org.jbox2d.common.Transform: java.lang.String toString()>": 0.5304207803105471
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename: java.lang.String appendSuffix(java.lang.String,java.lang.String)>": 0.5260448325077789
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: void inc()>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.28593561871521345
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.27085279948959046
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>()>": 0.24372685929874666
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.2379802920342033
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2300246167861285
        }
    ], 
    "<net.imglib2.display.awt.SignedShortDataBuffer: void <init>(short[][],int)>": [
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayF32)>": 0.23823607758562998
        }, 
        {
            "<boofcv.struct.geo.QueueMatrix: void <init>(int,int,int)>": 0.2159287786509738
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegion pixelRegion(int,int,java.lang.Class)>": 0.21277213696565417
        }, 
        {
            "<boofcv.factory.feature.describe.FactoryDescribePointAlgs: boofcv.alg.feature.describe.DescribePointPixelRegionNCC pixelRegionNCC(int,int,java.lang.Class)>": 0.21277213696565417
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.IntegralImageFeatureIntensity: void hessian(boofcv.struct.image.GrayF32,int,int,boofcv.struct.image.GrayF32)>": 0.21135826959011644
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.IntervalView permuteCoordinates(net.imglib2.RandomAccessibleInterval,int[],int)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.3539124449985673
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateMetrics(int)>": 0.3475179611180048
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.3453533577304919
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.33911494392113795
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateMetrics(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.3384421781390429
        }
    ], 
    "<net.imglib2.img.list.AbstractLongListImg$LongListLocalizingCursor: void <init>(net.imglib2.img.list.AbstractLongListImg,net.imglib2.img.list.AbstractLongListImg$LongListLocalizingCursor)>": [
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2839770619603245
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.27839571120777723
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.27839571120777723
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void flipHorizontal(boofcv.struct.image.GrayS64)>": 0.27088772660673116
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set(int,int,long[])>": 0.2671780757639496
        }
    ], 
    "<net.imglib2.converter.AbstractConvertedRealRandomAccess: void move(int,int)>": [
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.49781410446098096
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.4954196921097764
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.4893810727715689
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.4893810727715689
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.ShortArray: net.imglib2.img.basictypeaccess.array.ShortArray createArray(int)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.29781790326307295
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.29649405014104924
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.29649405014104924
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.2930792985571642
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.2930792985571642
        }
    ], 
    "<net.imglib2.view.RandomAccessibleIntervalCursor: void <init>(net.imglib2.view.RandomAccessibleIntervalCursor)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.26045128035804066
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2219046468534414
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.2219046468534414
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.21962235150292808
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.21947673897620423
        }
    ], 
    "<net.imglib2.img.sparse.NtreeRandomAccess: void move(net.imglib2.Localizable)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.28549313129954096
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.2693378456803539
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addGaussian(boofcv.struct.image.GrayS64,java.util.Random,double,long,long)>": 0.2581240751879945
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void fillUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.2568710635460207
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2558437636540361
        }
    ], 
    "<net.imglib2.KDTree$KDTreeCursor: void localize(float[])>": [
        {
            "<boofcv.struct.feature.TupleDesc_F32: void set(float[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F32: void <init>(int,float[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F32: void <init>(float[],int,int)>": 0.2540764877039817
        }, 
        {
            "<boofcv.alg.interpolate.array.PolynomialNeville_F32: void <init>(int,float[],float[],int)>": 0.25147436847440663
        }, 
        {
            "<Catalano.Imaging.Filters.ImagePyramids: void <init>()>": 0.22423504135338396
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: void sub(net.imglib2.type.numeric.real.FloatType)>": [
        {
            "<boofcv.gui.feature.VisualizeOpticalFlow: void magnitudeAbs(boofcv.struct.flow.ImageFlow,float,java.awt.image.BufferedImage)>": 0.309791041113351
        }, 
        {
            "<org.jbox2d.testbed.perf.MathPerf: void runSinLUTTest(float)>": 0.3070660559641686
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$JoinParticleGroupsCallback: void callback(int,int,int)>": 0.30605768330171645
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem$CreateParticleGroupCallback: void callback(int,int,int)>": 0.30455710497624167
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void raycast(org.jbox2d.callbacks.ParticleRaycastCallback,org.jbox2d.common.Vec2,org.jbox2d.common.Vec2)>": 0.30433357265682204
        }
    ], 
    "<net.imglib2.type.logic.BitType: void set(net.imglib2.type.logic.BitType)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2704565756894545
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.2363069956393727
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.EndPoint: void setValues(int,boolean,long)>": 0.22185720723427216
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint: void setValues(int,boolean,long)>": 0.22185720723427216
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.21698608724069446
        }
    ], 
    "<net.imglib2.AbstractRealLocalizable: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageMultiBand$IL_F64: float getF(int)>": 0.5869727736761196
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_F64: float getF(int)>": 0.5869727736761196
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F32: void setOutside(int,int,float)>": 0.49163800764408094
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_F64: void setOutside(int,int,double[])>": 0.49163800764408094
        }, 
        {
            "<boofcv.alg.weights.WeightPixelUniform_F32: float weight(int,int)>": 0.4868016044136483
        }
    ], 
    "<net.imglib2.transform.integer.MixedTransform: void setComponentZero(boolean[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.47302461677289603
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.460597729177852
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4591713053184648
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.45330664298380163
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.45133604702775554
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: int getCodedSignedIntChecked(long)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.3233702015976873
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.3233702015976873
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.3233702015976873
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$200(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.31797828696353103
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int access$100(org.jbox2d.particle.ParticleSystem$Proxy[],int,long)>": 0.31797828696353103
        }
    ], 
    "<net.imglib2.img.planar.PlanarImgs: net.imglib2.img.planar.PlanarImg complexFloats(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: void set(long)>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.GrayS64,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS64,long,long,long,boofcv.struct.image.GrayS64)>": 0.31943979135861733
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(long,boofcv.struct.image.InterleavedS64,long,long,boofcv.struct.image.InterleavedS64)>": 0.3076250912475072
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.InterleavedS64,long,long,long,boofcv.struct.image.InterleavedS64)>": 0.3076250912475072
        }
    ], 
    "<net.imglib2.AbstractWrappedRealInterval: void realMax(double[])>": [
        {
            "<Catalano.Math.Transforms.FourierTransform: void convolve(double[],double[],double[])>": 0.3480543659696625
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void setHistogram(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.feature.TupleDesc_F64: void set(double[])>": 0.26957061519121805
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int,double[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int,int)>": 0.2540764877039817
        }
    ], 
    "<net.imglib2.type.AbstractBitType: void decIndex(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.35897774872115823
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.35897774872115823
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: long computeRelativeTag(long,int,int)>": 0.3575868720767822
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.3453198173619748
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.32572542511667824
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericIntType: void decIndex(int)>": [
        {
            "<boofcv.misc.CircularIndex: int plusPOffset(int,int,int)>": 0.6241711271514602
        }, 
        {
            "<boofcv.abst.fiducial.calib.CalibrationDetectorSquareFiducialGrid: int getPointIndex(int,int)>": 0.5747801203619927
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$9: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.5631673913280111
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: int getIndex(int,int,int)>": 0.5573780954063181
        }, 
        {
            "<boofcv.struct.image.ImageBase: int getIndex(int,int)>": 0.5485724542486418
        }
    ], 
    "<net.imglib2.display.screenimage.awt.UnsignedByteAWTScreenImage: java.awt.image.DataBuffer createDataBuffer(java.lang.Object)>": [
        {
            "<boofcv.struct.image.GrayI8: void _setData(java.lang.Object)>": 0.1532590227806104
        }, 
        {
            "<boofcv.struct.image.InterleavedI8: void _setData(java.lang.Object)>": 0.1532590227806104
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.1345982968042152
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Rendering: void <init>(java.lang.String,int,java.lang.Object)>": 0.12182630799201812
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Antialiasing: void <init>(java.lang.String,int,java.lang.Object)>": 0.12182630799201812
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.composite.CompositeIntervalView collapseNumeric(net.imglib2.RandomAccessibleInterval)>": [
        {
            "<Catalano.Imaging.Filters.GaussianBoxBlur: void BoxBlurH_RGB(Catalano.Imaging.FastBitmap,Catalano.Imaging.FastBitmap,int)>": 0.22922148244132856
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Maximum: void <init>(int)>": 0.22913263861451996
        }, 
        {
            "<Catalano.Imaging.Filters.ConservativeSmoothing: void <init>(int)>": 0.22913263861451996
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Minimum: void <init>(int)>": 0.22913263861451996
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.ConservativeSmoothing: void <init>(int)>": 0.22913263861451996
        }
    ], 
    "<net.imglib2.type.logic.BitType: boolean valueEquals(net.imglib2.type.logic.BitType)>": [
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.6451598879989153
        }, 
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.6169593272684828
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isFull()>": 0.5907802205110968
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.GJK.Simplex: boolean isEmpty()>": 0.5907802205110968
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: boolean isEmpty()>": 0.5907802205110968
        }
    ], 
    "<net.imglib2.type.logic.BitType: void xor(net.imglib2.type.logic.BitType)>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.2906139770415672
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean overlap(int,int)>": 0.2705440298623912
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean isSubset(int,int)>": 0.2705440298623912
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.26373884616776194
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.EndPoint: void setValues(int,boolean,long)>": 0.26282347323856453
        }
    ], 
    "<net.imglib2.img.cell.CellRandomAccess: void setPosition(long,int)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.3515519698150439
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.35005907392587204
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.34189621280540433
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void updateObjectIntegerAABB(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.broadphase.AABBInt)>": 0.2737878938725282
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void updateObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.27365612669486533
        }
    ], 
    "<net.imglib2.interpolation.neighborsearch.NearestNeighborSearchInterpolatorFactory: net.imglib2.RealRandomAccess create(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.12568295093802928
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.10451655817925595
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.10451655817925595
        }, 
        {
            "<net.coobird.thumbnailator.resizers.NullResizer: void <init>(java.lang.Object,java.util.Map)>": 0.09900061570751761
        }, 
        {
            "<net.coobird.thumbnailator.resizers.ProgressiveBilinearResizer: void <init>(java.util.Map)>": 0.09900061570751761
        }
    ], 
    "<net.imglib2.type.numeric.NativeARGBDoubleType: void setR(double)>": [
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitSegment: void <init>(double,double,int)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitLoop: void <init>(double,double,int)>": 0.3502212229527164
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationAverageGradientIntegral: void <init>(double,int,double,int,double,java.lang.Class)>": 0.34537863735525043
        }, 
        {
            "<boofcv.factory.feature.orientation.FactoryOrientationAlgs: boofcv.abst.feature.orientation.OrientationIntegral image_ii(double,int,double,int,double,java.lang.Class)>": 0.3341995859152048
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_S32: void <init>(double,int,double,boolean)>": 0.324532417269161
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned12BitType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.13241728540917574
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(boofcv.struct.image.GrayS64)>": 0.12114716624303801
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long max(boofcv.struct.image.GrayS64)>": 0.12114716624303801
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long min(boofcv.struct.image.GrayS64)>": 0.12114716624303801
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.1175542054203689
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void <init>(int,net.imglib2.outofbounds.RealOutOfBounds)>": [
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.31871009265509614
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.3167249163010024
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.3167249163010024
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.31370340328680457
        }, 
        {
            "<boofcv.struct.image.InterleavedS8: void <init>(int,int,int)>": 0.31370340328680457
        }
    ], 
    "<net.imglib2.img.basictypeaccess.array.LongArray: void setValue(int,long)>": [
        {
            "<boofcv.struct.image.GrayS64: void unsafe_set(int,int,long)>": 0.40575276384648046
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$GSingle_I64: void set(int,float)>": 0.31743704270742773
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void setBand(int,int,int,long)>": 0.3139084167639316
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(long[],int,int,long[],int,int,int,int)>": 0.30357504550717707
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2933254752318818
        }
    ], 
    "<net.imglib2.view.StackView$MoveAllSlicesRA: void move(int,int)>": [
        {
            "<Catalano.Math.Matrix: int Min(int[])>": 0.41878748691157086
        }, 
        {
            "<Catalano.Math.Matrix: int Max(int[])>": 0.41878748691157086
        }, 
        {
            "<boofcv.alg.feature.detect.line.LineImageOps: void pruneClutteredGrids(boofcv.struct.feature.MatrixOfList,int)>": 0.3936126950540907
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F64_1D: int getReminder(int,int[])>": 0.3893907550786208
        }, 
        {
            "<boofcv.alg.transform.fft.GeneralPurposeFFT_F32_1D: int getReminder(int,int[])>": 0.3893907550786208
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: int compareTo(net.imglib2.type.numeric.integer.AbstractIntegerType)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.42020104153392573
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.37183342002070013
        }, 
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.32943893241394046
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.32943893241394046
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.32943893241394046
        }
    ], 
    "<net.imglib2.histogram.Real1dBinMapper: double max(long)>": [
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA1(org.ejml.data.DenseMatrix64F)>": 0.48989892943535845
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void setupA2(org.ejml.data.DenseMatrix64F)>": 0.4891322142562847
        }, 
        {
            "<boofcv.alg.geo.f.HelperNister5: void extractPolynomial(double[])>": 0.4872118593295545
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Vector3 solve33(org.dyn4j.geometry.Vector3)>": 0.4553478939787158
        }, 
        {
            "<org.dyn4j.geometry.Matrix33: org.dyn4j.geometry.Matrix33 invert()>": 0.450253815621148
        }
    ], 
    "<net.imglib2.type.label.BasePairCharType: void set(net.imglib2.type.label.BasePairCharType)>": [
        {
            "<org.jbox2d.testbed.tests.ApplyForce: void keyPressed(char,int)>": 0.21415394159530188
        }, 
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.18454596325682965
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.18454596325682965
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.18454596325682965
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.1819683736832986
        }
    ], 
    "<net.imglib2.histogram.Real1dBinMapper: long map(java.lang.Object)>": [
        {
            "<org.dyn4j.geometry.Vector3: boolean isZero()>": 0.3414437149756022
        }, 
        {
            "<org.dyn4j.geometry.Interval: double distance(org.dyn4j.geometry.Interval)>": 0.3386668791059685
        }, 
        {
            "<org.dyn4j.geometry.Vector2: boolean isZero()>": 0.33516801755055425
        }, 
        {
            "<boofcv.alg.distort.DistortImageOps: void updateBoundBox(boofcv.struct.distort.PixelTransform_F64,boofcv.struct.ImageRectangle_F64)>": 0.3325059332569758
        }, 
        {
            "<org.dyn4j.geometry.Vector2: org.dyn4j.geometry.Vector2 setMagnitude(double)>": 0.33145310211525825
        }
    ], 
    "<net.imglib2.util.Util: void min(double[],double[])>": [
        {
            "<Catalano.Math.Matrix: void Fill(double[],double)>": 0.5913095358633942
        }, 
        {
            "<Catalano.Math.Matrix: double[] Subtract(double[],double[])>": 0.5564419674045196
        }, 
        {
            "<Catalano.Math.Matrix: double[] Add(double[],double[])>": 0.5564419674045196
        }, 
        {
            "<Catalano.Math.Matrix: void Add(double[],double)>": 0.5358303296689279
        }, 
        {
            "<Catalano.Math.Matrix: void Subtract(double[],double)>": 0.5358303296689279
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: void div(net.imglib2.type.numeric.integer.UnsignedShortType)>": [
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void process(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.3430430866943239
        }, 
        {
            "<Catalano.Imaging.FastBitmap: void setARGB(Catalano.Core.IntPoint,int,int,int,int)>": 0.34279574994035583
        }, 
        {
            "<Catalano.Imaging.FastBitmap: int getBlue(Catalano.Core.IntPoint)>": 0.336430021688703
        }, 
        {
            "<boofcv.struct.image.ImageInterleaved: boofcv.struct.image.ImageBase subimage(int,int,int,int,boofcv.struct.image.ImageBase)>": 0.3361673280624054
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMaximum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.33434687216512604
        }
    ], 
    "<net.imglib2.RealPoint: void move(float,int)>": [
        {
            "<net.smert.jreactphysics3d.mathematics.Mathematics: float ArcTan2(float,float)>": 0.3996279880231948
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void setD(int,double)>": 0.39552995652691647
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMinimum(int,double)>": 0.39552995652691647
        }, 
        {
            "<boofcv.alg.feature.color.Histogram_F64: void setMaximum(int,double)>": 0.39552995652691647
        }, 
        {
            "<Catalano.Core.DoublePoint: void <init>(float,float)>": 0.39255252558301074
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: void dimensions(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.util.ConstantUtils: net.imglib2.RealRandomAccessible constantRealRandomAccessible(java.lang.Object,int)>": [
        {
            "<boofcv.gui.SelectAlgorithmAndInputPanel: void access$100(boofcv.gui.SelectAlgorithmAndInputPanel,int,java.lang.String,java.lang.Object)>": 0.32262253309587385
        }, 
        {
            "<boofcv.struct.ImageRectangle: void <init>(int,int,int,int)>": 0.32052392242162336
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreWindowFive: void <init>(int,int,int,int)>": 0.3180517104454311
        }, 
        {
            "<boofcv.alg.feature.disparity.DisparityScoreSadRect: void <init>(int,int,int,int)>": 0.3180517104454311
        }, 
        {
            "<boofcv.struct.image.InterleavedS16: void <init>(int,int,int)>": 0.3126784287734
        }
    ], 
    "<net.imglib2.type.label.BasePairCharType: char getChar()>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: int trans(int)>": 0.2230669377317903
        }, 
        {
            "<Catalano.Math.Tools: boolean isNumeric(java.lang.String)>": 0.19026631891066478
        }, 
        {
            "<org.jbox2d.testbed.tests.ApplyForce: void keyPressed(char,int)>": 0.1902214775631705
        }, 
        {
            "<Catalano.Math.Distances.Distance: int Hamming(java.lang.String,java.lang.String)>": 0.18073065046442605
        }, 
        {
            "<org.jbox2d.testbed.framework.QueueItem: void <init>(org.jbox2d.testbed.framework.QueueItemType,char,int)>": 0.16243179841429106
        }
    ], 
    "<net.imglib2.AbstractLocalizableInt: void localize(long[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS64)>": 0.44889338435450676
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS32,boofcv.struct.image.InterleavedS64)>": 0.4132829780629394
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayU16,boofcv.struct.image.GrayS64)>": 0.3284132421422266
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS8,boofcv.struct.image.GrayS64)>": 0.32015341653229545
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayS64)>": 0.32015341653229545
        }
    ], 
    "<net.imglib2.view.iteration.SlicingCursor: java.lang.Object next()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.view.RandomAccessibleIntervalCursor: void nextLine()>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.3029920978019467
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.23085317748630046
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.22857248162535204
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.22118550809432025
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.21775704748694077
        }
    ], 
    "<net.imglib2.type.numeric.AbstractARGBDoubleType: void set(net.imglib2.type.numeric.AbstractARGBDoubleType)>": [
        {
            "<org.dyn4j.sandbox.tests.Plotter: void render(com.jogamp.opengl.GL2)>": 0.366350299924389
        }, 
        {
            "<org.dyn4j.sandbox.SandboxBody: void renderVelocity(com.jogamp.opengl.GL2)>": 0.3483406250328246
        }, 
        {
            "<org.dyn4j.geometry.TransformTest: void rotate()>": 0.34406854678906607
        }, 
        {
            "<org.dyn4j.dynamics.BodyTest: void getChangeInOrientation()>": 0.34359454516283305
        }, 
        {
            "<org.dyn4j.UnitConversionTest: void mpsToFps()>": 0.34338649068377
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: long totalCount()>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3620048385323752
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.32337798977337195
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3047553880816998
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.30110809613914735
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.2936496625362176
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.10842661409823065
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.10132274924351498
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.10036934567095813
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.09785730607238811
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.09785730607238811
        }
    ], 
    "<net.imglib2.type.numeric.real.FloatType: void <init>(net.imglib2.img.basictypeaccess.FloatAccess)>": [
        {
            "<Catalano.Imaging.Filters.HistogramShrink: void <init>()>": 0.13404738190002652
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: void <init>()>": 0.13404738190002652
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.SobelEdgeDetector: void <init>()>": 0.12437183348566663
        }, 
        {
            "<boofcv.gui.tracker.TrackerObjectQuadPanel: void enterSelectMode()>": 0.12437183348566663
        }, 
        {
            "<org.jbox2d.dynamics.Filter: void <init>()>": 0.12317689748992192
        }
    ], 
    "<net.imglib2.view.composite.AbstractNumericComposite: void <init>(net.imglib2.RandomAccess,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.3063113844611844
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.3063113844611844
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.3063113844611844
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.30460046446813516
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(byte[],int,int,int,int,int,byte[],int,int,int,int)>": 0.30460046446813516
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: float getFloatPosition(int)>": [
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplHarrisCornerWeighted_S16: float computeResponse()>": 0.3066126803000229
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplHarrisCorner_S16: float computeIntensity()>": 0.3066126803000229
        }, 
        {
            "<Catalano.Math.Geometry.Line: float DistanceToPoint(Catalano.Core.IntPoint)>": 0.29686652090388976
        }, 
        {
            "<Catalano.Imaging.Tools.ColorConverter: double RGBtoGrayscale(int,int,int)>": 0.29506386320806804
        }, 
        {
            "<net.smert.jreactphysics3d.collision.shapes.CylinderShape: float getHeight()>": 0.292750793952006
        }
    ], 
    "<net.imglib2.img.sparse.CharNtree: net.imglib2.img.sparse.NtreeAccess createInstance(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1826418206216855
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1826418206216855
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16881288427264435
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.12701685073623692
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.12701685073623692
        }
    ], 
    "<net.imglib2.util.Util: java.lang.Object getTypeFromInterval(net.imglib2.Interval)>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2376551899218568
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.22776961574810256
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.22776961574810256
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.22426820488056018
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.2196844671691046
        }
    ], 
    "<net.imglib2.img.planar.PlanarCursor: void localize(int[])>": [
        {
            "<boofcv.alg.misc.PixelMath: void minus(int,boofcv.struct.image.GrayS32,int,int,boofcv.struct.image.GrayS32)>": 0.32773144076599875
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS32,int,int,int,boofcv.struct.image.GrayS32)>": 0.32773144076599875
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(boofcv.struct.image.GrayS32,int,int,int,boofcv.struct.image.GrayS32)>": 0.32773144076599875
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus(int,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.3274142138833811
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus(boofcv.struct.image.GrayS32,int,boofcv.struct.image.GrayS32)>": 0.3274142138833811
        }
    ], 
    "<net.imglib2.util.LinAlgHelpers: void invert3x3(double[])>": [
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal11(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.755088744177056
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve11(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.7550548099292329
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void convolve9(boofcv.struct.convolve.Kernel2D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.7464908525355953
        }, 
        {
            "<boofcv.alg.filter.convolve.noborder.ConvolveImageUnrolled_F64_F64: void horizontal9(boofcv.struct.convolve.Kernel1D_F64,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)>": 0.7389277973570519
        }, 
        {
            "<Catalano.Math.Distances.Distance: double KumarJohnsonDivergence(double[],double[])>": 0.7351973662225956
        }
    ], 
    "<net.imglib2.FinalDimensions: int numDimensions()>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.2634723851822962
        }, 
        {
            "<boofcv.alg.scene.FeatureToWordHistogram_F64: int getTotalWords()>": 0.2435064935064935
        }, 
        {
            "<boofcv.struct.wavelet.WlCoef_F64: int getWaveletLength()>": 0.2435064935064935
        }, 
        {
            "<boofcv.struct.wavelet.WlCoef_F64: int getScalingLength()>": 0.2435064935064935
        }, 
        {
            "<boofcv.struct.wavelet.WlCoef_F32: int getScalingLength()>": 0.2435064935064935
        }
    ], 
    "<net.imglib2.display.screenimage.awt.ARGBScreenImage: void <init>(int,int)>": [
        {
            "<boofcv.alg.filter.misc.AverageDownSampleOps: int downSampleSize(int,int)>": 0.26543691457622026
        }, 
        {
            "<boofcv.alg.filter.convolve.down.UtilDownConvolve: int computeOffset(int,int)>": 0.2587327321325905
        }, 
        {
            "<boofcv.struct.learning.ClassificationHistogram: void <init>(int)>": 0.257524136960464
        }, 
        {
            "<boofcv.misc.BoofMiscOps: boolean checkInside(boofcv.struct.image.ImageBase,int,int,int,int)>": 0.2522316014627257
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void copy(int,int,int,int,int,int,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.24840613159880642
        }
    ], 
    "<net.imglib2.display.AbstractArrayColorTable: int getComponentCount()>": [
        {
            "<org.jbox2d.pooling.normal.CircleStack: java.lang.Object pop()>": 0.24523067357769263
        }, 
        {
            "<boofcv.alg.scene.FeatureToWordHistogram_F64: int getTotalWords()>": 0.2435064935064935
        }, 
        {
            "<boofcv.struct.wavelet.WlCoef_F64: int getWaveletLength()>": 0.2435064935064935
        }, 
        {
            "<boofcv.struct.wavelet.WlCoef_F64: int getScalingLength()>": 0.2435064935064935
        }, 
        {
            "<boofcv.struct.wavelet.WlCoef_F32: int getScalingLength()>": 0.2435064935064935
        }
    ], 
    "<net.imglib2.img.cell.AbstractCellImg: java.lang.Object update(java.lang.Object)>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.3156389960716234
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.301028333458288
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.278217746874627
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.27221633153513486
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.27221633153513486
        }
    ], 
    "<net.imglib2.img.planar.PlanarRandomAccess: void move(long,int)>": [
        {
            "<boofcv.alg.misc.PixelMath: void abs(int[],int,int,int[],int,int,int,int)>": 0.4477067824621292
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_B(int[],int,int,int,int[],int,int,int,int)>": 0.42419589019721426
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int[],int,int,int,int)>": 0.42419589019721426
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void minus_A(int[],int,int,int,int[],int,int,int,int)>": 0.42419589019721426
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(int[],int,int,int,int,int,int[],int,int,int,int)>": 0.4177963556797934
        }
    ], 
    "<net.imglib2.type.numeric.integer.ShortType: java.math.BigInteger getBigInteger()>": [
        {
            "<Catalano.Math.RationalNumber: void Subtract(Catalano.Math.RationalNumber)>": 0.22322774838529674
        }, 
        {
            "<Catalano.Math.RationalNumber: void Add(Catalano.Math.RationalNumber)>": 0.22322774838529674
        }, 
        {
            "<Catalano.Math.RationalNumber: void Factorize()>": 0.22204362020290835
        }, 
        {
            "<Catalano.Math.RationalNumber: void Subtract(java.math.BigInteger)>": 0.22120162501374496
        }, 
        {
            "<Catalano.Math.RationalNumber: void Add(java.math.BigInteger)>": 0.22120162501374496
        }
    ], 
    "<net.imglib2.FlatIterationOrder: boolean equals(java.lang.Object)>": [
        {
            "<org.box2d.proto.Box2D$PbJoint: int getJoints(int)>": 0.32517739536804324
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint$Builder: int getJoints(int)>": 0.32517739536804324
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint: int getBodies(int)>": 0.32517739536804324
        }, 
        {
            "<org.box2d.proto.Box2D$PbJoint$Builder: int getBodies(int)>": 0.32517739536804324
        }, 
        {
            "<org.dyn4j.sandbox.panels.FixturePanel: int[] getSelectedIndices(int)>": 0.3183567397726696
        }
    ], 
    "<net.imglib2.img.cell.AbstractCells: int cellDimension(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.7971082718892609
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.7875797356576464
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.7666734068198182
        }, 
        {
            "<Catalano.Imaging.Tools.IntegralImage: int getInternalData(int,int)>": 0.7611977688432564
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: int get(int)>": 0.759469696969697
        }
    ], 
    "<net.imglib2.type.numeric.real.DoubleType: void updateContainer(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.3187477037083238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.22574829559349857
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.22057752193984925
        }
    ], 
    "<net.imglib2.img.AbstractImg: void realMax(net.imglib2.RealPositionable)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.15211182259029543
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.15211182259029543
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.14107119965671933
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.13623731522826651
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.13623731522826651
        }
    ], 
    "<net.imglib2.transform.integer.ComponentMappingTransform: net.imglib2.concatenate.PreConcatenable preConcatenate(java.lang.Object)>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.445418424599208
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.43352293891589744
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.4259078173785037
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.PairManager: boolean removePair(int,int)>": 0.424202178858597
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.4222547859594773
        }
    ], 
    "<net.imglib2.view.TransformBuilder: boolean isTranslation(net.imglib2.transform.integer.Mixed)>": [
        {
            "<org.dyn4j.collision.manifold.IndexedManifoldPointId: boolean equals(java.lang.Object)>": 0.4105335017068954
        }, 
        {
            "<Catalano.Core.IntRange: boolean IsOverlapping(Catalano.Core.IntRange)>": 0.37079145393449636
        }, 
        {
            "<Catalano.Core.IntRange: boolean isInside(int)>": 0.36440449810919295
        }, 
        {
            "<boofcv.struct.image.ImageBase: boolean isInBounds(int,int)>": 0.3615780108225139
        }, 
        {
            "<boofcv.struct.flow.ImageFlow: boolean isInBounds(int,int)>": 0.3615780108225139
        }
    ], 
    "<net.imglib2.type.logic.BitType: java.math.BigInteger getBigInteger()>": [
        {
            "<Catalano.Imaging.Texture.BinaryPattern.UniformLocalBinaryPattern: boolean isUniform(int)>": 0.43104658736068835
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: boolean isOffset()>": 0.42184870059687074
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean overlap(int,int)>": 0.3875115319931191
        }, 
        {
            "<com.flowpowered.react.collision.narrowphase.GJK.Simplex: boolean isSubset(int,int)>": 0.3875115319931191
        }, 
        {
            "<org.jbox2d.dynamics.Body: boolean isFixedRotation()>": 0.38130167283772787
        }
    ], 
    "<net.imglib2.img.sparse.ShortNtree: void <init>(net.imglib2.img.sparse.Ntree,long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.242012144279314
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.242012144279314
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.2237584400126592
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void _setData(java.lang.Object)>": 0.17235608187218834
        }, 
        {
            "<boofcv.struct.image.GrayS64: void _setData(java.lang.Object)>": 0.17235608187218834
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: void setPosition(int[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4118724264683169
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.405879033190155
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4030476307315133
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3956235369447626
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.3942834039490263
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned128BitType: void setInteger(int)>": [
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.31122616246898166
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.31122616246898166
        }, 
        {
            "<Catalano.Math.Tools: int PreviousPowerOf2(int)>": 0.29654743247743814
        }, 
        {
            "<Catalano.Imaging.Tools.FastRadialSymmetryTransform: void <init>(int,int)>": 0.29423198865656897
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Variance: void <init>(int)>": 0.2894715902869526
        }
    ], 
    "<net.imglib2.view.SubsampleView$SubsampleRandomAccess: void setPosition(long,int)>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.30582935906874814
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.3031998646333549
        }, 
        {
            "<boofcv.factory.geo.ConfigLMedS: void <init>(long,int)>": 0.28678956088187046
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.2759292828991365
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void plus_A(long[],int,int,long,long,long,long[],int,int,int,int)>": 0.2619370572928379
        }
    ], 
    "<net.imglib2.KDTree$KDTreeCursor: void fwd()>": [
        {
            "<org.dyn4j.sandbox.help.HelpReader: void <init>()>": 0.08335391708894757
        }, 
        {
            "<org.dyn4j.dynamics.World: void step(int)>": 0.07225389648139093
        }, 
        {
            "<boofcv.app.calib.AssistedCalibration: boolean checkMagnetCapturePicture()>": 0.06974982042519659
        }, 
        {
            "<net.smert.jreactphysics3d.engine.DynamicsWorld: void updateRigidBodiesAABB()>": 0.06922937157418703
        }, 
        {
            "<boofcv.gui.DepthVideoAppBase: void mouseClicked(java.awt.event.MouseEvent)>": 0.06845804865160691
        }
    ], 
    "<net.imglib2.img.array.ArrayImgs: net.imglib2.img.array.ArrayImg complexDoubles(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.1253553677440492
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.11604937634610503
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.09911138876645915
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.09865717967013138
        }
    ], 
    "<net.imglib2.AbstractLocalizable: void localize(double[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF64)>": 0.43403432413324206
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedF64)>": 0.3949959276042379
        }, 
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.355658579433933
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.3530837074107076
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.3530837074107076
        }
    ], 
    "<net.imglib2.type.label.BasePairBitType: net.imglib2.type.label.BasePairBitType duplicateTypeOnSameNativeImg()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.05504818825631802
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.053300179088902604
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.052826547710021224
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.05226512562544317
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.051739834649044726
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsValue: void bck(int)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.26046870381699194
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$BoxAABB,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$EndPoint[],int)>": 0.2462985695663457
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: boolean testIntersect1DSortedAABBs(net.smert.jreactphysics3d.collision.broadphase.BoxAABB,net.smert.jreactphysics3d.collision.broadphase.AABBInt,net.smert.jreactphysics3d.collision.broadphase.EndPoint[],int)>": 0.24262080315411647
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void addObject(net.smert.jreactphysics3d.body.CollisionBody,net.smert.jreactphysics3d.collision.shapes.AABB)>": 0.23074611257142003
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.2288294798286457
        }
    ], 
    "<net.imglib2.RealPoint: void move(int[])>": [
        {
            "<boofcv.alg.filter.kernel.KernelMath: void scale(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.4491643198305214
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel1D_F64,double)>": 0.4491643198305214
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: void divide(boofcv.struct.convolve.Kernel2D_F64,double)>": 0.4162890936407757
        }, 
        {
            "<Catalano.Statistics.Histogram: double[] Normalize()>": 0.3948502270342758
        }, 
        {
            "<Catalano.Imaging.Tools.ImageHistogram: double[] Normalize()>": 0.3948502270342758
        }
    ], 
    "<net.imglib2.outofbounds.OutOfBoundsBorder: void <init>(net.imglib2.outofbounds.OutOfBoundsBorder)>": [
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.31600240048694794
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set(int,int,long[])>": 0.29475371560335756
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.29412726118810684
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.29412726118810684
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.2906625311042091
        }
    ], 
    "<net.imglib2.PointSampleList: java.lang.Object firstElement()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.27356677703754323
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.26159727180913483
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.26159727180913483
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2424492206781365
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.2366492548000964
        }
    ], 
    "<net.imglib2.AbstractRealInterval: double realMax(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.6444652635187575
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.PyramidDiscreteSampleBlur: double getSigma(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.NoCacheScaleSpace: double getScale(int)>": 0.6383928571428571
        }
    ], 
    "<net.imglib2.iterator.OffsetableIntervalIterator: void setMin(int[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS64)>": 0.30454719290093957
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS32,boofcv.struct.image.InterleavedS64)>": 0.2761058835104133
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.27405625919827037
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2660442846775913
        }, 
        {
            "<boofcv.alg.filter.kernel.KernelMath: boolean isEquals(int[],int[],int)>": 0.2577927810477013
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: void decrement(long[])>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.20116610407847824
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.1844625141423921
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.1764490582684312
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.17614610529377714
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>()>": 0.16653826718183404
        }
    ], 
    "<net.imglib2.AbstractInterval: void realMax(net.imglib2.RealPositionable)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5256091910568305
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.5090303794676198
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5085281685018156
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5018647418701996
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validateMetrics(org.jbox2d.collision.broadphase.DynamicTreeNode)>": 0.4949266645788068
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: long access$208(net.imglib2.histogram.HistogramNd)>": [
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.3532599845766765
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.25272387104958893
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.Utils: long encodeFloatIntoInteger(float)>": 0.21997706650320273
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm: long encodeFloatIntoInteger(float)>": 0.21997706650320273
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.20965696734438366
        }
    ], 
    "<net.imglib2.util.RealSum: void <init>()>": [
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void <init>(int)>": 0.3060646044915592
        }, 
        {
            "<Catalano.Imaging.Filters.SeparableConvolution: void <init>(double[],double[])>": 0.29166735666591576
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void <init>(boofcv.struct.image.InterleavedF64)>": 0.2712070485192567
        }, 
        {
            "<Catalano.Imaging.Filters.SeparableConvolution: void <init>(double[],double[],boolean)>": 0.2705777885324183
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: void <init>(double[],int)>": 0.24505063553867737
        }
    ], 
    "<net.imglib2.type.numeric.integer.AbstractIntegerBitType: int compareTo(net.imglib2.type.numeric.integer.AbstractIntegerBitType)>": [
        {
            "<org.jbox2d.particle.ParticleSystem$Proxy: int compareTo(org.jbox2d.particle.ParticleSystem$Proxy)>": 0.22416576543877448
        }, 
        {
            "<boofcv.struct.feature.MatchScoreType$1: int compareTo(double,double)>": 0.22162740561891825
        }, 
        {
            "<boofcv.struct.feature.MatchScoreType$2: int compareTo(double,double)>": 0.22162740561891825
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.21972120241446166
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.21451405708518267
        }
    ], 
    "<net.imglib2.neighborsearch.NearestNeighborSearchOnKDTree: void <init>(net.imglib2.KDTree)>": [
        {
            "<boofcv.alg.feature.disparity.impl.StereoDisparityWtoNaiveFive: void <init>(int,int,int,int)>": 0.30730260226946543
        }, 
        {
            "<boofcv.struct.convolve.Kernel2D_F64: void <init>(int)>": 0.29873013366278023
        }, 
        {
            "<boofcv.alg.interpolate.impl.ImplBilinearPixel_IL_F64: void <init>(boofcv.struct.image.InterleavedF64)>": 0.2982123370914315
        }, 
        {
            "<boofcv.struct.FastQueueArray_F64: double[] createInstance()>": 0.29584284566229585
        }, 
        {
            "<boofcv.alg.scene.HistogramScene: void <init>(int)>": 0.29328186499420383
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: long indexToPosition(long,long[],long[],int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.49061669841509964
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.4802794289492977
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(long[],int,int,long[],int,int,int,int)>": 0.4206422391247158
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.41344424136520913
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(long[],int,int,long[],int,int,int,int)>": 0.4104793703036662
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: net.imglib2.type.numeric.integer.UnsignedLongType copy()>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.17606705730911557
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.16559357149530046
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long convolveSparse(boofcv.struct.image.GrayS64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.16328849168049064
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_unsafe(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.16229811763672608
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: long block_zero(boofcv.struct.image.GrayS64,int,int,int,int)>": 0.16229811763672608
        }
    ], 
    "<net.imglib2.type.numeric.integer.LongType: int compareTo(net.imglib2.type.numeric.integer.LongType)>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.22714136108586563
        }, 
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(Catalano.Imaging.Corners.FeaturePoint)>": 0.22589092966020874
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.22541884880947152
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.2244761310291613
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.21914560101481576
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedCursor: void <init>(net.imglib2.Cursor,net.imglib2.converter.readwrite.SamplerConverter)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.19905310101316329
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.16716519317121678
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.16716519317121678
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.15758958898849007
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.15758958898849007
        }
    ], 
    "<net.imglib2.RealPointSampleList$RealPointSampleListCursor: double getDoublePosition(int)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.3782432325354622
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F64: double unsafe_getD(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double convolveSparse(boofcv.struct.image.GrayF64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.view.composite.RealComposite: net.imglib2.view.composite.RealComposite copy()>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.15107376265673905
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.15107376265673905
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.15107376265673905
        }, 
        {
            "<boofcv.gui.feature.VisualizeShapes: void drawRectangle(georegression.struct.shapes.Rectangle2D_I32,java.awt.Graphics2D)>": 0.14922097981268295
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawDetections(java.awt.Graphics2D,org.ddogleg.struct.FastQueue,java.awt.Color)>": 0.1463980463756409
        }
    ], 
    "<net.imglib2.histogram.Integer1dBinMapper: void getCenterValue(long,java.lang.Object)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3859010673110283
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.36758339719399735
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.34238149993896394
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3301225985134686
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: boolean isAllowed(org.dyn4j.collision.Filter)>": 0.32234111900336143
        }
    ], 
    "<net.imglib2.util.Fraction: net.imglib2.util.Fraction clone()>": [
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.17850138682385416
        }, 
        {
            "<org.jbox2d.testbed.framework.TestbedController: void stepAndRender()>": 0.17568941701435997
        }, 
        {
            "<Catalano.Math.Approximation: long abs(long)>": 0.16761509483802245
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.1631456711226635
        }, 
        {
            "<org.jbox2d.testbed.framework.TestbedController: void run()>": 0.16089017620029994
        }
    ], 
    "<net.imglib2.transform.integer.BoundingBox: void corner1(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.468536325802491
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.45644740722555815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4549590327161815
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.4514297284100339
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.44882531202406517
        }
    ], 
    "<net.imglib2.type.volatiles.AbstractVolatileRealType: int compareTo(java.lang.Object)>": [
        {
            "<org.jbox2d.common.MathUtils: int max(int,int)>": 0.32425681043158283
        }, 
        {
            "<org.jbox2d.common.MathUtils: int min(int,int)>": 0.32425681043158283
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: int limitCapacity(int,int)>": 0.32425681043158283
        }, 
        {
            "<org.dyn4j.collision.narrowphase.AbstractFallbackCondition: int compareTo(java.lang.Object)>": 0.27907849806428586
        }, 
        {
            "<Catalano.Math.Geometry.GrahamConvexHull: java.util.ArrayList FindFull(java.util.ArrayList)>": 0.2669423483493042
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: void <init>(net.imglib2.img.basictypeaccess.ShortAccess)>": [
        {
            "<Catalano.Imaging.Filters.HistogramShrink: void <init>()>": 0.13404738190002652
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: void <init>()>": 0.13404738190002652
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.SobelEdgeDetector: void <init>()>": 0.12437183348566663
        }, 
        {
            "<boofcv.gui.tracker.TrackerObjectQuadPanel: void enterSelectMode()>": 0.12437183348566663
        }, 
        {
            "<org.jbox2d.dynamics.Filter: void <init>()>": 0.12317689748992192
        }
    ], 
    "<net.imglib2.KDTree: double realMax(int)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.6444652635187575
        }, 
        {
            "<Catalano.Core.Structs.DoubleArrayList: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.PyramidDiscreteSampleBlur: double getSigma(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_F64: double get(int)>": 0.6383928571428571
        }, 
        {
            "<boofcv.alg.transform.pyramid.NoCacheScaleSpace: double getScale(int)>": 0.6383928571428571
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: void subtract(java.lang.Iterable)>": [
        {
            "<boofcv.alg.filter.binary.BinaryImageOps: void clusterToBinary(java.util.List,boofcv.struct.image.GrayU8)>": 0.22673631158257815
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: java.awt.image.BufferedImage renderContours(java.util.List,int,int,int,int,java.awt.image.BufferedImage)>": 0.20995762239942609
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: java.awt.image.BufferedImage renderContours(java.util.List,int[],int,int,int,java.awt.image.BufferedImage)>": 0.20712174118369875
        }, 
        {
            "<boofcv.alg.filter.binary.Contour: boofcv.alg.filter.binary.Contour copy()>": 0.2033394328215221
        }, 
        {
            "<boofcv.gui.binary.VisualizeBinaryData: void renderExternal(java.util.List,boolean,boolean,double,java.awt.Graphics2D)>": 0.20315576583583164
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericShortType: void mul(net.imglib2.type.numeric.integer.GenericShortType)>": [
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMaximum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.19236550035850902
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void examineMinimum(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.19236550035850902
        }, 
        {
            "<boofcv.alg.feature.detect.extract.NonMaxCandidate: void process(boofcv.struct.image.GrayF32,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner,boofcv.struct.QueueCorner)>": 0.1888602470210904
        }, 
        {
            "<boofcv.struct.QueueCorner: void add(int,int)>": 0.1784094133416528
        }, 
        {
            "<boofcv.demonstrations.feature.detect.VideoDetectCorners: void updateGUI(java.awt.image.BufferedImage,boofcv.struct.image.ImageGray)>": 0.16856832278677877
        }
    ], 
    "<net.imglib2.view.SubsampleIntervalView: void <init>(net.imglib2.RandomAccessibleInterval,long)>": [
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.32832519184241016
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.3272262544577212
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.3272262544577212
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2447673052277685
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.2438110960333244
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.IterableInterval flatIterable(net.imglib2.RandomAccessibleInterval)>": [
        {
            "<Catalano.Core.Concurrent.MulticoreExecutor: java.util.List run(java.util.Collection)>": 0.3327537731260871
        }, 
        {
            "<com.flowpowered.react.engine.DynamicsWorld: void updateRigidBodiesAABB()>": 0.3075145270173615
        }, 
        {
            "<net.smert.jreactphysics3d.engine.DynamicsWorld: void setIsSleepingEnabled(boolean)>": 0.2984372137584335
        }, 
        {
            "<com.flowpowered.react.engine.DynamicsWorld: void enableSleeping(boolean)>": 0.2984372137584335
        }, 
        {
            "<org.dyn4j.dynamics.World: boolean removeBody(int,boolean)>": 0.29639754829130005
        }
    ], 
    "<net.imglib2.img.sparse.Ntree: net.imglib2.img.sparse.Ntree$NtreeNode copyRecursively(net.imglib2.img.sparse.Ntree$NtreeNode,net.imglib2.img.sparse.Ntree$NtreeNode)>": [
        {
            "<org.dyn4j.collision.manifold.IndexedManifoldPointId: boolean equals(java.lang.Object)>": 0.1512099296291351
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.15081279215248977
        }, 
        {
            "<boofcv.struct.image.ImageGray: void setTo(boofcv.struct.image.ImageGray)>": 0.14387728713086406
        }, 
        {
            "<org.jbox2d.pooling.normal.CircleStack: java.lang.Object pop()>": 0.14307827192371958
        }, 
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.14266851115751492
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: void mul(net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3072686627225503
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.28110449005613686
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2563707359043695
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.25482774013930604
        }, 
        {
            "<org.jbox2d.common.Timer: float getMilliseconds()>": 0.24996726247857678
        }
    ], 
    "<net.imglib2.util.IntervalIndexer: void indexToPosition(long,long[],long[])>": [
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.2998563781392078
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.28108377961730663
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.26906678243212395
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.26787483888158775
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.26498485387337867
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: boolean hasTails(int)>": [
        {
            "<boofcv.abst.feature.detect.interest.WrapFHtoInterestPoint: georegression.struct.point.Point2D_F64 getLocation(int)>": 0.3161181105111971
        }, 
        {
            "<boofcv.alg.feature.detdesc.DetectDescribeSurfPlanar: georegression.struct.point.Point2D_F64 getLocation(int)>": 0.3161181105111971
        }, 
        {
            "<boofcv.abst.feature.detect.interest.WrapFPtoInterestPoint: georegression.struct.point.Point2D_F64 getLocation(int)>": 0.3161181105111971
        }, 
        {
            "<boofcv.abst.feature.detdesc.WrapDetectDescribeSurf: georegression.struct.point.Point2D_F64 getLocation(int)>": 0.3161181105111971
        }, 
        {
            "<boofcv.abst.feature.detect.interest.WrapFLPtoInterestPoint: georegression.struct.point.Point2D_F64 getLocation(int)>": 0.3161181105111971
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: void set(net.imglib2.transform.integer.Slicing)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.5879982256902925
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.5813721965317729
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.5705070648580456
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void freeNode(int)>": 0.5628105163872822
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.5612396230570146
        }
    ], 
    "<net.imglib2.histogram.HistogramNd: double realMax(int)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.3782432325354622
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F64: double unsafe_getD(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double convolveSparse(boofcv.struct.image.GrayF64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.util.Partition: int partitionSubList(int,int,char[])>": [
        {
            "<Catalano.Math.Tools: boolean isNumeric(java.lang.String)>": 0.4674714259273116
        }, 
        {
            "<boofcv.alg.filter.misc.AverageDownSampleOps: int downSampleSize(int,int)>": 0.31173990305945715
        }, 
        {
            "<boofcv.alg.filter.convolve.down.UtilDownConvolve: int computeOffset(int,int)>": 0.29978874697387004
        }, 
        {
            "<boofcv.alg.transform.wavelet.UtilWavelet: int round(int,int,int)>": 0.27557875100745255
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void copy(int,int,int,int,int,int,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)>": 0.27218293313276903
        }
    ], 
    "<net.imglib2.type.label.BasePairCharType: void updateContainer(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.3187477037083238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.22574829559349857
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.22057752193984925
        }
    ], 
    "<net.imglib2.view.TransformRandomAccess: void move(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.43364030750730864
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4229005364223933
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4212491838338347
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void rebuildBottomUp()>": 0.41794251446341946
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4158125319450148
        }
    ], 
    "<net.imglib2.view.IterableRandomAccessibleInterval: net.imglib2.Cursor cursor()>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.0716114874039433
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.06933752452815364
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06872138349613734
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.06799103665255266
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06730769230769232
        }
    ], 
    "<net.imglib2.histogram.Histogram1d: long distributionCount()>": [
        {
            "<Catalano.Math.Random: long nextLong()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.25356909013876383
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.24518333341367335
        }, 
        {
            "<boofcv.abst.sfm.d2.PlToGrayMotion2D: long getTrackId(int)>": 0.24257833769207987
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.23024252222261737
        }
    ], 
    "<net.imglib2.interpolation.neighborsearch.InverseDistanceWeightingInterpolator: double computeWeight(double)>": [
        {
            "<Catalano.Statistics.Distributions.ExponentialDistribution: double DistributionFunction(double)>": 0.6669337853258759
        }, 
        {
            "<Catalano.Math.Distances.Distance: double SquaredEuclidean(double,double,double,double)>": 0.6539111947332181
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Chessboard(double,double,double,double)>": 0.6535634129316299
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Chebyshev(double,double,double,double)>": 0.6535634129316299
        }, 
        {
            "<Catalano.Math.Distances.Distance: double Manhattan(double,double,double,double)>": 0.6489122867520501
        }
    ], 
    "<net.imglib2.converter.readwrite.WriteConvertedIterableInterval: void <init>(net.imglib2.IterableInterval,net.imglib2.converter.readwrite.SamplerConverter)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.06454972243679027
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.0625
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.06194461797903697
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.061286292230682514
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.06067033396213444
        }
    ], 
    "<net.imglib2.util.Partition: int partitionSubList(int,int,java.util.List,int[],java.util.Comparator)>": [
        {
            "<Catalano.Core.Structs.BinaryHeap: void downHeap(int,java.lang.Comparable)>": 0.33169494024031154
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: java.lang.Comparable remove()>": 0.31188777780905014
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: void <init>(java.lang.Comparable[])>": 0.3111703564751416
        }, 
        {
            "<Catalano.Imaging.Filters.BlobsFiltering: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.3075142897424864
        }, 
        {
            "<Catalano.Core.ArraysUtil: int[] ConcatenateInt(java.util.List)>": 0.30148582452444045
        }
    ], 
    "<net.imglib2.view.SlicingRandomAccess: void setPosition(long,int)>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.4747792049121296
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.46792163439588264
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.4552055162126271
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validateStructure(int)>": 0.4538141617767607
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.44835031833690225
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: double realMax(int)>": [
        {
            "<Catalano.Imaging.Tools.ShapeDescriptors: double AreaEquivalentDiameter(int)>": 0.3782432325354622
        }, 
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F64: double unsafe_getD(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_zero(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double block_unsafe(boofcv.struct.image.GrayF64,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: double convolveSparse(boofcv.struct.image.GrayF64,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.view.FullSourceMapMixedRandomAccess: void setPosition(int,int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.5807547214565834
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.5374430503832861
        }, 
        {
            "<org.jbox2d.common.BufferUtils: int[] reallocateBuffer(int[],int,int,int,boolean)>": 0.49461053799046173
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.4906479085365193
        }, 
        {
            "<net.smert.jreactphysics3d.engine.ContactManifold: net.smert.jreactphysics3d.constraint.ContactPoint getContactPoint(int)>": 0.48963250165406924
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: net.imglib2.img.NativeImg createSuitableNativeImg(net.imglib2.img.NativeImgFactory,long[])>": [
        {
            "<boofcv.gui.tracker.TldVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1466381165060547
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1466381165060547
        }, 
        {
            "<boofcv.demonstrations.tracker.VisualizeTldDetectionApp: void drawRectangle(java.awt.Graphics2D,boofcv.struct.ImageRectangle,java.awt.Color,int)>": 0.1466381165060547
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.14419084352433625
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)>": 0.14419084352433625
        }
    ], 
    "<net.imglib2.converter.read.ConvertedRandomAccessibleInterval: void <init>(net.imglib2.RandomAccessibleInterval,net.imglib2.converter.Converter,net.imglib2.type.Type)>": [
        {
            "<org.dyn4j.sandbox.panels.LineGraphPanel: void setStaticSize(java.awt.Dimension)>": 0.04032389192727559
        }, 
        {
            "<org.jbox2d.testbed.tests.DrawingParticles: void step(org.jbox2d.testbed.framework.TestbedSettings)>": 0.03904344047215152
        }, 
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.038696496074155144
        }, 
        {
            "<boofcv.gui.feature.SelectRegionDescriptionPanel: void <init>()>": 0.03828524323948056
        }, 
        {
            "<boofcv.gui.d3.Polygon3DSequenceViewer: void <init>()>": 0.03790045715961838
        }
    ], 
    "<net.imglib2.converter.readwrite.RealDoubleSamplerConverter$RealConvertingDoubleAccess: void setValue(int,double)>": [
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: void setOutside(int,int,double)>": 0.4257710040857421
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.4083636416084332
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.40226116240759324
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_F64: double getOutside(int,int)>": 0.4015665367996064
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.39309148182397186
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexFloatType: void updateContainer(java.lang.Object)>": [
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.3187477037083238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.actions.SelectAction: void begin(java.lang.Object)>": 0.2664188409967164
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.22574829559349857
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void editJointAction()>": 0.22057752193984925
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.LanczosInterpolatorFactory: net.imglib2.RealRandomAccess create(java.lang.Object,net.imglib2.RealInterval)>": [
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_S32: void <init>(double,int,double,boolean)>": 0.21612782341502668
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_F32: void <init>(double,int,double,boolean)>": 0.21612782341502668
        }, 
        {
            "<boofcv.alg.feature.orientation.impl.ImplOrientationSlidingWindow_S16: void <init>(double,int,double,boolean)>": 0.21612782341502668
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitSegment: void <init>(double,double,int)>": 0.19661240597275204
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitLoop: void <init>(double,double,int)>": 0.19661240597275204
        }
    ], 
    "<net.imglib2.histogram.DiscreteFrequencyDistribution: long modeCount()>": [
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2476767775059828
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: boolean detect(boofcv.struct.image.ImageGray)>": 0.24450121964552923
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomPixelDepthPnP: int dropUnusedTracks()>": 0.23133729330682415
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: long maxAbs(long[],int,int,int,int)>": 0.22794558699084042
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomMonoPlaneInfinity: int dropUnusedTracks()>": 0.22651024461816122
        }
    ], 
    "<net.imglib2.transform.integer.SlicingTransform: int getComponentMapping(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.8028812106614286
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_I: void setOutside(int,int,int)>": 0.6927569254918229
        }, 
        {
            "<org.dyn4j.examples.ExampleJOGL: void reshape(com.jogamp.opengl.GLAutoDrawable,int,int,int,int)>": 0.68467237202013
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.6728382027998716
        }, 
        {
            "<net.coobird.thumbnailator.geometry.Positions$1: java.awt.Point calculate(int,int,int,int,int,int,int,int)>": 0.6662651344050108
        }
    ], 
    "<net.imglib2.util.ValuePair: int hashCode()>": [
        {
            "<org.jbox2d.common.Mat22: int hashCode()>": 0.522591767630747
        }, 
        {
            "<org.dyn4j.Reference: int hashCode()>": 0.47040918555192884
        }, 
        {
            "<com.flowpowered.react.math.Vector2: int hashCode()>": 0.3842776036309699
        }, 
        {
            "<org.jbox2d.common.Vec2: int hashCode()>": 0.3842776036309699
        }, 
        {
            "<net.coobird.thumbnailator.util.exif.IfdStructure: int hashCode()>": 0.36388416824262143
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsMirror: void localize(double[])>": [
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayF64)>": 0.29919820583753465
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: int isExpected(long)>": 0.2939575399198539
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.27624481152086766
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertImage: void convert(boofcv.struct.image.InterleavedS64,boofcv.struct.image.InterleavedF64)>": 0.26679117630767196
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.26497163132095836
        }
    ], 
    "<net.imglib2.img.sparse.LongNtree: void <init>(long[],long[],long)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.29559871868980553
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.29559871868980553
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.28371258864029675
        }, 
        {
            "<Catalano.Core.Stopwatch: void Start()>": 0.24017009813607657
        }, 
        {
            "<Catalano.Core.Stopwatch: void Restart()>": 0.19560363043762735
        }
    ], 
    "<net.imglib2.PointSampleList$PointSampleListCursor: void fwd()>": [
        {
            "<Catalano.Math.Geometry.GrahamConvexHull: java.util.ArrayList FindFull(java.util.ArrayList)>": 0.2521200041520465
        }, 
        {
            "<Catalano.Math.Geometry.ConvexHullDefects: Catalano.Math.Geometry.ConvexityDefect ExtractDefect(java.util.ArrayList,int,int)>": 0.2312667560850784
        }, 
        {
            "<Catalano.Math.Geometry.ConvexHullDefects: java.util.ArrayList FindDefects(java.util.ArrayList,java.util.ArrayList)>": 0.22880185368194067
        }, 
        {
            "<Catalano.Math.Geometry.KCurvature: java.util.ArrayList FindPeaks(java.util.ArrayList)>": 0.226257734598229
        }, 
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.2232539058463875
        }
    ], 
    "<net.imglib2.interpolation.randomaccess.LanczosInterpolator: double[] createLanczosLUT(int,int)>": [
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffSq(double[],int,int,double[],int,int,int,int)>": 0.45055636424852546
        }, 
        {
            "<boofcv.alg.misc.ImageStatistics: double meanDiffAbs(double[],int,int,double[],int,int,int,int)>": 0.44897686583039015
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void abs(double[],int,int,double[],int,int,int,int)>": 0.435613493096165
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void invert(double[],int,int,double[],int,int,int,int)>": 0.43238439679444074
        }, 
        {
            "<boofcv.alg.misc.PixelMath: void divide_A(double[],int,int,double,double[],int,int,int,int)>": 0.43114133999104176
        }
    ], 
    "<net.imglib2.type.numeric.real.AbstractRealType: void mul(net.imglib2.type.numeric.real.AbstractRealType)>": [
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawPrismaticJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.PrismaticJoint)>": 0.342783015976373
        }, 
        {
            "<org.dyn4j.sandbox.utilities.RenderUtilities: void drawRopeJoint(com.jogamp.opengl.GL2,org.dyn4j.dynamics.joint.RopeJoint)>": 0.3425471189570898
        }, 
        {
            "<Catalano.Math.ComplexNumber: Catalano.Math.ComplexNumber Pow(Catalano.Math.ComplexNumber,double)>": 0.3405267680946604
        }, 
        {
            "<Catalano.Math.ComplexNumber: void Pow(double)>": 0.3352156507986024
        }, 
        {
            "<Catalano.Statistics.Distributions.GammaDistribution: double Entropy()>": 0.33215170322091153
        }
    ], 
    "<net.imglib2.img.sparse.Ntree: net.imglib2.img.sparse.Ntree$NtreeNode mergeUpwards(net.imglib2.img.sparse.Ntree$NtreeNode)>": [
        {
            "<org.dyn4j.collision.manifold.IndexedManifoldPointId: boolean equals(java.lang.Object)>": 0.20161463841187932
        }, 
        {
            "<boofcv.struct.image.ImageGray: void setTo(boofcv.struct.image.ImageGray)>": 0.20023582524608768
        }, 
        {
            "<org.jbox2d.particle.StackQueue: java.lang.Object pop()>": 0.19840371441150514
        }, 
        {
            "<org.jbox2d.pooling.normal.OrderedStack: java.lang.Object pop()>": 0.19556276285997204
        }, 
        {
            "<Catalano.Core.Structs.BinaryHeap: void downHeap(int,java.lang.Comparable)>": 0.19403270780409737
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: void setPosition(net.imglib2.Localizable)>": [
        {
            "<Catalano.Math.Tools: int Pow2(int)>": 0.22019811708607023
        }, 
        {
            "<Catalano.Imaging.Tools.BlobDetection: void ShuffleColor()>": 0.21724893431081813
        }, 
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(Catalano.Imaging.Corners.FeaturePoint)>": 0.21193063937629153
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLine: int compareTo(java.lang.Object)>": 0.21189319830918563
        }, 
        {
            "<Catalano.Imaging.Filters.HistogramStretch: int getMinGray(Catalano.Imaging.FastBitmap)>": 0.20939942646294316
        }
    ], 
    "<net.imglib2.transform.integer.ComponentMappingTransform: void <init>(int)>": [
        {
            "<Catalano.Math.Matrix: int[] Subtract(int[],int[])>": 0.42790576928147334
        }, 
        {
            "<Catalano.Math.Matrix: int[] Add(int[],int[])>": 0.42790576928147334
        }, 
        {
            "<boofcv.alg.segmentation.ms.RegionMergeTree: void initializeMerge(int)>": 0.4246584275507862
        }, 
        {
            "<boofcv.alg.feature.detect.intensity.impl.ImplSsdCorner_S16: void setImageShape(int,int)>": 0.4105249534537089
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int,int)>": 0.39786257549361853
        }
    ], 
    "<net.imglib2.outofbounds.AbstractOutOfBoundsValue: void <init>(net.imglib2.outofbounds.AbstractOutOfBoundsValue)>": [
        {
            "<boofcv.struct.image.InterleavedS64: long[] get(int,int,long[])>": 0.3156862017496976
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void get_unsafe(int,int,long[])>": 0.2950564823823335
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set_unsafe(int,int,long[])>": 0.2950564823823335
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set(int,int,long[])>": 0.29459512112941294
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void setOutside(int,int,long[])>": 0.28580017671262326
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void setPosition(long[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.18276878956454373
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.16924300814766988
        }, 
        {
            "<boofcv.core.image.border.ImageBorderValue$Value_IL_S64: void getOutside(int,int,long[])>": 0.1602313334489889
        }, 
        {
            "<boofcv.misc.BoofMiscOps: long[] convertArray(double[],long[])>": 0.14037562436143808
        }
    ], 
    "<net.imglib2.type.numeric.integer.GenericByteType: void mul(net.imglib2.type.numeric.integer.GenericByteType)>": [
        {
            "<org.jbox2d.particle.ParticleSystem: void solveColorMixing(org.jbox2d.dynamics.TimeStep)>": 0.2601379698713402
        }, 
        {
            "<org.jbox2d.collision.ContactID: int getKey()>": 0.24870916725536762
        }, 
        {
            "<org.jbox2d.collision.ContactID: int compareTo(org.jbox2d.collision.ContactID)>": 0.2275609676739095
        }, 
        {
            "<org.jbox2d.collision.ContactID: boolean isEqual(org.jbox2d.collision.ContactID)>": 0.2248680901901646
        }, 
        {
            "<org.jbox2d.collision.ContactID: int compareTo(java.lang.Object)>": 0.21807504084797213
        }
    ], 
    "<net.imglib2.AbstractInterval: void <init>(int)>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.33700283554095833
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.33700283554095833
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.311541343759651
        }, 
        {
            "<boofcv.struct.image.InterleavedS64: void set(int,int,long[])>": 0.24394889210824036
        }, 
        {
            "<boofcv.alg.fiducial.calib.DetectFiducialSquareGrid: void <init>(int,int,long[],boofcv.alg.fiducial.square.BaseDetectFiducialSquare)>": 0.24266257319337176
        }
    ], 
    "<net.imglib2.view.composite.CompositeView$CompositeRandomAccess: void localize(double[])>": [
        {
            "<Catalano.Math.Matrix: double[] CreateMatrix1D(int,double)>": 0.3010628090554279
        }, 
        {
            "<Catalano.Math.Matrix: void Fill(double[],double)>": 0.27785161717654067
        }, 
        {
            "<boofcv.abst.geo.fitting.DistanceFromModelResidual: void computeDistance(java.util.List,double[])>": 0.27218229751419626
        }, 
        {
            "<Catalano.Imaging.Tools.HoughLineTransformation: void setStepsPerDegree(int)>": 0.26559574874325276
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: double[] getDoublePivot()>": 0.2623468147169384
        }
    ], 
    "<net.imglib2.view.MixedRandomAccess: void setPosition(long[])>": [
        {
            "<org.jbox2d.collision.broadphase.DynamicTreeFlatNodes: void validate()>": 0.3299952384071116
        }, 
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.31735042307078104
        }, 
        {
            "<org.jbox2d.collision.broadphase.DynamicTree: void validate()>": 0.3154111327376956
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.SweepAndPruneAlgorithm: void removeObject(net.smert.jreactphysics3d.body.CollisionBody)>": 0.3094116404148733
        }, 
        {
            "<net.smert.jreactphysics3d.collision.narrowphase.EPA.TriangleEPA: int getIndexVertex(int)>": 0.3081713220215479
        }
    ], 
    "<net.imglib2.view.RandomAccessiblePair$RandomAccess: float getFloatPosition(int)>": [
        {
            "<boofcv.core.image.FactoryGImageGray$Border_F32: float unsafe_getF(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.segmentation.slic.SegmentSlic_F32: float getIntensity(int,int)>": 0.3699990987721078
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_zero(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float block_unsafe(boofcv.struct.image.GrayF32,int,int,int,int)>": 0.3689009171366973
        }, 
        {
            "<boofcv.alg.transform.ii.IntegralImageOps: float convolveSparse(boofcv.struct.image.GrayF32,boofcv.alg.transform.ii.IntegralKernel,int,int)>": 0.36337781837443106
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedVariableBitLengthType: java.math.BigInteger getBigInteger()>": [
        {
            "<Catalano.Math.RationalNumber: void Multiply(Catalano.Math.RationalNumber)>": 0.32358047906383464
        }, 
        {
            "<Catalano.Math.RationalNumber: void Multiply(int)>": 0.3216937985634086
        }, 
        {
            "<Catalano.Math.RationalNumber: void Multiply(java.math.BigInteger)>": 0.3215516018349216
        }, 
        {
            "<Catalano.Math.RationalNumber: void Multiply(java.math.BigInteger,java.math.BigInteger)>": 0.32096946485790523
        }, 
        {
            "<Catalano.Math.RationalNumber: void Multiply(int,int)>": 0.3206583487871042
        }
    ], 
    "<net.imglib2.outofbounds.RealOutOfBoundsRealRandomAccess: void move(int[])>": [
        {
            "<boofcv.struct.convolve.Kernel2D_I32: void <init>(int,int[])>": 0.255375315373562
        }, 
        {
            "<boofcv.struct.convolve.Kernel1D_I32: void <init>(int[],int,int)>": 0.2540764877039817
        }, 
        {
            "<Catalano.Imaging.Concurrent.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<Catalano.Imaging.Filters.Blur: void <init>()>": 0.22093197882876148
        }, 
        {
            "<net.smert.jreactphysics3d.collision.broadphase.BoxAABB: void <init>()>": 0.21777659600227028
        }
    ], 
    "<net.imglib2.view.TranslationRandomAccess: java.lang.Object get()>": [
        {
            "<net.coobird.thumbnailator.tasks.io.AbstractImageSource: java.lang.Object finishedReading(java.lang.Object)>": 0.28617157565271534
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getDestination()>": 0.2738095238095238
        }, 
        {
            "<net.coobird.thumbnailator.tasks.SourceSinkThumbnailTask: java.lang.Object getSource()>": 0.2738095238095238
        }, 
        {
            "<org.dyn4j.sandbox.panels.SimulationTreePanel: void centerOnOriginAction()>": 0.2529686620898588
        }, 
        {
            "<boofcv.io.UtilIO: java.lang.Object loadXML(java.net.URL)>": 0.24804332263701578
        }
    ], 
    "<net.imglib2.iterator.IntervalIterator: void <init>(int[],int[])>": [
        {
            "<net.smert.jreactphysics3d.collision.broadphase.AABBInt: void <init>(long,long)>": 0.3180647505972451
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long)>": 0.3180647505972451
        }, 
        {
            "<com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$AABBInt: void <init>(long,long,com.flowpowered.react.collision.broadphase.SweepAndPruneAlgorithm$1)>": 0.3153323970842648
        }, 
        {
            "<boofcv.core.image.impl.ImplConvertMsToGray: void average(boofcv.struct.image.Planar,boofcv.struct.image.GrayS64)>": 0.2627218620924945
        }, 
        {
            "<boofcv.alg.misc.ImageMiscOps: void addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)>": 0.24891456959181013
        }
    ], 
    "<net.imglib2.util.Intervals: int[] minAsIntArray(net.imglib2.Interval)>": [
        {
            "<Catalano.Math.Matrix: int[] CreateMatrix1D(int,int)>": 0.38228053212403357
        }, 
        {
            "<Catalano.Math.Decompositions.LUDecomposition: int[] getPivot()>": 0.37818306648675876
        }, 
        {
            "<Catalano.Math.Matrix: int[] getColumn(int[][],int)>": 0.35562862883378354
        }, 
        {
            "<Catalano.Math.Matrix: int[] getRow(int[][],int)>": 0.3503182938712224
        }, 
        {
            "<Catalano.Imaging.Filters.IsoDataClassifier: int[] Histogram(Catalano.Imaging.FastBitmap)>": 0.32420169770228563
        }
    ], 
    "<net.imglib2.util.Util: net.imglib2.img.ImgFactory getArrayOrCellImgFactory(net.imglib2.Dimensions,int,net.imglib2.type.NativeType)>": [
        {
            "<Catalano.Imaging.Filters.ResizeBilinear: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.3863239170773864
        }, 
        {
            "<Catalano.Imaging.Filters.ResizeBicubic: void applyInPlace(Catalano.Imaging.FastBitmap)>": 0.38391626280630253
        }, 
        {
            "<boofcv.alg.feature.detect.interest.SiftScaleSpace: double computeSigmaScale(int,int)>": 0.38060736114052224
        }, 
        {
            "<Catalano.Statistics.Distributions.FisherDistribution: double ProbabilityDensityFunction(double)>": 0.37768302285964905
        }, 
        {
            "<Catalano.Statistics.Distributions.FisherDistribution: double ComplementaryDistributionFunction(double)>": 0.37414033001567815
        }
    ], 
    "<net.imglib2.transform.integer.permutation.PermutationTransform: void apply(net.imglib2.Localizable,net.imglib2.Positionable)>": [
        {
            "<org.jbox2d.pooling.stacks.DynamicIntStack: int pop()>": 0.4136925577950428
        }, 
        {
            "<boofcv.alg.tracker.tld.TldFernClassifier: void increment(boofcv.alg.tracker.tld.TldFernFeature,boolean)>": 0.4054683113645773
        }, 
        {
            "<org.jbox2d.dynamics.Island: void add(org.jbox2d.dynamics.Body)>": 0.3998594161888
        }, 
        {
            "<org.jbox2d.particle.StackQueue: java.lang.Object pop()>": 0.39549538784198407
        }, 
        {
            "<org.jbox2d.particle.ParticleSystem: void setParticleMaxCount(int)>": 0.3934043049983259
        }
    ], 
    "<net.imglib2.view.Views: net.imglib2.view.ExtendedRandomAccessibleInterval extend(net.imglib2.RandomAccessibleInterval,net.imglib2.outofbounds.OutOfBoundsFactory)>": [
        {
            "<org.jbox2d.testbed.framework.TestList: void populateModel(org.jbox2d.testbed.framework.TestbedModel)>": 0.0584019459079829
        }, 
        {
            "<org.jbox2d.testbed.framework.j2d.TestbedMain: void main(java.lang.String[])>": 0.05406205059012895
        }, 
        {
            "<org.dyn4j.sandbox.Sandbox: void init(com.jogamp.opengl.GLAutoDrawable)>": 0.05346179598430837
        }, 
        {
            "<boofcv.demonstrations.transform.pyramid.EdgeIntensitiesApp: void main(java.lang.String[])>": 0.05164589025080292
        }, 
        {
            "<boofcv.demonstrations.tracker.CirculantVisualizationPanel: void <init>(boofcv.demonstrations.tracker.CirculantVisualizationPanel$Listener)>": 0.05040273807667476
        }
    ], 
    "<net.imglib2.display.screenimage.awt.UnsignedShortAWTScreenImage: java.awt.image.DataBuffer createDataBuffer(java.lang.Object)>": [
        {
            "<boofcv.struct.image.GrayI16: void _setData(java.lang.Object)>": 0.1532590227806104
        }, 
        {
            "<boofcv.struct.image.InterleavedI16: void _setData(java.lang.Object)>": 0.1532590227806104
        }, 
        {
            "<boofcv.struct.Tuple2: void <init>(java.lang.Object,java.lang.Object)>": 0.1345982968042152
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Rendering: void <init>(java.lang.String,int,java.lang.Object)>": 0.12182630799201812
        }, 
        {
            "<net.coobird.thumbnailator.resizers.configurations.Antialiasing: void <init>(java.lang.String,int,java.lang.Object)>": 0.12182630799201812
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedLongType: void mul(net.imglib2.type.numeric.integer.UnsignedLongType)>": [
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2679887933858064
        }, 
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.2579115331531891
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.25069894227480943
        }, 
        {
            "<Catalano.Core.DoubleRange: int hashCode()>": 0.23626500399272526
        }, 
        {
            "<Catalano.Core.DoublePoint: int hashCode()>": 0.23595832499639566
        }
    ], 
    "<net.imglib2.img.planar.PlanarPlaneSubsetLocalizingCursor: java.lang.String toString()>": [
        {
            "<org.dyn4j.sandbox.resources.Messages: java.lang.String getString(java.lang.String)>": 0.3100041420236116
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$2: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$3: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$5: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }, 
        {
            "<net.coobird.thumbnailator.name.Rename$4: java.lang.String apply(java.lang.String,net.coobird.thumbnailator.ThumbnailParameter)>": 0.2942866099069123
        }
    ], 
    "<net.imglib2.type.numeric.integer.Unsigned12BitType: void set(long)>": [
        {
            "<org.dyn4j.sandbox.utilities.Fps: boolean update(long)>": 0.3441915346708021
        }, 
        {
            "<boofcv.misc.BoofMiscOps: void pause(long)>": 0.3243363370840935
        }, 
        {
            "<boofcv.misc.ProfileOperation: long measureTime(boofcv.misc.Performer,int)>": 0.3043047358622028
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: void <init>(long,long)>": 0.29653506147484393
        }, 
        {
            "<org.dyn4j.collision.CategoryFilter: int hashCode()>": 0.2843382112342134
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedShortType: void mul(double)>": [
        {
            "<net.coobird.thumbnailator.makers.ScaledThumbnailMaker: java.awt.image.BufferedImage make(java.awt.image.BufferedImage)>": 0.36673835690817896
        }, 
        {
            "<net.coobird.thumbnailator.geometry.RelativeSize: java.awt.Dimension calculate(int,int)>": 0.3382607260091588
        }, 
        {
            "<boofcv.misc.DiscretizedCircle: int[] imageOffsets(double,int)>": 0.31646293041972007
        }, 
        {
            "<net.coobird.thumbnailator.makers.FixedSizeThumbnailMaker: java.awt.image.BufferedImage make(java.awt.image.BufferedImage)>": 0.3047773604005493
        }, 
        {
            "<Catalano.Imaging.Tools.SpatialHistogram: double[] Compute(Catalano.Imaging.FastBitmap,Catalano.Imaging.Tools.IAggregateVectors)>": 0.2943566515970052
        }
    ], 
    "<net.imglib2.type.numeric.integer.UnsignedIntType: int compareTo(java.lang.Object)>": [
        {
            "<Catalano.Imaging.Corners.FeaturePoint: int compareTo(java.lang.Object)>": 0.2925422447931331
        }, 
        {
            "<boofcv.alg.geo.calibration.CalibrationObservation$1: int compare(java.lang.Object,java.lang.Object)>": 0.27676383922880565
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomMonoPlaneInfinity: int dropUnusedTracks()>": 0.2391229305812722
        }, 
        {
            "<boofcv.alg.sfm.d3.VisOdomPixelDepthPnP: int dropUnusedTracks()>": 0.2326326745903914
        }, 
        {
            "<boofcv.gui.image.AnimatePanel: void paintComponent(java.awt.Graphics)>": 0.22922981152000166
        }
    ], 
    "<net.imglib2.type.numeric.complex.ComplexDoubleType: void set(net.imglib2.type.numeric.complex.ComplexDoubleType)>": [
        {
            "<boofcv.alg.geo.h.HomographyLinear4: void createA(java.util.List,org.ejml.data.DenseMatrix64F)>": 0.25792855138844356
        }, 
        {
            "<org.dyn4j.sandbox.tests.Plotter: void render(com.jogamp.opengl.GL2)>": 0.257581659936564
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitSegment: void <init>(double,double,int)>": 0.25008179664164865
        }, 
        {
            "<boofcv.alg.shapes.polyline.SplitMergeLineFitLoop: void <init>(double,double,int)>": 0.25008179664164865
        }, 
        {
            "<org.dyn4j.sandbox.panels.PreviewPanel: void paintComponent(java.awt.Graphics)>": 0.249289940016737
        }
    ]
}